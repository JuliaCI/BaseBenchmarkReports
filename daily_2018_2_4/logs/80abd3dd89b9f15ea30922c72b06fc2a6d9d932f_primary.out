cset: moving following pidspec: 731
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.178155476 seconds)
loading group "string"... done (took 0.64410268 seconds)
loading group "linalg"... done (took 9.73781141 seconds)
loading group "parallel"... done (took 0.173101318 seconds)
loading group "find"... done (took 2.460295309 seconds)
loading group "tuple"... done (took 2.370592953 seconds)
loading group "dates"... done (took 1.434572833 seconds)
loading group "micro"... done (took 0.650897078 seconds)
loading group "io"... done (took 0.701760886 seconds)
loading group "scalar"... done (took 54.263123859 seconds)
loading group "sparse"... done (took 13.481002809 seconds)
loading group "broadcast"... done (took 1.330047191 seconds)
loading group "union"... done (took 10.494357465 seconds)
loading group "simd"... done (took 3.575374412 seconds)
loading group "random"... done (took 13.900326233 seconds)
loading group "problem"... done (took 2.182723022 seconds)
loading group "array"... done (took 23.688060506 seconds)
loading group "misc"... done (took 1.542052 seconds)
loading group "sort"... done (took 3.77405328 seconds)
loading group "collection"... done (took 20.744173878 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.894507851 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.175765271 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.237835002 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.568112704 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.309083637 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.204189325 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.203421595 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.185867725 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.664326491 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.23413419 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.192757901 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.399712005 seconds)
done (took 7.075771583 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.297788476 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.091758334 seconds)
    (2/2) benchmarking "String"...
    done (took 0.235116249 seconds)
  done (took 0.989960827 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.097366526 seconds)
    (2/2) benchmarking "String"...
    done (took 0.140607362 seconds)
  done (took 0.904323805 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.13160031 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.200802457 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.151071568 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.150632974 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.13737007 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.150658021 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.136117948 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.150864936 seconds)
  done (took 1.743600517 seconds)
done (took 4.733608393 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.524778958 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.917106974 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.545489655 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.220081752 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.345213781 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.361616199 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.372291302 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.266209811 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.133358757 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.099759333 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.252206122 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.472969124 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.46770816 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.981484603 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.099826002 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.153121394 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.204693471 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.811684163 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.121858738 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.156911867 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.546173298 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.261309965 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.159405719 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.152460828 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.228705196 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.168967603 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173793129 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.143599326 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.720652695 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.176239126 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.239210948 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.121136535 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.171196822 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.201299282 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.2791993 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15174377 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.718851425 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.242109036 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.12529028 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.142357399 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.716828307 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.160707726 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.248301043 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.148187249 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.114418232 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184089035 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.139717093 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.118303844 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.15246484 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.145855257 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.199452911 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.48229968 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.147790122 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.241653821 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.147468913 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.728099149 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.139835939 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.319357871 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.166147859 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.15050489 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.130292542 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.13081088 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.206472037 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.137827186 seconds)
  done (took 22.779633341 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.246107661 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.248410251 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.12035623 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.206484445 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.187628311 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.120067834 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.147404583 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.120630631 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.173300902 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.224544916 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.181641418 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.25503045 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.133223708 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.133342346 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.221957329 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.291765757 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.145066901 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.161408569 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.130132519 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.15569734 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.186107379 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.135084912 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.152246934 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.13788207 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.216776591 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.246621015 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.164680556 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.16717773 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.145427634 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.139969558 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.185990319 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.20668497 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.11639976 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.144723537 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.219015828 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.166438813 seconds)
  done (took 7.028576777 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.276143813 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.142500142 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.30723328 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.227107305 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1653844 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.230261786 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.218162929 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.336029662 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.41020436 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.225725377 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.171924999 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.135829854 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136176424 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.119675665 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.118846872 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.878658349 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.21067255 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202420385 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.231734469 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.157016349 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.125169132 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.409555408 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.142243473 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.127551143 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.154954234 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.09464278 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.266489384 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.154598465 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.521648588 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120972231 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157771916 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.172126238 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.237563143 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.166144431 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.175465436 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.153955323 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.128143579 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.250825434 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.168896359 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.156791957 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.117617194 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.118293421 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17704139 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.177091164 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.149340377 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163954529 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.176122192 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.130966823 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168811887 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.170177758 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.238105142 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.228060915 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.129528134 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323524087 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.167419613 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.142586769 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.151013285 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.884421879 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.162623864 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.141648365 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.121338247 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.154428901 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.238914143 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.139930723 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.506600815 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.164340347 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.298088903 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.126222456 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.204802831 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153640015 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.16066152 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129034821 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.144783733 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.149754666 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.145880299 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122800307 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.145799313 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.123537189 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.148109421 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.127784678 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.16407502 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.129360981 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.141401183 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.189995775 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.154884677 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.147970741 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.169199993 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.149290028 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.130665138 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17424234 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.142110209 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.131248903 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.248957823 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.158123486 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.164641842 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13709568 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.18843232 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.146740902 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.349080511 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.125686088 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.125334202 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.185170506 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.146340966 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.170993259 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.157359314 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.123900345 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.146184472 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.12296938 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.141131343 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.189903816 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.131130462 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.140420901 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.128845486 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.152466251 seconds)
  done (took 32.605904323 seconds)
done (took 63.080539996 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.493893207 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107127459 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.129969759 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107435545 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.129369479 seconds)
  done (took 1.712621923 seconds)
done (took 2.440497953 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.225903133 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.342892614 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.244266929 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.145145063 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.210120101 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.207257088 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.192655459 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.209947861 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.226462435 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.209745884 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.141003476 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.230484546 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.220003659 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.191997537 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.141811324 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.244547043 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.20702266 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.194265608 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.238646493 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.147281934 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.142600302 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.167430893 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.145382003 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.149548895 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.145861931 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164891076 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.148794416 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164780888 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.139108376 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.149706042 seconds)
  done (took 2.403575131 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.171864764 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.144942934 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.138725765 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.157651113 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.144625007 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.149509454 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.143442186 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163090915 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.151163628 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16365115 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.140016527 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.151530815 seconds)
  done (took 2.38768444 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.122294287 seconds)
done (took 9.865473095 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.236578304 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.92714556 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.198517869 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.310183024 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.385190621 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.322863875 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.678985135 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.256246414 seconds)
  done (took 16.16657158 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.160777022 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.243677698 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.161451398 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.138658727 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.162956565 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.138741739 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.157104244 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.13691958 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.158798034 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.141166713 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.137602393 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.159502311 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.136187557 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.153024222 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.139864977 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.159704029 seconds)
  done (took 3.284685134 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.182920375 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.183643275 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.142331917 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.164571242 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.14265395 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.165091326 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.147608953 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.164265779 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.140005873 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.159515937 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.148074083 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.162209564 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.144653033 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.156347 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.14323805 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.181356133 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.139061628 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.161262476 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.161187508 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.16254776 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.162047477 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.142231233 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.159729962 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.146060925 seconds)
  done (took 4.571302296 seconds)
done (took 24.763820455 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.197573992 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.147935276 seconds)
  done (took 1.091167661 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.209839557 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.230674385 seconds)
  done (took 1.195101297 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.154953024 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.15208763 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.168703616 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.168087298 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.137862089 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.15583326 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.16253785 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.157351437 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.136358313 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.155977074 seconds)
  done (took 2.308927076 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.138273469 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.158737704 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.153531086 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.226715442 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.164893495 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.140307256 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.160636002 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.141576584 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.159912016 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.1384396 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.157438677 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.154730461 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.160024087 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.158538866 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.160698974 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.142294104 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.164884709 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.140913614 seconds)
  done (took 3.581457703 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.135350072 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.138475347 seconds)
  done (took 1.036964077 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.139111574 seconds)
    (2/7) benchmarking "second"...
    done (took 0.134791758 seconds)
    (3/7) benchmarking "month"...
    done (took 0.158149472 seconds)
    (4/7) benchmarking "year"...
    done (took 0.15524599 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.138225547 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.13685744 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.155710327 seconds)
  done (took 1.780795192 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.600460051 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.281241827 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.413814861 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107892328 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.159685601 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.385475849 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.159805731 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.109233624 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107136723 seconds)
  done (took 3.118121233 seconds)
done (took 14.8665779 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.1358899 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.329321219 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.648964322 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.172667665 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.133867169 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.217062192 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.394018668 seconds)
done (took 2.802561621 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353899633 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.210395709 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.121521399 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.139584057 seconds)
  done (took 1.586324986 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.125906529 seconds)
    (2/2) benchmarking "read"...
    done (took 0.14420932 seconds)
  done (took 1.040623638 seconds)
done (took 3.396903027 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.156219425 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.154597215 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.141195438 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.157708514 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.143018021 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.158970949 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.141561661 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.154173919 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.140524179 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.154835957 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.141224157 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.158245061 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.138571339 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.159163473 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13926383 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.278122535 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.141150025 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.156072334 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.139111864 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.158990187 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.142746364 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15561525 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.142669455 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.159651345 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.141396047 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.160004783 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.138071832 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.156117624 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.141050766 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.15829545 seconds)
  done (took 5.374536161 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.139905379 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.132391483 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.155117572 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.145513089 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.153078812 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.137134721 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.151949378 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.13673518 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.156040229 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.136183725 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.158931108 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.137832519 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.154998148 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.138838504 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.156211633 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.141279453 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.166916261 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.138447267 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.156516745 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.139202724 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.139792287 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.158433367 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.137266424 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.155543112 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.138290933 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.153517958 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.137162305 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.15555766 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.138581586 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.15500414 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.140201227 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.157993939 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.138394612 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.165177915 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.141264169 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.154251076 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.143671737 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.132050368 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.158946566 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.134495787 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.153627519 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.136624187 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.156400712 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.143890552 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.156411482 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.138067013 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.15625157 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.138878515 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.158193074 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.141683759 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.152841758 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.138723291 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.157883279 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.141382316 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.159131689 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.132462864 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.134460719 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.153636115 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.13835895 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.157879654 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.135865096 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.154081926 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.143131093 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.158757369 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.15260341 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.16435584 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.137885081 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.159675151 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.139273468 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.162248368 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.142475067 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.166055558 seconds)
  done (took 11.408884211 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.13472741 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.133346483 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.156863086 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.134661904 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.157496456 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.140120404 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.156917818 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137364811 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.154715487 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134287703 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.151981662 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.134319718 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.151246218 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.136146603 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134182127 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.157739255 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.138220253 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.15782925 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.137239518 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.156720038 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.13692153 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.151789118 seconds)
  done (took 3.967635426 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.279631309 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.140004134 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.200524646 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.146365995 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.172380877 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.16424834 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.139848487 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.161644328 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143231929 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.168363477 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.148487775 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.16339934 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.156601735 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.167677299 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.167564664 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.148029361 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.162043008 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.150353629 seconds)
  done (took 3.768404082 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.135460618 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.138273578 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.158844249 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.137789448 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.159925611 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.13935835 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.160546842 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.139167796 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.158357023 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.139889823 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.158834183 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.142123262 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.14008814 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.159656021 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.13960107 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.159892648 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.140072231 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.159388353 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.140585944 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.158321796 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.140122567 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.16004447 seconds)
  done (took 4.059422297 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149732145 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.155609893 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.155479006 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.159025718 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136411843 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.153984202 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.142149709 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.154881102 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.143609361 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.155048175 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.137723608 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.155386333 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.151978264 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.156270554 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.142410769 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.154438315 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.138869547 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.156320726 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.137005945 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.136947649 seconds)
  done (took 3.765643515 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.229681526 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.172193783 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.171113253 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.159795568 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.172819844 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.155698979 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.183883724 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.156265959 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.179743046 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.187498574 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.155249487 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.177520771 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.167082451 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.179655723 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.154596092 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.185162791 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.162245018 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.182223566 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.176288672 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.153542112 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.181564145 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.152754313 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.180301026 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.154014418 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.175301889 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.173401046 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.154841622 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.17630223 seconds)
  done (took 5.609056141 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.149298361 seconds)
    (2/2) benchmarking "in"...
    done (took 0.168929298 seconds)
  done (took 1.11637582 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.140656742 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.141736661 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.163833737 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.142020478 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.164663679 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.143693398 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.164079577 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.143229036 seconds)
  done (took 2.001849448 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.250429365 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.254448132 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.143425737 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.176269264 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.258882927 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.236435494 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.178155527 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.169809693 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.14309378 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.1570255 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.250579846 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.131115705 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.165274866 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.137897863 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.165791112 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.147843224 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.164564939 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.152912887 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.169822936 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.144555128 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.169048591 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.148432291 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.165168528 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.15231615 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.158187391 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.154381917 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.166554727 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.150571709 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.15883863 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.142470536 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.16124107 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.143769763 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.16832663 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.14784304 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.165644117 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.265060546 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.150001313 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.1614392 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.14374862 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.17079178 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.190764095 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.144412849 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.163607625 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.143800727 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.1670455 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.147538686 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.165967489 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.142352649 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.134634864 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.161753703 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.140693209 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.154516014 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.139028203 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.159840692 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.140053681 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.16664753 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.142492288 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.159637819 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.13972837 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.160595283 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.141970644 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.159866523 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.146010717 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.171290435 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.14632809 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.166424431 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.162815351 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.14783515 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.144877458 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.166542396 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.144046072 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.181112581 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.1445672 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.17165363 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.149159239 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.167157766 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141062222 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.170048406 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.142810919 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.163091908 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.148484373 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.188878906 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.145296489 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.160074146 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.136078806 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.169669986 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.140485579 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.164343343 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.133250431 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.170322405 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.143004126 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.163388615 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.136834504 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.162644865 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.139181348 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.168279765 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.13737919 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.165782138 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.144443749 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.170329848 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.15017984 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.165200635 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.146718616 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.172671449 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.15098486 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.164710586 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.218578748 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.138181675 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.159012544 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.145991455 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.170585801 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.137959337 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.163648121 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.144309232 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.142147876 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.161575519 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.150137275 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.166952045 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.145120959 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.168977522 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.145668398 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.166371999 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.142885128 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.170359094 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.138933395 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.168975752 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.151366019 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.161376241 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.140347904 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.160365803 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.140404397 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.15976616 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.141590586 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.159277309 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.150751132 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.165705221 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.145396262 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.168130578 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.151464942 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.166922823 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.142776783 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.165647138 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.147922658 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.166368347 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.14936239 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.16544753 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.139857052 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.154836173 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.139649076 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.154379387 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.139088748 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.165955617 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.137626458 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.162455355 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.137500938 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.167120742 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.136343739 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.163855808 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.142726678 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.168007104 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.147681813 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.156517638 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.139165231 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.163286189 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.141867767 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.153905572 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.141053021 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.158690752 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.145599946 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.150792481 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.146034977 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.157543747 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.143407162 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.173044689 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.149842257 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.150079762 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.163195466 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.177678676 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.181215207 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.146180688 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.157945733 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.157422733 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.1438641 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.138669374 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.164842332 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.145689671 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.165214699 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.137063119 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.160422722 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.144635191 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.156471499 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.140800342 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.159519036 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.140166104 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.153424039 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.144089269 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.156536582 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.146862396 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.163405658 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.146561123 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.169937548 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.142468388 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.158303467 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.148720137 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.156931218 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.145336873 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.160166109 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.152570525 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.178318452 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.15452755 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.177124647 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.144086717 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.157293007 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.141281009 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.167274096 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.145155235 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.167234594 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.149241598 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.161893438 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.134264682 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.164801339 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.142082154 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.155063924 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.141621703 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.160819134 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142290251 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.157249434 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.133712878 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.165870511 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.146284202 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.155010306 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141170205 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.155854012 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.14136449 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.16736066 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.13533452 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.157938598 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.142842732 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.163220638 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.142369627 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.158543389 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.143400562 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.145729346 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.164007134 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.141732918 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.15916719 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.147778357 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.158841516 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.139908809 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.157727533 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.142546489 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.154244937 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.141997366 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.160261118 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.13804148 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.156628258 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.143560371 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.166253493 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.145757341 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.159317889 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.145056438 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.165610269 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.146718636 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.15866156 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.146219265 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.156150889 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.134226494 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.15688961 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.134164118 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.162237146 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.13748599 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.165444853 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.1390656 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.159232655 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.144558005 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.161554078 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.140484463 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.17111582 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.155633658 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.162084555 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.143368859 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166361159 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.148345314 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.165917269 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.146008861 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.170371067 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.150209181 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.170593202 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.145911152 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.157538757 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.1464495 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.171652792 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.140355709 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.168031865 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.148440724 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.167904856 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.138006816 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.165271201 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.138334947 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.163937584 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.134824401 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.159662059 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.14126933 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.158471669 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.138977341 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.158966362 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.137585925 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.152987615 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.137879647 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.168673116 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.141425293 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.16546589 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.14126295 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.15790827 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.137967373 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.156479038 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.147049498 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.139718886 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.169346883 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.141326848 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.157059634 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.134242976 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.168958959 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.142531787 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.1694651 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.13843916 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.17169029 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.149465481 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.169318329 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.146740977 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.17120903 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.151946128 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.172903118 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.15566693 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.165455517 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.148379915 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.177506755 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.146867917 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.167228187 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.144515714 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.155698618 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.144886965 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.166999417 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.143359878 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.161215364 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.136109928 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.162647568 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.14819664 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.169938529 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.147418673 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.165581387 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.144007876 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.159705029 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.147149701 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.166475212 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.144726016 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.173112255 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.150887758 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.147175634 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.159867143 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.147503736 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.164136134 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.136471186 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.157662019 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.141438592 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.168716102 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.136626316 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.167783878 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.147018351 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.159649527 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.140965213 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.166805038 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.13930283 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.165286288 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.147937869 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.160620227 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.151745392 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.163364948 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.140171601 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.166459455 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.148136642 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.155884093 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.141478909 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.162531638 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.149060201 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.160223035 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.147860884 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.162672639 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.147831228 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.168760669 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.149982263 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.167916479 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.148246192 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.159830808 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.15437381 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.170450018 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.14868311 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.158863903 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.141944531 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.139448981 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.164625992 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.154217043 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.164656522 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.151842135 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.171658515 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.143367493 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.166786714 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.153181546 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.17276344 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.153495384 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.169929695 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.151499711 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.168822225 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.149760002 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.172769754 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.155999829 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.162724523 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.138460667 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.170272127 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.151230925 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.17629271 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.150310251 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.174673222 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.139560823 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.159760133 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.147085571 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.162746149 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.153668791 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.171203848 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.151214014 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.172512532 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.151132636 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.166029385 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.152218331 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.160323989 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.141035494 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.163811917 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.146036453 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.164209605 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.138431943 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.168113041 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.143749478 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.166532623 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.144131937 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.160625264 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.14358926 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.172422178 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.142080008 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.159161055 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.142225918 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.171586392 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.143813154 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.164621926 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.140820225 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.170220796 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.146101885 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.170307223 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.142178179 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.168731565 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.145062412 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.166143913 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.151413488 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.16363769 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.145241285 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.162713407 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.15139267 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.173601153 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.140520733 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.165009143 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.157459293 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.172204556 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.147289807 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.170416884 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.147012464 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.173576069 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.152245065 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.146082069 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.161592681 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.139030381 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.16468187 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.138592118 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.169513951 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.148972187 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.164435163 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.141623996 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.168842021 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.149299483 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.168791315 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.14709984 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.163137193 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.154339183 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.1665795 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.149804009 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.167186683 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.147097449 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.172533255 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.155272684 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.170386938 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.150271642 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.176368819 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.152743285 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.16409849 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.144627476 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.171506382 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.150278234 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.172436865 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.144038736 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.165473754 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.151148516 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.176155215 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.147774864 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.163812593 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.15215347 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.173041205 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.148638906 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.166355032 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.151041082 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.174819331 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.148497338 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.17354001 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.143372193 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.16516624 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.153211946 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.172645739 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.15483434 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.163911863 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.139379571 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.168252362 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.143790489 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.138197204 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.169185766 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.172454335 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.152766361 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.143938997 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.16289253 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.152852648 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.170642558 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.167268162 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.143427901 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.162465935 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.149815903 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.141688723 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.171931657 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.142634618 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.173241983 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.152110898 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.172657794 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.154107385 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.160554177 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.151890771 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.169317537 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.152999649 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.168468663 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.140604983 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.161618204 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.148673834 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.174653525 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.153042951 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.169240815 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.149400856 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.170509034 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.146235208 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.166613311 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.145387578 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.174561765 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.15070073 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.168066439 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.147605723 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.166087324 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.146422955 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.167377515 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.153087774 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.172262027 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.147791821 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.175954975 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.153789621 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.163558916 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.144744661 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.16841325 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.151121446 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.168796389 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.150269221 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.143846896 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.164501892 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.15154131 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.174182523 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146283522 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.176086712 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.15338651 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.165349969 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.14817401 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.176343814 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.150038514 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.169336518 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.146400421 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.170500275 seconds)
  done (took 94.043403785 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.197562146 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.176095408 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.149085521 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.169522001 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.167705785 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.171916125 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.148610532 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.17138192 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.149831602 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.179549694 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.149852249 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.169290688 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.162929327 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.189663355 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.186477535 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.159354924 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.169118776 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.150192888 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.168796704 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.150592372 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.183736773 seconds)
  done (took 4.413078561 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.149369893 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.148093166 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.169446919 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.148974072 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.16984731 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.148791614 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.168222007 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.148458778 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.169124074 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.148213563 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.168875871 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150102121 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.147510172 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.16991335 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.149385918 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.170890293 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.14824557 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.170442689 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.150115819 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.170955373 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.149860372 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.168815788 seconds)
  done (took 4.374721519 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.176785617 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.17789174 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.150500583 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.170894013 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.15350386 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.148766682 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.173672517 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.14938349 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.180179716 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.144635758 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.163028854 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.146216675 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.17041631 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.149154758 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.1661193 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.151305038 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.181532745 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.151922726 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.175897989 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.149752898 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.161508781 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.149662502 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.173855612 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.141600847 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.15659343 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.17870611 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.154801789 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.178144429 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.142091211 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.175823809 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.154592958 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.173888418 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.144045208 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.164424123 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.139962992 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.17412627 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.152646414 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.170458257 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.150806446 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.163295939 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.151948646 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.175541261 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.144117418 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.151230218 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.171989486 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.143981374 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.175178576 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.150530002 seconds)
  done (took 8.592660547 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.180249692 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.212816347 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.154621322 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.206179531 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.185840541 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.160843749 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.176307532 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.183819478 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.175962186 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.155317358 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.191021408 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.164569548 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.178469038 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.156855559 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.177502735 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.153513917 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.177312565 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.152844908 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.180058028 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.173406013 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.159505756 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.177977397 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.164113767 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.184581421 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.156139268 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.174518668 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.154620828 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.179851667 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.162105009 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.180656879 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.158012171 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.180677862 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.186466458 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.158393876 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.173549806 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.157412863 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.187246895 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.154559897 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.177109442 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.152628885 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.176822122 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.15768752 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.176802302 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.166095689 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.176646917 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.156164148 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.176826988 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.15193794 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.185404166 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.155061317 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.182517956 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.186443826 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.158356983 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.1763871 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.158831976 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.185819011 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.15531748 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.174478181 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.156688913 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.185587085 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.152546454 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.178974479 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.165605323 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.178386327 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.160583727 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.187210394 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.156428304 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.179537802 seconds)
  done (took 12.630399295 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.184588805 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.179835147 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.166655926 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.188484315 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.158529577 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.181125856 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.157213874 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.180592877 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.158221015 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.417565839 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.177857669 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.289772634 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.161791025 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.185055207 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.157625471 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.180356309 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.158091765 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.180101821 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.160525804 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.181572026 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.158200796 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.189185645 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.157500405 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.187334026 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.190723007 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.15579446 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.178516913 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.158168282 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.187842245 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.158084868 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.191035999 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.156307925 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.179817336 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.187150403 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.168719338 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.180260568 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.152713999 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.178891248 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.158356205 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.181474078 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.155276864 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.187353572 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.157369034 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.176582104 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.157253978 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.182492423 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.165817005 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.191161715 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.184863345 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.163360447 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.180079085 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.166230954 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.180907396 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.157691683 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.188698013 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.195486629 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.166782121 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.18800475 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.157049577 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.188960233 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.186981271 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.174947652 seconds)
  done (took 12.03178649 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.154598478 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.153581481 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.175979333 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.152987559 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.176169798 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.153517941 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.176514112 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.153538709 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.175020646 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154692261 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.176088436 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.154643602 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.174712586 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.15443918 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.153749998 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.176005467 seconds)
  done (took 3.540405599 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.172999169 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.192060577 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.255371823 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.156911406 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.17702731 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.161933292 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.177480766 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.158198045 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.152862344 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.182889681 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.158616915 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.179000692 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.193499387 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.155498379 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.175875018 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.158326017 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.174648549 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.159038976 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.155213537 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.260328814 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.18261182 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.155807015 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.179571843 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.157372329 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.180379737 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.157825009 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.185408063 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.154985713 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.182856089 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.157150903 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.182027736 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.161966153 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.176944226 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.158484654 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.178616255 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.156097977 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.178048663 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.155387833 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.180871653 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.154888189 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.180146035 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.155492186 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.17849268 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.159034686 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.180180395 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.158182319 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.178314044 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.162211132 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.179218224 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.157702377 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.178754706 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.160470593 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.182382226 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.16373736 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.185590066 seconds)
  done (took 10.422780741 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.16800817 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.179416497 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.168178408 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.176808653 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.158266024 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.179343414 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.158444378 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.156713859 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.181552015 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.153579288 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.181316918 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.158939945 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.181005032 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.15603271 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.182456317 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.157255975 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.177259739 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.16032187 seconds)
  done (took 3.967931737 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.156822241 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.159830055 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.183077978 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.153329932 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.178256711 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.155256425 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.17610371 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.153960738 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.178142966 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.154858616 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.176905197 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.157769151 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.155344716 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.180613691 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.153430792 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.178361744 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.153810576 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.178696643 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.155737936 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.181960389 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.157587895 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.18165377 seconds)
  done (took 4.600873165 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.167560374 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.284583038 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.1890427 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.297636728 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.156214728 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.180290142 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.162514574 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.181929484 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.194591965 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.158074701 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.175604264 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.155899478 seconds)
  done (took 3.24175905 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.183666984 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.213641742 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.158793004 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182949515 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168093271 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184120004 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161707817 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.183955083 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169352448 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196336853 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.185077195 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170443372 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191253987 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169568054 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.189793278 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166221839 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186857385 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161173963 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.182719603 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.203951147 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166791938 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193546411 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164120422 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18726243 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162994713 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195911112 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168862545 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195891223 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184956021 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169096683 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.187688972 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162763916 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193867879 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172748928 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.181444919 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168959298 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18564289 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198482905 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167667832 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194308576 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.158622134 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190450828 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169622257 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19059014 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193875923 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165089464 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190341939 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162289225 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.185235953 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.183709731 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189829266 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19093836 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167415311 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192840469 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169655514 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.205896916 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194405159 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171127359 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191205541 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174781108 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193814863 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.18841671 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170973122 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196136913 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167941941 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195055481 seconds)
  done (took 12.908855475 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196595826 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.183375166 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164396878 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197340245 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170480097 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187414027 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162154963 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18788443 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163260997 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.184948527 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.22820704 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164369555 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198101125 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17388841 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188075946 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163563872 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188576644 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192621895 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161903822 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.205853626 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162855369 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194400501 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170581199 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194218669 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197197436 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168689498 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185472575 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162539692 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.186601522 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162625384 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191226345 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.161889709 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194373827 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.160208914 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196570259 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.185405877 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164638334 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190578779 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164027988 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.189791851 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172232838 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.201422557 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162114665 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187565481 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197603633 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166279437 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186498173 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.160499868 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1870658 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163625625 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199925544 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176218917 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.200243915 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195390763 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164582786 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187666492 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165391036 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186317105 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168164857 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194755698 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172250616 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188019511 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.207732205 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165136838 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.186518377 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173485421 seconds)
  done (took 12.918166293 seconds)
done (took 229.531638828 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.320730106 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.351156274 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.148543439 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.578064932 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.148786562 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.978462083 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.843833327 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.231835607 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.175820271 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.148897821 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.173389774 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.167771543 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.535327052 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.169537187 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.151879615 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.188051106 seconds)
  done (took 32.263451809 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.352113741 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.401261071 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.189101221 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.154798173 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.155619001 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.179187002 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.152590187 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.180387031 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.154354874 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.184420256 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.174915175 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.152439319 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.181266364 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.153108415 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.174870697 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.157479408 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.18202661 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.157072122 seconds)
  done (took 4.39711168 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.174060448 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.216916657 seconds)
  done (took 1.36070947 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.18426542 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.273432097 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.374078488 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.227413175 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.179096876 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.198746172 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.227211391 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.168093463 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.267639644 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.166780842 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.190958641 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.174593654 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.181526367 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.183189285 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.171417266 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.17480881 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.182486814 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.193121292 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.1684846 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.180213197 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.179137936 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.182147885 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.162171018 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.194017752 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.258739466 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.167529947 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.181686296 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.155686722 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.182745757 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.168292356 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.187194837 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.170308031 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.194012272 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.235963907 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.158155252 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.231965729 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.185365376 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.155311402 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.19328538 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.155997558 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.182418218 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.181605897 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.167243565 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.175413912 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.154900184 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.180679373 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.154841765 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.177387168 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.164620685 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.181250242 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.16324935 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.186329136 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.231985963 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.15800549 seconds)
  done (took 11.18875538 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.986611267 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.202207583 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.180658346 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.137571721 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.202766848 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.172359636 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.006712163 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.182789861 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.313580077 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.059425213 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.202365848 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.165523001 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.30067022 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.337364811 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.359164288 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.418581624 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.848069466 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.193815138 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189125247 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.226524214 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.186223575 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.177116146 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.198346181 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.514423766 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.157022232 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.179939647 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.163313474 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.19057275 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.236421221 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.157069892 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.184499057 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.258823742 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.355160573 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.271160484 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.155513434 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.180699572 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.157159621 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.246553414 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.352469795 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.278988898 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.249530153 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.156486718 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.181626228 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.164999521 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.198019857 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.154569987 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.24099128 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.254246494 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.253658713 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.18558431 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.166408607 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.188773606 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.160030496 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.238932328 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.178973354 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.423041153 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.446952365 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.156562102 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.185526622 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.170841001 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.324906387 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.184108457 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.296108277 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.202797357 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.274930139 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.181538024 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.873083134 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.247293235 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.155638981 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.186737266 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.16219256 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.187757465 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.160198012 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.24412843 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.491608542 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.186197965 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.163002738 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.179052814 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.290253637 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.158045365 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.18069885 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.240290204 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.159943222 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.186640063 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166289572 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.186676439 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.251898448 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.334578664 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.165880583 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.188883772 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.163192077 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.192442244 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.159630008 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.295069952 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.318570224 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.236461489 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.290274745 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162870059 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.246149252 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.248923055 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.188182854 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.253447697 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.162680962 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.194074728 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.162816743 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.309768829 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.195202245 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18478757 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.16251112 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.190455698 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.223038391 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.179244138 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.189007541 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.252356739 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.552741766 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.248617452 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.158648843 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.188071101 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165515652 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.242975527 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.190697478 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.327356144 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165114858 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.249841474 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.189156577 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.154463944 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.189593355 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.243377329 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.165604617 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.189713501 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.184806305 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.168285746 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.342116759 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.284334337 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192577816 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308793954 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.257694786 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.163822559 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.254509213 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.191495083 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.246866638 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.16768844 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188201824 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.159227221 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.897763889 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.168238646 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.189342065 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.163629003 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.265210146 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.182689376 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.161494161 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18178112 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.157447477 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.860580173 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.186821702 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.156154323 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.186381398 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.164312521 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.187957792 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.163920349 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.188753604 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.244614281 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.307423551 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.194602311 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.163131549 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.184074169 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.240348774 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.160081188 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.183346485 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159189891 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.182571035 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.165864214 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.189191772 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.160930104 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.251435712 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.24314364 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.318977535 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.629180699 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.158001816 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183381636 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.302763905 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.183986953 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.392639882 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.187476339 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.297931502 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.245885252 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.155336828 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.446165788 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.246013665 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.242329525 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.188873141 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.25379275 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.155418632 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.190587536 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.242278472 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.157856066 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.19182621 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.241288767 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.167187655 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.190636884 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.322930749 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.184422723 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.310738493 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.156378645 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.252831304 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.18656885 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.165726967 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.413099399 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.159475073 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.194890547 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.243401285 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.164825646 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.185721345 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.032870961 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.160212215 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.191919265 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.164786771 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.324711457 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.243347021 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.166184163 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.193329944 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.169293161 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.245541912 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.290327835 seconds)
  done (took 61.318822112 seconds)
done (took 111.491195852 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.318607662 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.224030918 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.417457389 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231480734 seconds)
  done (took 2.250844469 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.340174475 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.201122749 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.297809371 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.18206976 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.304151496 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.157040628 seconds)
  done (took 2.494096515 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.228176772 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.224433681 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.223756226 seconds)
  done (took 1.692698997 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.266340991 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.267206505 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.407823321 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32181282 seconds)
  done (took 2.337844417 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.337230902 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.17445641 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.214341655 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.284935185 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.303750952 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.265584996 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.18175415 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.233567108 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.214094296 seconds)
  done (took 3.258133023 seconds)
done (took 13.047392035 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.40578021 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.352996787 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.189613141 seconds)
    (4/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.192304939 seconds)
    (5/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.363581927 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.195764509 seconds)
    (7/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.313260305 seconds)
    (8/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.439786335 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.196905615 seconds)
    (10/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.421780187 seconds)
    (11/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.433545317 seconds)
    (12/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.501582814 seconds)
    (13/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.129744719 seconds)
    (14/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.210167513 seconds)
    (15/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.379083763 seconds)
    (16/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.224028749 seconds)
    (17/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.258115348 seconds)
    (18/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.273794517 seconds)
    (19/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154567365 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.185368942 seconds)
    (21/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.474365453 seconds)
    (22/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.253511177 seconds)
    (23/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.196495635 seconds)
    (24/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.252047996 seconds)
    (25/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.316445631 seconds)
    (26/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.172433069 seconds)
    (27/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.51731538 seconds)
    (28/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.241134245 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.206083255 seconds)
    (30/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.196813386 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.347606193 seconds)
    (32/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.213341331 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.181460992 seconds)
    (34/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.223642776 seconds)
    (35/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.159432725 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.188945187 seconds)
    (37/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.185795378 seconds)
    (38/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.374994974 seconds)
    (39/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.22256482 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.310336176 seconds)
    (41/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.246033362 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.197739903 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.177314157 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.189762565 seconds)
    (45/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.169680728 seconds)
    (46/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.203742853 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.164352239 seconds)
    (48/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.252642224 seconds)
    (49/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.158192028 seconds)
    (50/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.12809279 seconds)
    (51/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.154899313 seconds)
    (52/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.154450409 seconds)
    (53/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.22280288 seconds)
    (54/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.281010292 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.161112267 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.18690742 seconds)
    (57/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.168457201 seconds)
    (58/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.269961147 seconds)
    (59/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.167578377 seconds)
    (60/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.151516416 seconds)
    (61/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.282628676 seconds)
    (62/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.257677998 seconds)
    (63/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.132117297 seconds)
    (64/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.20601885 seconds)
    (65/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.13181616 seconds)
    (66/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.252437688 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.194083497 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.182628221 seconds)
    (69/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.157325434 seconds)
    (70/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.132499078 seconds)
    (71/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.191322578 seconds)
    (72/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.18942389 seconds)
    (73/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.185945907 seconds)
    (74/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.250905141 seconds)
    (75/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.131710371 seconds)
    (76/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.184988158 seconds)
    (77/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.214000025 seconds)
    (78/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.134001771 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.134873864 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.160635444 seconds)
    (81/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.213051528 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.206935975 seconds)
    (83/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.192152842 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.189482333 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.182681434 seconds)
    (86/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.191622879 seconds)
    (87/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.225145673 seconds)
    (88/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.134765516 seconds)
    (89/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.213757839 seconds)
    (90/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.242030353 seconds)
    (91/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.160344984 seconds)
    (92/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.129143761 seconds)
    (93/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.196960978 seconds)
    (94/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.15337538 seconds)
    (95/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.187307288 seconds)
    (96/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.136247253 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.185580312 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.171288164 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.20387606 seconds)
    (100/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.132023456 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.161310052 seconds)
    (102/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.203187398 seconds)
    (103/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.127709103 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.211888951 seconds)
    (105/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.163392143 seconds)
    (106/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.160092366 seconds)
    (107/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.129686175 seconds)
    (108/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.171265792 seconds)
    (109/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.159094618 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.165136031 seconds)
    (111/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.12912864 seconds)
    (112/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.220551185 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.163130908 seconds)
    (114/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.16011982 seconds)
    (115/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.136517464 seconds)
    (116/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.162585143 seconds)
    (117/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.155087571 seconds)
    (118/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.187455616 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.208664436 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.171560362 seconds)
    (121/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.13186383 seconds)
    (122/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.1921629 seconds)
    (123/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.171526389 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.130852915 seconds)
    (125/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.155766635 seconds)
    (126/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.173249886 seconds)
    (127/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.280588411 seconds)
    (128/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.1963077 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.166690942 seconds)
    (130/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.131640285 seconds)
    (131/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.189883151 seconds)
    (132/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.135555925 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.207629936 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.18464746 seconds)
    (135/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.195047066 seconds)
    (136/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.164903509 seconds)
    (137/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.13207817 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.198215364 seconds)
    (139/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.186520181 seconds)
    (140/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.161776996 seconds)
    (141/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.134634872 seconds)
    (142/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.197904887 seconds)
    (143/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.212649877 seconds)
    (144/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.137560344 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.163262237 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.191352471 seconds)
    (147/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.130763068 seconds)
    (148/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.136442303 seconds)
    (149/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.191408774 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.164573414 seconds)
    (151/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.196610598 seconds)
    (152/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.244080972 seconds)
    (153/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.162623502 seconds)
    (154/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.139551142 seconds)
    (155/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.137710207 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.200744568 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.161791624 seconds)
    (158/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.136558359 seconds)
    (159/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.188968019 seconds)
    (160/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.130475648 seconds)
    (161/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.198721309 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.171193804 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.212186298 seconds)
    (164/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.137843363 seconds)
    (165/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.13255619 seconds)
    (166/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.129585117 seconds)
    (167/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.198628612 seconds)
    (168/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.192685059 seconds)
    (169/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.188534684 seconds)
    (170/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.130095068 seconds)
    (171/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.129659799 seconds)
    (172/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.166880906 seconds)
    (173/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.172872702 seconds)
    (174/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.130074886 seconds)
    (175/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.162207845 seconds)
    (176/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.134475405 seconds)
    (177/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.163723055 seconds)
    (178/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157948204 seconds)
    (179/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.139040254 seconds)
    (180/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.129975473 seconds)
    (181/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.198330696 seconds)
    (182/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.132029937 seconds)
    (183/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.138299729 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.208975334 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.165112738 seconds)
    (186/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.133474658 seconds)
    (187/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.199953075 seconds)
    (188/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.133652337 seconds)
    (189/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.135200954 seconds)
    (190/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.222406087 seconds)
    (191/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.136628223 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.189117071 seconds)
  done (took 38.762896989 seconds)
done (took 39.780262764 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.313257235 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.157822239 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.171130615 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.199321645 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.298096277 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.177943242 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.215956583 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.173040802 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.209529992 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.171305635 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.189159072 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.185518162 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.197504329 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.307867918 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.199518441 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.165617912 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.162314132 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.213440039 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.212240271 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.188408405 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.294962146 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.163118355 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.212126694 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.162139766 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.297377033 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.192702494 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.170666682 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.20036248 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.18423171 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.200562367 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.172873633 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.190099159 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.186200284 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.21460373 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.161646418 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.200411723 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.161376799 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.162499362 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.172869539 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.198195651 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.184666869 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.197130417 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.172593904 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.19201731 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.175868016 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.196610915 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163074717 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.203081516 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.164082433 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.199321886 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.167240052 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.213158943 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.172711994 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.187157989 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.163217122 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.188745048 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.183441981 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.188030334 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.187202419 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.18648934 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.165921463 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.16204888 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.201916424 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.163079385 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.202925804 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.163428288 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.199855435 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.174437119 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.197872055 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166137963 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.190263392 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.173260974 seconds)
done (took 14.922855282 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.169443446 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.232071984 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.315275407 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.316311605 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.191805858 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.20835153 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.204146919 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.188366396 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.202351081 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.182290298 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.226394752 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.196409196 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.31573618 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.210955059 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.205709224 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.178236945 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.174124658 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.199160292 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.31402273 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.216733413 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.188651432 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.207347248 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.190022534 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.208437044 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.167101344 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.218128762 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.171797253 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.205306769 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.168068332 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.212329439 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.213570346 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.170394866 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.194601029 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.187007254 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.209729831 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.179376802 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.207029615 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.178290708 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.194895473 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.17275841 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.201215055 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.184525679 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.19485589 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.181182082 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.20587605 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.184073172 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.203036044 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.180281303 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.195918508 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.175230419 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.194975745 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.192936051 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.208067355 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.183577642 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.207445081 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.180982273 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.207490532 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.184637726 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.198711017 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.180884743 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.195268599 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.168285086 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.19651305 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.18814737 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.199361019 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.205776659 seconds)
  done (took 14.364102584 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.189276355 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.224829697 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.180164855 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.20813987 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.174862422 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.190709219 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.163747922 seconds)
  done (took 2.420602258 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.165852677 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.333387204 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.321146404 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.321421084 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.340553607 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.334952997 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.187457139 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.194494095 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.200782935 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.204612013 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.335582176 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.415993017 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.177298614 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.207133165 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.329540675 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.164628129 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.325302493 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.195868149 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.179929821 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.351624897 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.184969528 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.226457454 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.179532651 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.19424843 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.327694864 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.167338588 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.402529438 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.185702049 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.203108275 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.181156173 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.207529232 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.244151457 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.354175901 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.18254555 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.202219644 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.323863272 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.321944973 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.18159202 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.40626971 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.1697644 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.311481785 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.21245369 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.180690336 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.211151444 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.179792858 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.339276535 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.18865079 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.20838354 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.181176613 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.336956355 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.207622319 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.331380469 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.17721098 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.211488076 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.176253746 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.213150505 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.187347374 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.209554502 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.33606023 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.212997289 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.327738883 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.326052838 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.320533054 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.326418336 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.220996336 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.334811662 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.309421908 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.179344965 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.206283176 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.181470235 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.32642032 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.212881662 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.206688079 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.316409656 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.186983327 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.327944364 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.327802668 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.210226928 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.179129327 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.202157778 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.178745452 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.197212971 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.318162582 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.179448621 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.20887138 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185008112 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.209944732 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.20908643 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.174028088 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.21909024 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.18400224 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.206209029 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.186911675 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.208080172 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.184845725 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.356662604 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.181847871 seconds)
  done (took 24.665811828 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.17026904 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.166923406 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.199344103 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.167852532 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.196200298 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.168675179 seconds)
  done (took 2.197174386 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.205521339 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.209066457 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.194253548 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.209975211 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.229686877 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.316842158 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.325139502 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.207484 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.229138749 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.196473885 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.319518844 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.323863732 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.323797869 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.217761517 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.328753484 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.186446136 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.327548184 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.211904087 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.190882778 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.209217594 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.181848358 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.216382109 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.179536608 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.308728199 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.213187886 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.1839142 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.205899368 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.192490345 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.221010622 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.205643382 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.187779308 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.21188501 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.175247663 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.208032198 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.328745623 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.174931661 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.20953063 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.184649245 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.215289661 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.183850394 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.322783508 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.210818572 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.188751839 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.215065622 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.204295751 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.177449693 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.212758419 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.178196566 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.327049733 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.215870899 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.186648085 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.213099655 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.183560534 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.216044326 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.175628767 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.207066527 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.186236846 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.3243539 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.217441341 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.175275216 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.213876796 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.182820897 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.207541815 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.214360528 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.184547266 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.212854372 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.176587083 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.212973688 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.183647718 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.213289716 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.1912953 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.21364355 seconds)
  done (took 17.02881703 seconds)
done (took 61.761453485 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.654629779 seconds)
  done (took 2.785597137 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.238371857 seconds)
  done (took 2.371589808 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.634696763 seconds)
  done (took 18.797776275 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.492131944 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.417901071 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.092112956 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.241901215 seconds)
  done (took 3.377024245 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.138231942 seconds)
  done (took 2.289610945 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.473230442 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.343087987 seconds)
  done (took 1.956413549 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.81426058 seconds)
  done (took 1.96636367 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.960574693 seconds)
  done (took 3.100562237 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.361052489 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.284002486 seconds)
  done (took 1.797316777 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.724434497 seconds)
  done (took 1.882173215 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.635558145 seconds)
  done (took 16.793306723 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.319999119 seconds)
  done (took 1.475800151 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.355603654 seconds)
  done (took 1.514756912 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.573978034 seconds)
  done (took 4.741764171 seconds)
done (took 65.991755645 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.184996789 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.213404737 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.189433717 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.20947732 seconds)
  done (took 1.94493837 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.18813853 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.207435362 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.189456277 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.208813429 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.189525405 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.209275998 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.184560758 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.183761705 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.209728368 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.183507202 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.211874101 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.182434448 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.213992143 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.181600284 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.209752164 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.184427157 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.215802078 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.181009739 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.212040132 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.182513302 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.212806215 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.183481703 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.215979641 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.185565355 seconds)
  done (took 5.883686453 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.180826524 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.173146426 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.204256095 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.172308183 seconds)
  done (took 1.898399236 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.193968549 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.223345928 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.197042719 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.219025425 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.198071085 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.223231406 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.182523949 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.206610637 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.183731749 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.221554358 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.19985694 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.226891966 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.195440998 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.21597498 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.193269063 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.205844912 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.186094134 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.223523314 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.190564594 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.222758458 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.185507265 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.220877966 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.181699954 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.223054131 seconds)
  done (took 6.090042033 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.258571339 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.223821939 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.209335621 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.256253545 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.239142939 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.181172001 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.237008845 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.189204897 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.216217984 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.19135931 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.209759934 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.229728968 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.216612344 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.184282914 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.211896894 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.188993 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.220974613 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.187817222 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.252420617 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.214750163 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.190923835 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.222201093 seconds)
  done (took 5.902198359 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.187780176 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.201121698 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.17483488 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.198322546 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.187975376 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.204610569 seconds)
  done (took 2.325284844 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.174126983 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.168047216 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.19875505 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.167628246 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.201508602 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.168957732 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.197637855 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.169391571 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.198715904 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.172178831 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.197373819 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.171006277 seconds)
  done (took 3.35423439 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272437002 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217210142 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.348517102 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.472599858 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263557425 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.253871931 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.378509218 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227837457 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.273891274 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232778134 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278757824 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227407156 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249530259 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282839703 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208785104 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.245544453 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266698699 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27617856 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238899968 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311515631 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252228158 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270067755 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.260647635 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24375852 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.233544728 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230469914 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.21425259 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194471641 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261391293 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259959939 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.270592982 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244569624 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208554178 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282371046 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326173238 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273364628 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.362317049 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.232839271 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.256035702 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.260235868 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.326802392 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237828053 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288840459 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247583689 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195052746 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287915249 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245353201 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.283101701 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.19977902 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240032659 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275758078 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244126721 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.265203643 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231700754 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.401024156 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23277941 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.209098343 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27467137 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284616893 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299306076 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246314184 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.220612177 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.265627213 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288838583 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312559152 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.206062355 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.259063847 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219757172 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230656026 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.304085119 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281650853 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256497991 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.288494236 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19650084 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269699707 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262249673 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249701938 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304533228 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240986099 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.214918851 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218263388 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231179188 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2212536 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.256308183 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216615138 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.314786026 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198216091 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.273053759 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274599924 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218276312 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257304672 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257365721 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257091371 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213639441 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.157198319 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24027001 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.253426467 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22435912 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225243721 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.245869582 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205740888 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.221482442 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21811555 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.220031294 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266382564 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.193520969 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256136636 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267373825 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.199428831 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277997854 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241882541 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.230219711 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263301055 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293256276 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226901403 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200843888 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320182425 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267791641 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.203007272 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267736191 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.297070147 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.238801101 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202857994 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263382463 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290120463 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239266412 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272642 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236955662 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230661781 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.19637485 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272667717 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.255070552 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.225613029 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224881908 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.263754656 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282786171 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.195022444 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235299019 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251926919 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229763342 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218966872 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20434496 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231859741 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.209537011 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.248122995 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.204802375 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250088125 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265535265 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.262452262 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223690985 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233168275 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270757629 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197588544 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.268060459 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244211066 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.187197603 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.271061759 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297342239 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196238992 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276839472 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.258432226 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27474176 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272077661 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197298244 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.281387836 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19453171 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.217785528 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258728894 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23781828 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.259613696 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.288739757 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272018586 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.262315176 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.261188658 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216330326 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265661511 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.284155555 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254419862 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.208188599 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.271791819 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265651274 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.188720027 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.219505382 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.196295916 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234659072 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197275153 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23563648 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278129447 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260566238 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.269934926 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237007222 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236383373 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.292216284 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.193087462 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259238498 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.274280759 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207202138 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.289215692 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29024714 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277884367 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207384544 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260820864 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.218559696 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195576938 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.232599875 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227643036 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.235717435 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231712122 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213316772 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.291968407 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268640208 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214801862 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.313058019 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232632697 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.301783239 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.218710643 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.229269015 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264014772 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26725808 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.255356085 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230764095 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.256435431 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263710638 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240244193 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291098372 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267528142 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248730991 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291673018 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.265142412 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198176031 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.243619342 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259275461 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206768523 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.260412286 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.240771768 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197913986 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246955051 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.206110113 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239073768 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286887249 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241515164 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241840208 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.251975621 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267681981 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193186328 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239776791 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274231178 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243048469 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.165677143 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263729844 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259705733 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248474619 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251357723 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268551051 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199673376 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.417095788 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279188256 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239377058 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234541376 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236969751 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242732437 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.258565164 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256506594 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251275854 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240872849 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309288244 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.27142679 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.208310704 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230033431 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213984477 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249074898 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.227880602 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.220972218 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.26513491 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.243825767 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286374427 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204924245 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270528496 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278902285 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.215382543 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.247501162 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206620451 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.35937051 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239983905 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271589343 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.266617162 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.231434006 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281262294 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222558929 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196110354 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.232847643 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.282442391 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199274655 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283496555 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.261938047 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277876036 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277888042 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230167708 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241343111 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.196145617 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.269357934 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248828066 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278598483 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207325276 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.237087409 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28494687 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.187656209 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229758699 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.227578499 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.39133539 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248197604 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266313272 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.165677422 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.382376402 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199106247 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.231289886 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.25738222 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239046363 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.231853548 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.255446859 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272936663 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241329212 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227652855 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233989831 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.274762988 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27781591 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267197006 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243672556 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.245408868 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261893781 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255922383 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240603901 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245701009 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.214757628 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229144444 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297611808 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.274395886 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.201509305 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272168194 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272728262 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241207702 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271681945 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240732298 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28237905 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198119562 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26513719 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206978334 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223439618 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260674613 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.261276344 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201506384 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273257235 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271930534 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200706174 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22804816 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216456934 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267626625 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242271079 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.202990498 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286110812 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.229945746 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251627715 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31306066 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23072842 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.26695681 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212571861 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230989748 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208052657 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244841208 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229790341 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.247052644 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278273638 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.19958909 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273876725 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26680448 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263527956 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222493815 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241615009 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.365893133 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.197889515 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294463292 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250400252 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266658258 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.250117033 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279310357 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270746849 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220750524 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265507654 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247378342 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.29409514 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266853424 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.269273286 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20177697 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24398809 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207134422 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.233592268 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.252554178 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241000235 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245181225 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.236213707 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.239277318 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247584844 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.2145877 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242249073 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30493576 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.251145841 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287233913 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.256731882 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239751617 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278731335 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243049791 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230786933 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.266394243 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271590905 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214262478 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254614153 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.204519712 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.23826167 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31912002 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.195955227 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262033078 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277185977 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.241176383 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275935343 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.236210769 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24910048 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242987655 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280982061 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196843514 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.252276222 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.272196698 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205478534 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.227500562 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272664306 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231195305 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.268579745 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.242292615 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.249003262 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302023546 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.194287305 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23575308 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392498312 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264159368 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266010002 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.225454509 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206551175 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248999117 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260992888 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.236311443 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276422215 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.231070131 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200550365 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.247627714 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.221758093 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.229749422 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.272125253 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253780568 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259226467 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289207264 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.204918448 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.359350349 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.243221167 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245536775 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.207979404 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.200512088 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243506508 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204703994 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243105363 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.278015946 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319574112 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.266015834 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.218352784 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239533993 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.19717761 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233031649 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232254149 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253061852 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275358494 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24995499 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.166033359 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210796132 seconds)
  done (took 121.315974721 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23790364 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.228919915 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.244406405 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.297539201 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270808871 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.367079235 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.304656112 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.32272817 seconds)
  done (took 3.570091371 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.190748846 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.238686698 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.245714009 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.188044656 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.211749752 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.589378742 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.239700155 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.223164074 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.233061274 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.224867159 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.211467332 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.642902869 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.222108189 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.218249685 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.22071701 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.180887278 seconds)
  done (took 5.563986246 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.28151019 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.728111886 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.046043326 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.414174016 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.377539224 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.295256124 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.916720976 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.289809369 seconds)
  done (took 13.647934936 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.242606815 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.274870251 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.530459325 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.416119049 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.289936945 seconds)
  done (took 3.056739389 seconds)
done (took 175.703036302 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.196828787 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.196306646 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.226785625 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.198554454 seconds)
  done (took 2.105308627 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.257640776 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.153566224 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.188126592 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.153488166 seconds)
  done (took 2.060278786 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.45698558 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.15388199 seconds)
  done (took 1.936464629 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.218058604 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.706073102 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.206365714 seconds)
  done (took 2.446042698 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.206957563 seconds)
  done (took 1.517124142 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.190126681 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.188479667 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.385045386 seconds)
  done (took 2.072604394 seconds)
done (took 13.442271862 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.214288113 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.027565149 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.654896398 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.204204163 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.819933512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.470110779 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.50273913 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.251347923 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.273975909 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.213926713 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.245479262 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.764366393 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.486353698 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.947439136 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.470582885 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.94533908 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.796455292 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.182562777 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.218146342 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.183797987 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.481068968 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182143841 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.213969455 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.183520948 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.793067808 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.488865459 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.211931749 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.957063001 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.21309205 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.191941582 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.500874199 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.182840171 seconds)
  done (took 23.766969201 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.184883234 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.270107854 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.238195407 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.216541882 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190468293 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.215167355 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19292739 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.228035352 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.313951262 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.184797221 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.236119442 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.182417465 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.220094166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.183742182 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.238218635 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.182808074 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.215580113 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.185254401 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.220024816 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.185182774 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.235858728 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.18216921 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.216821302 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184510854 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.214288055 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.199719178 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.213878856 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.195754896 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.21457131 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.19238137 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.218775815 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.18420834 seconds)
  done (took 8.052853198 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.224995286 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.282359033 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.239072796 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.253487489 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.268797794 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.187431536 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.302979085 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.250823567 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.290924669 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.216037697 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.206080277 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.214815878 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.225118016 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.216562549 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.207501083 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.214956501 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.18638267 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.216743498 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.221599928 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186710862 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.23545803 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.184635422 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.215552751 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184547177 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.214703834 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.205255072 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.214464033 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.197891595 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.215286777 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194014562 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.22122187 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185091393 seconds)
  done (took 8.403963098 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.197746739 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.198592039 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.239399405 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.238595001 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.194102656 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.197712334 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.230293316 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.194499004 seconds)
  done (took 3.019242888 seconds)
done (took 44.548865273 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.207170681 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.230599774 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.206384796 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.199511928 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.381353698 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.192148179 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.234181165 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.191195228 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.197413825 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.238441211 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.18344102 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.224654546 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.203143725 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.227763609 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.352806684 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.198139299 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.388337398 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.352483925 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.192087866 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.231335165 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.195853847 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.355668037 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.230909287 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.192132905 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.336523955 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.220968315 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.342134281 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.197644497 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.226936034 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.185138534 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.353963841 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.227921527 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.192606617 seconds)
  done (took 9.402378776 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.301193692 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.227200669 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.194740194 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.227848843 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.194141977 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.225034552 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.339736093 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.192335044 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.225905304 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.192789046 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.225212307 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.288707751 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.233328488 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.188125148 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.227908314 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.174384061 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.339325168 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.226410989 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.185902358 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157729618 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.22239105 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.193791546 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.350364033 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.2217804 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.193040952 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.225176987 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.195545323 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.199014503 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.227544291 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.194283565 seconds)
  done (took 8.130238764 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.198808492 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.205147004 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.245498608 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.293083252 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.223534132 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.237418915 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.209651008 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.237167553 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.214833003 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.220446366 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.203211008 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.255603349 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.203953661 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.231712757 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.186979796 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.236034504 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.203011608 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.220762618 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.196416028 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.238529933 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.207276785 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.237351262 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.210016797 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.22824654 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.187560348 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.229265587 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.198200859 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.230779029 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.195820865 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.236794269 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.189781978 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.222814969 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.191597128 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.255312577 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.189609909 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.234318914 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.208240484 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.23354539 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.201983824 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.253980194 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.19120982 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.223320245 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.213561442 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.277612986 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.190296889 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.232556991 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.190008104 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.236600087 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.186509258 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.238628468 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.231058116 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.22164376 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.240112249 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.188938139 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.186519739 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.228900964 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.188818863 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.224787519 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.204018714 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.222680788 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.209120822 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.22915818 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.200119589 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.22326233 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.199856078 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.219539244 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.188727202 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.226429179 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.215280711 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.230711121 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.225873784 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.220952371 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.201088556 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.235354944 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.200776091 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.233034704 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.18848441 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.232164307 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.200041892 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.225504099 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.202230509 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.223615251 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.193013108 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.23647629 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.210620749 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.234463692 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.200478053 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.232631507 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.190323773 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.223247085 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.207575014 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.222965959 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.192553811 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.234908112 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.190441004 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.224703275 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.200013562 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.198404148 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.220706668 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.214860505 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.226309581 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.190015236 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.24833599 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.193067688 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.226220263 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.19833614 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.26396695 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.192781935 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.231231478 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.199621833 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.222221611 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.197456652 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.224568096 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.188749726 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.238067942 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.205083205 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.229623475 seconds)
  done (took 26.706266918 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.451180201 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.443182088 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.293991712 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.526283514 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.202292888 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.397179437 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.44330317 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.446017981 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.225365129 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.225038685 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.282077378 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.442843063 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.192258069 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.252142284 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.449503824 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.529554318 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.218743984 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.264638148 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.260848366 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.203822738 seconds)
  done (took 8.114914082 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.199388308 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.256181543 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.215892918 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.240931217 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.201468249 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.238699304 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.191386022 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.243648794 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.202775343 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.2298099 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.193650745 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.229126778 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.204668866 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.20550285 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.237558569 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.212383467 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.231768419 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.195260716 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.245641937 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.194769952 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.201948553 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.2155118 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.233831877 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.211545294 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.243534344 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.200221086 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.222546091 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.196029293 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.230444584 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.200412593 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.226849835 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.198917031 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.230557969 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.171752461 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.233666487 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.206421167 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.227969007 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.194704391 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.195402007 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.227327687 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.205879684 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.234192384 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.198751861 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.198002438 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.210274789 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.176326337 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.236906176 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.20205312 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.206148438 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.212946802 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.236483224 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.204887408 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.230693903 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.212860246 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.230733286 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.208131821 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.23494421 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.204710524 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.228778819 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.190324886 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.221125272 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.194649253 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.231245198 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.20515221 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.234613625 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.200874168 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.230265016 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.192519618 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.195211308 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.227617984 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.19328749 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.236275604 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.245488418 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.201676361 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.198327445 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.235791415 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.198922403 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.194511977 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.199558617 seconds)
  done (took 18.320244624 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.218297184 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.233488936 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.20939135 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.25712807 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.205166977 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.231635271 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.202898103 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.245197193 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.206590647 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.243251453 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.206771477 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.238502372 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.216971342 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.237202489 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.202367973 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.239501896 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.204073222 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.260776891 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.203027655 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.251638295 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.207258267 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.230267734 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.204077455 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.236855767 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.220845504 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.235391342 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.217453962 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.237456932 seconds)
  done (took 7.690130963 seconds)
done (took 79.694332143 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.550787836 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.696498673 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.479412683 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.477784107 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.518872702 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.493902686 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.473607047 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.47019223 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.964649158 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.450373422 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.47244248 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.484436588 seconds)
done (took 31.95335747 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.542383442 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.152877302 seconds)
    (2/2) benchmarking "String"...
    done (took 2.17639268 seconds)
  done (took 5.692586688 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.146094597 seconds)
    (2/2) benchmarking "String"...
    done (took 2.166602529 seconds)
  done (took 5.675177431 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.461762103 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.460376952 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.705094033 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.460089522 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.461500075 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.46172755 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.460186833 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.468695063 seconds)
  done (took 17.841083706 seconds)
done (took 35.577977861 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.513742479 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.659582509 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.717612203 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.448874519 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.460359909 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.460561819 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.462201787 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.483392613 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.467631654 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.448554757 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.857524918 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.745588904 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.469712233 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.871822184 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.447081747 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.4887383 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.459946006 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.701333838 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.464035271 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.496024295 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.443348756 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.445693255 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.465884268 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.470609298 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.464900478 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.472342002 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.476022929 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.470937039 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.650958111 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.472459366 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.496902122 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.461231826 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.481703672 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.461476285 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.468528748 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.460306721 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.658781551 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.470539743 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.450222209 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.46845399 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.652657687 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.47089706 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.459667612 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.465458845 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.4458679 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.501889906 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.452774711 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.571532392 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.477913875 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.470005319 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.532643699 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.844825029 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.474230858 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.468640471 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.468993711 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.698422782 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.472662045 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.508796328 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.486147993 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.466953031 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.458781462 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.460473915 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.470394702 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.462043374 seconds)
  done (took 160.442806597 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.459710119 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.467060139 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.463655301 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.510318068 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.466741795 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.467565499 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.460400405 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.459743725 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.466542314 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.493994677 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.466423602 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.461115902 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.464989558 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.421822852 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.469289087 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.473343446 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.465416753 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.46049926 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.482415969 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.459973939 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.487824937 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.467142201 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.460043072 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.459640287 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.497513426 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.527282133 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.477088285 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.487060069 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.473990554 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.459414354 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.49528264 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.512266778 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.050285011 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.327323365 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.466416676 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.473146794 seconds)
  done (took 89.823284266 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.458837863 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.459616483 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.46129821 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.491359739 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.461092106 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.989021775 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.995166989 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.426311553 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.060445914 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.687789266 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.65255202 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.464279622 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.5497561 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.471481811 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.461473376 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.55186516 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.486407094 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.467226286 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.461156324 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.988705644 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.481189222 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.461164785 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.630223216 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.460246718 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.491904805 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.85660852 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.461415177 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.491795327 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.786198123 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.492533728 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.461462021 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.761205675 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.550160923 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.57081103 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.463631399 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.492103358 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.460602062 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.7385099 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.462049265 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.463734184 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.463092273 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.464698689 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.058770668 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.470134479 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.9912305 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.466465207 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.371391327 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.462439033 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.462304971 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.861341287 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.063116353 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.468981306 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.461964132 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.465348868 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.463153476 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.46404723 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.494467881 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.886425263 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.283465788 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.464623987 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.466736252 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.494316077 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.464163933 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.465057821 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.591626307 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.465146004 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.598134141 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.52695831 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.726104223 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.992085571 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.469633479 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.556539009 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.579908945 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.464458154 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.46383928 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.463649599 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.463482668 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.574105904 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.46449632 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.463168495 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.211867374 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.633343844 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.465505563 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.675662095 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.564724495 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.46501657 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.759318308 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.473997956 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.46662981 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.115793995 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.556525498 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.465378534 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.465670189 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.465622845 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.214879239 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.995332137 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.652043056 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.471598248 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.285420785 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.471221339 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.464937705 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.343589702 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.986028818 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.068808796 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.473390208 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.574769793 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.636276613 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.467490257 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.46695886 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.668223369 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.471918898 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.518601073 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.466626761 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.865416816 seconds)
  done (took 406.139245034 seconds)
done (took 657.768490786 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.451323149 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.455902121 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.452033682 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.454884212 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.45389703 seconds)
  done (took 13.635711627 seconds)
done (took 15.003677176 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.468685824 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.472049682 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.486198759 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.208395161 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.476938378 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.471585084 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.473990115 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.470170439 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.474453746 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.473160157 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.177668201 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.478014697 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.475456493 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.350239486 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.190968312 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.475953803 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.27828309 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.475586798 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.474242777 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.767144537 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.486317077 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.53982764 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.727171066 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.519369002 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.758050805 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.800402813 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.485556441 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.640327058 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.491638019 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.489948051 seconds)
  done (took 21.07488364 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.282883808 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.775014831 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.486040861 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.557500753 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.740952795 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.521506086 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.750106642 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.793951209 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.487229647 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.641734397 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.493200937 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.490526006 seconds)
  done (took 21.107556357 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.150906469 seconds)
done (took 93.839219747 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.506767286 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.571243965 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.502823852 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.488165954 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.488271885 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.489079617 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.489395916 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.486852286 seconds)
  done (took 13.393495503 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.487621366 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.486992867 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.485891089 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.486860785 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.487475374 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.486688645 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.487863949 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.486525837 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.486753803 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.488061975 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.486936726 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.486015133 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.487034922 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.488666911 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.487326638 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.486719285 seconds)
  done (took 25.165881098 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.482368796 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.480081005 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.475830528 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.477517539 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.480081382 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.480408886 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.473899105 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.471712953 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.470332339 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.473517116 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.476472638 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.47257861 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.474453521 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.467381094 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.467541229 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.469689345 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.468504039 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.468723152 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.472184964 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.467198498 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.467962291 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.468367 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.467380767 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.468317018 seconds)
  done (took 36.708816858 seconds)
done (took 76.6390579 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.469622862 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.451829724 seconds)
  done (took 6.276999764 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.522413049 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.52213798 seconds)
  done (took 4.39709039 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.462411788 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.457113965 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.456584097 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.45712314 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.456868783 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.456300001 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.45680888 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.450326932 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.448140146 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.448910464 seconds)
  done (took 15.903377816 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.450910732 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.449678561 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.44949124 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.443278493 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.440140691 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.441582165 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.442148009 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.442554182 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.441012006 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.44396201 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.435164482 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.432384208 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.435159816 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.431568925 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.432375301 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.433923584 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.437755563 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.424981438 seconds)
  done (took 27.246607632 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.441964243 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.446602475 seconds)
  done (took 4.206495325 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.556669729 seconds)
    (2/7) benchmarking "second"...
    done (took 1.469447909 seconds)
    (3/7) benchmarking "month"...
    done (took 1.525690152 seconds)
    (4/7) benchmarking "year"...
    done (took 1.520218869 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.464594657 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.440727648 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.464465852 seconds)
  done (took 11.756479826 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.415390511 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.685884377 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.863999872 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.567009517 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.408915475 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.436083022 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.391378436 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.438140689 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.433669397 seconds)
  done (took 15.950909703 seconds)
done (took 87.094436931 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.421164952 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.426060236 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.428858118 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.428061667 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.714942817 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.456006279 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.413559236 seconds)
done (took 17.597503019 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.395145668 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.40483023 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.409077896 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.431473928 seconds)
  done (took 10.945888743 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.409216899 seconds)
    (2/2) benchmarking "read"...
    done (took 1.73468794 seconds)
  done (took 5.451908409 seconds)
done (took 17.704694209 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.425217649 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.42762092 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.422447504 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.423554843 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.422365226 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.423144142 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.427218801 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.426098221 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.424416321 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.424652369 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.425595815 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.424159056 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.425092958 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.42492241 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.425293156 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.425964752 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.423162421 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.42536633 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.424835026 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.423460264 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.425843832 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.422715805 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.423183989 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.424772568 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.425156532 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.426118825 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.426072482 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.428144036 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.427623777 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.426259879 seconds)
  done (took 44.063079068 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.430694077 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.428433997 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.4264944 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.425441296 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.424114558 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.42509975 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.426176325 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.424743319 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.428645452 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.428334798 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.427633307 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.426608457 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.426788037 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.427450914 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.426400047 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.424687106 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.426766208 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.428294372 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.427707221 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.42766784 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.428205945 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.425612807 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.424934725 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.42760047 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.430645818 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.427845893 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.428054097 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.426616736 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.427496912 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.427921622 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.42956313 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.426122341 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.428186601 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.427198551 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.427827237 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.428463487 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.43157061 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.433096063 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.427008059 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.42896531 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.428757631 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.428033889 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.4296335 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.427233218 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.427583987 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.427051274 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.42779247 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.430025368 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.428072102 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.429105955 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.428942879 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.428013795 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.429776858 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.42985761 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.42836385 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.429855684 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.43108222 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.426319864 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.429909943 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.427918954 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.42983066 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.430123028 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.42769727 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.429003724 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.428759647 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.426602794 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.428469253 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.424004513 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.424919651 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.426622697 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.42477598 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.430797242 seconds)
  done (took 104.120342408 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.428774789 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.420052167 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.423962229 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.421576692 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.425665801 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.424380896 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.423231355 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.422147941 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.420965199 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.422949654 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.422758795 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.423452554 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.422979433 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.422074816 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.424568279 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.421299045 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.422962558 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.421789707 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.420676772 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.422994792 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.421073348 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.425023831 seconds)
  done (took 32.621223402 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.424758627 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.42342269 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.423524994 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.420845122 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.423468159 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.424355571 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.421122685 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.423599511 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.422501898 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.422934137 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.420336696 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.42353892 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.423276434 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.423339816 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.422455985 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.425914187 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.423342152 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.425437979 seconds)
  done (took 26.931339912 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.424668668 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.421429855 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.423962164 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.423435714 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.422375428 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.424114854 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.424315305 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.425670433 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.422164607 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.42494597 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.42369286 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.425230432 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.423285014 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.422095484 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.423820727 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.424544226 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.420564703 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.424866673 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.424293548 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.424253219 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.425147811 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.423989047 seconds)
  done (took 32.633406298 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.425098127 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.424891459 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.424580405 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.424606647 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.424060993 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.425181906 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.423945204 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.425797622 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.426374669 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.423214404 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.424662935 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.423062015 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.425262303 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.427073925 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.426550735 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.424150547 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.425312152 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.421118219 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.424551087 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.423954758 seconds)
  done (took 29.806142194 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.426689056 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.42441339 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.42518966 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.423578765 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.427306519 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.425978511 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.424436141 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.424649788 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.426492406 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.424652978 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.425563457 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.426527212 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.427498469 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.427717607 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.426352509 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.427500085 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.425736235 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.428145684 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.42938392 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.428011745 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.429085078 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.426750506 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.426258112 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.425882011 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.423743393 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.42381145 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.428989724 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.427115979 seconds)
  done (took 41.250599365 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.444956693 seconds)
    (2/2) benchmarking "in"...
    done (took 1.445315009 seconds)
  done (took 4.206267597 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.428134306 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.429136659 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.427111148 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.425078332 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.429134515 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.426407821 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.42991319 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.428473949 seconds)
  done (took 12.740095735 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.421537078 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.429801385 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.428635587 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.428962073 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.4266337 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.420289849 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.427206952 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.433054696 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.419416414 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.42145577 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.4261354 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.421444089 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.419100704 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.424772435 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.42468384 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.421304571 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.429863007 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.42930474 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.434138621 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.430378739 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.430731908 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.42560611 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.426627378 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.429615246 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.42205176 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.434058317 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.431350851 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.434050869 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.423696257 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.426698683 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.42697815 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.435015705 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.433203794 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.431438192 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.431993807 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.431895407 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.430847808 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.433227034 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.428529027 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.433499106 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.433447895 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.43233243 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.423839551 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.427087098 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.428513778 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.436969523 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.433335029 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.432492966 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.424383765 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.42870637 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.439389469 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.425520483 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.434540911 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.429593507 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.429967912 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.438954698 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.440160342 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.426814884 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.428022007 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.437139953 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.441474493 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.4394838 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.433029602 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.437334961 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.429335563 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.436390958 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.439412267 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.439747406 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.435858436 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.433341236 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.434931651 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.442893221 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.441280461 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.439867684 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.432030897 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.436878582 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.425800924 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.435535652 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.436722099 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.438579374 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.437634809 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.434266363 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.433288178 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.432956361 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.429833095 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.436108753 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.438846523 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.432663288 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.427645229 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.441759574 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.445818268 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.436281586 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.426808934 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.431311811 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.434373183 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.438108885 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.429515725 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.432442688 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.440325921 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.434995633 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.435764901 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.43135076 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.441322098 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.441759661 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.43644426 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.437823115 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.442530077 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.430815971 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.440781558 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.442694332 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.436013431 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.427671578 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.433769437 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.441234717 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.426776136 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.437268215 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.44062066 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.432188907 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.436825658 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.437909883 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.435112036 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.442617808 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.444008305 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.438898479 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.431785517 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.440271485 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.437294954 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.434906255 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.44460509 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.436932092 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.439970207 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.435502527 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.441267684 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.433290318 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.441441685 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.433333249 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.44129059 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.439660878 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.437063917 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.437317789 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.437185856 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.436542649 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.439330371 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.4398748 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.442831012 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.436697844 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.444877719 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.437566662 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.439104321 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.441033886 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.440641938 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.442128822 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.434856442 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.44357198 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.428360445 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.444479759 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.434087978 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.443828516 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.437352303 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.440078204 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.438038893 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.433385266 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.437020378 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.446017749 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.439827298 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.440157275 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.440447109 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.442568912 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.442001706 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.433518206 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.447924258 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.433992307 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.439374235 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.444174341 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.44301019 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.441427858 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.43891156 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.446656094 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.443985399 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.441081973 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.436171628 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.442948758 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.447980144 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.443649498 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.44917595 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.442898099 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.443606702 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.436354939 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.433836661 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.442854492 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.435485514 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.447033177 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.449100443 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.448532976 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.4385411 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.446157802 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.435882202 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.444943614 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.441174863 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.450574499 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.444894433 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.443394844 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.435355423 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.44703574 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.440039378 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.448751177 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.436471239 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.4464099 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.445534373 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.441114924 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.445320546 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.435875205 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.443863983 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.452747587 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.448334074 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.443904458 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.436282782 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.449006284 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.43537886 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.440706197 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.451060961 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.445519647 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.446652079 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.452069613 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.443208179 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.446800959 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.444456616 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.441135442 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.448260157 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.442684802 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.44029639 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.451109551 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.446671372 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.442777118 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.45204294 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.447525749 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.43870452 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.444410406 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.452365076 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.4469154 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.439820001 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.451971929 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.447568806 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.445538952 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.446586409 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.440623369 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.449544703 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.449696124 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.453885054 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.440640942 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.450492261 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.441913656 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.450605415 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.443730597 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.447457994 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.447986954 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.449559439 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.454118214 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.446931429 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.442150898 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.452158773 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.448209981 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.448423489 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.441567647 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.452857748 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.449962038 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.448438823 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.446570567 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.447131429 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.450858009 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.440944392 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.450575421 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.442968385 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.457627568 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.464029039 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.452170391 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.451757892 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.45338749 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.450372713 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.450532262 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.444107645 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.445272157 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.448033715 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.445544213 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.44574909 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.453184795 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.444343142 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.452597621 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.448282213 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.449605478 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.451207623 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.450920308 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.443074896 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.453666593 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.450503224 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.450237261 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.442329605 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.452026232 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.444701747 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.451253331 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.449702591 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.445732886 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.456294554 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.453952533 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.449182948 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.447062059 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.445768707 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.445056829 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.448193844 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.45610081 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.446467672 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.455107279 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.445773177 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.449146913 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.447342483 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.456351823 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.459589086 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.444388788 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.45572301 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.45194036 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.442913301 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.44589516 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.45372109 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.454236755 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.461619516 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.446964398 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.455135247 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.452879749 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.453611814 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.453102849 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.454862516 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.453864322 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.451865018 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.458152441 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.45498651 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.44814763 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.453763499 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.46053613 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.453399857 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.454835695 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.444695947 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.455555572 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.461453177 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.449045657 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.453345634 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.448913036 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.45603188 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.453684836 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.45417235 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.453816723 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.454008464 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.457430445 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.456695734 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.457507724 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.455202046 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.455752333 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.462596188 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.458492377 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.463679056 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.449715275 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.459930143 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.455075888 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.449651798 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.450602223 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.450897367 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.458877488 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.447639605 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.460171378 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.456700754 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.451696785 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.456104133 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.462906427 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.448010898 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.453048362 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.46460414 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.448121038 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.458672563 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.455622964 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.449631763 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.459543428 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.456175881 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.448829321 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.451524597 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.452735441 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.458787961 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.449029093 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.459770012 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.450359885 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.459152897 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.456734024 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.454532406 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.457886479 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.458036348 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.4506747 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.456324713 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.458122016 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.464547664 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.451553164 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.456586141 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.452388495 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.462111175 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.465987294 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.450700445 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.467681637 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.456683126 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.449420604 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.456431912 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.461890559 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.450930107 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.461236343 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.450140186 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.453845998 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.453271751 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.459567487 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.458307879 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.461301554 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.449219314 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.452038529 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.459450476 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.457505158 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.45868575 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.452600976 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.470295028 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.45053621 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.453365128 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.459617665 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.453290302 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.463926294 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.453021597 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.455198034 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.45582642 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.462248557 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.458111686 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.458398874 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.450587115 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.45339366 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.465486386 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.461084435 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.45668677 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.453472307 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.460711732 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.453780255 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.454572106 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.455945207 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.454611762 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.45595737 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.463567048 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.454716998 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.45518667 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.454155114 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.462848378 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.463831812 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.460568267 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.453741665 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.467863026 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.466196224 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.465521463 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.454003475 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.45631173 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.454811567 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.461613641 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.460629547 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.45462113 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.466174709 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.467327632 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.462770693 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.458588331 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.460349634 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.455132484 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.463931498 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.462556194 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.45771941 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.468278041 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.458602722 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.468072786 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.462958423 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.462534358 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.45479725 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.45667503 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.458546424 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.457566346 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.460558494 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.462501091 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.463173207 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.461772766 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.46864194 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.463182422 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.46421487 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.464215871 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.456169458 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.466283669 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.45618916 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.464061686 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.459492314 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.456984969 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.465932575 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.4638433 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.458343161 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.459467829 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.467483451 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.463445712 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.458401491 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.461992495 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.467015605 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.468963345 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.462503859 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.458089964 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.461223742 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.46807183 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.464642927 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.466107241 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.458142791 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.474042407 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.474473886 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.456083336 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.459577694 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.466887639 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.470399036 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.4653414 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.464499677 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.460804398 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.464211572 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.467749341 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.466047796 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.468515819 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.46695271 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.461189953 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.468680154 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.462358673 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.463293996 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.467028775 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.474814145 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.466859473 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.461463555 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.47321804 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.474555046 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.464786492 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.477607281 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.470824749 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.467143538 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.472889073 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.486339303 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.468085837 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.463421788 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.471948187 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.467667982 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.468120531 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.468425767 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.460357753 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.467686725 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.472316778 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.477502443 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.467154494 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.461432037 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.463869504 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.470396307 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.469545127 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.468110207 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.468354874 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.467340329 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.46902243 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.461929442 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.476288554 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.47892405 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.473972201 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.46924542 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.465076921 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.469330979 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.470342862 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.467734725 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.473437977 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.470072699 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.470037569 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.468278965 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.476397481 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.471381436 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.465727702 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.463440725 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.461287305 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.470070597 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.476617115 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.4886594 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.470191847 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.467341024 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.471929975 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.471262233 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.465437392 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.474170546 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.470477495 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.462542953 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.466882958 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.473180965 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.470477047 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.468025361 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.463420305 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.475478149 seconds)
  done (took 865.397717634 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.470271382 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.467028508 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.467196481 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.470242974 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.469356377 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.468954389 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.469935315 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.467975183 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.469741408 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.468314312 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.468570227 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.47172577 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.470745028 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.471086436 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.470790994 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.471685833 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.46972898 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.471682866 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.468990272 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.472428657 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.472271443 seconds)
  done (took 32.219350919 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.472869894 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.469880368 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.47240511 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.473124105 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.472505104 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.471775448 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.472863996 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.473981232 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.473077912 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.469243502 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.471883202 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.471879711 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.472211202 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.473461867 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.471269626 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.471447149 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.473192725 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.469498027 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.472891422 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.472481477 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.473104403 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.473106106 seconds)
  done (took 33.744568406 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.469842134 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.475174007 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.464791453 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.475159335 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.473226652 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.472532255 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.475111312 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.4700413 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.4768979 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.465106193 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.4694226 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.470339763 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.469204838 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.47645556 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.471175252 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.4809783 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.47316618 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.478523773 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.475583644 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.471075043 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.476767253 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.482737532 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.476214076 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.467923841 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.476158274 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.4767105 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.476355115 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.472835669 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.466448523 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.476752596 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.476800628 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.466939588 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.477018774 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.472814476 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.467027066 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.478023572 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.477009877 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.473422473 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.47573053 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.473629579 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.483413525 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.477597595 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.479343923 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.492842576 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.47510224 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.469433395 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.479944145 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.478512733 seconds)
  done (took 72.12742867 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.474903589 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.475175208 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.475727713 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.477276813 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.478373762 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.473545741 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.473297093 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.478463626 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.475729423 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.47572015 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.47800718 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.47668997 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.47603911 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.479357838 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.47697455 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.47393589 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.474097896 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.477937267 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.474957678 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.473955081 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.473467307 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.472534384 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.475638265 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.477257509 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.473849264 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.474257005 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.474744934 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.481230115 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.477790766 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.47688952 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.479621289 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.475208944 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.477449228 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.477293799 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.480546022 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.476986001 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.475702478 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.478226139 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.478729754 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.476105054 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.480552644 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.480751006 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.478357303 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.475499296 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.479158574 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.477206869 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.47728918 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.480026784 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.479795578 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.480838274 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.479387438 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.477647364 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.478118727 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.479709144 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.481875701 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.480395221 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.480165101 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.477132405 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.47973977 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.479129644 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.479631234 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.478285298 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.478272148 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.479184457 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.480351617 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.480475492 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.476254439 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.47995396 seconds)
  done (took 101.824408885 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.479848817 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.481341482 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.479770733 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.479422819 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.480327935 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.479774541 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.480079543 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.481364416 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.485722798 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.482671612 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.47852322 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.485930252 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.483175854 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.483081626 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.479870755 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.479432521 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.480565323 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.480147668 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.482310987 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.481131583 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.481889696 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.482110795 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.483144975 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.481824328 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.481251005 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.482324373 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.480497939 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.481209408 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.478035354 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.480264103 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.483882047 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.482446494 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.483661023 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.478493924 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.484993313 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.485656599 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.483163307 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.489626018 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.484262985 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.482747805 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.482219927 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.481123785 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.4814863 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.480575369 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.481594884 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.482350434 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.481638653 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.4817733 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.48117156 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.48214625 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.48264024 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.485971903 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.483241052 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.484769 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.484141522 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.482664883 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.486895992 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.483825776 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.482361159 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.483688416 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.486265243 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.487038962 seconds)
  done (took 93.27005695 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.481954942 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.48362017 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.487738795 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.48494988 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.485236988 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.484654148 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.48453372 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.487497629 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.483113527 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.485365102 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.485599894 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.49295699 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.483927754 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.488337462 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.48960958 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.488547483 seconds)
  done (took 25.139316811 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.482315909 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.484170528 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.487199738 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.48725199 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.486251649 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.48404292 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.485996279 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.485029791 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.488161993 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.486081559 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.490560749 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.486207259 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.486930913 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.490790832 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.490045447 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.490288991 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.488735101 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.489293598 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.487683014 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.484287632 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.488337599 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.486652907 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.490942985 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.489968603 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.487876483 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.488567397 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.487758531 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.486529605 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.486763946 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.486497848 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.487696633 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.489438069 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.485778228 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.487392139 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.490221999 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.492116296 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.487145638 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.488888183 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.488541295 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.487700356 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.488749633 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.487653613 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.494236193 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.489719721 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.489200044 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.491308501 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.487927 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.487210493 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.48806445 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.493204841 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.486675783 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.49398812 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.492031084 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.494267063 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.492461666 seconds)
  done (took 83.229161718 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.486744798 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.486874623 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.48989028 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.490175664 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.489882842 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.490153495 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.48722839 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.491202547 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.494198208 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.49110947 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.491068891 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.490087963 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.489245544 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.494153585 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.48973581 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.490992286 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.488497703 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.4897356 seconds)
  done (took 28.187579915 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.488967644 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.489546707 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.49212109 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.490080393 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.493006747 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.492127266 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.493340205 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.49154911 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.489666998 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.4916307 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.489432579 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.488629196 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.493783077 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.494046769 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.496370666 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.492154279 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.493366152 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.495522846 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.491580725 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.489047211 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.490383834 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.497223179 seconds)
  done (took 34.192143046 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.481799987 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.481728816 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.484592716 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.500817256 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.495141957 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.488111884 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.488242494 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.48420379 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.501736464 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.509345089 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.503592859 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.495835304 seconds)
  done (took 19.284916586 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.492868685 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.493590422 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.493050194 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.495353624 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.49514001 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.495841271 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.493658501 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.491830024 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.490404135 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.492693912 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.494587654 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.495455055 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.496658489 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.49380145 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.491910504 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.494104511 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.496594607 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.498146472 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.49457436 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.492394411 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.496364779 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.49271018 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.492645565 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.495366021 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.497190393 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.495182559 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.495103031 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.494502668 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.490907911 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.496667819 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.495653345 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.497902686 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.494994167 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.497044044 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.497887555 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.495955873 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.494276617 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.496113369 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.495676181 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.493330732 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.493572693 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.495191354 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.497371069 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.49320749 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.493814971 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.500587146 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.498666449 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.494725523 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.498856937 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.49631257 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.496419855 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.496278723 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.499770071 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.499097999 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.495388045 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.497519673 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.495827985 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.493996733 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.499924907 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.497152676 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.495667879 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.497655983 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.500088581 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.494509327 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.495944863 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.499998993 seconds)
  done (took 100.080065046 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.495703245 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.495264149 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.494131333 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.500308874 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.498596239 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.494165095 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.496594035 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.495029325 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.495418536 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.500687848 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.495885096 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.499299311 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.503623866 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.501422225 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.495853424 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.497783883 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.499148599 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.500457759 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.49844294 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.497842518 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.498346978 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.499734661 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.501560123 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.497911642 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.497952786 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.496003528 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.49855838 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.499424717 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.500079283 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.49807934 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.498700866 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.500047601 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.496681095 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.501290045 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.499814678 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.49723527 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.499682453 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.498704049 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.501095142 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.501348554 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.500283773 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.498159717 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.497197291 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.501654406 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.50036079 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.503744521 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.498770245 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.502496933 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.498279228 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.49787278 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.504027631 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.503777624 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.499101776 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.504042009 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.503316976 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.502734011 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.502507313 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.504682011 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.503248132 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.506788843 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.506507392 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.504550513 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.503250171 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.505990227 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.504496783 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.505305842 seconds)
  done (took 100.375139574 seconds)
done (took 1918.754818628 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.494774877 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.491822608 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.493100798 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.565282582 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.492662626 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.264108772 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.251587418 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.493078323 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.496209295 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.498683121 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.495423971 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.490243033 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.846382205 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.493893069 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.496793817 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.491043297 seconds)
  done (took 58.239037126 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.523542378 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.517528422 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.63294565 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.525322829 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.542400753 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.696359232 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.582618238 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.528367912 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.685937588 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.518249785 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.518011382 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.535244738 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.525753739 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.512102173 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.533498757 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.710711718 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.7813863 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.514948767 seconds)
  done (took 32.769610666 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.964037927 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.52934219 seconds)
  done (took 5.892096625 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.537535805 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.526724636 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.518216583 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.519434445 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.509422202 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.522996859 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.517481086 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.509903204 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.535771818 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.649907171 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.520649755 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.532255358 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.517381256 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.515272377 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.533881457 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.564753211 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.657234254 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.545563224 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.523694074 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.522875114 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.517353958 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.675828175 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.561745354 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.530868267 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.643954785 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.513844174 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.533308797 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.531545078 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.664929432 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.52941404 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.519190716 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.518733723 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.520295402 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.497326058 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.054682853 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.522590988 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.563437275 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.529193414 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.526755203 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.662472445 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.523546078 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.522744126 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.515761636 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.045261877 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.647704628 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.734700009 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.536604113 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.530425715 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.522471673 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.659392157 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.530326097 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.520920929 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.578933114 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.529354354 seconds)
  done (took 96.19442484 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.516421039 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.51229015 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.696409914 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.541523857 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.512799175 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.521926069 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.523907852 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.79405172 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.527436851 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.509459141 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.837699173 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.161438655 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.521406259 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.560308914 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.558700681 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.5488206 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.511396862 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.513434085 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.512607215 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.512343145 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.073873021 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.521794622 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.519512137 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.717501896 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.55096865 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.068680737 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.520634546 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.521456999 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.515434181 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.511197936 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.113587661 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.515960078 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.572671311 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.514470083 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.798727866 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.916085289 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.872820959 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.519321745 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.517530573 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.51796304 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.512829305 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063061707 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.90530429 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.523965526 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.521984599 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.065354458 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.525652313 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.515372767 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.514390943 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.780102554 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.522733371 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.520518326 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.529549868 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.523049758 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.511908865 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.58319694 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.573342824 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.066032015 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.52328614 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.513879064 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.576753865 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.519013366 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.515586731 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.517030534 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.524233204 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.896774939 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.724901649 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.517089846 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.897863614 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.120860914 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.522798045 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.205983455 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.519603008 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.548325128 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.627996567 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.515395289 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.527707928 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070927515 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.528164483 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.514221993 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.875298094 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.526687655 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.818969333 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.541222108 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.513732819 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.111305692 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.535134156 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.580891064 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.518208622 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.526110539 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.529128781 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.523990736 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.805129013 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.545161182 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.514428025 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.517017467 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.549029628 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.518587431 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.528299355 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.519790831 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.18934655 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.531921564 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.516873503 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.526902419 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.519703294 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.516670887 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.519600753 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.521087992 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.799615906 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.52701325 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.530631368 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.519643489 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.51561658 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.531112527 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.715565166 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.519124099 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.831990825 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.53203865 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.519147971 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.531096728 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.517147336 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.536508809 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.518473475 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.523922784 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.427693014 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.882712382 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.543358169 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.517928344 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.52279238 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.520194336 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.526987582 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.516968338 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.558626935 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.520889427 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.338748318 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.555921413 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.547016584 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.514916591 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.526525702 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.522334815 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.516192295 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.519131738 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.837876629 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.814702441 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.727083872 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.520125588 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.525220524 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.33393238 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.574169177 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.699856139 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.541072286 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.519540113 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.824846317 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.721549569 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.524405119 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.522057553 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.520078445 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.802541587 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.535815407 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.839095733 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.151896724 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.529672292 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.530728683 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.338739382 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.282558641 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.530673251 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.521758247 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.818663482 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.545681423 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.523599766 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.518859789 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.523366321 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.524923745 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.522939305 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.532347023 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.522713198 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.522589296 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.595706588 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.719630018 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.54666596 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.52355997 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06956473 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.5425311 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.52255075 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.521634114 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.524794526 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.522227612 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.574530857 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.524354254 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.549052241 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.524159039 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.522755494 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.139406294 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.531078086 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.533275421 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.719594837 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.27994198 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.534624494 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.522589693 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.522344379 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.559263027 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.09401333 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.537523871 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.836041453 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.54082748 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.564283447 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.535083379 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.554497277 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.096089197 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.542198575 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.522188684 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.267435506 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.535105528 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.299880543 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.521571322 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.521054127 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.191066137 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.52959578 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.525921136 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.521444375 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.516671028 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.842068546 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.517332089 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.543108711 seconds)
  done (took 540.664012775 seconds)
done (took 735.137012971 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.51555215 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.523512103 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.522498637 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.524648394 seconds)
  done (took 11.492857368 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.53237716 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.524565879 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.533614154 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.523426974 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.53557527 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.52473059 seconds)
  done (took 10.581794995 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.518439654 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.519395876 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.525631154 seconds)
  done (took 8.972478168 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.727464626 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.517805534 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.884773048 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.522956373 seconds)
  done (took 10.062111896 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.533959095 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.534707473 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.534414353 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.534897692 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.535013371 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.536357018 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.534862368 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.535177202 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.535465188 seconds)
  done (took 15.223025922 seconds)
done (took 57.738385962 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Bool, true)...
    done (took 2.251190457 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.615021571 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.621639916 seconds)
    (4/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.589146614 seconds)
    (5/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.903853235 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.591467394 seconds)
    (7/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.746976008 seconds)
    (8/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.421659523 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.563725188 seconds)
    (10/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.505571166 seconds)
    (11/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.506557878 seconds)
    (12/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.715010266 seconds)
    (13/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.443966251 seconds)
    (14/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.43104106 seconds)
    (15/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.518814894 seconds)
    (16/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.51067473 seconds)
    (17/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.345254726 seconds)
    (18/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.575980071 seconds)
    (19/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.350066794 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.60652786 seconds)
    (21/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.676225182 seconds)
    (22/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.506245478 seconds)
    (23/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.563722022 seconds)
    (24/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.506614781 seconds)
    (25/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.513788919 seconds)
    (26/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.56235396 seconds)
    (27/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.505242963 seconds)
    (28/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.507740323 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.633602213 seconds)
    (30/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.616712283 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.775775979 seconds)
    (32/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.503319255 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.60915065 seconds)
    (34/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.42867121 seconds)
    (35/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.588878078 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.628978191 seconds)
    (37/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.45057191 seconds)
    (38/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.734222316 seconds)
    (39/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.574767868 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.639204403 seconds)
    (41/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.506037861 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.622372304 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.670350401 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.633862948 seconds)
    (45/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.558750719 seconds)
    (46/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.52536847 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.627891297 seconds)
    (48/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.507517808 seconds)
    (49/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.516111242 seconds)
    (50/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.526054935 seconds)
    (51/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.509575634 seconds)
    (52/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.925457143 seconds)
    (53/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.514176829 seconds)
    (54/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.516108232 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.631670691 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.678885363 seconds)
    (57/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.56504364 seconds)
    (58/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.941865961 seconds)
    (59/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.707217318 seconds)
    (60/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.511073798 seconds)
    (61/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.028368457 seconds)
    (62/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.390580825 seconds)
    (63/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.512407043 seconds)
    (64/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.533644364 seconds)
    (65/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.808757225 seconds)
    (66/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.503911055 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.653669288 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.615886208 seconds)
    (69/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.51038034 seconds)
    (70/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.739580578 seconds)
    (71/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.620248254 seconds)
    (72/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.530438327 seconds)
    (73/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.518725075 seconds)
    (74/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.632476881 seconds)
    (75/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.793877404 seconds)
    (76/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.715026057 seconds)
    (77/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.5957669 seconds)
    (78/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.509170659 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.516277518 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.509399768 seconds)
    (81/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.516432798 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.62143588 seconds)
    (83/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.57221298 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.639904764 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.616626572 seconds)
    (86/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.636751987 seconds)
    (87/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.515891292 seconds)
    (88/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.517905548 seconds)
    (89/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.620096516 seconds)
    (90/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.899641831 seconds)
    (91/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.511486613 seconds)
    (92/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.682588063 seconds)
    (93/192) benchmarking ("map", identity, Int8, true)...
    done (took 2.260608595 seconds)
    (94/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.632321254 seconds)
    (95/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.518456425 seconds)
    (96/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.517736139 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.654355137 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.566836801 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.670636143 seconds)
    (100/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.752729718 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.687099443 seconds)
    (102/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.533177668 seconds)
    (103/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.525993651 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.614666557 seconds)
    (105/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.534943407 seconds)
    (106/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.521191244 seconds)
    (107/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.518556938 seconds)
    (108/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.56481162 seconds)
    (109/192) benchmarking ("map", abs, Bool, true)...
    done (took 2.261839479 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.653770072 seconds)
    (111/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.521170104 seconds)
    (112/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.711822411 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.680169196 seconds)
    (114/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.522302387 seconds)
    (115/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.32316504 seconds)
    (116/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.650712449 seconds)
    (117/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.513024887 seconds)
    (118/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.208052917 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.534710363 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.58446833 seconds)
    (121/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.762782272 seconds)
    (122/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.645000909 seconds)
    (123/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.561912451 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.513267429 seconds)
    (125/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.518478284 seconds)
    (126/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.697355086 seconds)
    (127/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.601990333 seconds)
    (128/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.56714612 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.549325153 seconds)
    (130/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.193938257 seconds)
    (131/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.723424256 seconds)
    (132/192) benchmarking ("map", abs, Int8, true)...
    done (took 2.260135976 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.668759 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.617905326 seconds)
    (135/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.568690229 seconds)
    (136/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.648806536 seconds)
    (137/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.803641784 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.596791617 seconds)
    (139/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.729921719 seconds)
    (140/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.526314735 seconds)
    (141/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.379652633 seconds)
    (142/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.449967108 seconds)
    (143/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.852709315 seconds)
    (144/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.364363937 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.689776135 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.775934141 seconds)
    (147/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.581976473 seconds)
    (148/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.519845744 seconds)
    (149/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.537682095 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.792780941 seconds)
    (151/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.576427829 seconds)
    (152/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.393478058 seconds)
    (153/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.872303013 seconds)
    (154/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.514566064 seconds)
    (155/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.527615137 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.625649155 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.593823274 seconds)
    (158/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.52325645 seconds)
    (159/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.656262506 seconds)
    (160/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.514810427 seconds)
    (161/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.611735198 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.568630529 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.643357581 seconds)
    (164/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.534143125 seconds)
    (165/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.688572009 seconds)
    (166/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.51552146 seconds)
    (167/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.573156443 seconds)
    (168/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.606934234 seconds)
    (169/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.618282932 seconds)
    (170/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.546112323 seconds)
    (171/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.526078907 seconds)
    (172/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.403552464 seconds)
    (173/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.572831553 seconds)
    (174/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.624678793 seconds)
    (175/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.508869086 seconds)
    (176/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.524004418 seconds)
    (177/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.560559025 seconds)
    (178/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.409409472 seconds)
    (179/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.524859614 seconds)
    (180/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.537212845 seconds)
    (181/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.581498513 seconds)
    (182/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.636342072 seconds)
    (183/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.517646411 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.747833201 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.532333586 seconds)
    (186/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.533035584 seconds)
    (187/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.636660548 seconds)
    (188/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.737904461 seconds)
    (189/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.326256031 seconds)
    (190/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.634282731 seconds)
    (191/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.366727419 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.667650388 seconds)
  done (took 392.30129503 seconds)
done (took 393.712300008 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.564510031 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.644393144 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.543138571 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.544400454 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.546215837 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.538344779 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.570654308 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.545988308 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.556723331 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.557052487 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.540171193 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.557503546 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.559630624 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.554097297 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.578393303 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.545358211 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.543966066 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.553738653 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.558705935 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.559838632 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.546181993 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.547198676 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.570778959 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.545703978 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.553021016 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.553187155 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.55051601 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.548697017 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.55086282 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.558459746 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.537902412 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.559215619 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.561374011 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.554627594 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.547838851 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.554998088 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.548417445 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.646720618 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.565090773 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.555148843 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.552793474 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.559089716 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.5500857 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.550347178 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.556659979 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.572034897 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.553659998 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.561029099 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.537673584 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.558631238 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.574938105 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.557512814 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.551844562 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.551078711 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.548457072 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.566129858 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.553673827 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.566489344 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.551072549 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.547642581 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.579904237 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.566272745 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.558442384 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.555705048 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.553911635 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.563482947 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.555897255 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.562183124 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.552459568 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.550728136 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.548908266 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.552792665 seconds)
done (took 121.563586795 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.667660238 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.542320481 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.703658551 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.554130807 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.711082345 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.666155179 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.553832039 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.555348948 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.554657353 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.347628499 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.554108494 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.554155418 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.543554655 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.555624646 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.665274262 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.553932393 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.555470648 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.246271488 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.554410997 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.683265045 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.545530199 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.55493355 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.554786225 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.346763919 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.543943741 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.539642856 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.681755013 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.555180854 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.247172687 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.539464709 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.540500398 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.246410515 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.68338313 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.574572662 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.566920733 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.564184828 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.712292644 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.561167905 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.672425637 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.671143241 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.704949403 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.594211094 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.541481977 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.545261551 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.558372329 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.558048646 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.556925333 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.584080694 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.544080334 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.556184258 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.248488201 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.566684754 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.566672134 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.556605791 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.556690536 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.57735475 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.558474043 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.559278023 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.685412444 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.558108464 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.67217815 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.350210302 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.350801308 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.558535766 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.544928772 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.558135287 seconds)
  done (took 122.865172805 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.617229225 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.625603021 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.660975697 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.558731011 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.599479062 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.662319823 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.555984294 seconds)
  done (took 12.710059224 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.556117992 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.557764678 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.597367502 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.598081657 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.558694111 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.722271561 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.558048833 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.56218148 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.55772053 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.602505305 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.560198607 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.559148868 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.567775596 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.548650934 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.597140304 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.562152675 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.665844007 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.55191034 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.558637856 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.706805216 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.558329847 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.568679331 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.60228523 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.563188392 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.560845686 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.558535734 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.308404526 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.559795915 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.560641975 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.560409082 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.55966067 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.618857336 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.560453307 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.551632202 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.559988377 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.66819379 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.56160018 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.561088476 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.561596124 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.554509267 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.560599556 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.56002031 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.562754267 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.56055354 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.561142488 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.576484722 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.562032998 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.561979924 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.561992402 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.561177674 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.602705359 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.562416616 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.56250794 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.562112476 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.607852085 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.570718731 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.563344103 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.563557143 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.563656432 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.562374068 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.709514663 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.600754658 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.56280821 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.601256582 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.56379314 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.562752022 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.56358758 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.562931563 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.64489448 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.561678266 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.60377175 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.562898137 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.738699347 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.579189585 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.563214507 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.557744002 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.557667685 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.563101996 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.551420634 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.56118288 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.56186395 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.55731032 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.561283344 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.5637584 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.563324759 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.714322923 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.663708668 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.564109642 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.572340685 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.563070686 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.564713337 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.607010956 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.564300725 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.564248353 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.606252384 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.672076693 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.608492546 seconds)
  done (took 159.535656886 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.567627825 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.56840583 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.559373893 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.584187436 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.558288332 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.55693874 seconds)
  done (took 10.830804205 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.557824422 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.567307563 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.564215951 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.566464993 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.56559052 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.566488632 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.567070384 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.557853748 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.56939939 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.565028859 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.566756114 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.566807297 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.567565766 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.566852446 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.567973446 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.56689241 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.567498976 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.566081796 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.564916281 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.56717578 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.555196803 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.568431748 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.569873529 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.559886941 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.570224739 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.568883807 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.583497443 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.568423045 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.566061837 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.564794861 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.569389556 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.568502084 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.560168371 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.563299231 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.57083947 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.560701709 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.571144021 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.568493571 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.568216281 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.569421836 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.5712945 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.569229896 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.569126253 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.569757316 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.56130743 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.563703664 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.572856706 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.585566573 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.570500368 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.570699147 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.570266506 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.568118798 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.569528169 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.571956641 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.564159267 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.563951907 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.576219292 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.569484922 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.570318565 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.562768922 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.57292943 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.570401174 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.562832167 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.574023475 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.571036176 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.573159375 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.56376287 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.575090757 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.572254261 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.572111249 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.572626115 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.571283682 seconds)
  done (took 115.342159364 seconds)
done (took 422.708718618 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.99234702 seconds)
  done (took 4.433176545 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.576315233 seconds)
  done (took 4.020546191 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.427372459 seconds)
  done (took 22.871556872 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.617494227 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.560748136 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.586369987 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.56702386 seconds)
  done (took 11.771216575 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.014983974 seconds)
  done (took 4.455631507 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.573769016 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.565341598 seconds)
  done (took 6.58249096 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.851862813 seconds)
  done (took 4.292738481 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.248895392 seconds)
  done (took 4.69068319 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.568439265 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.571274333 seconds)
  done (took 6.587788838 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.547278988 seconds)
  done (took 3.987243435 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.358266444 seconds)
  done (took 17.800346475 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.58055328 seconds)
  done (took 4.025467158 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.593712342 seconds)
  done (took 4.036331867 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.079072297 seconds)
  done (took 6.52123442 seconds)
done (took 107.51758042 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.556520205 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.559427581 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.558752679 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.559091353 seconds)
  done (took 11.674402597 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.635704867 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.636219492 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.645681844 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.631132766 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.629330239 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.639516884 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.598577259 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.59885896 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.629271175 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.623980772 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.642603929 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.630781193 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.640493256 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.59992735 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.624968985 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.641041397 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.628765945 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.647200106 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.599889147 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.634145701 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.575315593 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.633023506 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.627646228 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.574663245 seconds)
  done (took 40.411939087 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.05946704 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.636083679 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.719641592 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.616270739 seconds)
  done (took 8.475298579 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.679366757 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.679126725 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.697236549 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.732283353 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.781648973 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.693197584 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.600947586 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.597314085 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.582529556 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.680238911 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.753892237 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.679071742 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.895764884 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.576858897 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.893399108 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.574320164 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.575882839 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.679853059 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.729048711 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.759482604 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.576497991 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.680439984 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.687119316 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.680231124 seconds)
  done (took 41.911063907 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.584273689 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.592540884 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.578663784 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.593196957 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.57818757 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.578706064 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.579232569 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.58481485 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.578272277 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.578490937 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.578269941 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.590540862 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.577434197 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.578142972 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.58520463 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.579543396 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.580257386 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.585157471 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.587404685 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.579210228 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.577365867 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.585804471 seconds)
  done (took 36.25708918 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.563546482 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.562564249 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.913110394 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.817365194 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.561515103 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.570892912 seconds)
  done (took 15.43585444 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.638188074 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.779313016 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.578975218 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.924977521 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.013697282 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.571758879 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.571152277 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.808943504 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.115244427 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.119218713 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.621676845 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.641729693 seconds)
  done (took 22.831581495 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655172067 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.576104086 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.582799686 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.58677274 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.583465677 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.576665665 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.589073148 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.042819027 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.581956202 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850747177 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.587138042 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662533086 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.823293915 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.590040663 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.584521117 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.562788992 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.81164264 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103288631 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.586186457 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588618349 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.615999505 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.577052063 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.583791173 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.808621989 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.577089521 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.575947801 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.844166264 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.575852484 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862304817 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.843267074 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84341751 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.584811171 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852152738 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995743179 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69308505 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781372235 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595084818 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.586467537 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.576823612 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.593306782 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.587619003 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.601015836 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835337025 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.585546844 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.577797715 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.584539612 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049775912 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.58655499 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.578337747 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.578967036 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83586894 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664844269 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.583412096 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.577647038 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.603001083 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.584649055 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.584482936 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.692396994 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229106344 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.578369602 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595697547 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.587747805 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.590805298 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.58902205 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234362193 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.595530598 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.583512366 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582478044 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.579073264 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.578467452 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609713525 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.578404302 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.598909496 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.579613506 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332704543 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.586761924 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.58663293 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149481639 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.598382409 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.586696457 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804935428 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.579390913 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.579281722 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.578817102 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.578913094 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.348835396 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.596187974 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.558697936 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618164754 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.046270888 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.795987433 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.605668113 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.609161434 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.802275188 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.556177597 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.582598882 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.596375345 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.59171986 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602202828 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.054105536 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588548256 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.587127873 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.829553384 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.792745854 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.580877807 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.584088474 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058130082 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.597219275 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.611083323 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.585028155 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.796308777 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.207342696 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859686361 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.583279055 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62645152 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.581590498 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.420049832 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.605693147 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.598204336 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.582153202 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.864477705 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.457173882 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.593174701 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656886363 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.593174186 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.581495678 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.594141409 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.584564744 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.584741132 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.773494471 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.591587974 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.853750154 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.585687497 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.583679957 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.584867955 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.593606189 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.594743183 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.8054656 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.598779324 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.867675163 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.584514349 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.584531846 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.584054051 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.803523288 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.58419389 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.601529861 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923232521 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.588725616 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.594529925 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853213559 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.628551837 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.696231897 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.617976615 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.584931366 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.840965252 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.591088546 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.591170714 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.599193734 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.587542487 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.587790551 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.592548068 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.601838188 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216862279 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.564485476 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.595070606 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.585909596 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.600817826 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659548042 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592959946 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.79455105 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.587784411 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.594484742 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.604374387 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.597298638 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808799786 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847615519 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.608504246 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.770455245 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.053029089 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204981076 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61280369 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.5869982 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.586801312 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.586246976 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.588480729 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.586768896 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.589906975 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793808374 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863058179 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.588380775 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.220711194 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.601404923 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.588418581 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.595704986 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850086404 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.597621575 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.587216413 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.586930789 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.589801543 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.601777928 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.858788453 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809538491 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.604625386 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.618861772 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.107351555 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594935722 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.590352625 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.588227989 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616912705 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.588383102 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137058883 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929227771 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.585921764 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859141586 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.605732492 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.617221087 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.587798794 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60393409 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.597630876 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.60881534 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.597494412 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.797818827 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.598942849 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600037325 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23311728 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362043582 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165957703 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.609315602 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.609463919 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.598670533 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.060861227 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590608684 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.590518054 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.839070561 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059349629 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592754439 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057096588 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.590221333 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.375444425 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861692351 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819076771 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.591185852 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.599487084 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855505849 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.804351554 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.617733264 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.604296608 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.59845343 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.565703235 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129880189 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.603983726 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.769308441 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059587138 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601826448 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.594028085 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.669592985 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.60157285 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999702992 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.601196462 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.59404803 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.595035984 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.612239454 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135877326 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.602644972 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.593319636 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242984951 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.595204376 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.074440453 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.593537639 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.803809508 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.858554565 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.841448175 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.595214401 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.613704677 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.850606376 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85725563 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594546909 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.594739778 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176365448 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.452670166 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.600965586 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.59583399 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.435677292 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608589989 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895548337 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.606324256 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.604814115 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.611957195 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.595317676 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595546864 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.594680016 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.604645383 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570647141 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105672694 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.60441809 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.608024615 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.616990674 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605286044 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.844270719 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.610307113 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.21738489 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836355086 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.596109403 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641924867 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.601328967 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607289158 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.57292021 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.596419089 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.595203385 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609888151 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.828105815 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.595758313 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.581550247 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.663546648 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.817276895 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.596046781 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.607498395 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.815741476 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.606263718 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.602737569 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379485574 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.640045111 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.608905612 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.601030752 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.585748038 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637817097 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674335975 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808430582 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.867189767 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.862809439 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999595527 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617981851 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.600706588 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.61526022 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.678753871 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608366569 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.613780954 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.597457512 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220066214 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382840117 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.233285076 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.865358191 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.600572923 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.601016901 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597822412 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840746614 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.59852062 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.875632007 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600554337 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.600916901 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.622483225 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613327209 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61054955 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821108999 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.875301245 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.60000316 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.601726234 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.610129548 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.602396528 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872151555 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.813561151 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130465316 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172482766 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602937215 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.601035024 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.086439177 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.877713823 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601674634 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.601697437 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600223403 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.605314981 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.616648896 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.609381858 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616344616 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82615147 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864782811 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033512187 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.875858435 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.633987603 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.486843471 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612498066 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.849449985 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437464144 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.812536646 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232276743 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.335198687 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868636096 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.677125713 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813621273 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.604388646 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840299889 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.609286161 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.603603189 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.604771084 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.603264198 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.60335528 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.865312453 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243027892 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871336446 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.60907983 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.610422853 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.634374811 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.813983813 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.835062614 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.385781195 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.835448369 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874167506 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.619633594 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.60500948 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238355245 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885781756 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.610350019 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.611364014 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825378439 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.616336418 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640475091 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.482524918 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.605379989 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180947542 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.819102685 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.625795214 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614022032 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344304575 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248768851 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.624296368 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120590719 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.608909858 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.616270511 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892272736 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.612447267 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.614873485 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.902538367 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.611886062 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.614929224 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827615923 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.237428418 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.397994982 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.621345143 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608741031 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.607779134 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.606742503 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679524275 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.618498002 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.618397364 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.998954681 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.617725197 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607326629 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619522926 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.606717335 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616216801 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.619826996 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607131494 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.615993934 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.588671797 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.610542656 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.624539053 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.729782015 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164482975 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.610079183 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.223917734 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.942889506 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.855836271 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.621752445 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.595317684 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.61391233 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.60758291 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.606950838 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.608346272 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.598934296 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189967923 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.610092342 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.885798658 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616028109 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.820654315 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819674517 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.622151483 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821886055 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.619880447 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639938585 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.583923986 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.610109104 seconds)
  done (took 1085.329448802 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.640045829 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.607215419 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.627809019 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.657167895 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.601527784 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.703810722 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.682172747 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.639486572 seconds)
  done (took 22.637364484 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.602818184 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.609327486 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.604688634 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.618780197 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.601249872 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.091797518 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.623785207 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.609385179 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.626748894 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.616359236 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.609025724 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.228861284 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.621919197 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.603284213 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.619758016 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.612772037 seconds)
  done (took 36.380112954 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.628293553 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.887912444 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.456151822 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.603797256 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.626534541 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.61000662 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.912616747 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.609711699 seconds)
  done (took 28.815187269 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.615228142 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.61567136 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.615673615 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.616017782 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.616190721 seconds)
  done (took 9.557818513 seconds)
done (took 1361.15897315 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.616725244 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.615166524 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.615996338 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.615308992 seconds)
  done (took 7.943487546 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.58713196 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.585320613 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.588063763 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.607089444 seconds)
  done (took 10.846070709 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.967854652 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.142788603 seconds)
  done (took 5.591020289 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.610858876 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.376003871 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.36262351 seconds)
  done (took 8.830298623 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.897329264 seconds)
  done (took 3.378928347 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.033051842 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.127112749 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.602717435 seconds)
  done (took 8.244198412 seconds)
done (took 46.314467208 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.610865821 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.365003136 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.757265188 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.610229411 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.766648981 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.757067351 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.85211224 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.600632291 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.605744347 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.610819526 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.608631019 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.761493803 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.838346199 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.363562675 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.83837997 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.362589373 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.761827573 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.607217425 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.613033264 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.604195511 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.852950902 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.611834087 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.602852376 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.604195633 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.769694869 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.744906436 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.603445953 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.36557693 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.61122187 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.616172245 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.755655824 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.603429627 seconds)
  done (took 90.119632647 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.602128368 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.614665116 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.618863213 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.602542638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.602912718 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.632708616 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.602577694 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.603033849 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.602689021 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.602388416 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.603448182 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.612173385 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.603534799 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.603454642 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.603958288 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.604097694 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.604672416 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.613306024 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.610366604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.607998851 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.606045211 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.604098729 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.60474345 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.626460574 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.623621242 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.605434127 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.620653553 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.604714425 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.603620105 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.604699223 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.604231117 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.60619725 seconds)
  done (took 84.949761994 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.603773098 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.604808188 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.606189271 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.618214415 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.605294867 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.605672089 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.606414451 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.605864018 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.620140364 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.610396926 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.604228052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.605541083 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.606550953 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.607235866 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.609774734 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.605684279 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.606494748 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.608969484 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.607236583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.605654206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.609123031 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.609861589 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.612281002 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.612854747 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.60752107 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.640173369 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.611106363 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.615412564 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.605938541 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.632335154 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.60772081 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.632536357 seconds)
  done (took 85.036262739 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.845884446 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.621586038 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.624953241 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.616738614 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.625939288 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.623211434 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.617373704 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.853211514 seconds)
  done (took 16.915427087 seconds)
done (took 278.503926142 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.616335812 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.632132523 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.654469177 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.618333703 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.643590625 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.645993745 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.82401133 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.64551047 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.812638563 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.630988605 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.6337123 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.620025064 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.422943237 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.754486899 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.613248562 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.627722451 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.506107236 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.631024576 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.645756777 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.850355506 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.648116176 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.612944469 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.629767838 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.517942414 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.606799437 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.691610196 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.683378239 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.772817587 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.737509222 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.68051517 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.612592018 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.630161574 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.630901091 seconds)
  done (took 73.97094876 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.618049993 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.626417056 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.627137332 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.627849353 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.627475856 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.62927158 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.618892168 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.62699053 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.628159572 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.627932661 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.628270756 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.628719499 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.629177092 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.630143224 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.628553772 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.608817291 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.620181688 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.628546156 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.619507733 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.606712198 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.630416787 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.628426503 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.629297312 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.630298461 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.628400752 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.628785342 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.628495093 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.627844322 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.62937879 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.629169588 seconds)
  done (took 50.266965241 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.629271043 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.62249938 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.633519826 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.635446078 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.622381318 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.625915051 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.91000453 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.630251768 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.625203552 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.624417728 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.58649992 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.640980374 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.669635821 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.628496558 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.633242066 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.630840755 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.631302037 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.623196698 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.615912146 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.647102283 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.919257803 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.639435381 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.912762948 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.648129736 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.627256513 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.625279161 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.628516074 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.62723873 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.637089624 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.602295238 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.431905021 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.915490459 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.63952038 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.630703183 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.425496974 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.644242965 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.633149618 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.615770771 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.637104638 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.624021572 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.91026549 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.63614727 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.629641235 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.623143936 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.632158831 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.631249386 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.615114 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.621265941 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.871895591 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.636324537 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.625780221 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.631104956 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.631743596 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.623616815 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.867316137 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.632948434 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.624583147 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.615017736 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.636357953 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.908845166 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.639581253 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.624453126 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.615968799 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.634115953 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.61552693 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.631527971 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.638125265 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.625723802 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.61645763 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.653946605 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.618419151 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.631855342 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.631252393 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.605025042 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.623370246 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.629455191 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.635718136 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.616587858 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.624821331 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.918720058 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.636992027 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.617902186 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.92882289 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.638794633 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.635369575 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.63535375 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.632410426 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.696663501 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.906538249 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.533720371 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.641937151 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.625906648 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.922504802 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.642762475 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.62678165 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.618113343 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.642468986 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.633734639 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.631775097 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.628043812 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.637291553 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.639387779 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.620048075 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.63715574 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.914524799 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.631797823 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.63159292 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.635235487 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.698413908 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.63426751 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.638900727 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.630713627 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.92149877 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.633055036 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.636907306 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.610335533 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.63108408 seconds)
  done (took 233.721229479 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.621991873 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.620706764 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.61962208 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.621021641 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.620084071 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.628848379 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.621729945 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.624200125 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.62599534 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.621328274 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.625196453 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.629772908 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.625832953 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.617158749 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.628296551 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.62534612 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.611162614 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.630244866 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.621979161 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.615991192 seconds)
  done (took 49.953143622 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.623816222 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.180129458 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.152162635 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.631423509 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.622067775 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.61339845 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.668543773 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.623961871 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.622283414 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.913148361 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.792679263 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.633226985 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.621714099 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.621505287 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.142076368 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.611571348 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.915206932 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.187008686 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.632504016 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.176807919 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.612982721 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.622067539 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.612837701 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.178377316 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.93385881 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.909205476 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.682787994 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.189783204 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.632452078 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.622670909 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.179570921 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.633439227 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.615198492 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.171886072 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.634843639 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.638253842 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.623531276 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.674432893 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.680738362 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.926201897 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.193767801 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.917840988 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.643596125 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.793904704 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.632518431 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.602354234 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.190111796 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.634831868 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.602557125 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.628165956 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.629546381 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.15620717 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.625974126 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.156302744 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.636390564 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.626340315 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.184577531 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.165356546 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.157042989 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.797686608 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.625909463 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.903390162 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.636697964 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.194665457 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.634361856 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.62605351 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.626405893 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.788176515 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.197148951 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.915618227 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.929349964 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.929132355 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.635487846 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.68471296 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.627599531 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.921027407 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.693644151 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.041460472 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.924927723 seconds)
  done (took 144.761189649 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.889496454 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.719796197 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.012451412 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.200372754 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.133673117 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.765984017 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.735073795 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.867430462 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.629664527 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.752480507 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.282386432 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.716518381 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.375205933 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.692768587 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.734465681 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.755337325 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.030932536 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.597569894 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.275932948 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.24764538 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.636737157 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.730574037 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.394151981 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.005089989 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.638029217 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.380100663 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.533863675 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.152556594 seconds)
  done (took 60.374587273 seconds)
done (took 614.534684721 seconds)
SAVING RESULT...
DONE!
