cset: moving following pidspec: 14832
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.435645472 seconds)
loading group "string"... done (took 0.608921134 seconds)
loading group "linalg"... done (took 7.585338446 seconds)
loading group "parallel"... done (took 0.170411127 seconds)
loading group "find"... done (took 1.19311072 seconds)
loading group "tuple"... done (took 1.972928982 seconds)
loading group "dates"... done (took 1.341485241 seconds)
loading group "micro"... done (took 0.233790374 seconds)
loading group "io"... done (took 1.000703663 seconds)
loading group "scalar"... done (took 40.17598869 seconds)
loading group "sparse"... done (took 12.313687309 seconds)
loading group "broadcast"... done (took 0.986055848 seconds)
loading group "union"... done (took 12.601447886 seconds)
loading group "simd"... done (took 4.657751156 seconds)
loading group "random"... done (took 9.344083296 seconds)
loading group "problem"... done (took 1.853716665 seconds)
loading group "array"... done (took 21.508703124 seconds)
loading group "misc"... done (took 1.702563696 seconds)
loading group "sort"... done (took 3.436175761 seconds)
loading group "collection"... done (took 17.916253326 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.528173304 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129455491 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.123413867 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124438432 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152287474 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118615274 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.1315002 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09136644 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.823898991 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153611762 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.121691991 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.44108109 seconds)
done (took 5.244392038 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.180623915 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086938989 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087229522 seconds)
  done (took 1.298377827 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068328372 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127769905 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069936527 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070987652 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071767136 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069859431 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069915409 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069560857 seconds)
  done (took 1.675228545 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077344239 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.074181965 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069280493 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071383887 seconds)
  done (took 1.416961569 seconds)
done (took 5.773192973 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.802397558 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.217553909 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19197733 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.422732067 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138769179 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.164905064 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643353897 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.335031881 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197441249 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083319306 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11305718 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.341186158 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113813748 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.648479974 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078404338 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094059574 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141796943 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.441238395 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070845332 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086098516 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093011542 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132239981 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089673757 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078618845 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152060193 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071693679 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.141893632 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083896657 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070232541 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.21911425 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176014489 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661828468 seconds)
  done (took 10.461944797 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100158992 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100322969 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072607519 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126090661 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099869235 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073094127 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074652716 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070463981 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091238642 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.13095736 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091830052 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105194612 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068882124 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072289434 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089444013 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207994224 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083891764 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085472273 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074242659 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079057036 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108126637 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081584092 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080768187 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080401896 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132256745 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183068139 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098889915 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100716147 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070826917 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082598155 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118743422 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128150277 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069232342 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069969363 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127286126 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098289865 seconds)
  done (took 4.686389359 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.030557873 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150043709 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094500398 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139911576 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068198922 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11355596 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.088973377 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068929666 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08440044 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.214878408 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.395668288 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.621512949 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114629841 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107959915 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071324677 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071996722 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072581897 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.547843851 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100159773 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113417687 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086602021 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073718447 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072838628 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.374680865 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07370355 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067855539 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072893317 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061027887 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129925295 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072018122 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.970061251 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.133127029 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070435636 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104638387 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.171110008 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092070272 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.227845992 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072517046 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148706957 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06852729 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.158369222 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074544373 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070001918 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088451434 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107496639 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118048812 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069935177 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072591907 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168767861 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068873032 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084093152 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.678172192 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155065723 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079974555 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068382896 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.261285919 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093468014 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072598841 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068794316 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.190832711 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137644301 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071673444 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070356353 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072649405 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073684659 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.3638226 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069753683 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.904954447 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074283484 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080387708 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06787725 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073067603 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073387202 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077795572 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07628884 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092172017 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069622145 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078757474 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069408368 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069601166 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070738368 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086941718 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067920052 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.398974066 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070262376 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071659054 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.069413807 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093963018 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100201402 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070739025 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069113854 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103100715 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072190914 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069782496 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.112405652 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07036661 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.187798674 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07342848 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116197891 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.07068662 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.102315164 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069489516 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10038785 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073726752 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102603019 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08461369 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071754397 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.443405704 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069679354 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069119119 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072256501 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069685725 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072364505 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070289887 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082685078 seconds)
  done (took 21.701824358 seconds)
done (took 39.004683607 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.261314118 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076919672 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080983516 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077265856 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079093517 seconds)
  done (took 1.792658048 seconds)
done (took 2.988148548 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126998903 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105813519 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068514902 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101371593 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067914101 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106235567 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105489639 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080928251 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104737343 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068050105 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1021086 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06856337 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068170937 seconds)
  done (took 2.392197487 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08734798 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088762463 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073518151 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087489009 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068022319 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08728533 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085857956 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093429242 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087921587 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076746892 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067544542 seconds)
  done (took 2.093709542 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08699698 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089064949 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073853152 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087032828 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068243022 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086270948 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085857249 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091074142 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086131594 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078352212 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067207707 seconds)
  done (took 2.085052477 seconds)
done (took 7.754350469 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081033228 seconds)
  done (took 1.261967131 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.603332174 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.129961527 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08563072 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115645569 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197514485 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123060568 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276153055 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090692666 seconds)
  done (took 8.989442725 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.106518955 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072346245 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076016236 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072178131 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072256091 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07727095 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072463033 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071562036 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073659592 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074101374 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074755245 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076315344 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07379443 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074902717 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074005739 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076017993 seconds)
  done (took 2.469633838 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096814426 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096791251 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076956862 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078295692 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075735896 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076110807 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078098566 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077237524 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074219985 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076364657 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078008432 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077261086 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075058683 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068336423 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077217667 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07871892 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074262484 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077569361 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077698697 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078910373 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078541412 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06785665 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074931573 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077370392 seconds)
  done (took 3.156824646 seconds)
done (took 17.066100818 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.10910446 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072407478 seconds)
  done (took 1.366788683 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085660657 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086528205 seconds)
  done (took 1.368146871 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085795909 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068897512 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094469329 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081444284 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06937573 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068948745 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091742244 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069359657 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068833911 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06910879 seconds)
  done (took 1.963948002 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071519936 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080317166 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073638629 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084892243 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076829551 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067935328 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075902853 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071829232 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081519631 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066298338 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075248815 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086913158 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074747278 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088340105 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074926479 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072166703 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074233209 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070547425 seconds)
  done (took 2.565992881 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068729592 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070937744 seconds)
  done (took 1.341296155 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070175651 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067176421 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070265137 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070696079 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066652215 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065879118 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066839975 seconds)
  done (took 1.676500389 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392171009 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118757498 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.325635361 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07506 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086428657 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.270171875 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069429311 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07463973 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074791414 seconds)
  done (took 2.730207067 seconds)
done (took 14.212948957 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084657387 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.090425046 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101358677 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.389600274 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095757018 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069970584 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117735176 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192656872 seconds)
done (took 2.35138544 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218473078 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.723560092 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.447396497 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218492419 seconds)
  done (took 2.595190381 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358763084 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093852777 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062649156 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070731995 seconds)
  done (took 1.799506738 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069956685 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072913391 seconds)
  done (took 1.353741588 seconds)
done (took 7.174253753 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071044179 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070391279 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.068098995 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071114417 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.067451304 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067436077 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09099503 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069482605 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069975937 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070131681 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069579023 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.069842969 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07026908 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067505146 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066966835 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066807152 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06721204 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069233729 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06721345 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067605571 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067011617 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069114267 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067208843 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067088969 seconds)
  done (took 2.915361448 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087688507 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070021342 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07508913 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075785897 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.0728042 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074652178 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075335122 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069486535 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07464385 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071714768 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072688799 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072820656 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071684986 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072807112 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072282915 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073140173 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074381645 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069351148 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071311943 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072606519 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074636781 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07135687 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072272612 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07471293 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072438 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072931765 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071621878 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069464815 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074822368 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072257168 seconds)
  done (took 3.414309143 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074026684 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066362274 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068288966 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074245238 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06721313 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068652115 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066703366 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06766652 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067523101 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066500192 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06846536 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066653822 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067019372 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068180231 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068118615 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070916727 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082840949 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066971078 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06670431 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067157682 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070148602 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066929456 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06677513 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067036948 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066755303 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066553615 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.176032494 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066516868 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067313916 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06676322 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070012043 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070836601 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066875491 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074476255 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070509019 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06635517 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070979233 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066566363 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067543 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06698141 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0668092 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067420796 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066941549 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074362486 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067149235 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068100463 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068592592 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068140108 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067388729 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069487019 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066891551 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067007744 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068684878 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06798646 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072204503 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066583314 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067954115 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066644323 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067815955 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066753076 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066587696 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067327632 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069518885 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068176903 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.0826341 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074481719 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066888296 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068708891 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067542354 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069917815 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068424611 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081144208 seconds)
  done (took 6.285415759 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094769883 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090691596 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069057997 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068570405 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065486097 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067512829 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073077721 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067719709 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068832575 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085610522 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068044018 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068487871 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069668582 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071225246 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067762352 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068524486 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076087084 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065262127 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067601817 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071081733 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067671362 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07369879 seconds)
  done (took 2.814843463 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.160743456 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073843936 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109837877 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078756446 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073462224 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078398787 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072914512 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073917214 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073009063 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071147729 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070606465 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073479207 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073055258 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070965759 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071163153 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070779145 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073119771 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070659811 seconds)
  done (took 2.661919184 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080774458 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.07016737 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091387059 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069720172 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069286663 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072134784 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073459284 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077309123 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071541708 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069381825 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077261559 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071816787 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072503097 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069669076 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07184213 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069015086 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071904254 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069500572 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077976898 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073576065 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073879732 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077174925 seconds)
  done (took 2.844872604 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083040308 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071652414 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084244917 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071585174 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06569855 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06754727 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073419457 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069098595 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073214423 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071482926 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069147585 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067686404 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071852918 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069971533 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071924551 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068951759 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072180946 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069013897 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071352165 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064846572 seconds)
  done (took 2.653379329 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091491104 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072051921 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072169714 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078791413 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071355622 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070985567 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078259872 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070835955 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071788413 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091887964 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070981533 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072354792 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078354618 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075985235 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070820815 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078818524 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07845154 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078295448 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072467363 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071152733 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092480743 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071296877 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078524929 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071497585 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071256987 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071047811 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07099349 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076246475 seconds)
  done (took 3.347185074 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069628942 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069128249 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066649998 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067023439 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066796464 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066925018 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066999846 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066972281 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069695749 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066712749 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069385678 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069979786 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069668064 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069175645 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069379632 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069590021 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069251671 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067156068 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066932889 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066880235 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069630869 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069607271 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06950339 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067116045 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067093643 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069271817 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066848173 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0672057 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069335248 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067075425 seconds)
  done (took 3.274048879 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.081613372 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076362942 seconds)
  done (took 1.386977836 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066241624 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083539419 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066317812 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07441746 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073331806 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070253562 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077271379 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072986616 seconds)
  done (took 1.808963589 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085981218 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081650055 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071159951 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083397002 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.08112788 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087234305 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141022646 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070657961 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076525654 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067670733 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085866208 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06867942 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077803432 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070078756 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076295952 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076290579 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067343662 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075539526 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071837936 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068075632 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070852864 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07904965 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072388474 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065027381 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071514248 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093271552 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080981758 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069219135 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073280639 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077490675 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07611382 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06405384 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.07017004 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070475917 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067810603 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080353732 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08454079 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072860986 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079142938 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070680288 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079628556 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064678556 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074464961 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077715864 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080845715 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070453711 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070259952 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064752414 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067736413 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07278878 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066291674 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070177424 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064747612 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077522751 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073993668 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081158329 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069001376 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072290661 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073275337 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073283002 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077070965 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072095769 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073195743 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069913193 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080301983 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074972141 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079233976 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064827091 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064276843 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067922929 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079992274 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094560577 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076847224 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070676125 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071078442 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067970611 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073918894 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071266561 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075398326 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077152758 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070756373 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075480994 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077534315 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070430838 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072386332 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077578841 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068488791 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073005855 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067943207 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086970599 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069200327 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067988575 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067934678 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08037796 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073217901 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070192077 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06807434 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077198616 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063528831 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069515851 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069892999 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071451498 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079617858 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073883051 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073527191 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077740949 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077292212 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06962167 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071791368 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066003644 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070070602 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068176255 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076309472 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063436111 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072324028 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.194132027 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072359826 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079873673 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069531947 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070927818 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078637591 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076333639 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069527175 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067537523 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073651485 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.0704317 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073214428 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079089814 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069252815 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065691616 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064757269 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074203576 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070108469 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074148693 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075617834 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074509652 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065193846 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06845572 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074970659 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079584074 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071633061 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071384223 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076123608 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072351134 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069964094 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077829927 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07311797 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070153811 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.077406192 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071010247 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065129341 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072346826 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073865948 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069881603 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07339636 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073768795 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072395037 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071508527 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06856672 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07771265 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070328064 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069915504 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070653204 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069224176 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081595619 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072643482 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064728285 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067225095 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07843217 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068379161 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069311697 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068896951 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072226143 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070330933 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068240112 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069699598 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07250917 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080207171 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074736843 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07201648 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075664529 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082369446 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070306202 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073185841 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.07028197 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070620269 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070573376 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079326583 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075981503 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07527537 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072886876 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066570007 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07566056 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078526957 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069210966 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067829348 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069195442 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073830712 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076243566 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073947295 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070532166 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068264829 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071263167 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073849213 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073419874 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070551368 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069406909 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075920129 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.0679199 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076917915 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071030042 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080405936 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073142696 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065562033 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072859443 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067983218 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076408342 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06505592 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067262938 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069017711 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069882376 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068353253 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07172157 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06341502 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076514994 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077298049 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069518762 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068567919 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068738678 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076076418 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070969118 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072679283 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072980464 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075484044 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.209137305 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070039557 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074509521 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082986 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071465099 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065084716 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076890384 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069976811 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069239003 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070832166 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06937842 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075052161 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078816864 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077216537 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064640107 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073572738 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068761 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070170461 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065909734 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075064474 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073918401 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071963066 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077066895 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071192454 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070732116 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074213217 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070153999 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071869977 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071746264 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07375661 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071301184 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072884797 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070528105 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073100996 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070254119 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068003367 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072405339 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070967242 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.07151128 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075396848 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070394125 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071139967 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073099166 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071219741 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071688777 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071116692 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069859907 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072506228 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071818973 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071252234 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072584868 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065153575 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078619162 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070865581 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077856559 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070313864 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066608469 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077524369 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072664946 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075794269 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070865342 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070714381 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072023339 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069576878 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073739933 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076932067 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067923765 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080236865 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077298821 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071196567 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073316263 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071264439 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071613992 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069880647 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070638068 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070684597 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070673458 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069998277 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074873948 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073000035 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070261482 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071898985 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070745248 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070590433 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.072215474 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064654007 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069662079 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069672193 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072201149 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080086856 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.07103458 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069864983 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069895956 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07153668 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.070215392 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067163974 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077887178 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078367674 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071427366 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077380569 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069266241 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071383089 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081736714 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06364501 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068026361 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067749218 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06768242 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077237896 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070281949 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078624864 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069554216 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068527225 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066323599 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069965444 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067319908 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063769658 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066807417 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072664725 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069026238 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069246804 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068891596 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071727193 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.200817495 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081087832 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070554267 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072530678 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071360884 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067232485 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069592038 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069832074 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074990439 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.072012211 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067942141 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068832724 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070411131 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071560793 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071972308 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070407571 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072524812 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077472148 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070955397 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073845167 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07343606 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065381947 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073617943 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.071386705 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069973523 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069289471 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074694029 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074393577 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071822527 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079700068 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070870686 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071183981 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07125271 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067977616 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070239273 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069876766 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069711649 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069166722 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072026293 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078195453 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067574966 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073371526 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070868914 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070843928 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077071138 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071129409 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073358805 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076824 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070344634 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072956613 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078276316 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07382262 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074054842 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071028778 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072174392 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076949462 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069705886 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076810364 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070761591 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070763697 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072212717 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068248486 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070511842 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070045784 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069703407 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076666733 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071010566 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06946165 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069158965 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067468273 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070529488 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073034623 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077846871 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072522847 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073925721 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064987185 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066593614 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070424173 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067817668 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072029032 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072916425 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075846323 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072857315 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070581245 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068857072 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079478091 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076054969 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073743696 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068048955 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073655031 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071052239 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073411291 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071036916 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070668782 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071569469 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074174794 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071553333 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069587654 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07701301 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074062556 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07058048 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071771233 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071157057 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070375715 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064936513 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070644616 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072357124 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075747163 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072272219 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07022957 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081258594 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067353993 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069671461 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072563556 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068172586 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073592516 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064522529 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071252035 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069946729 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069997473 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06405799 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068776959 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.19767274 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.0740934 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070285788 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06610936 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082101287 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080795128 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073505436 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06966805 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068799332 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06579646 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065576527 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069734463 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071437885 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072371952 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080718067 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06938164 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06880806 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065721517 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070107625 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073206039 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073480814 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067308304 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06539324 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070029215 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073113651 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076142001 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069016711 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070525376 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073661292 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073331166 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068256475 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074060875 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066450012 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074571989 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083590735 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070391341 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071253788 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076966193 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078032802 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071246601 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065867192 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071109151 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072962309 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070872861 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070587875 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071419033 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085921331 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074651195 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069392305 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068832175 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072556504 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06965267 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078742731 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071181257 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071212449 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074148536 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072196103 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078724882 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073494836 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077176137 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072890894 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073779424 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069744212 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070395574 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069074227 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069051358 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070933769 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071379599 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07393266 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077390913 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069889458 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080544399 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079150316 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071678114 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066604858 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06938324 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069373731 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065113181 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071179388 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068364358 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068453254 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068153286 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.071566961 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072017619 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075536593 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071526738 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070849186 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070524486 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064025734 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072489207 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072512115 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071088372 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066954895 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070197547 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.071076955 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074436889 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073509017 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067751689 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072052028 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.07231913 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071135694 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065435283 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076298355 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068841316 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071654667 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.0688566 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069968398 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070175904 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073641482 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074381975 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070532806 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072227007 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073867555 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071247475 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066327785 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066616107 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074311123 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066920675 seconds)
  done (took 44.839260786 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107474692 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067503903 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06608278 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066704833 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076916272 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067371131 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066804077 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067002248 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06650988 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06866528 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065638833 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065583674 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074182556 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081053872 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077077316 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070016401 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065478193 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066600318 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065502899 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06666515 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074071688 seconds)
  done (took 2.835651833 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077193962 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080937071 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079083461 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086608117 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074641903 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07422275 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079045065 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074811826 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082558804 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076316213 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082430629 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07422978 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075833272 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076016224 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076477767 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074378002 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084201186 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07481274 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073972116 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078779077 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073934486 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079138541 seconds)
  done (took 3.011220399 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071388419 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069958985 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07226372 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06445305 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069669883 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.0653285 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073371882 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067840684 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072876161 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069536215 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068999953 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068661582 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072089349 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064830161 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070091977 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06756993 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111647386 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073287285 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.07039936 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070625075 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066026246 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072807756 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064880641 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065434342 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069770328 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073121194 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070799206 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068453487 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069541135 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069061956 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070631634 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067680545 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071529278 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070521356 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069837923 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06909161 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069921411 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.07016486 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065064302 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068149554 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070496135 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065769213 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071184002 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071288065 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068793902 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06785136 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071665854 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070650825 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064769804 seconds)
  done (took 4.74295408 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08347988 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114455643 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071079261 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093674977 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083314517 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07694812 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073826762 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095042916 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067263728 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068132914 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084792439 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082469511 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069211846 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073703181 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07403629 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069101812 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070337928 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068033901 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072459294 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068750923 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072798862 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076253129 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084131121 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081888203 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073055481 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068670605 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068609476 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073774465 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081418629 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073187367 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074001544 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07463229 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084657117 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074699636 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068559046 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071591732 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085073128 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069737691 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071603203 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067420969 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071708005 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073517293 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076843141 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08520242 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069879041 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074193022 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070164506 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066544416 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081260069 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072465875 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076814531 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082950613 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072974867 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069650011 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073575635 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083921559 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070125063 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067782527 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073254469 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081002211 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067082842 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073608196 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082348728 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071163326 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076149747 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08283354 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074377342 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073053398 seconds)
  done (took 6.598308155 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079742705 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100550023 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087438023 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087284519 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079958231 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079447588 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079174512 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.080066348 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079352638 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083687829 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079275753 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121623422 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.075865139 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08176026 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079552329 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07968838 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080316314 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079351119 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079683435 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07920618 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079916316 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086858559 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080083113 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087000874 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083285997 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075084655 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079890922 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079519712 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086679281 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087227745 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082918541 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079645754 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079315882 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086680144 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083591042 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079356599 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069132067 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079094808 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079182072 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079330468 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074913369 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086522638 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078981316 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075176975 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079794091 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078895502 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08618899 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083051 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08138265 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083856061 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079795031 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08738114 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079341881 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07963263 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087039456 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089490397 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086256822 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087259047 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079927584 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086612024 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087012501 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08942547 seconds)
  done (took 6.451248642 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086917396 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078157092 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.086281008 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065150544 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068086174 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075474483 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067982517 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068384754 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07796761 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.078222412 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079545815 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075373066 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078873187 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079714905 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076162763 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078515192 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075275262 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075763993 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077527371 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075770923 seconds)
  done (took 2.851550967 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.0785374 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087228307 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070430353 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075964762 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073366302 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075516662 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072850981 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073392611 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070904403 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073463945 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079861436 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079728643 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070997206 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074943485 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079644402 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075300538 seconds)
  done (took 2.532130278 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08877257 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077912296 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083604567 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070404084 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070441506 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066288443 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069225537 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065066331 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06577804 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081980327 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070130465 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080323153 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069380378 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068520783 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066417058 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074839624 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066443035 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066944301 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069197759 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081954822 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07366396 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06806112 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.072862803 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069667766 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071657991 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073921941 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068277 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069917431 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066951049 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069404116 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072710828 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072522847 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066691618 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067295937 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068551988 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067287792 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06918382 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069633155 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075410839 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069497606 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067620121 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071356455 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069526437 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070490587 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066400945 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069945492 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065877478 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072042058 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067005619 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.07195859 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.07006291 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071822355 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070199731 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076415154 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072574295 seconds)
  done (took 5.229949564 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084324235 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074279915 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065384037 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06751736 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072909929 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070996062 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073537503 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070641269 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071108805 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06784395 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070783557 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072557229 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070718905 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072911742 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071085943 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073204849 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065189733 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070802519 seconds)
  done (took 2.616186035 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075406759 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070296026 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076814302 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069616442 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069840797 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071996207 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065745917 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068528061 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068188615 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069370235 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069761631 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072686024 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07057847 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072191785 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069304182 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070056644 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07206486 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068540989 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069673425 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065345538 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071876744 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068482304 seconds)
  done (took 2.870766584 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098443226 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088050836 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145153342 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.083069617 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088563484 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075124598 seconds)
  done (took 1.904844667 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095993558 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10405899 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070173607 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073565966 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079213282 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074021406 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073595998 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074024665 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082629901 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079271754 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073650246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082273891 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081749092 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081301866 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079733437 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079568134 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073909269 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073524801 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069591636 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087512019 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073554356 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082024528 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073717714 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074094789 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074186448 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080850574 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081918138 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078755718 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073583983 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081727572 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079008576 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073703804 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081891392 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080237135 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073764524 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082196886 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073740861 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086924826 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079577083 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08090805 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073227164 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079832876 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082440322 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078974872 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081945796 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073712032 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07850909 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074226147 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07427717 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089078821 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079938763 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081258162 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079355539 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083022942 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082338685 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089082168 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079968633 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081266949 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079294748 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079403729 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081190667 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080111372 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081114902 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079404687 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079745367 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081532157 seconds)
  done (took 6.569483983 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108216308 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07051791 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075298863 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079853321 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08097566 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074040765 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074561708 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073888118 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073862872 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070724421 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112762235 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07407696 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081855847 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081076786 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073668626 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073875339 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07405806 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08084298 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07044541 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088861817 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073577954 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080934386 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080905555 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081292844 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079155562 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079588366 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074311418 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073615402 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07389843 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07349655 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07806299 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073822691 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081061382 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070347397 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081074455 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07410312 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073498989 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078215494 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073489606 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07924201 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081198927 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087053116 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073656822 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073618294 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07901311 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073848588 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073821936 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070823377 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073840726 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07038457 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079127087 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079288382 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07917288 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080948416 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073601464 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073859588 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074516851 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073801597 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073667585 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07927301 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080912451 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073568059 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088927109 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074276441 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073907397 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081536681 seconds)
  done (took 6.469026693 seconds)
done (took 134.138385564 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.19157312 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17196602 seconds)
  done (took 1.687489552 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07254125 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102064324 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081068802 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131449492 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070506537 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103571549 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10303346 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081843348 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071383936 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06969542 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069976339 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072437281 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135302026 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070452802 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069762922 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072815743 seconds)
  done (took 2.713917077 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103577269 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169378252 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107500333 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069767386 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103726613 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077394029 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069091546 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079165585 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07491863 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06900137 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076188643 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073978738 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068997028 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074208257 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074834832 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076189768 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068563074 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076174004 seconds)
  done (took 2.851788731 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102012756 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095976853 seconds)
  done (took 1.538752265 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.166931784 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139293722 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209719155 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.362602005 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.172257967 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.154043954 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.149687717 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.147966329 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.124051835 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142897475 seconds)
  done (took 3.10687796 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104183486 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.160851774 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276761984 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.122742249 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076665999 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097297145 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123718234 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082085483 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08452086 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083569189 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083990479 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080129584 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104386414 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077180147 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078092217 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079993075 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107780446 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076796757 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078948444 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079520499 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105781669 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06968849 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076666198 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076924877 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080664929 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081096766 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070512225 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069259709 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079990515 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078925486 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079861294 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096052987 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081169105 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109340164 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075276525 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110838324 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081422749 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077068013 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07924482 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077294323 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082042899 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081855992 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077400567 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080347731 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070221329 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080892704 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069695072 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06973145 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08147413 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070875869 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081124732 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080788932 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109422328 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071006395 seconds)
  done (took 6.186663658 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107367132 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110846121 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075263384 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117769079 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107842118 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076301296 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106990785 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100194837 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108158537 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073989513 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072085685 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074042269 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085210689 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086282578 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119642917 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.1110495 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077826749 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074692045 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110430568 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109279056 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072513612 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104238513 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095813088 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107578398 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071013691 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074143605 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072271769 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073811555 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080401324 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081256332 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073417449 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083667691 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08781441 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081494045 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070888097 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072259424 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071757599 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083407232 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083337089 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082649532 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081303028 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071522536 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071530165 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07358245 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073937472 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071813398 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08241427 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084013437 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082544854 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073390435 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073970114 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074413871 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.075134023 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083691929 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081040308 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084507964 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083341082 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072455324 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072790716 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07645406 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084349488 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083647373 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083290573 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073690756 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08317652 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073023942 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083605003 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087618988 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072611645 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074414607 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073148289 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073335659 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073570131 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081633594 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081546496 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07376761 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073989665 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07308708 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083537634 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082228038 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072536861 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081159269 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071683058 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07287577 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074000527 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073705722 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081764131 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.083137385 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073544187 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071786325 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072889884 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072179965 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071091202 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080124705 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082507281 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081702233 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080828098 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072910845 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081587223 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080735603 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073781449 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081576546 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071648257 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072890743 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.203566955 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084028585 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.082228593 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084345723 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07357732 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073990866 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.083166605 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084636681 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073254982 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082737251 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085074344 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.083201262 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072359051 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084872675 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073681497 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083201661 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073697145 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084273421 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072260286 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083662891 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072842665 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072953283 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073684563 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083911454 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075171133 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073202336 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074986211 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074058921 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083471306 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086502969 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075318832 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082261902 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082788761 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073856806 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083340746 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072388599 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082960025 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073962817 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07330825 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071304603 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085342594 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073039803 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072101788 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074527553 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084967883 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072322096 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083891232 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082336823 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072049289 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084582991 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084427596 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081804337 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083860848 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073811906 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072783172 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072688195 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073676947 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081419702 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084375894 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074230802 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072351938 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081598898 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083521403 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070780884 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082122042 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083099298 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082674974 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072228291 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073611978 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084156466 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084278842 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.082567099 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.082019378 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081915849 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072591871 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08126726 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081928586 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072492243 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087466807 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072552552 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086904237 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08332192 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081129738 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083100749 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.084259615 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.084581669 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084106721 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086668333 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072374404 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07181705 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082775189 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07178323 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072962995 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.081132928 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072485358 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072914749 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085508626 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072399661 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082275509 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.07122684 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081449717 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0701513 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073634977 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085873315 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0709817 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.2050178 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084009451 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07420878 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082530178 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084874944 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.083183248 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07288686 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074588293 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084438789 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083524443 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072801463 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072793053 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075156593 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082088783 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.082130861 seconds)
  done (took 19.535147358 seconds)
done (took 38.966497674 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216373742 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.160428115 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179428625 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123327766 seconds)
  done (took 2.125311714 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120290306 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105684726 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096851066 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068693168 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10344451 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069100304 seconds)
  done (took 1.940795981 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316057099 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214926391 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.192748441 seconds)
  done (took 2.097925996 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206301129 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195400001 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.43702665 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.274442067 seconds)
  done (took 2.605089306 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.148391413 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092207117 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071783214 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088372026 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137246803 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164985515 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104251872 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129359203 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082963144 seconds)
  done (took 2.451185508 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.152726805 seconds)
done (took 12.748359945 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.216681793 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.137779882 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.127216504 seconds)
    (4/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.10636451 seconds)
    (5/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079387822 seconds)
    (6/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076401576 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.130963238 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.086970175 seconds)
    (9/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.199475145 seconds)
    (10/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.223926211 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082240862 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.109145834 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078292274 seconds)
    (14/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.251388805 seconds)
    (15/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.080897923 seconds)
    (16/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.246385725 seconds)
    (17/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079704017 seconds)
    (18/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.1851448 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.19122106 seconds)
    (20/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.159718802 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098042403 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.107240263 seconds)
    (23/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070240094 seconds)
    (24/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.182654612 seconds)
    (25/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.076457212 seconds)
    (26/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.093691511 seconds)
    (27/309) benchmarking ("sort", Float32, false)...
    done (took 0.13923061 seconds)
    (28/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077324196 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.203459757 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.249399678 seconds)
    (31/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.080579756 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075385579 seconds)
    (33/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066110447 seconds)
    (34/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.165984121 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076474654 seconds)
    (36/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078943853 seconds)
    (37/309) benchmarking ("sort", Int8, false)...
    done (took 0.148301726 seconds)
    (38/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.105199826 seconds)
    (39/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.167925263 seconds)
    (40/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.166250742 seconds)
    (41/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073200076 seconds)
    (42/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.097961819 seconds)
    (43/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.117519767 seconds)
    (44/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.117243568 seconds)
    (45/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.158755705 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076749788 seconds)
    (47/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.215962186 seconds)
    (48/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.149148591 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089764726 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097363159 seconds)
    (51/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.106252383 seconds)
    (52/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.067203584 seconds)
    (53/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093934841 seconds)
    (54/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077752367 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071645302 seconds)
    (56/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.153234756 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.186445707 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.080689684 seconds)
    (59/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.149471436 seconds)
    (60/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.099021568 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077599426 seconds)
    (62/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.206643251 seconds)
    (63/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.083536239 seconds)
    (64/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.087630572 seconds)
    (65/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07066676 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093827682 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.130684026 seconds)
    (68/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086960469 seconds)
    (69/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07109932 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.146365063 seconds)
    (71/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.161240522 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077733438 seconds)
    (73/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083184287 seconds)
    (74/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080805607 seconds)
    (75/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077493081 seconds)
    (76/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077402199 seconds)
    (77/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069299906 seconds)
    (78/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.127052065 seconds)
    (79/309) benchmarking ("sort", Float64, false)...
    done (took 0.135806202 seconds)
    (80/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172619361 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.055752037 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.069768014 seconds)
    (83/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077157673 seconds)
    (84/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.082887797 seconds)
    (85/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.262652346 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.096727529 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069015862 seconds)
    (88/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.077696818 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10052427 seconds)
    (90/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.055614593 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.349051327 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.09553787 seconds)
    (93/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.21755538 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.081229891 seconds)
    (95/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159671185 seconds)
    (96/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.121438157 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.191298637 seconds)
    (98/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.202938435 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.15048661 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.079067842 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09702928 seconds)
    (102/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078375988 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079485991 seconds)
    (104/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065924278 seconds)
    (105/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069105012 seconds)
    (106/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.071427716 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054506454 seconds)
    (108/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080125614 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077310578 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093365407 seconds)
    (111/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074570912 seconds)
    (112/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084506587 seconds)
    (113/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069945191 seconds)
    (114/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.067107464 seconds)
    (115/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055626663 seconds)
    (116/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.08025447 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.097031099 seconds)
    (118/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066692475 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.151235398 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08277385 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.192501163 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098032685 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.104110728 seconds)
    (124/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.107026792 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09341614 seconds)
    (126/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.201058994 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069140281 seconds)
    (128/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076445197 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.140779241 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07775382 seconds)
    (131/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055083046 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076468756 seconds)
    (133/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075597601 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054386482 seconds)
    (135/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.079246181 seconds)
    (136/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073126219 seconds)
    (137/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071998686 seconds)
    (138/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055286425 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07535328 seconds)
    (140/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073202288 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076049862 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057290794 seconds)
    (143/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187397062 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141038733 seconds)
    (145/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.057163387 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075342347 seconds)
    (147/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075349121 seconds)
    (148/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.188746127 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.093051425 seconds)
    (150/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07614416 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069797922 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068775802 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077402708 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054547324 seconds)
    (155/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055750523 seconds)
    (156/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054182462 seconds)
    (157/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054009761 seconds)
    (158/309) benchmarking ("sort", BigInt, false)...
    done (took 0.194990553 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.100029769 seconds)
    (160/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07564514 seconds)
    (161/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070367821 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080404901 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.149598237 seconds)
    (164/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073654484 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05441964 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077941517 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069022071 seconds)
    (168/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.119267238 seconds)
    (169/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07880517 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055433409 seconds)
    (171/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.124194517 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.144503204 seconds)
    (173/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069065466 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.183223048 seconds)
    (175/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076631192 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068798674 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070629323 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.110952581 seconds)
    (179/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053930581 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093399053 seconds)
    (181/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054092542 seconds)
    (182/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069410894 seconds)
    (183/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054979043 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098360484 seconds)
    (185/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090435834 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068554729 seconds)
    (187/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.151663617 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092895852 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076354432 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.105705967 seconds)
    (191/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079191222 seconds)
    (192/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069098944 seconds)
    (193/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055960594 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078033247 seconds)
    (195/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067361337 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.307590809 seconds)
    (197/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.202207786 seconds)
    (198/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076742503 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.19578787 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.18404928 seconds)
    (201/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078986409 seconds)
    (202/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06755775 seconds)
    (203/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077647445 seconds)
    (204/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054696957 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068152859 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.141581737 seconds)
    (207/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072509901 seconds)
    (208/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.1627354 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.055222351 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.144041747 seconds)
    (211/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.07525244 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069185437 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099209217 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079082333 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077872029 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118315119 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069845265 seconds)
    (218/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065187287 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055021929 seconds)
    (220/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.172473951 seconds)
    (221/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053961647 seconds)
    (222/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.167770016 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.10014054 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120130881 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096645762 seconds)
    (226/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.162242172 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153291537 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069817637 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057299953 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07475788 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069236791 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055946078 seconds)
    (233/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.079779947 seconds)
    (234/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055096293 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.077200319 seconds)
    (236/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054646195 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.070036259 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069594912 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067486815 seconds)
    (240/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.067072354 seconds)
    (241/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.185376875 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.119501329 seconds)
    (243/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069873459 seconds)
    (244/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.101492283 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145935043 seconds)
    (246/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072543642 seconds)
    (247/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.187949778 seconds)
    (248/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054446963 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091476453 seconds)
    (250/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075917203 seconds)
    (251/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069319942 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091915633 seconds)
    (253/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054086334 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054394481 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070300322 seconds)
    (256/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.067345563 seconds)
    (257/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068183214 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069245226 seconds)
    (259/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053896944 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069646509 seconds)
    (261/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.071822648 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076570771 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076260048 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.072653976 seconds)
    (265/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054054309 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055478698 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077620225 seconds)
    (268/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071069447 seconds)
    (269/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093409835 seconds)
    (270/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094517715 seconds)
    (271/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076958128 seconds)
    (272/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.171179408 seconds)
    (273/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075248024 seconds)
    (274/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054148098 seconds)
    (275/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055255925 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069066482 seconds)
    (277/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.067869292 seconds)
    (278/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054139284 seconds)
    (279/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054251477 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070468766 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077373686 seconds)
    (282/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055104075 seconds)
    (283/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066772408 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068999312 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067581271 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067493042 seconds)
    (287/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054073894 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076797456 seconds)
    (289/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055388657 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05412292 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136149936 seconds)
    (292/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066467995 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090721758 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05416181 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076148176 seconds)
    (296/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076363969 seconds)
    (297/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055214017 seconds)
    (298/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084103254 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056597697 seconds)
    (300/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070556076 seconds)
    (301/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08382673 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094582171 seconds)
    (303/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125733595 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070150204 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074619303 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054201663 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136490995 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068464446 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069273735 seconds)
  done (took 32.415163314 seconds)
done (took 33.80523467 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087801827 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095917196 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078368232 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097095407 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083639468 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07916111 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076782116 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081774883 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083312828 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085162475 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081017523 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057268208 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077827315 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077724001 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078261001 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095139333 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081953425 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076646807 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077232565 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068011737 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076736699 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069817386 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070472683 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057277666 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082564863 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075109271 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07571731 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077739168 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069475198 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069254033 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072530803 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077456351 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068481326 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081894227 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075671249 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076328355 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078654492 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080535616 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070416743 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070329673 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078091828 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068605562 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076609695 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077682206 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075805899 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074520455 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076502283 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081096683 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09474489 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070869641 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078679685 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079862893 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.0788746 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076315553 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073156224 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076165112 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074205657 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094932442 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076993834 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070979585 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07780518 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078998435 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075194322 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077034527 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076255393 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078910866 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07916903 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074689767 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07837896 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075524278 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069010841 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076866635 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072498807 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069287713 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082511794 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081587132 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06812873 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.0748938 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076493876 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07453424 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06795046 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070267805 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072846484 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075471625 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070775695 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057242737 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073280466 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075500557 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068163974 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077864089 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075402102 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075999123 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071380288 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079693611 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068284395 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074098363 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068935134 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06887868 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070540886 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073147747 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068373065 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070366626 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078645791 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070835609 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075879549 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082358189 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069080584 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075954969 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067749177 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067901559 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082512949 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078985992 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068432437 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071676799 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067523081 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075744048 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067455743 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068304723 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068551602 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06825484 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075025502 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068058852 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069644607 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075463999 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081140994 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067516891 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071496415 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070275064 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068308859 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073809474 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068148997 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.204093371 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071736772 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065505485 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071542546 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070027356 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07637518 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070915942 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076646386 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070571418 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077812291 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075053415 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075080175 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07443234 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067940152 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062416082 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071392669 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071492616 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071215592 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069120504 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070611552 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068442728 seconds)
done (took 12.975416525 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07016961 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143989231 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100398252 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.0994654 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088999415 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070168442 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079229236 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103285935 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07127754 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104494614 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091617126 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089634996 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117865081 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068181376 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071352616 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073386455 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07114922 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084314 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.102965746 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090178132 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119412399 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068915879 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095862569 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092976955 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091618759 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106968679 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070744772 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073453279 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073011539 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.096222878 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091913462 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073552304 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069551073 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101653767 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097198332 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087553715 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070068991 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086664358 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069643028 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069174676 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070413582 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102842858 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083554127 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084542278 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073431913 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080187391 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070263944 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087328795 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09363985 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082661476 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089292052 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104975007 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072511882 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088077258 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067741198 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090066531 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080157119 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071813887 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069476549 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.077730169 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069549311 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073099531 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083991102 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083744882 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073505254 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.088825899 seconds)
  done (took 7.057529476 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088177656 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095760219 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087960012 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087526382 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069227353 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06916959 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069593035 seconds)
  done (took 2.04422488 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069959422 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092066401 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092406759 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092296567 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084680032 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091729311 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079424279 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.07050336 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091786071 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070766914 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091804883 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104555113 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073209456 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077535137 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094253152 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069725921 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09436113 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070796435 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073562042 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093997461 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07186644 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.099979561 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073931834 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070120796 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085115567 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06966757 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118585817 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074171982 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071961546 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073067702 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067634525 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111687746 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083975244 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077815893 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070135496 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084810384 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084701807 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068306158 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086811536 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078726819 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084118344 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070359908 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071026327 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068309022 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073963864 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080615427 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070713181 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070396579 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072932944 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090621142 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070712115 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083689703 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073265963 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07555264 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07251051 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076650467 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080841721 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07095809 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090305891 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071516652 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086911397 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086140407 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084481339 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086244184 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072137641 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083974587 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083970889 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072576518 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071598602 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073606615 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086665637 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068599505 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07167219 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080990034 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072111567 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093424911 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093635747 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071889798 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084053068 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070445878 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070605645 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069806562 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09421205 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075908077 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069780701 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074283575 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073312789 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068179233 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069078449 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073908409 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068180865 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07181682 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073078122 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.0732525 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073213364 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087287143 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072496293 seconds)
  done (took 9.141064399 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072873582 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07236492 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072279373 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070741516 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071976775 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071053338 seconds)
  done (took 1.928336324 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095811711 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072523258 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083707376 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075146742 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109689577 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090636121 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.09088937 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081059841 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087767555 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082401225 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090137023 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092403111 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095855351 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076586303 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090359326 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075325926 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091397684 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077809094 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081955368 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076323455 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089878405 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075748607 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075990134 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085114967 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079498656 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074761842 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081871437 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082432638 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081766948 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081902813 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075636856 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07898003 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074137208 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081347266 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090584667 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073694752 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074759856 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080414002 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075471986 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.078940127 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.09223012 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076224376 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077739647 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080975875 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081607314 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073589538 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.08028174 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082591765 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090119041 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080099315 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080626941 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074675484 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079629145 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.08077646 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074381552 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08071835 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080992251 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090714674 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075872665 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073872322 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072035568 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07924757 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08183956 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079685946 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084097015 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080435834 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074123453 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076063836 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076030373 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075000871 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080828965 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072292371 seconds)
  done (took 7.326213756 seconds)
done (took 28.961758909 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.556033144 seconds)
  done (took 2.022479498 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.616936768 seconds)
  done (took 2.106634413 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.512356782 seconds)
  done (took 8.000210133 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.405587368 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.52864197 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.730992189 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135620115 seconds)
  done (took 3.326111246 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.720998263 seconds)
  done (took 2.219440613 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.220781656 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.206350629 seconds)
  done (took 1.936917518 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.384681123 seconds)
  done (took 1.872245224 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.156674885 seconds)
  done (took 2.646486718 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260515345 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179730468 seconds)
  done (took 1.934140687 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.488215274 seconds)
  done (took 1.979987269 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.895569018 seconds)
  done (took 6.388591663 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.216135576 seconds)
  done (took 1.755763648 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23878353 seconds)
  done (took 1.734096551 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.733777012 seconds)
  done (took 3.228340706 seconds)
done (took 42.644556812 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084459221 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085379349 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08562052 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082115246 seconds)
  done (took 1.823122411 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081521606 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07665474 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080338305 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076819214 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081142964 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076841926 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.077941499 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079806488 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076763026 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077118117 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077144898 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076841428 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07976477 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078432724 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074913114 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078887526 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080249607 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076637678 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079515668 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076797583 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074581962 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079007641 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07896062 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076151001 seconds)
  done (took 3.372677819 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082386394 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07727754 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079858382 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076778712 seconds)
  done (took 1.825037746 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082134088 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097170493 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093480238 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082780494 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096944744 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090877645 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072927467 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073208308 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074612936 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081709213 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072511108 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100543765 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093032893 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081860936 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084456247 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070063771 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072468798 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092215037 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.08246758 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083017085 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07430759 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082284003 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07236437 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092927431 seconds)
  done (took 3.505667658 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.091088459 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109695871 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085929231 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092867888 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096206885 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068974225 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091693679 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095366412 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132657601 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069464013 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074859437 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069691609 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077386386 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069316822 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085267006 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112917779 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11706455 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072796428 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101933786 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069203934 seconds)
  done (took 3.297879288 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076903524 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073055838 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069537479 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07340493 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081800378 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077205832 seconds)
  done (took 1.968190869 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072024012 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071359571 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072165914 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071160271 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075992578 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071310468 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070331233 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071789075 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072256781 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070977555 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070715861 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069834306 seconds)
  done (took 2.370252569 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.206916758 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071951695 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073030604 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070476761 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074125763 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070800769 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085748384 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07230142 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097060935 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070159512 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070907422 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072764323 seconds)
  done (took 2.549016387 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211220651 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080175596 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244567247 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15642762 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115399584 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120473324 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116982043 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118018818 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147175879 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105346994 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173661255 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171964712 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112159907 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141748734 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093748586 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103730458 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159873544 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16867215 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1106933 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171676299 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151133553 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131474313 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15283897 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108775922 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110064284 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126635506 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075453404 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084542663 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175617999 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138484516 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149809469 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116198671 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096216361 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182470775 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178615688 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144930726 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152989281 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089522076 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106956534 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138967011 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206246646 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092545028 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166794445 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253666238 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086538557 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137729116 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122733727 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124898251 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109519703 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094143093 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14945124 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190352741 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.142399774 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091966296 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129329963 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118474567 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118820723 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11820162 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188068142 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167424283 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131896608 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075407539 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112972029 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158127055 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137320792 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113939665 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129710194 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09588817 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139350545 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159633789 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127629484 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149238931 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12243436 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093552162 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123531104 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145494567 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131771696 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165912324 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128491656 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076595341 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127747327 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106106679 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085421528 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.153854406 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079422346 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180266449 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102997388 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110790695 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130275674 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113134636 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113558903 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163415694 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147969577 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106442059 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.211902434 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111031746 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.125319913 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150483874 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091773459 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114038874 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121509084 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081466701 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140709192 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079667326 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126205841 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079166527 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130164955 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133608495 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081602261 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127541688 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109204185 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104531609 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137103465 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163911721 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092729618 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086564072 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174350469 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12556459 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107056894 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149138667 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1614026 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103244652 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105352052 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155788179 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184028716 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093776602 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168178954 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110809422 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087881958 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.09217142 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127724667 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116322541 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.129180961 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086213609 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122229922 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174159275 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079597768 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100339122 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13883078 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082778854 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084460144 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109361691 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109015991 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099732319 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.103755149 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105909819 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140489056 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127331462 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108895574 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126715988 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246646781 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177053679 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092583281 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107325532 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108651906 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074994959 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139589763 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162972004 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08350232 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167900441 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.127361366 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121854474 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122667927 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087691018 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144347026 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083900436 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074149142 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151678232 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114437324 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114973192 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.157093655 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120618664 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129898181 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.125022234 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13767189 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13506992 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.134747005 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109877336 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091830448 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115677054 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131361152 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077337717 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095098333 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084282564 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109504432 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100217895 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087564275 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145827234 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128012316 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114541972 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115582713 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100758039 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152685696 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080909936 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133097127 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.123261714 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099610668 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.157707387 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157204578 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136452619 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103782097 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141185663 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074163885 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077827685 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091965583 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12470355 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233126379 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088513319 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119841889 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153480944 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134228286 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141929389 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129593786 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125951464 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161720138 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074276627 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.12370245 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152754978 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125908677 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109690751 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097040528 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103274456 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147564192 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111702949 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188633081 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116700455 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126623226 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157564752 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.107223671 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083846571 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107183872 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139617926 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108422909 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148989688 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103726733 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092652992 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113093099 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079377612 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102905587 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131828216 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122919088 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138441565 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120414801 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137523756 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081840646 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120096651 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12581151 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126319392 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068058787 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123293105 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16552539 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098654104 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121237174 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157750556 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082880611 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139456953 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178816741 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.294912107 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09055202 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113211661 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124228312 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132891552 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125502346 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14518904 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11098097 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140867857 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11560901 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089800905 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091805466 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102411043 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110298092 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099264993 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109643596 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11842395 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100914161 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136551093 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107931636 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114213077 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120532573 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103601533 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095128823 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101162294 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182199042 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123491839 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175740069 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104487384 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.149639365 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166927553 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07862018 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083312294 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082219972 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144585779 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088476244 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134673925 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11222127 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124937289 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127275868 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146182534 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099605909 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072562717 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114829028 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137713361 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129820801 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103087806 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107791467 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168308573 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104167196 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082911057 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117356286 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120939285 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107039432 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178189774 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065131746 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10895578 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079375133 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.228646362 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133616797 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158222921 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084948429 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.108234238 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123217266 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117402081 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133488748 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104527093 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113571365 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131761534 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15587154 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132851341 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094206783 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115205455 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131860807 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160763701 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110785848 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101288766 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177081181 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15619704 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.164037321 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.09177342 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118169276 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116981858 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112216695 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140618965 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087817029 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167041457 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086157544 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14075119 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107389036 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092797615 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132986247 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113468551 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092324671 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152579495 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121711816 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086851108 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081410625 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122188581 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124481271 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11022468 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079415041 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142273823 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077184638 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135503182 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164081022 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084581887 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109277011 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099063279 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082841553 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255548875 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108021708 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092769731 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103944879 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178103154 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091528383 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155784292 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139153555 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11752323 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139194585 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10684301 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644143085 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082471518 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157028968 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120525253 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180478522 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104002594 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120243942 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11384859 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126580166 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151173138 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107810288 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.191121176 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137592249 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.119652424 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08365261 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106225052 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108377673 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091383608 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11183533 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116431273 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1194249 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096465174 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.119948679 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127804599 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086467408 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100101964 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161100561 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121328003 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148583534 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145489656 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09008612 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121726844 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140862947 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083867146 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.124228254 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156337796 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109288293 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104185359 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084422312 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103868802 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307147 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078239246 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164060275 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125374218 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114183129 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117581451 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.117828508 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135328838 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112136304 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125109303 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096939374 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.113992546 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11782479 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086756137 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082279655 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113274293 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115431899 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101705412 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102967333 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103422778 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157550613 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076531214 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103503001 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120043556 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148672452 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177977452 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093439314 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08725562 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123280094 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118731209 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116692005 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125386179 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082839034 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086107974 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08364658 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082768498 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113412496 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116881636 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119263999 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114123254 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167438213 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087725815 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.243128041 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099834973 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109547889 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.0743144 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083118823 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100544843 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102499108 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112831646 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114926976 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164440246 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099208423 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093568485 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094123999 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077855396 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086553132 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134225617 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112527327 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121033261 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251263745 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066899649 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112910684 seconds)
  done (took 61.199111901 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111826506 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086596685 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100155444 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148367307 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127957983 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205495884 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155730685 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193880723 seconds)
  done (took 2.74938605 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072062436 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.1001756 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107862214 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087546432 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070812083 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073119655 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.235900698 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086004347 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070787556 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100221685 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082609019 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073023524 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.437773557 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070596153 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071323655 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066048801 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070788713 seconds)
  done (took 3.489089198 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.401462197 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.617176141 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.358689903 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075893295 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.470253655 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089210413 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.127945441 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132293963 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.078090692 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.526240485 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.412453533 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128558815 seconds)
  done (took 18.040135706 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079747031 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073106379 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.088105928 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087461328 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075744403 seconds)
  done (took 2.022007254 seconds)
done (took 109.761086081 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085181807 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.61494966 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056988103 seconds)
  done (took 2.320644828 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087070739 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089725766 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088931251 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087710713 seconds)
  done (took 1.980323936 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077561542 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081988051 seconds)
  done (took 1.781329582 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.238837766 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171081311 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100705018 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086994208 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083734156 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083570002 seconds)
  done (took 1.877581657 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076664032 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07933193 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077366432 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080564252 seconds)
  done (took 1.932151036 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080387382 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055506588 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057713471 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060795577 seconds)
  done (took 1.877469356 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091343195 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083990128 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083170986 seconds)
  done (took 1.879801677 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107105282 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090152326 seconds)
  done (took 1.817545859 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085460739 seconds)
  done (took 1.707623156 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099693941 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.106415468 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137007426 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114432816 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14383335 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112960598 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088817517 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089822088 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080809567 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089715201 seconds)
  done (took 2.685075362 seconds)
done (took 22.07279756 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083740226 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371188528 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363876432 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094336896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.680083541 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360009725 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.974687187 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096996229 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119125319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070855663 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088117247 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654635604 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.963369352 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324325123 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.953673126 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326285941 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653247058 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071836701 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071502221 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071028103 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.960014004 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071601941 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071386521 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072135904 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65316886 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37630084 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072536681 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324323262 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071556383 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074695828 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35916207 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072086183 seconds)
  done (took 16.179175927 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074410666 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125268192 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077434832 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088202759 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074034426 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073160848 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075486862 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072305134 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126338262 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071419646 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089713534 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071310981 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.089943328 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072102078 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09145216 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071337555 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072536555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072224852 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07198337 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071964788 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091751369 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071025531 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071673645 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072866464 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071495219 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084168571 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07262877 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072103847 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072201811 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073846933 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075111065 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073371256 seconds)
  done (took 4.169981598 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119461385 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129229631 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077827025 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107324028 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115303984 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073587493 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148208253 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097702537 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131770798 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071239833 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089073463 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071885374 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107054803 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072598018 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092198056 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072350245 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072320048 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073311606 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071581475 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072350684 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091621869 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072293553 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072032702 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072758648 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072111646 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086663532 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072286735 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072543452 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072287057 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073746115 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074966978 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073910558 seconds)
  done (took 4.410235364 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076433451 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079127567 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087229644 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088543565 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073039466 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075654453 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076581697 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073345546 seconds)
  done (took 2.268442271 seconds)
done (took 28.65868568 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082619075 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072219595 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07696693 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08702385 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077406234 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08359673 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070626164 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079140606 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076472284 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078288242 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079127276 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071859416 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075068407 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.07096813 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07772008 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071265157 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083035043 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075887646 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082753026 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082920263 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073713077 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076892643 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078429651 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082396669 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082822284 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082660883 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081311252 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076899925 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072535023 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074126387 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080477844 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087745597 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071808031 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082860744 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071081509 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071524496 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075092466 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071071725 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083061535 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080555877 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073723884 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080300286 seconds)
  done (took 4.883132678 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09226408 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096763145 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089305659 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065460357 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06962526 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068822665 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093110715 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063526973 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063168649 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092801202 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058820062 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063103533 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066805337 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056835453 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063921806 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060105642 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065443877 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059054722 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06466628 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063387073 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094079984 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05772452 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081984012 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.067043168 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05923221 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065263478 seconds)
  done (took 3.48765061 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07876497 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089181602 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094652734 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135501855 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110697626 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084429461 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083385491 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.099870245 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.092808365 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071241701 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074502779 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096942632 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093930174 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078059477 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071386805 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.090097595 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088384125 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073262161 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077568611 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100531276 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091575384 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090516637 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100438261 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087245921 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070592041 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073121241 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074913295 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084812922 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076067504 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080350872 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075144266 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.0747357 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073917636 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.094208197 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074792535 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072936688 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098971949 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081482977 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082983683 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071940746 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079586643 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072196064 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096617132 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131446991 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071069165 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077940972 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075117072 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081048899 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071142829 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092544923 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082871568 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070493565 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07487414 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070460596 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.07086452 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08509881 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073432454 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073454652 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080787735 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077148841 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.096451131 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076169717 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087579015 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070694936 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079570491 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070771805 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072140419 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070062608 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100372514 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073115161 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115247451 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072815439 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072362771 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080723421 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079473503 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07723645 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071823905 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087298943 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081775933 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07672827 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080457295 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074493759 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074094268 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.095724556 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073525894 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073037925 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072314707 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077403361 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074274947 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072923752 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084826808 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070707765 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074853607 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089491828 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07130744 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07259624 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078309754 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076555901 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070810952 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082964442 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076292159 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072394786 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081482073 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071369656 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074186261 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084701463 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077624187 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070208975 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076241181 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.0771044 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071761899 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072711476 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073800747 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073486109 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080453078 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078911061 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076040591 seconds)
  done (took 11.112815217 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.170673574 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.162781154 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074491169 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.155322426 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080453079 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08298925 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156966481 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098626967 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071445298 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072335899 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073253395 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115840058 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.111388699 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122876591 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082772826 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072642153 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089252475 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119584174 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158501882 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152290388 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08964852 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081632684 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075024782 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072914377 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074181939 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083389218 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089791584 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083327311 seconds)
  done (took 4.553947587 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084935522 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109355273 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079009769 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095699026 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095147098 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072118194 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075082503 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07368405 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085948093 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082082489 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071683049 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07745081 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078865958 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.0749454 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072886456 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078566102 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079194089 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073470482 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075245379 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077108921 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08238 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096922039 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075812777 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071246772 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076767279 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070655535 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06713203 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088607357 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072158826 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.099679902 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06949014 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077171283 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086312201 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072510117 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071392843 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071398048 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.0714793 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071710626 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073030107 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06965401 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070391874 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060836594 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070644678 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083262494 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078545889 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059889223 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076360547 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077434326 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076941465 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068928409 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074677912 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074331953 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07460613 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079170115 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075866605 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07702817 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072367682 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.07813368 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081647433 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071179345 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068750229 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070449337 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076964808 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068817818 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081170925 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075898127 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069833728 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071168942 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07398556 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078541001 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071559773 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076430562 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069364828 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07356308 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076921665 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073260215 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072919086 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070178803 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07151622 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072044345 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058845879 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.07170029 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056422578 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074925563 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069825386 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070284557 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071878555 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076512047 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083507599 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072944783 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077477972 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072393721 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071270953 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075039478 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064238647 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074361509 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083908747 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086888418 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071927666 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069736515 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086031967 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076549108 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.0707532 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059575926 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07607622 seconds)
  done (took 9.581740689 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094607995 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073993049 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088689951 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09552679 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09176103 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07855916 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081636624 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073051369 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087687395 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07806425 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081165674 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07178403 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082284212 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081575914 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07345392 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082788193 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075770501 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088903604 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087000028 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071961491 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080393072 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084777268 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.095101733 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086207736 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084329576 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086008124 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095285807 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081922183 seconds)
  done (took 4.017944887 seconds)
done (took 39.269875439 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.724492598 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.896373131 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.717005562 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.037658455 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.797768991 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.753461323 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.887404919 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.714836801 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.000872066 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.756870749 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.009638415 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.927036853 seconds)
done (took 64.872953686 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.741997874 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.856427154 seconds)
    (2/2) benchmarking "String"...
    done (took 1.956806198 seconds)
  done (took 5.462122011 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.935151102 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.357775083 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.96446203 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.715373627 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.719785341 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.014469883 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.54197612 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.233479339 seconds)
  done (took 30.195345127 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.87816366 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.940493565 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.410424478 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.438167651 seconds)
  done (took 15.373849528 seconds)
done (took 62.447357488 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.705280929 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.718952098 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.726250901 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.698402536 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.774117648 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.722996928 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.858313724 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.713787216 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.715339095 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.70102151 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.713932193 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.141498569 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.718514187 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.858433933 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.718227564 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.723864444 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.738008987 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.221015932 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.87064055 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.725968464 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.733490223 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.737003597 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.715141986 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.725916272 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.722735734 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.714223848 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.089279844 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.717037936 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.330442899 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.720967138 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.747290195 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.036491603 seconds)
  done (took 201.40350474 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.715348544 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.608346108 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.670528087 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.758725321 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.16002427 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.896281321 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.832939639 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.203993628 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.717999796 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.739286594 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.87887033 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.715996692 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.912636838 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.661780106 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.744535846 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.829026987 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.876770521 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.926165094 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.749046561 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.895217494 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.718994754 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.716984143 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.652486606 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.866179001 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.734610129 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.80856703 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.739091602 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.873647294 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.908751137 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.854916482 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.720268315 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.726970794 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.941401525 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.590560118 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.730196477 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.744302973 seconds)
  done (took 167.473252791 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.095868958 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.717317347 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.715700873 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.716363057 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.729358443 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.717253174 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.718151326 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.84061908 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.842224051 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.326722353 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.195674965 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.771463748 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.525388275 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.718968944 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.784067627 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.731332028 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.719510502 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.732027057 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.745240652 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.717716644 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.718918039 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.847030423 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.729482714 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.900762123 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.729205413 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.719243102 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.723823466 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.090171375 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.720229221 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.724068906 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.974171413 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.720024306 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.720202242 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.564318896 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.847148426 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.804866605 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.718969405 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.724451837 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.720719652 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.717954625 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.936762352 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.719974671 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.720595358 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.72266304 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.856761728 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.719413131 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.844903024 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.718947554 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.201284083 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.720441838 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.71906967 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.7930992 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.311274461 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.720064907 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.720234678 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.721899036 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.720983414 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.719904089 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.725357063 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.565194977 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.795686128 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.722040021 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.724703353 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.725720443 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.719874289 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.94042002 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.720406458 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.285729202 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.780860108 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.844569291 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.72056272 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.847606358 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.72057422 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.785711944 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.813655252 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.721058599 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.720990214 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.720525675 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.721746742 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.802489872 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.721905786 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.855219343 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.721247444 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.729908611 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.723783153 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.769898125 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.791150084 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.72146912 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.579108476 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.722879316 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.72090506 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.982296058 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.787051123 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.721029867 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.722285037 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.722085871 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.860781136 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.84355431 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.439073476 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.724214158 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.550092046 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.724462377 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.873114863 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.722784673 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.866305956 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.724344311 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.803917223 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.727462173 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.723988668 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.71948595 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.75412295 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.722580267 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.783288541 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.722416825 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.096782339 seconds)
  done (took 396.138579111 seconds)
done (took 768.817601735 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.390069186 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.35731286 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.460612656 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.372673236 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.35124761 seconds)
  done (took 13.589720668 seconds)
done (took 15.246554958 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.812457051 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.818137363 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.747445539 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.81591323 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.743698889 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.815153869 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.797599524 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.751191839 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.783279472 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.750720638 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.784811892 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.749752629 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.73571576 seconds)
  done (took 24.76544631 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.96550621 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.974972435 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.795590692 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.971212216 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.771741904 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.968811814 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.892546191 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.880504195 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.892141568 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.741599263 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.738574316 seconds)
  done (took 22.252763101 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.971830807 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.978236473 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.802683492 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.980759867 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.776675703 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.9752468 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.893461024 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.886455782 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.882224018 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.743418076 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.740606214 seconds)
  done (took 22.29052393 seconds)
done (took 70.965619158 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.734417483 seconds)
  done (took 3.396702582 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.762076379 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.931814037 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.743323353 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.73990195 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.735275365 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.73498576 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.736685177 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.734307921 seconds)
  done (took 15.782359465 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.733346742 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.732170336 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.733934317 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.7324371 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.729790409 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.731254528 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.731606875 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.730529092 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.73106744 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.733091875 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.735542903 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.736915011 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.729922521 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.733361962 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.730651775 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.732243347 seconds)
  done (took 29.379576699 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.732880587 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.73031933 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.730604625 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.732615985 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.732871096 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.730167501 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.732068722 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.730949903 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.731444173 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.729944216 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.730304692 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.73083606 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.732247219 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.730844343 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.731323249 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.731989505 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.733353982 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.730212796 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.736526728 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.73012153 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.733605529 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.732161554 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.733377208 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.73311972 seconds)
  done (took 43.228706124 seconds)
done (took 93.448021106 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.531861939 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.384406008 seconds)
  done (took 9.578627089 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.736019621 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.735432107 seconds)
  done (took 5.195115921 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.735583259 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.734770279 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.735649078 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.735492229 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.736474976 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.735647851 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.735253156 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.735181734 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.734798576 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.735057233 seconds)
  done (took 19.019324354 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.73428823 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.73382192 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.733210312 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.734982383 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.736379264 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.731997492 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.73602478 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.735779606 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.736106245 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.732180546 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.736893095 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.732367212 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.735379827 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.734249914 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.735725881 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.733782402 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.734933598 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.733722611 seconds)
  done (took 32.886595378 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.734698308 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.735594592 seconds)
  done (took 5.134722625 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.733720286 seconds)
    (2/7) benchmarking "second"...
    done (took 1.733393853 seconds)
    (3/7) benchmarking "month"...
    done (took 1.733975773 seconds)
    (4/7) benchmarking "year"...
    done (took 1.734578937 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.733306971 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.734344619 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.733887201 seconds)
  done (took 13.803085953 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.737721775 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.897077977 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.967280771 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.387955305 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.737891608 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.740250343 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.694373799 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.740828004 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.743438306 seconds)
  done (took 19.311811012 seconds)
done (took 106.590438451 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.518365308 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.734712883 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.996473124 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.836256072 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.751343104 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.030254608 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.773316974 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.040480078 seconds)
done (took 42.346192604 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.743702982 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.012761462 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.027601401 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.75879629 seconds)
  done (took 16.465881455 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.718608214 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.258682848 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.774494546 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.318813706 seconds)
  done (took 19.771579756 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.111690479 seconds)
    (2/2) benchmarking "read"...
    done (took 2.087806386 seconds)
  done (took 5.871749315 seconds)
done (took 50.520638343 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739428667 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.739017725 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.734607936 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.739447536 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.737010857 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.736551797 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.738528651 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.739583752 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.738648479 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.739212104 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.739478518 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.739268546 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737842035 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.736857362 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.736546726 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737497313 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.735714841 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739968896 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.736625448 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736076973 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736852047 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.738653129 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.736115915 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.736169875 seconds)
  done (took 43.374330882 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.738673849 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.736352036 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.739279709 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.739805597 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.737056017 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.740371512 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.738668451 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.737124214 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.739432275 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.739041437 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.73830652 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.737980148 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.739939731 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.736478747 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740400942 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.737500919 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.741206517 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737276232 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740189261 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.738520146 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.741530575 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738883337 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.740129375 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.742635208 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.739136882 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.740001363 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.742434238 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.739765431 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.741870827 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.738906759 seconds)
  done (took 53.848642942 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.744289955 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.748719882 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.742279163 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.740502038 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.741724132 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.741383562 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.741383413 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.741236113 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.742226328 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.741959728 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.741030981 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.74156575 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.742352777 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.741204615 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.743169857 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.742069657 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.742748611 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.743020856 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.741977889 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.743297411 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.744276879 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.742183783 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.742573957 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.742746088 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.743029452 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.742315898 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.742948451 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.742549288 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.741618655 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.742734032 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.742349405 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.742486279 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.742237156 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.742426951 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.743486062 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.743570221 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.749386328 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.750951539 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.742904886 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.742221813 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.742601643 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.74436047 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.744160399 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.744453089 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.744612487 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.744116038 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.744950807 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.743378149 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.742656257 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.743643127 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.743484396 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.743884056 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.743322827 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.74435696 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.744941924 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.743589041 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.744944222 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.742470757 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.74384948 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.744409487 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.746921539 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.744167709 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.745059429 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.744057144 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.747325268 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.744937717 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.746457915 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.744993776 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.744541018 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.744378957 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.744942427 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.745723028 seconds)
  done (took 127.210779279 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.745696175 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.744307367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.742768663 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.741858083 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.744035332 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.744731432 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.741806763 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745256564 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742759164 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.744680137 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747112057 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.74165847 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742518824 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.745767167 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.746117982 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.742549077 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.745524305 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.743192096 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.745808423 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.745398613 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.747069831 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.744792092 seconds)
  done (took 40.048825832 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.744965825 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.745901997 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.74401851 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.748234069 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.744392384 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.746723708 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.746676821 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.746600881 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746475577 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.744332688 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745240458 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746409002 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.744405658 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744762657 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743429962 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.743853152 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748621124 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.74436947 seconds)
  done (took 33.093360963 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.744366118 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.744295508 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.748224811 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.744550683 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.744191509 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.74685569 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.743550495 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.748062151 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.747044226 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.745182775 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.74851207 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746561658 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.746755027 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745230816 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747828466 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.743709356 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.747477007 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74524062 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747800221 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.743986683 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.745935844 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748604622 seconds)
  done (took 40.089869985 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748927263 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.74884208 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.746666305 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.745471587 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.746136984 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.747634123 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.748952842 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.746103568 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.747894098 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.747466433 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745228528 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.747767713 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.746335716 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.745068552 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.745770893 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745831638 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.749604837 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.746362469 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748524353 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.746802342 seconds)
  done (took 36.617600256 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.749644762 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.751004402 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.749897267 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.750343344 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.752444438 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.753506153 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.749431119 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.750553721 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.752276754 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.750933788 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.75150183 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.751155695 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.751333851 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.75021328 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.751329228 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.752345072 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.751593494 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.751989979 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.752323542 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.74994918 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.751410074 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.752214296 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.751306854 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.752968284 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.751676767 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.752489711 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.75378739 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.753855293 seconds)
  done (took 50.721843302 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.751414938 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.750440569 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.748666854 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.749272871 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.748404053 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.748126311 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.748527958 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.749075278 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.749892795 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.748158332 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.750941824 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.750043742 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.750012166 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.750319074 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.750607 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.750584491 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751634145 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.748595424 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.748796133 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748313338 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.752311252 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751796455 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.753419615 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.749620985 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75114643 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.753186263 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.749415921 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.750457078 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.755170984 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.749085491 seconds)
  done (took 54.185617553 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.771978708 seconds)
    (2/2) benchmarking "in"...
    done (took 1.769640492 seconds)
  done (took 5.22170884 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.749192521 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.752084759 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.751202417 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.748564264 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.749015197 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.752460026 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.751460043 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749289159 seconds)
  done (took 15.681790564 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.7536969 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.75398299 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.755234011 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.752444526 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.753190558 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.75546631 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.759509175 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.756591197 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.753974005 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.75520797 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.760785143 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.762877519 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.757281692 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.754599647 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.753454215 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.753941398 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.754978962 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.75543129 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.753168364 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.755199799 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.754267408 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.756651418 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.755252458 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.751660188 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.755075468 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.765177493 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.757902858 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.754006762 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.753920929 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.758797826 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.75361891 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.751901328 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.756189859 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.756250278 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.754627662 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.756686111 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.764688171 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.757657467 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.759204331 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.754950658 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.754499963 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.752284759 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.755647374 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.755920707 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.755862854 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.755801388 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.755038775 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.751455615 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.754635399 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.75786356 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.759261971 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.753752818 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.753381052 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.759672097 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.756321999 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.760072833 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.759161341 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.757532599 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.76514566 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.763732415 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.76793847 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.76476401 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.757627226 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.75809317 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.764847076 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.779470752 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.761364415 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.756124615 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.754452795 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.756263007 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.764075205 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.768694347 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.765099636 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.756689636 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.759387324 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.757796549 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.755984327 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.755594813 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.763443306 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.762709617 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.757872695 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.757267172 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.76668852 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.779325116 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.757181721 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.758634828 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.758397785 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.75827513 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.760157138 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.769275233 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.759479858 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.758166121 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.756106594 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.757859112 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.759841509 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.757789594 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.758542679 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.759039329 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.754943811 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.757195964 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.757765283 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.762559396 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.768619608 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.757398552 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.758596787 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.763119861 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.757359482 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.757996325 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.765008936 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.758085893 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.758810032 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.760707277 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.764951924 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.757228823 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.763643193 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.766681729 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.759226809 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.760223462 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.757665077 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.758855635 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.769502368 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.785149659 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.759232683 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.758612556 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.763577906 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.769690723 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.759580036 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.761780608 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.762917943 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.757728063 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.756004875 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.760162697 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.757425314 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.761230421 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.759131002 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.761089194 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.755671366 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.758954854 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.75874655 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.759587342 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.761461157 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.76045444 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.761388194 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.761709029 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.760428227 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.760735615 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.766145518 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.760560181 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.760914076 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.759849426 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.757742294 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.761810797 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.761069657 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.761048144 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.760606214 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.759001742 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.759319266 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.760804453 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.762836292 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.761501481 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.760910734 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.762273422 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.765665385 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.762536017 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.764079129 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.759806938 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.757562401 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.76091286 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.761382706 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.760398071 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.76105004 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.76245749 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.764583074 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.769205939 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.761004742 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.759867915 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.764752583 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.763351225 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.762614263 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.761957487 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.765386728 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.769650566 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.763369255 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.768885836 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.761412482 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.76246687 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.762220895 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.761246002 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.761400706 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.763134316 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.764603325 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.769642077 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.774486504 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.770588702 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.764773532 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.765090994 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.764094533 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.766153941 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.766073041 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.762787221 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.762884647 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.763507431 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.762997654 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.763697979 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.763259224 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.763561884 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.763694535 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.762588345 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.763045759 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.764331721 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.763929209 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.765654224 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.764314962 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.761407311 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.764190591 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.764755649 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.763400576 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.761501445 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.763391887 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.762644653 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.763350332 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.764572438 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.769810621 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.760237002 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.764493884 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.764919506 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.764107979 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.764284849 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.766927541 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.76824509 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.764301737 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.769397542 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.764899803 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.764176416 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.771476151 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.766318981 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.765048207 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.766481769 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.764594494 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.762134856 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.766941588 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.772022876 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.766029633 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.764473415 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.766693031 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.766710672 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.766248978 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.770970024 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.761833934 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.765507536 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.765595466 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.768275946 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.764136631 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.767143402 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.76778549 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.768442941 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.76905804 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.767000998 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.765929865 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.76688487 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.766857236 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.767673123 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.767313567 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.770643227 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.777012909 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.77023343 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.767919614 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.767942372 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.767767761 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.769267718 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.76586903 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.767114224 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.765805114 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.780145042 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.774617127 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.773688512 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.771198921 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.767625732 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.772280808 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.768121203 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.770133631 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.76645393 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.765347546 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.768215076 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.765829799 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.765822334 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.768158968 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.768714649 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.767549221 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.768720747 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.771304307 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.767406304 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.767376155 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.768934837 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.76802872 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.768026499 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.768151571 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.767141014 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.770401013 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.770070183 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.768287481 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.76784568 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.775951577 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.76901116 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.768812553 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.768821513 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.767928051 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.767969884 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.769080347 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.770929169 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.771800642 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.775603479 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.771542644 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.778024122 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.770187635 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.775493107 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.769071995 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.772829002 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.777287432 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.765615229 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.767401157 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.77019767 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.770742506 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.777501262 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.77196679 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.769067693 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.773782074 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.769813923 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.769879616 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.76901988 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.771496904 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.771163133 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.771334498 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.776081977 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.771979883 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.772989135 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.772576158 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.76631456 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.77117664 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.769064179 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.769726313 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.774362514 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.771567354 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.771702603 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.770972156 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.769159959 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.771213155 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.771276463 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.772311972 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.769725382 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.770007348 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.778323938 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.774833523 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.775513485 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.77197725 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.77933021 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.773910484 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.779769484 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.776341105 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.774880347 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.771965331 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.771107855 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.771157633 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.770712601 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.773130747 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.772399678 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.773754567 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.774630756 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.771587074 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.775658509 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.773602582 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.771458664 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.771181993 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.780447159 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.796747611 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.775164544 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.776042013 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.768860008 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.772395699 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.776203035 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.774833293 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.770615772 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.774423241 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.781586849 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.778620433 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.772684036 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.773561635 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.773895928 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.773333024 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.774826411 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.772951432 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.771658846 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.773084505 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.774220945 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.77343396 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.777391006 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.772946495 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.774171754 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.775183727 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.775860859 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.783554752 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.773680546 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.775057418 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.776189327 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.774120384 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.774493608 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.775181855 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.774048412 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.774696653 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.774811827 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.776315862 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.780678306 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.779584576 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.777209459 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.775734902 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.777487343 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.77518434 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.775202934 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.774498213 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.775235143 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.775607412 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.774730573 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.775979842 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.775995432 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.774187679 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.774234742 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.775661105 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.775710055 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.777019713 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.782317481 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.775330776 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.772327274 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.77449473 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.775476467 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.772697324 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.77491235 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.783820951 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.777226585 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.787672014 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.786224745 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.780346953 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.777237329 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.777789038 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.783655956 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.774913646 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.775880351 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.776181936 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.776974631 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.777852567 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.779101446 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.775911208 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.782086953 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.776531197 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.775074459 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.783051732 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.780229266 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.77740791 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.77773151 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.779969072 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.778105474 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.773835102 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.777110437 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.777186958 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.783200679 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.78221973 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.779415445 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.778747754 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.774464276 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.77854642 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.782168211 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.778009792 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.77854343 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.774359008 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.777198742 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.776148644 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.777606471 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.775391702 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.776891915 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.77759424 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.780903094 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.784169655 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.774458906 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.779794225 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.777712204 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.777979571 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.778788042 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.777507993 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.773542998 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.774251294 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.777623445 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.776864559 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.778659785 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.780140866 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.779257937 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.7802798 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.779523806 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.779132339 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.780907764 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.789399674 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.78634036 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.774620168 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.777737082 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.779808149 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.780633536 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.779503602 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.779798916 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.778064733 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.781033084 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.779625139 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.778240937 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.778264236 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.782586664 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79371569 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.782600927 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.780542013 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.778929464 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.78318293 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.781918245 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.776378088 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.779080778 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.781514415 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.783342426 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.790926662 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.781084074 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.785466261 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.782611949 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.78187054 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.783531092 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.784179481 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.787673528 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.783415106 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.780389745 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.780842381 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.786696286 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.796874875 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.77971775 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.790939411 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.810990652 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.784222487 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.782478575 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.782465798 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.780244103 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.781329355 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.782663878 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.781821097 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.781289301 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.78201351 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.781677147 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.782689728 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.786622426 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.783165537 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.781987807 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.781321792 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.780809967 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.783092523 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.777858843 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.782311608 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.783253397 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.783373246 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.782840617 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.782022685 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.783422577 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.795231161 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.793629213 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.783830885 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.78377272 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.781171478 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.785028033 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.784964513 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.792722728 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.789479209 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.784496705 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.784928631 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.783404217 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.782476335 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.779773052 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.782628407 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.784238621 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.784172911 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.779380223 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.794997375 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.792325324 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.786758883 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.784241277 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.783492133 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.781890407 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.78458828 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.782823092 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.782883174 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.787287302 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.786112362 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.787535541 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.784047703 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.782556952 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.786272762 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.793064759 seconds)
  done (took 1056.726422556 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.779739294 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.77840669 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.780995932 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.780133135 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.779562436 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.779780032 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781484398 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.781873756 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.781791126 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.780185564 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.78216481 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.779647644 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.780691906 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.779862014 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781308457 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.781364577 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780939387 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.781678831 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.780695628 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782212693 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.782244115 seconds)
  done (took 39.105835398 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.784386707 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.781461958 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.782031222 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.784693107 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781533502 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.784335235 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.783825303 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785300131 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.785747308 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784563365 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.786721212 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787101242 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.784629302 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.785301088 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782747189 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.785709698 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.785676519 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782748276 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.786684464 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.783416836 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.785455459 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.782139568 seconds)
  done (took 40.967600474 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.78485857 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.787637014 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.786477265 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.781145944 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.785390744 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.782865657 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.785166614 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.786371615 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.786036665 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.787255342 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.78556593 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.786011634 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.794777866 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.793110949 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.789387587 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.788258195 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.929509029 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.785441813 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.790528959 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.787705145 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.785068981 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.792031445 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.783852659 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.782614359 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.786984402 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.788919249 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.788885939 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.785924671 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.788385014 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.787699277 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.792251792 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.787490932 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.786814832 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.790415301 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.787690086 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.788589123 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.791406881 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.788781443 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.786140398 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.78900301 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.798175415 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.811119632 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.789779022 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.794448274 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.79157432 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.788925259 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.791066318 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.798417139 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.784331672 seconds)
  done (took 89.503287076 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.787727657 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.788357916 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.78673442 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.787766506 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.788055633 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.788251628 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.791049423 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.789004693 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.786306196 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.784812263 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.788683226 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.78587352 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.784702068 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.790040068 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.788778386 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.785298662 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.787582164 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.786466262 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.785045765 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.786078482 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.78698443 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.790945596 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.789418809 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.788038654 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.78730963 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.788387269 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.784515367 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.791128139 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.787128982 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.785890602 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.787613824 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.790918458 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.793952171 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.788412931 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.788771084 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.792412116 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.791339865 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.788554725 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.792194061 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.786141789 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.791351004 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.793255187 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.789922531 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.790892936 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.788104126 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.786974682 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.788694679 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.787307676 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.787060371 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.790767801 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.790986854 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.789293325 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.791231361 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.7899834 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.791239801 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.792423427 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.78834662 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.78956318 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.78774618 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.788154384 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.788176306 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.791075255 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.790731544 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.793055508 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.789571813 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.790589586 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.786765516 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.791871314 seconds)
  done (took 123.357916275 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.792672435 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.791593859 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795570458 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.791859196 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.794910213 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.793738499 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.791829187 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.792700743 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.795151516 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.795261556 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.793785351 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.794727792 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.794618232 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.79302704 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.792277521 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.795198825 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.793074136 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.79847278 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.793835551 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794890037 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.795364797 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.797742244 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.797418164 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.793819473 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.793821376 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.793028361 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.797670506 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.796634358 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.799689801 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.797547138 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.79494348 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.797742161 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.79459968 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.794711301 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.796303858 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.794246712 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.793452165 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.793747597 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.79628931 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.797074616 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.797573718 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.794210292 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.795797646 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.795485025 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.794917391 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.798992391 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.795419207 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.795223994 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.79610466 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.797527621 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.79872376 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.797762989 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.796098387 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.795428669 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.795729896 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.79643002 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.796154 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.798673262 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79728675 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.797795145 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.797026302 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.795698453 seconds)
  done (took 113.0363453 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.794997469 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.797428098 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.794996885 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.794640405 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.795742193 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.796418376 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.798631413 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.798731728 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.795754796 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.795166147 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79857434 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.793997053 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797499897 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797298994 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.792347094 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79446075 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794578193 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.793738512 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.796685458 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796281947 seconds)
  done (took 37.637857593 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.791905346 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.798498801 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.793181426 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.795757131 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.796513568 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.796818723 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.797845526 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796313287 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794493439 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797114518 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.798423816 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.798062749 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794568194 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.796042503 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.797335201 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.792772825 seconds)
  done (took 30.456949701 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.795303232 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.799190595 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.796383553 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.796966003 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.795858572 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.796960671 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.799127799 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.794410432 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.795420073 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.799215355 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.797352382 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.799012166 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.797334642 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.798615256 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.794922444 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.797954998 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.795839683 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.79573724 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.79921584 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.798114381 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.797265713 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.795930976 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.800403533 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.799809639 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.79833554 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.796404095 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.79558343 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.795879489 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.79770058 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.800157993 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.798014097 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.79556511 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.797784175 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.797113729 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.7980897 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.798000765 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.799802032 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.799664532 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.800070804 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.798406231 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.798820287 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.795887859 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.797275416 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.799293151 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.797888022 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.80007836 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.796744911 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.800432031 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.79772383 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.795411414 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.803057456 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.802221501 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.801703742 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.800181577 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.80323699 seconds)
  done (took 100.616088283 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.798748086 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.798508814 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.796034941 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.7999655 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.80107667 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.79859963 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.802102706 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.796403551 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797503809 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.803669447 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.798689013 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.804081015 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.797455877 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.804510087 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.801220532 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800886371 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.799037361 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.797430932 seconds)
  done (took 34.120908728 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.798212873 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.800479809 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.802257306 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.799190983 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.79623603 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.800493839 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.800297666 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.801473503 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800084999 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.799420356 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800961597 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.804341549 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80211357 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.803306162 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.801364292 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800603407 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.804692608 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801444085 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.798470329 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801359586 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.804343214 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.802943654 seconds)
  done (took 41.349993546 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.803435657 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.805531556 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.818136309 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.827752435 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.825155263 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.841458897 seconds)
  done (took 12.648532626 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79965049 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803860393 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.799473562 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805288025 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803568624 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803128749 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803679155 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801034829 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804098702 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800989269 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802614336 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804906039 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804271778 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800415019 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80335921 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802440652 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801884996 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802368525 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800125513 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806642904 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802108451 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803939021 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803421539 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80327526 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801225717 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80246492 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803497508 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802134579 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800378576 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806288124 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807031636 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80516733 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805713968 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802986806 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804999448 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80579561 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800881773 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806977646 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80528985 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80336563 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.805992133 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805769214 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805097264 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801058834 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803596507 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802100301 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801536516 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802798295 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80359365 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806863518 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805771257 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803873424 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804727851 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805625619 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804746494 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806127079 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801684447 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803767994 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804193986 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802257024 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8024154 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808338394 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804996512 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804222808 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80539551 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803171601 seconds)
  done (took 120.7695125 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80164559 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.804554684 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802527032 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802718624 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804800584 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805135202 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805402001 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804668768 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802226834 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803516221 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80862968 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804940354 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805747531 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805351923 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805472351 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803788796 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804675459 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803059069 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802461984 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806996688 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804195735 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804218313 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804074686 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804668442 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804477575 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809241027 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8049905 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805948602 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803788264 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805911829 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804721843 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803895336 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805770553 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.803680585 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804650278 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803635838 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808126978 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805371888 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804414323 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808692691 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806773943 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808210975 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805344822 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805216146 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806534705 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805763153 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80641828 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805701092 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805786664 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806835291 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806715029 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80742651 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806742487 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806992979 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806241593 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805880796 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804986871 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806438051 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806569164 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808973291 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805471429 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804722189 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809397623 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805014245 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805370515 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804536322 seconds)
  done (took 120.8872086 seconds)
done (took 2462.944640594 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.875932879 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.985007156 seconds)
  done (took 15.595239484 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.971255894 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.924208104 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.806840806 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.849788787 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.806944342 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.82696062 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.827974567 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.808316542 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.807533293 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.808116087 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.809132958 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.994906701 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.812999489 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.808355049 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.807495092 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.9055072 seconds)
  done (took 51.314383264 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.811065329 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.811331554 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.823054347 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.815152353 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.811406677 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.828018027 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.847845726 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.817481653 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.87560347 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.825614421 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.92916567 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.824396744 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.811367708 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.88389788 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.825854453 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.826186247 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.910657952 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.891566918 seconds)
  done (took 34.906013097 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.891760189 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.820717742 seconds)
  done (took 10.456724077 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.821308777 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.865463378 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.828039622 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.814503803 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.826541109 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.841921557 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.846613397 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.840070249 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.828375812 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.847133959 seconds)
  done (took 70.098432855 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.81753731 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.812828746 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.812697805 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.810990297 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.80491044 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.808649086 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.811652775 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.806603179 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.492847012 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.850144868 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.819495543 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.818260434 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.813414022 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.814349602 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.809500829 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.836218056 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.909454402 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.810173588 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.809466281 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.817764001 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.81237568 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.864869965 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.827381448 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.814765336 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.843398861 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.490716625 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.822233026 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.819601189 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.90355676 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.813458901 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.81480439 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.814151851 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.815124246 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.183393008 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.095082383 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.814050005 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.828102962 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.820220015 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.810492314 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.905169931 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.814077704 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.818233081 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.414553395 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.076975136 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.913473755 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.85645862 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.133785932 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.833197183 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.815081058 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.84251115 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.818284557 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.814322754 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.826926824 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.281467546 seconds)
  done (took 129.002956497 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.807596497 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.168247676 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.980113467 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.811307572 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100718943 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.022944936 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.811903714 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.860140689 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.812816672 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.042085821 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.068147321 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.921788527 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.812810115 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.809570752 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.808453895 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.80862135 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.972754131 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.886648968 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.813466337 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.807798581 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842217149 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.057848147 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.937477783 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.812780344 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.841515187 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.026692824 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.938004553 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.921307146 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.595096316 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.808266821 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.877121658 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.812787444 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.808470602 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.808112329 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.971721057 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.910272201 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.901712078 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.813194978 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.809672856 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.81044862 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.485513603 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.016929907 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.912039089 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.958230233 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.018948726 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.024553753 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.602749466 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.810860434 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.555567791 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.98020337 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.042801819 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.044869092 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.938137126 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.813771677 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.363294662 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.809859911 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.809675412 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.064224006 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961019038 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.917403721 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.813305914 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.811361786 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.810264935 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.061504256 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.814212489 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.911557847 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.812971235 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.811339263 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.912016941 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.918476226 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.955972275 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030633474 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.847117829 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.760072152 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.3646841 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.062267333 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.882158578 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067080972 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.812624671 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.809450818 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.893277561 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.654608129 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.065727859 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.06053552 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.064408517 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.844474166 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.532489454 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.804608632 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.033888257 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.030096874 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.05865593 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.015539951 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.044869189 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.27808045 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.800696493 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.799897088 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.066317134 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.939018477 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.801767685 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.159311508 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036137473 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.376634826 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.818410704 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.107663475 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.932078027 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.798639072 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.438910139 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.791563406 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.019298624 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.837785217 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.793998891 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.792796043 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.012498677 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.771067622 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.790273793 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.467521763 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.85595594 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.790636685 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.024882338 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.789942052 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052447691 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.788743851 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.028112362 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.965712682 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.822413593 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.01982489 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.997144815 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.788575892 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.037264279 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.035930975 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.907170577 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.014367123 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.518842286 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.784937383 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078554742 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.788953325 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.786047738 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.963678453 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.788886783 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.935957587 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.789811171 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.076917165 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815807842 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.024482921 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.790126409 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.045733146 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.825008964 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.841938293 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.791022373 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.922027919 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.789164393 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.706142909 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.951060886 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.78752502 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.786604912 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.616900481 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.786435782 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.945052483 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.023729451 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813657765 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.863266353 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.461362473 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.785951337 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.872484449 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.815723899 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.192800345 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.786224466 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.042924839 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.789842794 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.785336955 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.781691294 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.028088563 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.973602476 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.784404175 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.780747929 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.681796505 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.779203991 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.777865633 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.962184028 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.138325617 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.775357393 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.980805504 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.779092465 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.906446784 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.777449039 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.849400651 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.129580615 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.770645147 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.767991967 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.765517178 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.766878888 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.763823376 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.029312047 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.793848728 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.313778596 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.901342638 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031759198 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.080854784 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.012803207 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.810596334 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.758774293 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.024960097 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.763173447 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.821430196 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.758518864 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.779772213 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.991664394 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.75993025 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.970042367 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.041352491 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.642744926 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.80628981 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.75896357 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.755330249 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.754905728 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.903881105 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.847777397 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.756429254 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.750801632 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.867597148 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.877232261 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.964103922 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.750671337 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.886443558 seconds)
  done (took 887.096285467 seconds)
done (took 1200.203072751 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.744009714 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.745180374 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.733258423 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.742988069 seconds)
  done (took 28.648312841 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.750563057 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.744064438 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.744882027 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.744521288 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.746057559 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.743838107 seconds)
  done (took 12.148804604 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.818759841 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.737290918 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.738468152 seconds)
  done (took 20.967750162 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.808244527 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.129262882 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.848343328 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.169349691 seconds)
  done (took 9.622023995 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.738119292 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.73687252 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.737446629 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.738089023 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.740278744 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.740427723 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.737832578 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.738051671 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.740177933 seconds)
  done (took 17.314605166 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.233897487 seconds)
done (took 94.616118299 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.864822005 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.810978755 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.923676664 seconds)
    (4/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.970358547 seconds)
    (5/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.840546763 seconds)
    (6/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.90049309 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.146197317 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.969953728 seconds)
    (9/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.921426932 seconds)
    (10/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.807883283 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.938407023 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.462424105 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.855312369 seconds)
    (14/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.788307308 seconds)
    (15/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.917071733 seconds)
    (16/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.670143069 seconds)
    (17/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.897319357 seconds)
    (18/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.332248738 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.986725127 seconds)
    (20/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.894277401 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.512230306 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.855134454 seconds)
    (23/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.835034762 seconds)
    (24/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 3.528483218 seconds)
    (25/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.922659849 seconds)
    (26/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.835137073 seconds)
    (27/309) benchmarking ("sort", Float32, false)...
    done (took 5.523973038 seconds)
    (28/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.850091023 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.923188766 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.808255751 seconds)
    (31/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.207787401 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.912097519 seconds)
    (33/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.05837816 seconds)
    (34/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.060306028 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.046891405 seconds)
    (36/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.240679589 seconds)
    (37/309) benchmarking ("sort", Int8, false)...
    done (took 4.756746063 seconds)
    (38/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.917638904 seconds)
    (39/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.027514692 seconds)
    (40/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.119687306 seconds)
    (41/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.887554364 seconds)
    (42/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.836966339 seconds)
    (43/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.334017868 seconds)
    (44/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.284619834 seconds)
    (45/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.896535903 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.973518074 seconds)
    (47/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.305898113 seconds)
    (48/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.924698823 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.078157019 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.50933913 seconds)
    (51/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.142998404 seconds)
    (52/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.980813318 seconds)
    (53/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.845457415 seconds)
    (54/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.848960779 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.88248014 seconds)
    (56/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.10492527 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.826036934 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.924363757 seconds)
    (59/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.897576967 seconds)
    (60/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.826046894 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.174246545 seconds)
    (62/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.810520678 seconds)
    (63/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.948108787 seconds)
    (64/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.725016918 seconds)
    (65/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.919147827 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.768741113 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.81696059 seconds)
    (68/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.149273863 seconds)
    (69/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.857181059 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.21183423 seconds)
    (71/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.826620054 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.529722298 seconds)
    (73/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.33609366 seconds)
    (74/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.834117544 seconds)
    (75/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.91235708 seconds)
    (76/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.847767192 seconds)
    (77/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.824044395 seconds)
    (78/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.049698703 seconds)
    (79/309) benchmarking ("sort", Float64, false)...
    done (took 5.578523305 seconds)
    (80/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.010046574 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.019227732 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.480449396 seconds)
    (83/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.93504203 seconds)
    (84/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.92610358 seconds)
    (85/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.905056909 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.171400006 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.925253606 seconds)
    (88/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.000126783 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.827183719 seconds)
    (90/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.883078039 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.013871274 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.069172069 seconds)
    (93/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.133854581 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.128210964 seconds)
    (95/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.966490135 seconds)
    (96/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.928957028 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.162040378 seconds)
    (98/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.260857987 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.82875381 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.826449494 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 3.490544521 seconds)
    (102/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.831055274 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.68437068 seconds)
    (104/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.013362934 seconds)
    (105/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.973922677 seconds)
    (106/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.912006048 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.118040291 seconds)
    (108/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.922502762 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.016774217 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.950987761 seconds)
    (111/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.905680999 seconds)
    (112/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.503214547 seconds)
    (113/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.819881253 seconds)
    (114/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.54939149 seconds)
    (115/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.789586102 seconds)
    (116/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.948404018 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.191194343 seconds)
    (118/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.050682657 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.815684778 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.502259724 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.808675717 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.039266671 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.986573772 seconds)
    (124/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.917180652 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.192091456 seconds)
    (126/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.226568621 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.023647093 seconds)
    (128/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.193164257 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 2.024458462 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.821276359 seconds)
    (131/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.780127855 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.13789849 seconds)
    (133/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.063624609 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.975325797 seconds)
    (135/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.793559594 seconds)
    (136/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.919268612 seconds)
    (137/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.853472258 seconds)
    (138/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.858470492 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.010952581 seconds)
    (140/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.81226743 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.035578511 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.770801592 seconds)
    (143/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.080650421 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.903937644 seconds)
    (145/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.072075023 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.984935872 seconds)
    (147/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.939147155 seconds)
    (148/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.138456035 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.737172047 seconds)
    (150/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.873501375 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.10954642 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.010585547 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.802782993 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.079003505 seconds)
    (155/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.267673511 seconds)
    (156/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.345824636 seconds)
    (157/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.883956431 seconds)
    (158/309) benchmarking ("sort", BigInt, false)...
    done (took 6.772600384 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.8266368 seconds)
    (160/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.191747563 seconds)
    (161/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.865096645 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.790438222 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.774116672 seconds)
    (164/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.878616316 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.068358573 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.802370503 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.067086513 seconds)
    (168/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.99904993 seconds)
    (169/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.825628223 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.139411334 seconds)
    (171/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.759474362 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.902528932 seconds)
    (173/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.164428156 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.678941976 seconds)
    (175/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.798144038 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.01420486 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.003961132 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.038860748 seconds)
    (179/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.680761094 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.994152249 seconds)
    (181/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.33904404 seconds)
    (182/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.777907161 seconds)
    (183/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 3.75284185 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.898865121 seconds)
    (185/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.791189798 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.151407896 seconds)
    (187/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.046852846 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.949677926 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.805983059 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.844785459 seconds)
    (191/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.859262149 seconds)
    (192/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.775166169 seconds)
    (193/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.844230005 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.944765223 seconds)
    (195/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.855109902 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.059001714 seconds)
    (197/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.762990156 seconds)
    (198/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 3.44279282 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.777617816 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.775870154 seconds)
    (201/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.794499048 seconds)
    (202/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.907486634 seconds)
    (203/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.811464812 seconds)
    (204/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.79441931 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.835525668 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.801908702 seconds)
    (207/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.875207572 seconds)
    (208/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.031675562 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.87425738 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.777230433 seconds)
    (211/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.220190529 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.081515307 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.89643922 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.582944149 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.976624053 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.762141071 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.132319916 seconds)
    (218/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.225218419 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.761566826 seconds)
    (220/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.326199912 seconds)
    (221/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.132551055 seconds)
    (222/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.912846245 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.807541591 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.85236755 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.589649043 seconds)
    (226/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.018542241 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.779717891 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.101588844 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.107870454 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.901663539 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.922451282 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.111424336 seconds)
    (233/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.953697286 seconds)
    (234/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.178246409 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.030997648 seconds)
    (236/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.879052605 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.409691671 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.072704879 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.825259942 seconds)
    (240/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.010023344 seconds)
    (241/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.777712216 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.8661294 seconds)
    (243/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.779325992 seconds)
    (244/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.881221067 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.613900676 seconds)
    (246/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.846297485 seconds)
    (247/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.947368967 seconds)
    (248/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.883264371 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.718692248 seconds)
    (250/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.884180033 seconds)
    (251/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.780394451 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.773895148 seconds)
    (253/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.079610067 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.969081727 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.778821358 seconds)
    (256/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.050062952 seconds)
    (257/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.721661651 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.877687637 seconds)
    (259/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.976663565 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.168619589 seconds)
    (261/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.94315113 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.801128875 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.802671389 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.761917686 seconds)
    (265/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.493911821 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.145920739 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.297095447 seconds)
    (268/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.890726541 seconds)
    (269/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.805984687 seconds)
    (270/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.863572839 seconds)
    (271/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.80284565 seconds)
    (272/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.973478644 seconds)
    (273/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.802899039 seconds)
    (274/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.889270697 seconds)
    (275/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.08067988 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.469238218 seconds)
    (277/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.765167546 seconds)
    (278/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 3.032349066 seconds)
    (279/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.853984597 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.781846499 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.962898497 seconds)
    (282/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.289668242 seconds)
    (283/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.019184586 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.165186566 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.861403747 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.918067333 seconds)
    (287/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.132263389 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.491880948 seconds)
    (289/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.163850278 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.133924165 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.870703056 seconds)
    (292/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.303445018 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.745783848 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.091109693 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.822979254 seconds)
    (296/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.807474516 seconds)
    (297/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.214310497 seconds)
    (298/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 3.277260887 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.767390184 seconds)
    (300/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.966771429 seconds)
    (301/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.355715359 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.624866924 seconds)
    (303/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.781577062 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.780603107 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.993165436 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.947158966 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.804334984 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.116153769 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.122158904 seconds)
  done (took 985.639265135 seconds)
done (took 987.450412257 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.818025817 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.807021335 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.791709142 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.815965952 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.904996936 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.819225002 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.800141115 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.792020986 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.837841527 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.839286319 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.79141806 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.813322933 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.789860182 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.788540789 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.788374282 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.803106687 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.10595465 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.821173379 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.803485945 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.792476686 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.802811407 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.78761076 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.831609018 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.808677961 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.786468311 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.783938262 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.788498123 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.802196442 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.891225853 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.782783886 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.783438851 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.793626417 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.099512989 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.809917167 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.773134143 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.79775506 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.789620465 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.791592903 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.780602864 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.80855075 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.191724089 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.818083228 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.777449932 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.776792271 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.775360799 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.778175261 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.78061267 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.781057377 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.793486608 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.790085608 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.184821619 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.831206852 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.777347987 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.774248057 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.784699561 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.775571533 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.779511037 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.791851853 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.793107182 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.789817185 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.08654334 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.808414399 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.777034316 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.793029254 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.780972468 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.222581899 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.811522846 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.776875798 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.186811169 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.821696274 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.222422086 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.82602279 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.776443483 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.7915549 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.808421091 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.091394252 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.800921919 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.775891211 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.783693729 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.775131112 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.784493514 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.793114135 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.779375514 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.777094103 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.790769276 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.802198933 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.78515471 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.778864118 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.783277892 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.79600832 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.785889268 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.787555566 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.779333107 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.77210041 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.787071851 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.780493963 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.780263873 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.781701461 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.782833623 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.789027512 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.187500749 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835142254 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.775238845 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.775620213 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.781802643 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.792590162 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.187835906 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.81982507 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.806652025 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.820881828 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.775291018 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.08374315 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.806782395 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.789733866 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.783108066 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.775142366 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.767156856 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.080811165 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.212534756 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.824767465 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.770428265 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.767962665 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.784275968 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.770994637 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.766974732 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.085705884 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.799274915 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.783361811 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.890626833 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.778752203 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.801267019 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.767073634 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.771093302 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.795721023 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.78358112 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.799979506 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.770603866 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.786527905 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.784175989 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.765241297 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.780644806 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.777911248 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.771058896 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.773953999 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.761971625 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.795940504 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.781408194 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.780854617 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.788909362 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.891783959 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.766906905 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.077351543 seconds)
done (took 279.952706655 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.840850738 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.757980516 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.86128674 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.765969161 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.848127864 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.854444164 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.762570987 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.763048226 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.763508162 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.138751088 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.762921658 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.765190768 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.762513059 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.763651782 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.848712222 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.765704076 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.763462005 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.102601448 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.767427816 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.84112182 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.764684231 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.76141232 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.764104657 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.141822748 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.758332977 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.765207641 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.835494916 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.759080059 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.101379599 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.753929439 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.755381542 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.093107836 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.845789497 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.774034757 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.767725577 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.762483717 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.837249725 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.762694604 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.838594066 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.835323093 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.859481675 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.797498382 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.757813413 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.750435741 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.759815858 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.757445503 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.753482895 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.784531329 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.752919031 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.753376115 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.090637666 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.765026353 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.756086247 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.754178551 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.752206095 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.78673761 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.75290563 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.75872936 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.847194193 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.758930467 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.818192529 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.130276549 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.126881753 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.756232363 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.755879951 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.752574559 seconds)
  done (took 176.953007029 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.822498382 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.827581311 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.823456799 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.762351383 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.806729136 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.824312873 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.760171052 seconds)
  done (took 14.301330769 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.761894242 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.757634431 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.811974389 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.809629098 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.755581713 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.906885658 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.757489793 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.769409412 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.75623071 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.809291931 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.761608918 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.759696948 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.764113255 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.758208117 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.807885566 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.767934054 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.87578732 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.758250364 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.758184867 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.91055571 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.757398147 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.766848919 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.812005436 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.770527979 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.759789525 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.768087815 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.351484025 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.759963391 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.756505829 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.760434043 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.757702889 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.799849749 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.756912579 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.759164843 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.755008085 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.875614968 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.76015159 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.757879837 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.759770062 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.756933325 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.758962429 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.760132515 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.760136455 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.757498232 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.76040232 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.783345423 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.757523164 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.760152669 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.759625 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.760554364 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.812136151 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.759837956 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.758005809 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.757787755 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.814776176 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.766151558 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.763024901 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.757160771 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.760724666 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.757719355 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.913723849 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.808998166 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.759565264 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.810142022 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.763548268 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.764616858 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.759686477 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.761394418 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.858408789 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.759804522 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.813285689 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.757701988 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.917912894 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.785278671 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.761731627 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.764671409 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.76376634 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.760699962 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.758335364 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.766439889 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.756265795 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.764051919 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.768105657 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.75823757 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.757853106 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.874896074 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.868948747 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.758744494 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.775292414 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.769882655 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.759287679 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.814605313 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.761609814 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.761354572 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.819600034 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.881337283 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.817018468 seconds)
  done (took 195.100458683 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.769756556 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.770550854 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.764470092 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.7784799 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.764442768 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.763699519 seconds)
  done (took 12.293323414 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.764801145 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.761961724 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.765227236 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.764610746 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.763882382 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.764346013 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.76353498 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.763462742 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.767645399 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.763319354 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.766009126 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.764919456 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.763024277 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.764246467 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.76305022 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.762115157 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.765159854 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.762321169 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.764764018 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.763111161 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.913272974 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.764797516 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.765267378 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.765023099 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.769463321 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.764742138 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.773692494 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.76261491 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.7642363 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.77241765 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.769148601 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.764554265 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.76604668 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.769659476 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.768585244 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.765011933 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.767735763 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.766506923 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.761803861 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.765614588 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.766465593 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.765133493 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.762963408 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.76619007 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.766223462 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.770011851 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.769751025 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.770870728 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.765002711 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.764754966 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.768715844 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.766063908 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.766785259 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.768999961 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.769477525 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.772987846 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.772859162 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.769065494 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.764660484 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.766329455 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.764948654 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.762880516 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.767551089 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.770617143 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.772248516 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.766515678 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.768358027 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.770584262 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.766334679 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.766448181 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.76777588 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.763452359 seconds)
  done (took 130.007685828 seconds)
done (took 530.365033911 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.921942507 seconds)
  done (took 8.605863705 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.829926913 seconds)
  done (took 8.556941973 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.261940673 seconds)
  done (took 9.952748102 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.776416249 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.791799196 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.769208355 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.76538865 seconds)
  done (took 28.814241572 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.840472913 seconds)
  done (took 8.525222544 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.783690188 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.755459509 seconds)
  done (took 15.259939801 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.948317871 seconds)
  done (took 8.643460971 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.790019735 seconds)
  done (took 8.505483939 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.776237091 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.788245117 seconds)
  done (took 15.2673331 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.743895076 seconds)
  done (took 8.430957212 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.404353796 seconds)
  done (took 11.191001737 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.788984703 seconds)
  done (took 8.585375696 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.812738593 seconds)
  done (took 8.501782585 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.875224229 seconds)
  done (took 8.564822654 seconds)
done (took 159.090678486 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.76684438 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.760193162 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.761330009 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.760381229 seconds)
  done (took 28.733290051 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.800531838 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.800603525 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.802273831 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.812194604 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.806121802 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.802089636 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.795336459 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.797352381 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.814526003 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.806713591 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.804663269 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.80494048 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.800055783 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.793244385 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.80414564 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.801672354 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.814375396 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.802983032 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.794773289 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.805116725 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.771006935 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.815354061 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.808674439 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.769560169 seconds)
  done (took 44.921148476 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.967301118 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.844358027 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.92507705 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.819971343 seconds)
  done (took 9.245055076 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.821379195 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.824009468 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.833695135 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.875636669 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.897683529 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.831635641 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.79106476 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.793273786 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.778587862 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.820639782 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.89816464 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.81553917 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.908930164 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.768967988 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.95435226 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.770014078 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.769717217 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.823733469 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.87414779 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.884966017 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.769266549 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.820375158 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.826691522 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.817279988 seconds)
  done (took 45.65914101 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.765822714 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.776538222 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.775071732 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.768387441 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.770346998 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.768553761 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.775627765 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.772563335 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.790024233 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.77351942 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.770618994 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.768346683 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.768695312 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.769389323 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.769106096 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.78434162 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.784527401 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.770049767 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.772614865 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.776964765 seconds)
  done (took 37.159890271 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.764580665 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.618334624 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.116210665 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.020525479 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.765351446 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.76251548 seconds)
  done (took 30.737810502 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.785369511 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.780048074 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.770307293 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.828917188 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.9106393 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.777038053 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.774320163 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.785273254 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.821985271 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.833268477 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.789290118 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.805154961 seconds)
  done (took 23.354219274 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.769327259 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.781105752 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.767156066 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.797293804 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.783711666 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.783094595 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.783239688 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.768022428 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.786397803 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.793970301 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.785227649 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.785674687 seconds)
  done (took 43.079330043 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859411206 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.657761577 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.798933847 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49414427 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.304141285 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.976649666 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.300287755 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.115212243 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.771907242 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04098636 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.705103365 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01483717 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.02371448 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767507424 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.853598865 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.232511576 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071630405 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014364794 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794455727 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50207407 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130902512 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.726280873 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.449208745 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.896732709 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.980934189 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.903770952 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.033472505 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.736172733 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902328703 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805192735 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780907493 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.770181754 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046670573 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152323672 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883006641 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781337416 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.4344439 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.488350644 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.764308397 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.467737416 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.598806538 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.900960568 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781951867 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.771450964 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.707599278 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409347298 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110910634 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.774646651 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.473588134 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.770968785 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.782578327 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862560265 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.772943958 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.590406441 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724603269 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.048430922 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.77075505 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779460871 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34252593 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83233289 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375107166 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.840557771 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.873768849 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.423854444 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243453468 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.928472673 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.781973049 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783267972 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714697542 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.419796405 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903410113 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.925599381 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.799116571 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.430552096 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085119626 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.75919561 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.861335316 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094794638 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.535597788 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.832031015 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011145329 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.73370165 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718377445 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.641438842 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.717589859 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057599368 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819569254 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.398152092 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824761996 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.125089936 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.789819342 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804422809 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788633614 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.00720861 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.665772691 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784188111 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.479847792 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.064771178 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806451487 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.126902785 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717037349 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.784739687 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039644412 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.993628119 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.994795479 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.343799291 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948538523 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783918476 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.870349043 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.676447663 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.907180896 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.067237455 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84157699 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.830169672 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932829686 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.766093048 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105109959 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829486839 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.975143656 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.738025737 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066001975 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.117993141 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.058185024 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888802466 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.806328392 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.805851685 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.481384183 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.439697627 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.039046471 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.817371323 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283028128 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.940200775 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.817683501 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75061171 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.694036173 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.785525064 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.925741527 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.040816825 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.751611633 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206437411 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751524419 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.962212451 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.935929403 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.039375399 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.469545078 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.892832279 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077525213 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291692629 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.13735356 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942858868 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83608357 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910440014 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838008855 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.219033784 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.185882139 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.820980922 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.821027267 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.497666109 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.903668338 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837264258 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.838773882 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.635689094 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112948422 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.857468157 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.840430307 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.721750413 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.845109904 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89986072 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836472508 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.841777119 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.371393031 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.585746069 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.842060881 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.541636556 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083380362 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842679134 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.490899549 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028089634 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.925019632 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118719393 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899478663 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.7747755 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.54302678 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.544036069 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841188578 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.776415758 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.840481731 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850404183 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852160442 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.041622342 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.133740572 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884819092 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.563332472 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.957105562 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859382546 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.85299109 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848241917 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.350176706 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.904443183 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436744638 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.972100668 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985003776 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.862149189 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.782025131 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.851713853 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853841916 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.848977237 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.805086347 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903171662 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.565200462 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300578744 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111783815 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.50410571 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870315777 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.597140064 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.976467306 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.878570399 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.54136487 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913755781 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.958589847 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954119735 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.881135454 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.507149816 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.636528153 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.440790792 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182363947 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177566884 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30452652 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.349775162 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.206702271 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.21245833 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107604819 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.400407707 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931707471 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.221754668 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816545401 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962357962 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.520366212 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244892139 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888804641 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100890704 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255331556 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.614250216 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025795766 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082861789 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907600973 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.796556942 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.913309076 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.113418423 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028326811 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.558975133 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094657064 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216433334 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.558852414 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.975155719 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.871749768 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.558875746 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958106737 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.585591317 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.233884933 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.349098107 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.903884121 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368027851 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.881249109 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.318306588 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222201892 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.17089204 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.077951836 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809352817 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.884249082 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.88320706 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.873173138 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.86420485 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.815044143 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.167830517 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884301168 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109526803 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.121626778 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.262821727 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.778589466 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.881152743 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875282391 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174134401 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.635031287 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117419868 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.295000753 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.485175925 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890634088 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808556153 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808745914 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.576575836 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.876414306 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.849372119 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098539439 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.982981074 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.827190639 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329361224 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196764353 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.129917133 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.888572221 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.147071065 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149756871 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.610651915 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904288408 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.974720584 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.551745842 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.5712557 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.097895789 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.11156533 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.681005565 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.107563448 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.921198551 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.843126551 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.876296932 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091591842 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.098199589 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.790364635 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117450939 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.599482976 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.880302805 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249160629 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936488956 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.80682672 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.084603482 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.970119232 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886283646 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957773499 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88630944 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.887052626 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.887491208 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927774083 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.806576505 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.00398582 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.890655558 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968795747 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.916149615 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.483476962 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.898935769 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152610027 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238977289 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.202929526 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935558222 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.876944999 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882939551 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81213665 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01704501 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.32458995 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152918964 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.007527238 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.018532786 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903805376 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.567180486 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.2302919 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201347535 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152989353 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.774767597 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878118913 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.989186233 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.102872835 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889049211 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.089248793 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107937361 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200705972 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350454681 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.105991453 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330076688 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153539815 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.247078465 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.878620811 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.468773882 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.887187576 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.628506432 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.920520192 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.801166092 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161166796 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890741666 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252313044 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.901269507 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.075238663 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.395941971 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.5231375 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.239320211 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.866713194 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938920015 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15595824 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.272317759 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192338117 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947209456 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890721439 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.577326415 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017652529 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.866677445 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.148663457 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880472588 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092481492 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.592050622 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.891094522 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177836726 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190133511 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.878489044 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.886998897 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939264144 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.890138294 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.104712662 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143416443 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.132892817 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891323321 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.882233575 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.699883205 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171549327 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937625046 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814881557 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.884702551 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978010582 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.128288372 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901549712 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.398914407 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.584129867 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189185941 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.801318168 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904273533 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411754463 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346014698 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221642051 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.421690375 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116410807 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.441019614 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.813556531 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.265018709 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.8872025 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.365717127 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269616486 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.88670682 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.454109094 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003758474 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.15361936 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203882183 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.899138876 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.669937226 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.921652988 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106764461 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.481749853 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826619466 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890153035 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.945069461 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.883192742 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.015894544 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894462209 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.886320565 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83740614 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.731137519 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375645781 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.889663733 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.869937277 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.599101194 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.518837148 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001545183 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040800441 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891385359 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.607416491 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.17763587 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.139915149 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.474186336 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.961346162 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.887410509 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885610179 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812429494 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.081067094 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.083415483 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187892507 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.319874648 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.004288376 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888804364 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.100062423 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096581333 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.829990765 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033164394 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34134041 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005133654 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.804772747 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.600147768 seconds)
  done (took 1675.232294362 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.890958989 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.898629911 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.899099975 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.905202002 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.903768446 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.984187888 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.911459764 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.96910971 seconds)
  done (took 57.178274979 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.884124102 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.102626417 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.894937992 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.885740784 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.909523545 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.886181271 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.07857191 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.897673108 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.909727263 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.896268213 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.886759553 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.897468574 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.231129526 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.915459942 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.884862974 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.889987517 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.902505966 seconds)
  done (took 74.776965921 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.886691231 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.074684969 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.923085209 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.904487304 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.863245967 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.896190515 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.867531212 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.92212069 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.889622953 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.131164721 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.225987642 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.905668357 seconds)
  done (took 90.30464205 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.902104782 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.894321644 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.89268638 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.893388022 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.893687575 seconds)
  done (took 11.299348126 seconds)
done (took 2173.382778224 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.192682163 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.112083887 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.120860274 seconds)
  done (took 6.046975801 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.036566515 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.084588189 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.204995718 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.209662441 seconds)
  done (took 10.354464574 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.176898274 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.264291079 seconds)
  done (took 6.255718285 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.2197031 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.911595678 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.30743992 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.884585309 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.889738003 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.888604376 seconds)
  done (took 22.483628307 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.890596841 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.894832918 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.890718433 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.89296217 seconds)
  done (took 9.384599257 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.870424912 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.618653289 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.874314159 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.888101603 seconds)
  done (took 21.066983288 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.639838659 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.289015239 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.636301341 seconds)
  done (took 9.383114527 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.386330656 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.485023136 seconds)
  done (took 9.687984047 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.143731955 seconds)
  done (took 3.959911946 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.920938803 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.162995432 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.439329249 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.470740382 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.54763429 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.129560895 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.239451511 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.130387894 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.343901027 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.382994073 seconds)
  done (took 25.586698978 seconds)
done (took 139.655516988 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.50896671 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.922771553 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.091191439 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.266554037 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.14594913 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.091089029 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.108958656 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.266931109 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.796645549 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.77217912 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.254120534 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.13682736 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.062014479 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.91548058 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.064790351 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.910647536 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.121824137 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.337444644 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.973970975 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.178419858 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.123027254 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.899719983 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.091182612 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.913548506 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.126200805 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.045756622 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.443905319 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.9173934 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.116125862 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.46093621 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.050715013 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.322314958 seconds)
  done (took 169.256765473 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.89185328 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.893267681 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.893459286 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.892648264 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.199333144 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.893496457 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.892303871 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.892121111 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.945307717 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.933344817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.894870107 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.196698306 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.894341186 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.892668064 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.893649043 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.891229829 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.085985255 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.892475186 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.892489301 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.89259386 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.893199913 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.035060155 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.895138904 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.047147307 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.060522811 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.897921062 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.892506301 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.900647723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.902547514 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.903291087 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.904933747 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.893340491 seconds)
  done (took 207.804714819 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.893541773 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.894814974 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.896423219 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.89464331 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.89582414 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.893018161 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.893380329 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.893033185 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.405056334 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.413172307 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.905121725 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.899370789 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.911649489 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.894866652 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.910724435 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.893517093 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.912092583 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.91303751 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.912930616 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.911583292 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.911559813 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.566330322 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.910766094 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.579195222 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.909189721 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.912407386 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.89476245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.915463873 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.916635119 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.912187889 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.917347242 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.894768993 seconds)
  done (took 221.11329714 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.08485027 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.901028555 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.902023369 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.83188769 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.901091953 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.900090677 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.913569835 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.085842381 seconds)
  done (took 19.369661042 seconds)
done (took 619.370671751 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.388984083 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.237690974 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.082174955 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.927887931 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.176636512 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.961744715 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.922402583 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.989975885 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.658338003 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.997997809 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.61662533 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.945520753 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.709479043 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.953388688 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.045327338 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.981863199 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.516650611 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.608448571 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.105655318 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.016763362 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.096831895 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.872798188 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.006865659 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.6966727 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.732188258 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.92190861 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.091632317 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.518947787 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.934236884 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.082512307 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.681234445 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.323783515 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.938716315 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.921048472 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.977964413 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.955418137 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.262837465 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.935477291 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.046964638 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.662970854 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.998499858 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.54645279 seconds)
  done (took 104.873524556 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.891301078 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.889129119 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.88875347 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.89087318 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.891038251 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.890163698 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.888858015 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.889510669 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.890035728 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.889333618 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.890539071 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.891097937 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.890398734 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.891028019 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.888839212 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.890513092 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.88994707 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.892867716 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.889548868 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.888554042 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.89053471 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.890302963 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.904281677 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.889643277 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.889963615 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.8901079 seconds)
  done (took 50.99425518 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.905469012 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.05976918 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.148079271 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.925602879 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.905471008 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.908115605 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.923908437 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.909346529 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.907727245 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.906002538 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.01509816 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.912886741 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.926961992 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.147924976 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.9230717 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.90489821 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.905293213 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.907238134 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.066075638 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.923778395 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.927503432 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.91085894 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.925549191 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.919685373 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.906064924 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.907674127 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.909690616 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.398609584 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.915305619 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.012873922 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.964658573 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.93314215 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.319403161 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.165917882 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.964378064 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.918067689 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.906223005 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.015779231 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.912829281 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.906302339 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.925821947 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.912729267 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.14775575 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.413381097 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.922935547 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.907704257 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.41026049 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.027349841 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.948329985 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.918905491 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.146995528 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.92769615 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.909041694 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.907786625 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.943489883 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.91712106 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.906444701 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.265957671 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.9205936 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.926560402 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.91350768 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.907794654 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.070018636 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.916893698 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.058562943 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.917854119 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.915160538 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.909754573 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.147033944 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.928106667 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.412692735 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.923879643 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.909028655 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.013337474 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.065958934 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.440253276 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.922063143 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.074136 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.338081824 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.934147787 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.915124916 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.391727298 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.938535123 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.917588956 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.911940422 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.910448348 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.908882264 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.955465353 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.926051256 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.348679028 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.422617739 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.285851041 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.93728096 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.925868588 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.908687572 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.265041938 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.918376087 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.909929333 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.145429391 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.42856644 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.925488034 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.916607861 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.399970262 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.928098468 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.929689092 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.9175322 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.154712356 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.927190461 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.954433553 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.909673572 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.916249088 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.911670196 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.928847095 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.917066199 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.910894812 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.392970977 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.040014236 seconds)
  done (took 236.981532298 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.904335987 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.933323412 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.905039817 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.935455012 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.903166247 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.910326435 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.905265949 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.904395802 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.911203459 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.904136364 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.90370329 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.903889436 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.90755141 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.012261909 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.929109635 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.912235934 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.513712374 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.905876576 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.917644748 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.904436086 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.659976407 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.915197169 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.906972559 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.90487015 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.906639604 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.906046363 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.012645327 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.924270999 seconds)
  done (took 168.898540123 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.912134871 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.027193512 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.931825406 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.940892366 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.920499335 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.909413321 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.935546856 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.930391785 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.917441616 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.909552972 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.909450364 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.974233939 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.925168326 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.011329892 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.94260017 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.942916812 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.015505554 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.919428022 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.908489879 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.910144959 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.942520699 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.909919142 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.974823364 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.04363849 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.93233969 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.030194469 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.919490959 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.914091956 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.9120874 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.032984956 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.931311357 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.972545752 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.945422232 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.932016057 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.036658266 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.032511072 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.017639666 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.942823152 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.916525614 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.910645775 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.911676287 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.901006547 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.031341192 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.934126682 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.914515283 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.024352644 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.935027603 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.915046824 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.923555451 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.911847444 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.927790178 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.931334563 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.98125615 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.050121923 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.949299554 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.939604217 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.938244298 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.220710642 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.925290468 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.014438102 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.905801766 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.032735071 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.936213793 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.90282679 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.913112685 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.918247277 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.943456157 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.945015584 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.020040538 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.921025908 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.01318773 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.949638085 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.920386279 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.914570018 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.91613371 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.032911998 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.035084519 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.948031903 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.95392259 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.945780628 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.908872945 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.91490432 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.902265739 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.932037772 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.91822255 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.031163729 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.034115939 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.921484987 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.917025634 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.915721422 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.915717291 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.941145473 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.042964001 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.952654304 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.010900012 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.982752529 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.99436641 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.931725626 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.925882792 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.918003134 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.980476353 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.930247617 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.925794093 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.269912415 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.988353542 seconds)
  done (took 207.338853635 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.371970091 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.970961294 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.973358552 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.230794379 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.34093031 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.799020393 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.964746591 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.964434236 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.988560458 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.150669202 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.03780157 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.983066055 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.951892264 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.940018282 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.96625056 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.98535629 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.973674308 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.276535623 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.098328746 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.056035923 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.948406919 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.27213038 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.285318391 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.387645898 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.002754042 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.327430304 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.646429484 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.12578455 seconds)
  done (took 62.865432514 seconds)
done (took 833.772781065 seconds)
SAVING RESULT...
DONE!
