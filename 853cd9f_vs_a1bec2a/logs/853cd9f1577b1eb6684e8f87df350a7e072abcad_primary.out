cset: moving following pidspec: 4240
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.148660599 seconds)
loading group "string"... done (took 0.642777111 seconds)
loading group "linalg"... done (took 8.716808048 seconds)
loading group "parallel"... done (took 0.170217334 seconds)
loading group "find"... done (took 2.441922347 seconds)
loading group "tuple"... done (took 2.167473953 seconds)
loading group "dates"... done (took 1.390556714 seconds)
loading group "micro"... done (took 0.633762682 seconds)
loading group "io"... done (took 0.680215693 seconds)
loading group "scalar"... done (took 46.114781825 seconds)
loading group "sparse"... done (took 12.941234122 seconds)
loading group "broadcast"... done (took 1.251191995 seconds)
loading group "union"... done (took 8.985646659 seconds)
loading group "simd"... done (took 3.030109406 seconds)
loading group "random"... done (took 11.484734424 seconds)
loading group "problem"... done (took 2.169435909 seconds)
loading group "array"... done (took 23.464082032 seconds)
loading group "misc"... done (took 1.509516082 seconds)
loading group "sort"... done (took 3.741487813 seconds)
loading group "collection"... done (took 17.891482759 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.909828288 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.174650124 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.241473501 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.563264144 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.307268014 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.203512217 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.200606652 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.18550803 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.620796955 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.229065907 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.191606249 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.401419196 seconds)
done (took 7.008302617 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.298711673 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.092269861 seconds)
    (2/2) benchmarking "String"...
    done (took 0.236466297 seconds)
  done (took 0.964845972 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.097954892 seconds)
    (2/2) benchmarking "String"...
    done (took 0.141653548 seconds)
  done (took 0.87775568 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.13167948 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.200715236 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.148164832 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.146353431 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.135908983 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.146743104 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.133948419 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.147240719 seconds)
  done (took 1.697184628 seconds)
done (took 4.608059307 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.520340333 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.929253083 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.516424981 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.216666841 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.350678494 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.358976655 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.311723692 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.326608253 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.129542479 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.097572092 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.25364963 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.445894299 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.46139508 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.958828543 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.098127744 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.148952044 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.201663145 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.797665441 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.119205063 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.156656472 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.535672258 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.252783888 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.156530717 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.148472578 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.224710107 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.164896607 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.168723245 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.143263936 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.718627237 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.171089914 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.238755023 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.122843721 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.168117768 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.20057362 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.278182951 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.148657402 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.721564645 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.238605961 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.123922148 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.139640305 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.71800066 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.157956478 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.251430893 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.144538544 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112222252 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.180429205 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.140578692 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.116301479 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.149366023 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.141717961 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.198496415 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.474445151 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.144992392 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.235175214 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.148911054 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.727837031 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.137593761 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.315057037 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.166857736 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.146239961 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.130477155 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.129194678 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.198976489 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.135493203 seconds)
  done (took 22.529508283 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.247862036 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.249794965 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.117899128 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.202796261 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.185256277 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.12184047 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.144435986 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.120294317 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.170659734 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.221605585 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.18201967 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.257004324 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.133493666 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.134634281 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.224697281 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.290326348 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.146829853 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.161884702 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.128001678 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.152023876 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.18203715 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.136395605 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.152405926 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.135384051 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.21118382 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.243440717 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.16053131 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.162960692 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.14305897 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.138876411 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.182331494 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.202826338 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.117439212 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.143743321 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.216551756 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.163673862 seconds)
  done (took 6.952042033 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.275071101 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.142891904 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.306136741 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.228734004 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.167623092 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.2293981 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.220152869 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.331211144 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.345829489 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.274349561 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.201527204 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.167371248 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.136403857 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136681747 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.121087805 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.117971045 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.877946359 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.210391959 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.199314532 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.227527328 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152361551 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.12087273 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.415786934 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.141662426 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.126082754 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.151558885 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.094152792 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.261324364 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.151141743 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.517456186 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123009915 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15353807 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.167966035 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.234888001 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.164647428 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.140380417 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.1489152 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.162252137 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.142213637 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.248717709 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.140432357 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.13991621 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.118779121 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.135559498 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170076168 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.156977569 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.148521159 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160743199 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173301555 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.12653779 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166398859 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.162042572 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.235384978 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.221187588 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.125867624 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.316611059 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.163978362 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.139578414 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.148189622 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.869171679 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.161728355 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.139692801 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.122432016 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.135994858 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.150267021 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.121799362 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.496263031 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.159551213 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.329341884 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.124601951 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.200985842 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.15128823 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.15717416 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127689092 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.141774214 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.147731535 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.142172341 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12107348 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.142306142 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.121668418 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.145453573 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.144694607 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.142828742 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.120455978 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.202989045 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.138089584 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.162719683 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.165187065 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.132863176 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.141748855 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.167657728 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.123751145 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.143832149 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.244195629 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.139421654 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.161422476 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153664772 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.169594276 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.143428677 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.338294176 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.12523296 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.178506521 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.139796425 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153737982 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.152292834 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.12073225 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.144056305 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.119871489 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.14058604 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.188202381 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.141981599 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.120927114 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.145787318 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.133743791 seconds)
  done (took 32.200110191 seconds)
done (took 62.319109312 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.491160348 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108474083 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.130116535 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109808377 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.129957347 seconds)
  done (took 1.688097405 seconds)
done (took 2.389521754 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.22884555 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.333470138 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.243722194 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.155752716 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.212016093 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.209152763 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.193943283 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.207103242 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.216128733 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.212599984 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.140949357 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.234291056 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.221722316 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.193570843 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.143350682 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.247164702 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.207631393 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.194841176 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.238867249 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.148248449 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.139479102 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.162743689 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.144371211 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.145133096 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.143539208 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161986099 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.147254798 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161635201 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.136780408 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.145987272 seconds)
  done (took 2.351349904 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.136237161 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.145643908 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.138642996 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.154674129 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.141590842 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.146724242 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.140418815 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159806509 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.148191714 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160762644 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.137180085 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.146344141 seconds)
  done (took 2.334082202 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.119141935 seconds)
done (took 9.706837165 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246843428 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.900499915 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.198291645 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.309243546 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.37748506 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.320104195 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.676937964 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.252388999 seconds)
  done (took 16.111519368 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.262994095 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.136519984 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.156452211 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.137306919 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.153017503 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.134159047 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.151786342 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.133280826 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.154658903 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.138100291 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.132732088 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.153525399 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.132101487 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.149475849 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.137039939 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.155204643 seconds)
  done (took 3.193344813 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.178631117 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.176468852 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.13981136 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.159310512 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.137705647 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.158451837 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.145375122 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.157681272 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.137697449 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.154118291 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.145097653 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.157124296 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.139762823 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.153030641 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.141321122 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.175952299 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.135997824 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.157324247 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.158191999 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.158049156 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.15825889 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.140425405 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.155824804 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.142267205 seconds)
  done (took 4.44944533 seconds)
done (took 24.4707006 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.197197061 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.146192904 seconds)
  done (took 1.067472767 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.209595163 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.226527633 seconds)
  done (took 1.167721561 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.155656417 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.149545286 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.163925981 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.161504381 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.13405716 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.150228685 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.15909987 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.150539117 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.133674085 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.150216498 seconds)
  done (took 2.243943448 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.137508418 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.153211285 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.149763199 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.219490189 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.159855058 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.138909438 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.154904822 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.137359481 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.154392456 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.134147625 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.155144104 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.152194426 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.15562113 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.154283102 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.154717265 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.140085318 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.159421731 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.137774711 seconds)
  done (took 3.483547663 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.134004931 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.134613737 seconds)
  done (took 1.005067362 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.136921142 seconds)
    (2/7) benchmarking "second"...
    done (took 0.132960359 seconds)
    (3/7) benchmarking "month"...
    done (took 0.153624844 seconds)
    (4/7) benchmarking "year"...
    done (took 0.151069333 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.133709848 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.132436397 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.150594108 seconds)
  done (took 1.727334853 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.585975423 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.270392058 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.400462396 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104187926 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.156670863 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.374198468 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.156124052 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105608602 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104561475 seconds)
  done (took 3.021683384 seconds)
done (took 14.44887734 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.134668362 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.329117788 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.64574851 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.173077219 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.133196696 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.209727023 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.39227967 seconds)
done (took 2.763042119 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353194629 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.211094873 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.120089754 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.137729246 seconds)
  done (took 1.5621657 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.125312873 seconds)
    (2/2) benchmarking "read"...
    done (took 0.141333732 seconds)
  done (took 1.014658075 seconds)
done (took 3.324457014 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.154846496 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.152676634 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.139168226 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.153696143 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.138970069 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.154062333 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.13763757 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.151496342 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.137925601 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.150510236 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.137422942 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.153811997 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.134660198 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.155271197 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134327617 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.272265311 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.138514143 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151064361 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134642614 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.153617925 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.137450268 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.150522733 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.137276518 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.153229987 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.137608501 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.152982591 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.135543067 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.15153099 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.137596627 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.154633634 seconds)
  done (took 5.226547324 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.139725038 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.130264206 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.150313055 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.140312218 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.147510556 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.133803429 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.146767299 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.133915708 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.150990858 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.133217785 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.153364144 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.133519442 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.150077067 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.134308564 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.15078306 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.136638372 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.158047148 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.134217454 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.150395526 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.135319284 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.13519948 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.15223893 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.132528248 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.151993212 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.133401547 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.148573358 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.134241982 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.152507323 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.134701716 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.150320816 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.13627911 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.153753203 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.134379294 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.160103995 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.136795671 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.150069238 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.140136184 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.147473243 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.135380645 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.129663723 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.149440956 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.132673744 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.151831162 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.140928574 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.151363405 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.134456221 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.151609861 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.134917436 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.152264245 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.136972574 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.148777255 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.134798963 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.152984322 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.136398476 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.154513709 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.132074827 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.133928552 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.149537966 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.135046364 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.151773051 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.131460509 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.148673248 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.139118156 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.153373084 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.1488164 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.158634386 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.134006178 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.153213072 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.134817841 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.157231453 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.136943846 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.161744443 seconds)
  done (took 11.071260516 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.134927243 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.133078157 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.152684714 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.134423316 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.152555414 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.138587956 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.153164514 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136334482 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151895061 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136093869 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.152238141 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.135185126 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15223836 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.136896497 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.151320474 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.134957903 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.134112602 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.151498356 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.135427802 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.153102661 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.134304786 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.152183782 seconds)
  done (took 3.908609496 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.282643245 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.142000548 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.202465278 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.146498527 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.172779066 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.165710005 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.140881955 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.159766583 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140149561 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.162563182 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.145360939 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157562011 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.153514061 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.163514144 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.161591262 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.145919516 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.157187848 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.146821967 seconds)
  done (took 3.712033816 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.136100621 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.133585666 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.154189873 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.135085105 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.153309741 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.135360539 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.152477604 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.134591802 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.153031371 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.135466603 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.153905143 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136400965 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.134543946 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153271312 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134208314 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.153211823 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.13468832 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153510121 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135828716 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.152924057 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.135527998 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.153574926 seconds)
  done (took 3.923511033 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150413922 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.154763814 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.155432536 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.158915089 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.137935576 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.155151542 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.143717117 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.154884655 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.143502938 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.153933549 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.137304742 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.153789038 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.15369895 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.155937432 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.14306936 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.155021131 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.138939798 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.155435099 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.138783264 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.136265681 seconds)
  done (took 3.746097328 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.230590526 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.175120864 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.171913579 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.162750498 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.173115896 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.153944592 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.17933596 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.153326547 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.172532683 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.182566056 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.153466911 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.170642086 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.162007833 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.177095949 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.152945891 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.179621161 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.16056854 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.180751987 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.172455817 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.154053819 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.183924098 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.153289583 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.180725868 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.151795109 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.173970671 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.172082742 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.153721561 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.17866435 seconds)
  done (took 5.542493153 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.148920065 seconds)
    (2/2) benchmarking "in"...
    done (took 0.164665594 seconds)
  done (took 1.088894364 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.138332985 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.137843989 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.15782045 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.137297638 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.157356507 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.13744149 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.157510808 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.138340407 seconds)
  done (took 1.937268819 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.250215931 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.255596621 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.142143253 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.168323564 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.2549123 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.234640289 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17326141 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.162731698 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.138735789 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.150167151 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.250285163 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.128999414 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.157084547 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.133563592 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.15835798 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.141736025 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.158277233 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.145695787 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.163344316 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.138915858 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.161299747 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.141879648 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.160078391 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.166910768 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.133751843 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.168465458 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.142885996 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.168893973 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.13591978 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.158401659 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.136821989 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.157405614 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.142128472 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.141695871 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.158516572 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.257551742 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.165265714 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.134370318 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.159580304 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.142450922 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.182508407 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.138952063 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.158194233 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.137356562 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.161014762 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.142510257 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.163365442 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.139479367 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.150199275 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.134294839 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.156822483 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.134159127 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.136856125 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.159236895 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.157329571 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145369841 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.160357413 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.136515992 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.154260531 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.136122675 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.156003024 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.134542585 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.15899118 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.141167677 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.157972238 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.138875415 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.15647982 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.139511853 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.158421909 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.140665355 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.136906243 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.172834004 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.15865201 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.143680757 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.16252101 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.1406642 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154053755 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.144038713 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.157321452 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.139606439 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.162611935 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.1618216 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.159913792 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.133633351 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.152841372 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.145394603 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.159508617 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.141889293 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.150707236 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.147400706 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.160196578 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.141505847 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.130890822 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.156702889 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.133941516 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.162572662 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.130844654 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.159019089 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.13786155 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.163263882 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.143125889 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.157155398 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.141370876 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.164993705 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1443247 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.157182078 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.209375122 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.136837157 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.155794808 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.140242105 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.164827263 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.134033817 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.158256585 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.137865465 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.154695255 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.13493461 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.162502977 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.139889035 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.160476684 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.144144156 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.160061307 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.14056072 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.159831574 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.148083292 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.134516368 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.163334144 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.167556755 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.142233948 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.140639178 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.160407161 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.140939872 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.159553388 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.141852919 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.156834821 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.143086605 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.156440225 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.138801552 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.160159538 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.144681575 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.159789927 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.134418936 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.157477512 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.140287991 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.158469824 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.143028275 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.159710327 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.135191586 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.152512424 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.139834162 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.156240632 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.140053166 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.16811472 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.135614292 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.163272302 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.135708944 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.168033597 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.137041911 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.164538275 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.141829297 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.166036003 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.144273742 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.152296647 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.137879846 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.162067799 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.141143321 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.156114194 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.141012277 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.158847241 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.146824269 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.152537445 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.145109889 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.151909272 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.137444798 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.164408158 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.141808452 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.163827336 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.136930079 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.191902053 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.152129098 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.165220962 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.139907769 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.159263941 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.145033317 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.158507587 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.144427595 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.166067512 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.145815282 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.157145729 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.138375727 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.165144156 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.136614859 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.161541381 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.140297126 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.161469578 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.133007843 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.161430148 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.134243294 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.144750291 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.163867698 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.143770125 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.165733417 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.142127438 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.159616375 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.148567496 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.156994431 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.143183254 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.153104933 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.144987121 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.170979365 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.147042377 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.16754588 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.141938236 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.159534046 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.140989769 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.168778332 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.142920779 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.160672886 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.141535901 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.153596636 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.134243287 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.167012469 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.14304319 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.157182495 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.14020103 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.162352696 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.14284156 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.158233934 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.132900436 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.163912601 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.145922982 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.155297154 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141599327 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.157396145 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.139057602 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.166659891 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.133227752 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.155609796 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.142659452 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.165794023 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.141605192 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.160121029 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.144834162 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.166383285 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.144691594 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.162667454 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.138845108 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.167933161 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.139264242 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.159732833 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.138665586 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.161924084 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.135072168 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.141406112 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.161942564 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.156906719 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.138035896 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.162567989 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.147257662 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.165723501 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.139671718 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.164386789 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.147061351 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.146093615 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.157847955 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.145574222 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.158314389 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.132835588 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.158221222 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.133105548 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.162915308 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.136706737 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.165904643 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.139211415 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.160044243 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.144314931 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.163622458 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.138102854 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.167237934 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.171086241 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.136226718 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.134071962 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16063192 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.140612339 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.158854345 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.136875962 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.165242729 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.142194126 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.166342719 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.143487002 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.159197182 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.142377137 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.170399964 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.138310119 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.167443986 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.146132041 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.166508235 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.13645958 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.1653152 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.138225856 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.164305576 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.135252066 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.161167445 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.140943332 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.160901592 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.138425682 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.16023468 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.138157539 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.155513392 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.139139439 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.166487062 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.141079672 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.16628241 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.142097947 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.158166073 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.138914369 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.158185509 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.148232249 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.160288178 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.148777221 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.161757157 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.135625684 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.156133508 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.145913514 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.161413792 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.146927775 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.156550963 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.147006915 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.16905055 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.14647743 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.162516313 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.151624421 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.168917161 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.148276444 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.166688254 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.135568059 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.158832192 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.147468187 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.162005964 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.144989983 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.142977963 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.157935411 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.143744453 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.168392413 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.143401674 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.16147937 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.135507176 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.16329525 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.147167533 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.165683186 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.14477389 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.164199292 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.143141408 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.15944257 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.146215912 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.167575562 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.141861194 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.167905403 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.141958012 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.165930668 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.139001878 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.166880169 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.143857079 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.156889877 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.136716171 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.159980976 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.148662375 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.155186969 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.148445358 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.16736265 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.13988309 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.160433043 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.146847696 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.158875466 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.146151957 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.166117423 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.141471592 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.17051947 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.144263954 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.139361223 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.168615008 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.146993922 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.157152651 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.1419395 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.162838133 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.14971058 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.163231521 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.147649733 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.16277776 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.147767966 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.166796767 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.148735583 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.168466422 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.148240975 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.157547381 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.148673992 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.166495604 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.144901505 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.159451985 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.141073982 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.157997281 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.141235357 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.168050385 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.139800457 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.171005447 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.147264915 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.16067644 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.141912343 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.168178269 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.14182877 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.169424631 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.139272662 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.163596642 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.135981334 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.165364358 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.141060175 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.170161002 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.139467266 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.157193622 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.147739752 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.16903739 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.148091974 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.165808268 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.149915255 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.15783345 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.136749686 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.164964563 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.140234623 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.172501317 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.146493292 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.161192631 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.141763176 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.165624819 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.145874173 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.168938101 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.138998081 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.140545749 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.165108781 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.164062557 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.143662932 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.138367258 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.169856772 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.1419782 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.16588431 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.141418682 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.158963728 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.14225224 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.171275876 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.141466779 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.15998736 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.141370145 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.172707572 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.142520664 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.160511705 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.137994401 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.170313662 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.145413856 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.171676097 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.139476386 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.164292412 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.140289941 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.166664129 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.150950877 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.162254587 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.143801829 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.162494038 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.14848603 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.169750405 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.136213931 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.162168043 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.152855191 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.168785695 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.145450253 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.168164204 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.143588386 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.170692994 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.150469215 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.167122883 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.138329775 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.158995913 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.14236836 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.158996777 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.147741947 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.169392058 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.14254468 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.161466619 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.148685504 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.168011737 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.147342531 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.167377801 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.138741992 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.171037805 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.141263428 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.167747736 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.138787609 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.158406463 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.14827751 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.149781237 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.165256064 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.165711153 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.147590784 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.146853598 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.161725797 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.142209545 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.168829219 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.148957131 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.173426877 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.143950448 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.164698131 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.149093711 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.176799143 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.146372098 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.165253211 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.15345072 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.173053392 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.145564541 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.166573005 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.148833636 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.172432725 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.14737745 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.174348442 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.143628841 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.166754131 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.15155619 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.173280185 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.154872298 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.166508695 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.138729489 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.170486522 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.143068067 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.161220535 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.148440934 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.173415096 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.151777886 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.166087489 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.142757329 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.174835187 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.151042488 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.168087357 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.143576422 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.164629111 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.149583527 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.164278776 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.149483484 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.163800684 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.153275879 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.173851772 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.151477889 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.176704354 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.140454001 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.172732548 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.148520905 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.175295278 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.14736252 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.161588565 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.140114647 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.16899883 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.15374158 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.172178691 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.15095549 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.170215675 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.151689825 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.16692314 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.147796429 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.164345182 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.154287213 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.151714943 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.169157736 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.147336325 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.166156449 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.146753841 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.169076746 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.152353387 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.174954158 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.147606292 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.178214739 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.153804627 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.16595439 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.143075399 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.169375715 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.14943945 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.168747937 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.151713552 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.165238185 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.142399842 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.173250205 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.153137023 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.167440934 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.154479876 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.174978824 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.144755736 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.170197936 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.154590641 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.171902531 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.149585511 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.16886909 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.149555497 seconds)
  done (took 92.648579946 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.196966638 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.176580525 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.149044649 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.170388655 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.167583441 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.172366335 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.148460152 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.170819659 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.150537322 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.180117546 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.148978799 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.169424398 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.164469071 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.191436357 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.187521098 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.159915889 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.171411728 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.151686085 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.168944633 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.151606234 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.185291054 seconds)
  done (took 4.408013037 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.149825632 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.148207194 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.170595659 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.149503562 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.17114293 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.147970611 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.170307309 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.149395648 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.170983025 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149260265 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.16965479 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150609078 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.148860792 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.17016345 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.149747359 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.172241972 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.149332038 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.170401123 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.149877246 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.171344872 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.151748002 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.170485198 seconds)
  done (took 4.374050089 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.172606038 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.152102097 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.171358223 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.150003326 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.175667246 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.149398323 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.177067255 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.150016951 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.180475125 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.144720906 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.163742446 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.14540746 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.169604861 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.149411696 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.166331731 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.151754714 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.181054423 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.153097857 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.177908618 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.150851932 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.162111396 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.151265789 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.172054307 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.142044733 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.153813609 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.177249148 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.153169539 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.176539448 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.140985556 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.175780516 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.150564575 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.16584406 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.141782294 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.163008047 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.141837343 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.175812049 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.153474671 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.17187128 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.151244088 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.162661655 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.153367701 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.15351801 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.164324032 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.15073084 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.1743917 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.144603447 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.176762989 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.151399905 seconds)
  done (took 8.561567324 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.182296088 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.211134962 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.152782175 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.20469955 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.188336264 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.162539072 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.177275507 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.180609049 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.176754999 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.154410511 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.190189118 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.165330171 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.178579702 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.15860808 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.177855558 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.154230798 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.179850244 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.153568638 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.181719369 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.174890807 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.160875071 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.177942598 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.166335857 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.187137071 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.15759198 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.177357462 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.154663622 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.18081863 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.163544767 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.182027065 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.158511913 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.181388158 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.185300629 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.159637947 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.17582449 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.15958888 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.188192416 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.155892936 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.178152238 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.154383752 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.177733936 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.159652885 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.17875799 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.16625599 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.177681078 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.157749453 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.178692016 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.153008041 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.186739265 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.155551471 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.183700378 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.187944607 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.159382814 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.177849234 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.159569 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.187963179 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.157543164 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.176578089 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.158630884 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.187072066 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.153113842 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.179841795 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.165441412 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.178903748 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.162528964 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.188210466 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.178575836 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.159804107 seconds)
  done (took 12.676716321 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.18614123 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.181906468 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16737691 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.18982108 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.158823131 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.183391587 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.159278539 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.181885376 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.15895125 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.187108399 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.416823934 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.291127372 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.16304762 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.18761999 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.15976049 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.182869803 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.160136071 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.181303865 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.158936371 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.182678684 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.158348053 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.189035341 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.159289807 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.189991594 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.191129824 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.156237953 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.179423775 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.159230481 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.188998727 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.158923747 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.194625939 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.158467284 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.181449334 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.189787685 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.170344416 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.181172865 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.153832604 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.18141148 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.158967703 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.181353097 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.156609002 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.189781582 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.158348467 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.178616318 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.158963788 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.181832218 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.189228866 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.170083461 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.187294822 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.164402094 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.183063927 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.16855926 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.182113512 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.158479903 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.190481614 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.195704749 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.168350379 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.189357478 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.158803426 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.189795032 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.190056344 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.175138115 seconds)
  done (took 12.105692735 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.154771817 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.153692016 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.176870788 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.153909541 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.177003171 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.154497133 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.176283956 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.154908224 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.176794549 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.155957414 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.17645787 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.155494722 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.175206981 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.157204076 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.176336969 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.155720933 seconds)
  done (took 3.53799895 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.173295403 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.193382484 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.257079291 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.159086231 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.177732699 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.162623929 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.17799694 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.159129039 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.153017422 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.184996962 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.158079967 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.181746845 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.19504772 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.158224084 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.177522225 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.15891108 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.176750797 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.160776882 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.154862319 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.259554338 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.184061646 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.157167627 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.1796674 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.158996939 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.181226809 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.159373078 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.187549696 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.154588786 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.1805051 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.156222958 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.182045707 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.161496621 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.178748394 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.159905418 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.180323408 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.155715446 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.179568985 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.155364168 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.180156535 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.155239151 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.181143874 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.156586626 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.178413512 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.157884389 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.178565974 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.157207258 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.176438229 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.16175528 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.180487232 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.159145423 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.179646531 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.16258406 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.183636313 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.166696683 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.185111595 seconds)
  done (took 10.442733473 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1688164 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.180965527 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.170094629 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.176503489 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.159484817 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.178996519 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.159248532 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.157745572 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.182216944 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.154778419 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.182085113 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.158455989 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.181683922 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.157367947 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.183249637 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.157045679 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.178493892 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.157270502 seconds)
  done (took 3.96059985 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.156271867 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.153301791 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.17853917 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.154918253 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.179793683 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.154967869 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.177633216 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.156302697 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.177898469 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.156104567 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.176807916 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.157214285 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154344307 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.179782823 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.15529448 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.17902993 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.154670206 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.179004774 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.15441722 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.178393963 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.15531755 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.178837987 seconds)
  done (took 4.569697084 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.169531604 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.28343631 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.18585834 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.294927634 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.152735403 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.177706158 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.162172587 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.18028743 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.191409902 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.154710826 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.1749806 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.154524873 seconds)
  done (took 3.202313295 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.184576731 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.215460537 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.158757277 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.181435577 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167228163 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185307959 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164348352 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.184850475 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17006732 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198706756 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.183573234 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171455781 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192424315 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170235463 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.189406755 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167530518 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185219669 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162092181 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.181845249 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199103605 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162702299 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19259137 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162666123 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.184160819 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162812435 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19371324 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16934154 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197637244 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184246175 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171213616 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.18958907 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162589624 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193397971 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173691647 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.182998072 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171148766 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186449898 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199068247 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167970117 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194580191 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159303294 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190992825 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169451671 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191470286 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194699623 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16397879 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19102611 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163692321 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.185876495 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.185657186 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190602004 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192045836 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168178197 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193324759 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171533372 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.207639022 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196664854 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171716655 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191435056 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174032986 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194422843 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190285988 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172636489 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198128199 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168271427 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195488796 seconds)
  done (took 12.917477342 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.199134914 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.182653074 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164008981 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198939641 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170693243 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188134168 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164176641 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18734446 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162190685 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.183933552 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.229706377 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164284909 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196518032 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170770445 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188853796 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162925867 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187086587 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19453246 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162153086 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.207770294 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164776302 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195413086 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171131202 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194728153 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197567746 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169219432 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187878785 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163827168 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.186493168 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16380125 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193480287 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163920334 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195357402 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.160092999 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19561697 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186316495 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165159375 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193530928 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164963282 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191379759 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.171494502 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.201941945 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162853092 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187242557 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198103885 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165470608 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187078994 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162724858 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.187764297 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162686477 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198939851 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175040547 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199906845 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195310968 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165147782 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.186379448 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166258069 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187368158 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165845088 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192930394 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173041329 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188969961 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.208367768 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165330666 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.187125737 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171919048 seconds)
  done (took 12.923291132 seconds)
done (took 227.233511455 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.32253714 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.353137682 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.149437363 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.358714845 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.149959331 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.85987877 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.801965754 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.25721782 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.15080078 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.1483227 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.174295049 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.191382152 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.517522028 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.172219156 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.151513548 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.189832314 seconds)
  done (took 31.88265147 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.352404441 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.39960999 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.189112347 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.156318828 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.155550401 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.180764576 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.152987907 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.181391513 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.155630931 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.18417284 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.177058996 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.153336039 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.183394422 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.153118079 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.177667724 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.157975297 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.183567911 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.156698784 seconds)
  done (took 4.396474183 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.17548093 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.218723481 seconds)
  done (took 1.345915732 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.186515859 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.275604775 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.378172207 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.228476361 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.176622544 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.196661817 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.226764188 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.169962214 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.268408275 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.167401695 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.193123052 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.176151759 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.181966679 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.183632309 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.173568131 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.175903165 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.184288096 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.19484756 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.169283573 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.180548128 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.180664573 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.18290442 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.160643353 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.194738697 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.261056874 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.167357123 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.183310438 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.159261465 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.182671067 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.168842676 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.188999735 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.194816029 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.169388155 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.237364399 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.181290715 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.234091226 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.163341453 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.178582694 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.17157727 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.179454993 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.160277258 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.183195428 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.168949235 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.17794676 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.159884806 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.186598929 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.159738484 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.18386787 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.163946297 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.188577514 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.18693077 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.164949702 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.233505678 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.185711258 seconds)
  done (took 11.2753931 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.990391525 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.203851641 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.181203905 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.144928127 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.202847316 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.170098316 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.014214291 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.181754867 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.312597221 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.084059475 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.19734969 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.165715908 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.327001281 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.316339413 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.364233122 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.416707255 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.843196718 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.195137569 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188418493 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.225780012 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.185149539 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.175524785 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.197496834 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.50374859 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.158830781 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.180101682 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.162510764 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.189118215 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.238186299 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.158663376 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.185137714 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.261690728 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.356236392 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.275007695 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.157611174 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.180916206 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.15637607 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.246508075 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.352078186 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.282341528 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.251115208 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.154436393 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.180225359 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.162821458 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.195696696 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.155174731 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.241829604 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.253834968 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.253659164 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.18494865 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.167147741 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.189744429 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1607838 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.239661866 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.180853593 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.422106018 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.449676631 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.158034267 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.187579184 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.170503858 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.352057143 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.161561188 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.299208582 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.204289298 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.276712653 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.180887676 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.862904363 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.247566808 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.157543368 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.187164183 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.161484506 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.188012815 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.184613308 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.220386459 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.483924956 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.188604537 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.163752106 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.182110594 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.288545007 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.158749356 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.181194264 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.242125872 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.160789147 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1874909 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.167316468 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188241505 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.252796714 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.33638757 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.165457085 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.18862355 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.163997634 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.193769101 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.158328404 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.292335158 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.317600925 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.238164072 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.292330316 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162777227 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.244649675 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.249750971 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.186715985 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.252271263 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.162509795 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.194276722 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.162283343 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.312958206 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.195251212 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185155044 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.162538675 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.189941646 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.223429392 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.180608579 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.188446072 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.250374136 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.544699967 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.249119199 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.156061666 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.186525115 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165985118 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.242160682 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.189098946 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.329681112 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165393989 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.248046838 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.188333506 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.155397405 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.190007094 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.247254619 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.188788594 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.166901922 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.186298947 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.168913983 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.340586099 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.284066581 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.191972278 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.311245183 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.259182868 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.187913217 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.233293521 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1909024 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.251931008 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.168168779 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.186481002 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.184024943 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.875662198 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.171320096 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.18928567 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.163422982 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.267247305 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.18262925 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.161742746 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.182488664 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.157677535 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.858298145 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.188389146 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.156963103 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.186127586 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.163639465 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.189681157 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164824706 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.189450428 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.243509835 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310576042 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.192644125 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.163548497 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.185165232 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.241649421 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.161373369 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.184302581 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159328348 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.183660305 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.166805548 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.189978805 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.161303404 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.251113052 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.241752762 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.319876522 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.644569507 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.158543082 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184441857 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308235394 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1853199 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.389898831 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.189797258 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.30189358 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.248784583 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.155478121 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.449836846 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.248600725 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.266199903 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.163293557 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.256084155 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.156687256 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.190386745 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.243897298 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.158576888 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.191640344 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.241999021 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.192744212 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.167266241 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.318878207 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.186028619 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.311675311 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.15704908 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.253725152 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.186374193 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.165544305 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.417548167 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.161079978 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.195996274 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.242952125 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.164320155 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.185137666 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.945196741 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.159516258 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.194656323 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.165201172 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.325929923 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.247831823 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.166834152 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.191845382 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.167845927 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.244484074 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.293268713 seconds)
  done (took 61.342676059 seconds)
done (took 111.187913434 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.318070792 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226247594 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.420575834 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.233698883 seconds)
  done (took 2.244860545 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.339910967 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.200494752 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.296918267 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.181995752 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.306985324 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.157479166 seconds)
  done (took 2.481118491 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.230660501 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226383765 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.225190992 seconds)
  done (took 1.684723224 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.268351955 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.267565617 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.41029817 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324651925 seconds)
  done (took 2.332507298 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.336185795 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.176429765 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.214709957 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.28563306 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.304398901 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.26806716 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.208449626 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.210016799 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.215943406 seconds)
  done (took 3.254049974 seconds)
done (took 12.998078458 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.428060506 seconds)
    (2/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.410215355 seconds)
    (3/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.461870756 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.356475743 seconds)
    (5/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.452669805 seconds)
    (6/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.306119025 seconds)
    (7/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.446911179 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.323324226 seconds)
    (9/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.304604426 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.31625745 seconds)
    (11/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.193360651 seconds)
    (12/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.302752917 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.198036838 seconds)
    (14/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.190178434 seconds)
    (15/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.265812751 seconds)
    (16/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.133821844 seconds)
    (17/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.317708831 seconds)
    (18/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.245825642 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.190415528 seconds)
    (20/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.326639837 seconds)
    (21/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.447381764 seconds)
    (22/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.38126066 seconds)
    (23/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.259778268 seconds)
    (24/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.228063603 seconds)
    (25/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.156228183 seconds)
    (26/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.218599718 seconds)
    (27/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.16993602 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.213596828 seconds)
    (29/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.214261738 seconds)
    (30/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.189197234 seconds)
    (31/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.170153295 seconds)
    (32/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.249937137 seconds)
    (33/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.186811605 seconds)
    (34/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.197208339 seconds)
    (35/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.175992954 seconds)
    (36/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.375799323 seconds)
    (37/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.20690527 seconds)
    (38/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.247164397 seconds)
    (39/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.1989777 seconds)
    (40/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.185490923 seconds)
    (41/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.340815075 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.207808926 seconds)
    (43/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.136237849 seconds)
    (44/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.131630418 seconds)
    (45/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.272499883 seconds)
    (46/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.171498785 seconds)
    (47/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.249385209 seconds)
    (48/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.215940333 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.315937017 seconds)
    (50/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.159097121 seconds)
    (51/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.222278635 seconds)
    (52/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.23087616 seconds)
    (53/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.252761431 seconds)
    (54/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.160072027 seconds)
    (55/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.198122105 seconds)
    (56/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.173731608 seconds)
    (57/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.19704247 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.208722452 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.162419086 seconds)
    (60/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.170115611 seconds)
    (61/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.222992101 seconds)
    (62/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.274319983 seconds)
    (63/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.192350591 seconds)
    (64/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.220614286 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.167759228 seconds)
    (66/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.220986124 seconds)
    (67/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.186984737 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.221457928 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.20806031 seconds)
    (70/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.258924833 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.208980404 seconds)
    (72/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.141720787 seconds)
    (73/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.187121215 seconds)
    (74/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.135932728 seconds)
    (75/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.134702501 seconds)
    (76/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159572721 seconds)
    (77/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.186922052 seconds)
    (78/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.199323654 seconds)
    (79/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.15807586 seconds)
    (80/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.244189322 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.189150657 seconds)
    (82/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.167854631 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.191536682 seconds)
    (84/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.189920803 seconds)
    (85/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.158190026 seconds)
    (86/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.136765675 seconds)
    (87/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.128717061 seconds)
    (88/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.189254753 seconds)
    (89/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.128471817 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.182260376 seconds)
    (91/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.210423244 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.16808949 seconds)
    (93/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.159702825 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.18451314 seconds)
    (95/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.195719682 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.170180562 seconds)
    (97/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.225074452 seconds)
    (98/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.198165862 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.161456195 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.198359681 seconds)
    (101/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.137149071 seconds)
    (102/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.135795569 seconds)
    (103/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.197331954 seconds)
    (104/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.132197453 seconds)
    (105/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.215103232 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.187681196 seconds)
    (107/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.129126465 seconds)
    (108/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159102663 seconds)
    (109/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.137038363 seconds)
    (110/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.13678657 seconds)
    (111/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.161150657 seconds)
    (112/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.141277509 seconds)
    (113/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.354802887 seconds)
    (114/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.163143365 seconds)
    (115/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.156439763 seconds)
    (116/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.211587569 seconds)
    (117/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.130541195 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.193542081 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.165015288 seconds)
    (120/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.201889238 seconds)
    (121/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.200454431 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.19600374 seconds)
    (123/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.166049071 seconds)
    (124/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.190813391 seconds)
    (125/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.162369614 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.174022035 seconds)
    (127/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.13835845 seconds)
    (128/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.162279805 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.165387511 seconds)
    (130/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.212505095 seconds)
    (131/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.136757796 seconds)
    (132/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.130513217 seconds)
    (133/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.210382496 seconds)
    (134/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.134262679 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.190834514 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.201105382 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.183965637 seconds)
    (138/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.192366982 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.163844807 seconds)
    (140/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.158241358 seconds)
    (141/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.131095593 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.173246003 seconds)
    (143/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157569798 seconds)
    (144/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.13111073 seconds)
    (145/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.164255712 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.192226504 seconds)
    (147/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.18847293 seconds)
    (148/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.199986978 seconds)
    (149/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.133534489 seconds)
    (150/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.197960438 seconds)
    (151/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.132785492 seconds)
    (152/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.132361774 seconds)
    (153/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.133125415 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.192790805 seconds)
    (155/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.130241415 seconds)
    (156/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.130082807 seconds)
    (157/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.162331991 seconds)
    (158/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.133902796 seconds)
    (159/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.161858187 seconds)
    (160/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.160114411 seconds)
    (161/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.17193239 seconds)
    (162/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.137271941 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.193007956 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.162429122 seconds)
    (165/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.189202547 seconds)
    (166/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.134154953 seconds)
    (167/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.137322045 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.200338148 seconds)
    (169/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.133256962 seconds)
    (170/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.197636733 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.188673617 seconds)
    (172/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.137117889 seconds)
    (173/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.203808056 seconds)
    (174/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.137733891 seconds)
    (175/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.137360449 seconds)
    (176/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.157533583 seconds)
    (177/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.131790594 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.164294238 seconds)
    (179/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.164766046 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.139451546 seconds)
    (181/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.13035273 seconds)
    (182/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.198193888 seconds)
    (183/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.132215166 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.183624418 seconds)
    (185/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.198594184 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.16470929 seconds)
    (187/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.157439962 seconds)
    (188/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.137059149 seconds)
    (189/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.161836066 seconds)
    (190/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.1910856 seconds)
    (191/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.13257944 seconds)
    (192/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.13010588 seconds)
  done (took 38.844122463 seconds)
done (took 39.849011703 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.313696183 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.155599367 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.17196399 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.200964409 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.298114647 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179995431 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.217480026 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.172884584 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.21257233 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.172382496 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.188441561 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.184612407 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.199125911 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.309635484 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.201988322 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.167256019 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.189412061 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.185112376 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.213450697 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.190557474 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.298923761 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164016111 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.210965409 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.162304835 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.299867947 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.195147287 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.171674938 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.202847922 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.186053055 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.202153147 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.173404549 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.190829405 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.187791795 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.21597257 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.163550912 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.200603945 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.16328674 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.163660297 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.174041354 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.200539955 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.186594232 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.199386074 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.173519989 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.192020015 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.174449095 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.198100971 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163614469 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.203351301 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.163243839 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.200121359 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.167573822 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.215144599 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.17344707 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.18878496 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.163796725 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.191175425 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.184303659 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.189660731 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.188098536 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.189718038 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.166814151 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.18972858 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.177537824 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.189387773 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.17577816 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.164225671 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.202246861 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.175137842 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.200299513 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166680514 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.192585964 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.173196646 seconds)
done (took 14.992847416 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.171931799 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.233629782 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.316846721 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.321171956 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.192507716 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.209228349 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.205427307 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.188916986 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.203944858 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.18362072 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.228033153 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.197044599 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.319054277 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.210397419 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.207959139 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.180191272 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.175848897 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.202173057 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.31711365 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.217609848 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.188905258 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.210980283 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.191027528 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.210622068 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.167655269 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.229639316 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.171347967 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.204529202 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.167764038 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.205364777 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.214460694 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.17071641 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.197452756 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.188440948 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.212171891 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.181091855 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.209262113 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.178956633 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.196583856 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.170595305 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.20416073 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.185405504 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.195780183 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.181767822 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.205406089 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.184269309 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.203967712 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.181903895 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.196787878 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.176478844 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.197291507 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.194634861 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.209504923 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.185443052 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.210430456 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.182182221 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.215442472 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.181384207 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.200940551 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.181435308 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.198813237 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.169739294 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.199288533 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.218379521 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.175147765 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.208322393 seconds)
  done (took 14.450875213 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.190039252 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.227453687 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.181693883 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.2081507 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.175796046 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.19238188 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.163652389 seconds)
  done (took 2.414192713 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.167619975 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.33486988 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.324118543 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.32350157 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.3441262 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.337857246 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.189670079 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.196711827 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.202076066 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.207890625 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.336393143 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.421410986 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.177752147 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.211053663 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.329852954 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.16612883 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.327675016 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.197586161 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.181169874 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.326537135 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.213570115 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.228602523 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.180374953 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.194299435 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.33113927 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.16734449 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.402380431 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.186462357 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.203236512 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.181967948 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.208995582 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.244381999 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.356463978 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.184498054 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.201458736 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.327083126 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.320560526 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.181487479 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.407376414 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.17219087 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.313386358 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.212901952 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.182449357 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.210987758 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.18158943 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.311165968 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.216938988 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.21027715 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.182627322 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.338848286 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.207935367 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.333990742 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.178547036 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.210577062 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.177305315 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.212736639 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.188458343 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.211141579 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.34060587 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.212520326 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.328699807 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.329520277 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.323119377 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.328440154 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.220356184 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.335485802 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.309472202 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.181101214 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.207337607 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.182380554 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.326887458 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.211718586 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.179080451 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.346476993 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.186366413 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.330120003 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.330295619 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.209354576 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.181578443 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.202192944 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.179596085 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.197282948 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.320540544 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.181070355 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.210203275 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185463442 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.212251143 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.20945539 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.175083976 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.218927129 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.182338504 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.207262361 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.188925472 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.211299453 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.185227249 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.330475127 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.21044509 seconds)
  done (took 24.777960494 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.171150308 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.168590125 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.201772009 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.168751993 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.198896225 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.169321547 seconds)
  done (took 2.197310134 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.208429026 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.211159317 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.19290078 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.21228047 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.231770233 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.319112197 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.326270285 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.209346983 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.231463184 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.196587906 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.321211493 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.325591839 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.323223055 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.215882179 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.328985164 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.1851989 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.33001014 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.211923357 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.191566366 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.211084745 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.1834883 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.216853962 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.180309119 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.309921736 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.217060735 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.184931598 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.207080207 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.223625463 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.193135113 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.2051655 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.189270118 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.213578028 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.17671878 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.209521644 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.332106148 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.176258029 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.210248195 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.186461107 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.217243874 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.18322503 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.323674147 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.213027741 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.189919669 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.218132086 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.208037129 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.178828226 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.214591186 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.178130188 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.32833465 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.215698909 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.187605915 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.21542564 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.186580347 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.21698306 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.176627124 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.20799218 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.186335169 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.328786884 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.221317228 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.175895256 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.216534844 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.214701841 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.180170285 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.217128628 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.186494364 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.215630125 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.17833091 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.213912613 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.182241118 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.213200775 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.187577497 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.213939438 seconds)
  done (took 17.113876837 seconds)
done (took 62.02329818 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.562595595 seconds)
  done (took 2.682520942 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.249822909 seconds)
  done (took 2.370583489 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.299365557 seconds)
  done (took 19.449731089 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.499864455 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.42020333 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.102681381 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.244949867 seconds)
  done (took 3.389048669 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.153308464 seconds)
  done (took 2.291447683 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.47828637 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.347490354 seconds)
  done (took 1.951990686 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.818260113 seconds)
  done (took 1.956617988 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.969416773 seconds)
  done (took 3.097292182 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.36567095 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.286088521 seconds)
  done (took 1.793513706 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.727408842 seconds)
  done (took 1.874843022 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.187506426 seconds)
  done (took 17.336548424 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.322882037 seconds)
  done (took 1.470857149 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.358666453 seconds)
  done (took 1.511465884 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.739504916 seconds)
  done (took 4.889081884 seconds)
done (took 67.198883494 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.186163055 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.214904187 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.189445779 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.212625197 seconds)
  done (took 1.93795908 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.189188388 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.210809041 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.190985425 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.210379481 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.191178428 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.212480564 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.184351655 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.214366289 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.184852644 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.184139712 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.213314028 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.181737746 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.216999735 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.182499605 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.21141861 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.185435202 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.217045598 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.182858811 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.214466651 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.183879268 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.212683838 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.184864236 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.216713108 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.187606037 seconds)
  done (took 5.91277601 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.182024501 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.17341878 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.207207881 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.17322477 seconds)
  done (took 1.894655311 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.195266144 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.226199326 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.198572228 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.221474167 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.200418037 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.225118305 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.183817268 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.209191968 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.18498589 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.221779326 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.200722757 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.22942465 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.197580392 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.217899131 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.195707313 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.208998225 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.188814091 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.225547461 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.192843574 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.224640559 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.187391585 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.222503616 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.183742427 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.224079434 seconds)
  done (took 6.125640601 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.260995965 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.225395421 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.209938987 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.259973085 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.240038662 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.184002825 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.239669218 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.190310507 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.218310807 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.193301631 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.212314729 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.23097028 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.218333012 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.185959899 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.215210868 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.188634697 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.223273287 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.188686585 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.255780054 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.215217135 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.190895571 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.225812274 seconds)
  done (took 5.934402281 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.188917896 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.203941003 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.176244975 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.201549898 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.18995825 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.206936017 seconds)
  done (took 2.326214505 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.175437272 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.16886999 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.200632648 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.170176604 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.20329792 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.170043092 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.198705303 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.170273145 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.198800702 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.172261708 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.199019427 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.169848584 seconds)
  done (took 3.354492199 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275090519 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218844552 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.353029164 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.468932877 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260505662 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256879212 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.380585923 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228623566 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.277833224 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233233226 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278487212 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231483616 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252349646 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28532536 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211830605 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.246886588 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269802805 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278228519 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241189289 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314171313 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253648155 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273192305 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.25993239 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.247011182 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.236901981 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231582952 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.217836747 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195533793 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264533748 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263638062 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275597821 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216563941 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239526444 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286190129 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324500307 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276479689 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.364145704 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.22999418 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.232904967 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.289132406 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.330780122 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240182639 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290955305 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250572623 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197840333 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291690418 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247641623 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.253955642 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.234943757 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240324503 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280073879 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247952646 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.267954599 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234296557 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.398218061 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201700219 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.23996449 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276135377 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28575068 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271424144 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27950403 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.222555376 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.266350372 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292396744 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314348877 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.208408915 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.263038199 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.220701576 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232568487 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.309070309 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28175262 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258927869 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.29047053 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198733993 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273630747 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263652577 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221987085 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30677984 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272557813 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.217638732 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220187594 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231764127 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192830628 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.286374266 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217803242 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.31625357 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200864232 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.276043429 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275020388 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220382318 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261698142 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258054428 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230152097 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24817377 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.158427103 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241955768 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.255620889 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226443452 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22708991 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247694455 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208532155 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.222720862 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220050789 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.221320368 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267727558 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.195349973 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258180427 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240124458 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.23205485 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278661059 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214775538 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.263425542 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269789304 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296312638 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198655505 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23142741 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324227117 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269668913 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.204351473 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26918425 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.300601105 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.240691675 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204398543 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265204859 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292097286 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210933284 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.304699062 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239346865 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202949021 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.226026126 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274236264 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.227152928 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.258400546 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224680046 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.235687007 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286654015 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.227013449 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207729738 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28283459 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234876436 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192159167 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235600324 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233772477 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.211202783 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.249689525 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.206445512 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254793445 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268976017 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234972008 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256228045 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234180939 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273194183 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199328413 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.270669658 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24571654 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.188169537 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.274949011 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301128129 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197088506 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280878494 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.259491839 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276349324 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275263557 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198018044 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.283437895 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196596059 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.219569117 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261434991 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240454826 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263557701 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.290694538 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274669911 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.264290692 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.263222759 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218468974 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268473818 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.286066436 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225969041 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.239478593 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273859328 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269208478 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.190017537 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.220421507 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.196394156 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236842494 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199481628 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234971601 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280045447 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232197092 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27234215 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.268624736 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239305291 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.294841863 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.193808287 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259307713 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.277441034 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207929029 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.291653402 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29404373 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280520082 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209575339 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265168695 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.219750828 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195446928 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.233945697 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228264278 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.238481493 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203457534 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243703568 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.298514668 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271096769 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217161854 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.316409413 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23569588 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.305167632 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.221428317 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.230176637 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267433386 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269501646 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.257542869 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232400025 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.228158709 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.295765363 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243411575 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29507359 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269271943 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252861192 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296825664 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.26785876 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198719235 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.24517539 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26162781 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207529296 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.261768302 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.243534827 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200585032 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249241315 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.206159837 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240286378 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289297548 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244503175 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244297801 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.256350045 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27003998 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194672316 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243368842 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277668775 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244602367 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.165071915 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265594316 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260122384 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250508924 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253274728 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26939812 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201188184 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.418774529 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281182377 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240120768 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23708004 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238185623 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243936782 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.258825558 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260265781 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251925984 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243701986 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312843267 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.272407217 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.208578463 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23170234 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246342852 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220657183 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.230239058 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.222146018 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.265081365 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.242988956 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289493125 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206073358 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273277455 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282006854 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.215052794 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.25001062 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208729467 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.361220774 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240438415 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273927585 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.267791852 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.233215299 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284493617 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226472664 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197151485 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.2348319 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.286505242 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20039439 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286008191 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.26351512 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279498818 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277644097 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231810868 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242322429 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.196128192 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.270460942 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251313301 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280326998 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206143113 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.238479572 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287878023 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.187218467 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232240084 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228758772 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396133586 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248057197 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2698104 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.166181588 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.388351806 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198766031 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233284636 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.259309485 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23872862 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.235120452 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.258053203 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27530871 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242977813 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.228258951 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237653315 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.278113076 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282400829 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270172472 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244125609 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.24751744 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264237507 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257366464 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242358504 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248504241 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.247598008 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229984764 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30017253 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.277452478 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.201439463 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273715186 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274595315 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241593644 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274718716 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241631439 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284632808 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199364701 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269353027 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208387542 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227334519 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261444277 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.264778161 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201492627 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275236673 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275625615 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202455996 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228838785 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216384431 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270603787 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244415861 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.200854618 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287627874 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.232405677 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286828173 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284706857 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23192301 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.269451299 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213923479 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232316674 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209792635 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246604859 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233290032 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.249076811 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280519853 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.200936547 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276401591 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268941121 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265697332 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223803981 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244795755 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.369194749 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.199161269 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296077839 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.251807429 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26711939 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.251961842 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282981004 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273708867 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221766382 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269285199 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249192783 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.294414838 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269192189 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.27226126 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202160649 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246068328 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208493109 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.238093969 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.253589384 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242656816 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248491866 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.237943438 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.242551263 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24928402 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.247396623 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213535144 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30648614 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.253598331 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290839947 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.257147389 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242226176 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280312927 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27644341 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200829263 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.268036503 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274935701 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216192667 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257499787 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.204942451 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.241535043 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322184309 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.196814425 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26392874 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279442848 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.242426876 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278416165 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.238694214 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282974569 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21342412 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282320358 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197499421 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.25483893 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.275022916 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206397516 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.23027891 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275798931 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232697036 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.271255013 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.246185442 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.251580024 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303075531 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.195496069 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238581937 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395842594 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264184199 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267750081 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.227038032 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208592702 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251880931 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263066627 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.23986576 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278519103 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.233623823 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20294223 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.24960957 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.22351459 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.229373601 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.274093529 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253641438 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260922074 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290636418 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.205730737 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.362275313 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247156617 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245759327 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.209720955 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.201648301 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245650213 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206700804 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245618023 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.282118644 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323649213 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.268860367 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.219991222 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239338921 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.197720032 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238223038 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.264011211 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225800375 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279318451 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252140517 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.165831036 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2450811 seconds)
  done (took 122.314942294 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239863788 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.229630969 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.24557868 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.299861092 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.273077132 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.372240026 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.306978589 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.322860123 seconds)
  done (took 3.569850231 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.192264625 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.240387255 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.248769868 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.190623008 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.214090339 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.596967716 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.242203357 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.22561927 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.233939208 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.227132546 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.21298879 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.647974638 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.222720519 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.221351556 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.22204781 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.18184426 seconds)
  done (took 5.598346397 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.503797489 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.761591452 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.494274641 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.426375469 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.381035553 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.298852358 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.972106032 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.292199321 seconds)
  done (took 14.421880848 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.245529978 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.275728885 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.535015856 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.421143862 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.290925439 seconds)
  done (took 3.066069108 seconds)
done (took 177.593583161 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.197656874 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.196034284 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.23247988 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.197878606 seconds)
  done (took 2.104957188 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.25879548 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.153871118 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.191343494 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.153826619 seconds)
  done (took 2.057645277 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.460945143 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.154245412 seconds)
  done (took 1.934560117 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.218996531 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.238180959 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.710380631 seconds)
  done (took 2.478089438 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.208298547 seconds)
  done (took 1.513402418 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.190940903 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.190117547 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.38774107 seconds)
  done (took 2.07459693 seconds)
done (took 13.462766159 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.215172081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.02781767 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.656423092 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.205950067 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.823291932 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.470912519 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.527024583 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.25172634 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.275695431 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.215322546 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.216388644 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.795313223 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.510422701 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.94598394 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.498030677 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.945385552 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.796945754 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184203474 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.222132935 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.184177605 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.504001205 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182224652 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.215551407 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.183469953 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.796085347 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.489472395 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.214520865 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.963357174 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.214362451 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194090837 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.504260522 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.184607945 seconds)
  done (took 23.902461878 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.187529244 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.273676827 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.24122686 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.219432622 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.19160786 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.217695497 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195062516 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.229753793 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.318668932 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.184733619 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.238201443 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.183534383 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.222609033 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.185417904 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.240616982 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.183820575 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.219232096 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.185563959 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.222530339 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.187946862 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238364909 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.184253274 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218484524 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185347512 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.216003137 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.201218845 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216385739 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.196586124 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217280618 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.19400984 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.221105726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.184706192 seconds)
  done (took 8.115687533 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.227755806 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.284387936 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.240279665 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.256932362 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.271491736 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.187851132 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.307173353 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.254635961 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.292210239 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.218481122 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.207066712 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.218135287 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.224842615 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.219178169 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.209212964 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.21808482 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.187439239 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.218069842 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.224408689 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.187625056 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.239082541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185171542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218250381 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185466901 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.217355578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.204088532 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.21672623 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.198080137 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.216074491 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194599314 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.222549129 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.186272905 seconds)
  done (took 8.454086077 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.199293207 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.198999029 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.241760367 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.240478142 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.195643387 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.198656495 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.233054386 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.195273528 seconds)
  done (took 3.02417886 seconds)
done (took 44.796889892 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.208105655 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.233204698 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.206872352 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.200420949 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.386829824 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.191871213 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.235825491 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.19221399 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.197953495 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.241408855 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.184478852 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.226509062 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.204545871 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.228736127 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.356208902 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.200372388 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.393101474 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.356456058 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.194847866 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.234637821 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.193320991 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.359862356 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.234101277 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.19352475 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.338682628 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.223556645 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.346264943 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.196439816 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.229090384 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.185705799 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.357638356 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.230706812 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.193892142 seconds)
  done (took 9.460297372 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.303505727 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.230795963 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.194817483 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.229871982 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.195215338 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.227685694 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.342557414 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.194447437 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.22866311 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.193424995 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.227407307 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.287749189 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.234305451 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.189234414 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.230838414 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.174024635 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.341991038 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.229536731 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.186616988 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157599634 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.225083448 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.193532164 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.352125182 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.224741326 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.195863031 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.229001742 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.196310445 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.199318178 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.231701646 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.195309707 seconds)
  done (took 8.177669317 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.199769449 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.207724554 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.248328007 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.296373031 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.22508238 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.24097935 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.211551363 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.24074045 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.21620466 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.22362695 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.204760193 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.258836086 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.205135662 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.232583725 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.188110309 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.238595643 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.204301469 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.223694196 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.197276352 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.240813701 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.207936689 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.241149026 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.210650499 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.231098459 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.187921351 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.232126335 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.198968692 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.233989462 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.198235721 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.239677714 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.191644565 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.225404085 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.192453535 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.25956125 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.191801745 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.236591105 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.209138012 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.235870362 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.203123995 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.257417723 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.190657287 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.226247137 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.21521574 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.281270602 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.191261262 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.234863709 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.190719488 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.238702404 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.187331156 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.242307807 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.231812087 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.224993884 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.244120489 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.189133662 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.187140676 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.233013624 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.190741558 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.2285166 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.20457593 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.225798887 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.211129417 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.231376204 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201061729 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.226529435 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.201323575 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.223775846 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.190202819 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.229589608 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.215889867 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.231901389 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.226527033 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.224722441 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.201259672 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.237598932 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.201280874 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.236747924 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.188982703 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.236176391 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.200952296 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.228094655 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.203644874 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.226973031 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.195572294 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.239685818 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.212603636 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.238649215 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.202142067 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.234426756 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.192092795 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.224954129 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.207803132 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.225671475 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.19332337 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.237528546 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.191747859 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.227770332 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.202630019 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.234291814 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.189831724 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.250649579 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.194641105 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.223418252 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.216702489 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.193072082 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.22811543 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.199482691 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.266572476 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.22555074 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.200760408 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.201029457 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.223621641 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.199461798 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.227008762 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.189432457 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.240423792 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.206326059 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.232717896 seconds)
  done (took 26.935771883 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.454711385 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.445783448 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.296230699 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.532046374 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.203221837 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.402870717 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.445872426 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.450107206 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.226700825 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.226449567 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.285225793 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.409524517 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.228503801 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.254388435 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.453572704 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.533100622 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.220698668 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.268331993 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.262407941 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.205924701 seconds)
  done (took 8.160461744 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.200583637 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.259476495 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.215168748 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.242833872 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.202329053 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.242012949 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.193053067 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.247689655 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.202707057 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.232822083 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.195947862 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.231665683 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.205562055 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.20532613 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.242560751 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.213691487 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.236313143 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.195384816 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.247969425 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.196499877 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.205589209 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.217667462 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.236531905 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.213569434 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.244529378 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.201358514 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.224317748 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.197166527 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.232408294 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.200628677 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.230265288 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.199955066 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.233909023 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.172486855 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.238072293 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.20763295 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.231658178 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.196255623 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.230365799 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.196062049 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.205077614 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.237025255 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.200192153 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.200563181 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.211585096 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.177789853 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.240290819 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.203594535 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.208512541 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.212877053 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.238115018 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.20609937 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.233292999 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.213876276 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.232675607 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.209361036 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.237517558 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.205922776 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.231348389 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.190588135 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.222965111 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.196142535 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.234145271 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.207196355 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.237769535 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.200811148 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.234249027 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.192772494 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.228930484 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.196989048 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.195468231 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.239819264 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.246958429 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.203865402 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.198821427 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.236992478 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.20076218 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.196796506 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.200715513 seconds)
  done (took 18.462244331 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.218925018 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.236451425 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.210919823 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.259640323 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.205864224 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.233309406 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.203192001 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.244717696 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.208030638 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.21220079 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.241595607 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.239387784 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.215275121 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.23722448 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.202912528 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.241977894 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.204245627 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.266033009 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.205822278 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.254022932 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.207927852 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.23241731 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.206023657 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.239763775 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.220433126 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.239578636 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.220211567 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.240337684 seconds)
  done (took 7.729345332 seconds)
done (took 80.247396105 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.568677771 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.709583074 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.471273795 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.477095169 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.518280834 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.498116798 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.472968947 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.48011913 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.08787792 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.447620006 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.472631207 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.471972946 seconds)
done (took 32.090368343 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.57266244 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.188853886 seconds)
    (2/2) benchmarking "String"...
    done (took 2.201863464 seconds)
  done (took 5.754372965 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.166758458 seconds)
    (2/2) benchmarking "String"...
    done (took 2.182033757 seconds)
  done (took 5.710360548 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.459703553 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.460961032 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.703919436 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.45836046 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.461718951 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.459733868 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.470386637 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.470989754 seconds)
  done (took 17.850178866 seconds)
done (took 35.709826405 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.535951996 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.646482712 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.699396472 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.445080377 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.461286403 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.474115378 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.461762745 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.487167481 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.461020293 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.446798062 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.906108005 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.713325726 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.471579273 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.83157651 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.447692115 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.491183909 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.477474797 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.700644693 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.463088821 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.502058008 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.453164595 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.450296031 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.468848107 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.470482235 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.474146177 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.476613703 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.521675574 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.475605006 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.648867871 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.46609461 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.507545592 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.462985634 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.520218715 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.463908534 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.463029944 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.470805441 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.669595873 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.478151011 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.457967518 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.470909347 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.662702761 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.470689726 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.464993189 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.470224346 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.450834819 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.544233518 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.451207557 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.590548858 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.503937027 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.476031829 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.50741849 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.842319476 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.464596071 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.480377526 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.476452799 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.692300665 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.493543685 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.543653685 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.491610954 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.485229379 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.466474341 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.463473817 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.529486487 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.468245087 seconds)
  done (took 160.850637201 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.465774877 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.467483937 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.469255236 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.474751813 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.465147369 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.469629831 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.466209141 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.465238623 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.467640697 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.491684873 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.467834408 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.464409758 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.468993561 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.428462156 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.472492055 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.472467888 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.466725476 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.465042304 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.491965695 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.466890335 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.48909232 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.465986239 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.466095921 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.466702966 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.467142488 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.549674627 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.48460958 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.473817539 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.474231628 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.465684772 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.475018177 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.469395692 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.164072424 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.335151617 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.475290255 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.511755415 seconds)
  done (took 89.970307243 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.46542216 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.467874399 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.467394299 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.503904295 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.467102619 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.125520832 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.125562561 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.451645927 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.511776142 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.467501933 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.07462413 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.782133665 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.471302377 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.561834733 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.480606968 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.46897308 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.566753788 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.493715797 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.471173072 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.470318547 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.099739212 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.482556573 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.65254043 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.658748159 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.468242094 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.504363707 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.871645872 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.469175872 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.505007433 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.812011214 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.507302629 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.469016894 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.897039686 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.067833169 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.583997689 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.469149921 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.505171885 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.471883144 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.470596221 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.759178938 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.470234597 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.468610216 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.470930473 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.473226755 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.185495729 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.473677141 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.128514369 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.473193775 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.479927985 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.470130346 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.470595898 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.005804569 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.298474573 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.472182672 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.469256993 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.4714009 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.470210997 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.468727552 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.506951818 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.975649101 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.387016845 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.470990768 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.470583006 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.474545729 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.507470619 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.472010007 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.700326468 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.470689628 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.354820012 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.534618947 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.627988344 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.104740399 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.47079575 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.569079549 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.593556637 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.471927295 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.472006384 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.47255808 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.472160038 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.587927048 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.471789356 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.295175042 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.659659636 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.473985652 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.081284152 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.575670868 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.473257058 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.893755538 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.475299347 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.472745332 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.235747082 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.571705671 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.473924458 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.472482627 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.473196446 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.295931445 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.132387943 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.801457877 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.476043809 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.480954972 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.476928257 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.425591435 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.098359988 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.201818833 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.476056184 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.588808431 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.662492931 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.475069604 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.474365916 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.08366427 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.478420589 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.52861109 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.475000815 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.880032845 seconds)
  done (took 411.995297351 seconds)
done (took 664.17925656 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.458265198 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.459906038 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.460998675 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.460708994 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.460915428 seconds)
  done (took 13.675460876 seconds)
done (took 15.050325867 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.476232033 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.476300585 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.476745707 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.258995931 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.479948452 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.476848549 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.477675049 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.476930961 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.475868486 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.477361144 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.219749863 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.480410952 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.477377023 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.402916515 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.249651931 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.480686424 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.328991233 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.477824659 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.47821127 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.789925962 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.485295442 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.542336408 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.757178606 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.519876305 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.768487297 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.825752271 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.486596572 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.665351957 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.519990291 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.498029563 seconds)
  done (took 21.236145407 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.253076594 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.811542467 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.486149044 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.563540835 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.774726113 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.521756564 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.804058108 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.817890231 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.487809432 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.68970048 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.501743118 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.498085312 seconds)
  done (took 21.334673197 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.208365932 seconds)
done (took 94.558339598 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.516140069 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.58414382 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.514650516 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.494972372 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.495785752 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.495481366 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.496485913 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.496753357 seconds)
  done (took 13.474618105 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.492876556 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.493784829 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.49192078 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.492964626 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.494275001 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.49430376 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.493908615 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.494273048 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.493809357 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.493758529 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.494913705 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.494564461 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.493939056 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.494487099 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.493251192 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.494880879 seconds)
  done (took 25.28175546 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.497200731 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.493391149 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.494989772 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.493477747 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.494462483 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.49450671 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.495175858 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.494061529 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.494654796 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.493188943 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.495746734 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.493675866 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.496325862 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.493865965 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.492733436 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.496081985 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.495006849 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.4938753 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.499429322 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.49396729 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.495419691 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.494687809 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.494564254 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.495472487 seconds)
  done (took 37.256488697 seconds)
done (took 77.390257468 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.481104051 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.48564694 seconds)
  done (took 6.347560666 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.553747397 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.555798214 seconds)
  done (took 4.49183708 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.496337373 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.49546782 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.496379952 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.496037245 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.496479897 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.495994107 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.497107445 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.497217457 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.495964707 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.497610506 seconds)
  done (took 16.345402473 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.49712839 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.496035764 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.495850198 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.497371825 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.496891428 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.49732289 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.495998348 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.498942287 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.49803408 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.497756105 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.498013551 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.497292112 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.499128848 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.498577652 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.497895451 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.496646015 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.497021272 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.497385536 seconds)
  done (took 28.335963514 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.511266822 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.517084812 seconds)
  done (took 4.411615414 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.625836157 seconds)
    (2/7) benchmarking "second"...
    done (took 1.541056459 seconds)
    (3/7) benchmarking "month"...
    done (took 1.602011667 seconds)
    (4/7) benchmarking "year"...
    done (took 1.595269793 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.539978283 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.518766138 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.539507416 seconds)
  done (took 12.346032604 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.493654346 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.776719081 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.964204848 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.659789678 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.488859312 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.511378049 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.471027119 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.515795978 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.514346346 seconds)
  done (took 16.780168641 seconds)
done (took 90.438497314 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.485407639 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.572997349 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.499886528 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.506352518 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.840378322 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.549661084 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.491220592 seconds)
done (took 18.330460672 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.47974466 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.474413242 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.476717702 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.50213163 seconds)
  done (took 11.319004212 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.487466011 seconds)
    (2/2) benchmarking "read"...
    done (took 1.832187849 seconds)
  done (took 5.705783441 seconds)
done (took 18.410065987 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.500325483 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.499892824 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.500873941 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.501992899 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.500889669 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.501960056 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.501147844 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.500432816 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.50091671 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.500846484 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.50159097 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.50126784 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.5019328 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.501842471 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.502368425 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.501643388 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.500309029 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.501279651 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.501522757 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.501066962 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.501978515 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.50149729 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.501792129 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.501359527 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.501949352 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.502945426 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.50330152 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.501266489 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.503639629 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.500760324 seconds)
  done (took 46.430174262 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.505567007 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.508893247 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.50126416 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.502726495 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.502396339 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.502339991 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.50395675 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.503287131 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.503090207 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.503914388 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.503250733 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.503807579 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.502890092 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.503152842 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.502800922 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.503862495 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.502939476 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.503121808 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.503370568 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.502965117 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.503587368 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.503352928 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.503532226 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.504230776 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.502674267 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.504134547 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.503842986 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.503245549 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.503935154 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.504332817 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.504003224 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.504362049 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.504457017 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.504807692 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.505130324 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.505121619 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.51012351 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.510378601 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.504713334 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.505478094 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.504029336 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.504008287 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.504396636 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.506827698 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.506005611 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.505321437 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.504614678 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.506433352 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.504654491 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.504895169 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.506580663 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.506235307 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.504551861 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.505995775 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.506115704 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.507802972 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.505593044 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.50665641 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.50748021 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.506042412 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.506249292 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.505493718 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.507903143 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.506434115 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.506700575 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.505524081 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.507422025 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.507021726 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.506636274 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.507252382 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.506737505 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.506457623 seconds)
  done (took 109.749750138 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.508393698 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.507098927 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.507063177 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.506723797 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.506293507 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.508210534 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.506601296 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.506823784 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.506973602 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.507919294 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.50765708 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.507864603 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.507260898 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.507373929 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.508039635 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.50728603 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.50723905 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.508823705 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.508309917 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.51093089 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.508115987 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.509659771 seconds)
  done (took 34.561440504 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.507880111 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.510314015 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.508547609 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.509417548 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.509764806 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.508636217 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.508301321 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.509568951 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.509159307 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.508089805 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.509354136 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.509876799 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.511672851 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.509344114 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.508957828 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.511119571 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.51034453 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.510067495 seconds)
  done (took 28.564732671 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.510253993 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.509807415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.509839087 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.509501926 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.509173572 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.510630346 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.510037984 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.510634531 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.509650723 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.510196437 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.510012459 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.50973885 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.510739473 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.510157385 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.51106142 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.510342831 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.512181674 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.510822956 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.510638332 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.510916251 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.510477396 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.511127005 seconds)
  done (took 34.622645503 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.510434891 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.511337646 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.512080334 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.510536036 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.511592319 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.511795372 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.510554322 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.510635032 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.513616358 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.510904123 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.512231593 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.51232577 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.513759331 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.513286829 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.512701786 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.511990852 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.512418337 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.512051208 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.511828204 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.512975612 seconds)
  done (took 31.634477938 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.514093171 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.515308316 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.51364505 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.514097634 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.514462875 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.516148222 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.514153893 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.516357562 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.514965445 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.514652195 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.515400133 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.515411233 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.516132359 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.515228157 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.515976876 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.516563404 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.516080196 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.516340893 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.515803647 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.515692399 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.51659209 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.515528632 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.516655846 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.517179936 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.515214569 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.516639482 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.517163308 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.517557817 seconds)
  done (took 43.836813411 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.534055273 seconds)
    (2/2) benchmarking "in"...
    done (took 1.533602265 seconds)
  done (took 4.466465269 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.516045017 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.51598841 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.516715942 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.515202984 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.517028374 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.515501355 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.514828156 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.515652215 seconds)
  done (took 13.525127343 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.51021322 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.515284003 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.516959097 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.516079668 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.515646859 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.509185572 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.51999224 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.520158744 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.509881866 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.510832578 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.515739228 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.515615957 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.512421955 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.511823286 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.511696496 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.512892086 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.517272892 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.516578701 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.516509048 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.517306622 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.517124481 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.513506844 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.516089772 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.519255731 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.513219475 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.521292296 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.519329741 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.519801797 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.512412186 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.51604343 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.513903589 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.51957512 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.517580773 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.518457452 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.517715672 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.517999328 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.522033125 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.519839339 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.520936136 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.523427273 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.519047519 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.518876999 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.514956508 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.517932151 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.517964476 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.521455588 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.518892653 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.518588651 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.513302333 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.517500094 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.524693799 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.513268863 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.521593463 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.517879065 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.519553042 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.524687643 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.526921315 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.515549221 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.518912574 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.524526549 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.530933981 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.528229439 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.520617447 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.524573078 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.519876991 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.525558305 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.524592885 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.526914956 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.521410984 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.521877962 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.522017643 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.533005061 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.532194115 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.525319733 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.521521567 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.520112255 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.516419508 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.524832773 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.524658325 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.526281811 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.525085836 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.521277858 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.521565508 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.524858775 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.51849285 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.525338204 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.522597644 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.520752381 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.515166869 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.528272544 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.530733195 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.521455533 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.515220259 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.51832668 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.521740726 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.524487966 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.516166322 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.520064368 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.52612594 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.521558006 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.524638984 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.518974532 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.524955607 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.527104498 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.523669093 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.526286815 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.528068802 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.518842629 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.528430998 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.529463511 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.52407755 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.519987072 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.523282009 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.527897603 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.519450951 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.52648243 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.529564281 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.523147912 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.529546635 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.52587005 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.524522225 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.531609393 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.528528906 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.525205743 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.522189015 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.531754966 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.524925297 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.523657427 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.529038421 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.524527925 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.52441872 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.522520435 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.529510094 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.522773796 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.530143846 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.521960845 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.527999289 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.526089887 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.525157367 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.522872314 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.525267589 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.52388911 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.526141512 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.529843864 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.531217224 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.524583526 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.533570995 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.527036846 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.525324019 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.528877319 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.530364066 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.526884912 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.523067674 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.531449972 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.521390948 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.528430036 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.523532188 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.530594847 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.527332398 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.527943082 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.527552478 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.520608031 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.526281102 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.53054138 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.52785202 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.527219447 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.53143407 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.528510768 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.527464503 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.522022545 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.529167855 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.521961552 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.527328188 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.534056226 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.528669445 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.529390271 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.528233205 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.534598026 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.530917626 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.528351924 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.524364827 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.532025158 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.534222774 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.5338225 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.536947697 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.530011154 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.528380842 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.525107507 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.526390334 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.532219254 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.524882985 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.53689296 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.537831252 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.540840294 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.527646302 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.533039283 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.522519995 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.53225752 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.530873392 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.535958973 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.53225409 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.531225956 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.524953459 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.534270383 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.527935899 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.534265112 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.524968667 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.533758774 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.532090313 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.530479042 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.530748325 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.527740962 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.531177687 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.536611635 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.531663203 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.531078033 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.526323371 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.534126203 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.524934632 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.527788554 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.535135237 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.532717346 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.534817188 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.538880034 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.530891937 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.535934239 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.532882809 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.528953148 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.534002712 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.53145168 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.533860216 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.538797869 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.536301308 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.529728334 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.540652068 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.535534083 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.529043628 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.5350198 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.539264471 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.533556726 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.528997272 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.53797434 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.533627718 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.533547967 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.533519755 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.529425476 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.536704938 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.538839793 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.542103003 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.52887556 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.538044362 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.530851479 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.538482825 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.532117211 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.536484474 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.53500507 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.538566563 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.541326106 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.534317274 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.531981519 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.538110132 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.535505143 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.53383517 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.529951037 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.538688664 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.536593548 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.534557399 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.534677632 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.532170115 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.537951461 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.528420116 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.537418484 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.531568465 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.547141979 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.552155201 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.539603632 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.53825184 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.538286639 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.539640306 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.537665159 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.532902654 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.532398077 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.534696606 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.532924623 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.532750336 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.539945618 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.531795141 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.539977096 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.536197297 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.53834331 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.5402107 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.536955076 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.530821355 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.540042318 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.535878866 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.537186038 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.530661022 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.539813579 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.533681142 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.540222512 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.537661634 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.534616262 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.545517092 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.540741547 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.536445806 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.536157988 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.536057911 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.531807141 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.537132079 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.542021693 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.536529215 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.54316911 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.53455631 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.539155202 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.536759899 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.543462511 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.545853523 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.534092906 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.544195485 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.538815597 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.530944825 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.534664308 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.540509992 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.544234839 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.548005535 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.532687706 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.541114625 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.538899305 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.539642579 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.539420334 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.538978565 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.540345322 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.538590569 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.547572435 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.54356245 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.536762708 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.54261134 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.547821313 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.539941835 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.540817925 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.534335844 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.542439869 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.547731882 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.539340894 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.540222322 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.537608129 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.542839623 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.540382097 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.541482722 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.541735258 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.540514754 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.545150222 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.54534075 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.544048875 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.541934393 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.546036919 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.549994529 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.54524063 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.551707852 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.53851951 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.546031592 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.540673765 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.537195365 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.53843259 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.538777673 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.544931421 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.535595251 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.546894084 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.541555785 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.540703098 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.544649601 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.548944029 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.536246184 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.545028192 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.551687666 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.53650881 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.545396547 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.543700818 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.537812997 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.546212697 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.543646789 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.536501632 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.541018569 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.542003742 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.549016728 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.539872017 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.548167449 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.540467878 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.546444631 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.543950663 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.543842885 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.544548653 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.543241404 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.537977038 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.54743115 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.545194797 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.550951724 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.541746647 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.544702992 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.54297414 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.551138529 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.553150616 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.54279939 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.549018511 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.546109032 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.539705356 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.545315808 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.550755371 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.540972843 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.548593655 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.538936718 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.542636723 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.542019508 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.547234513 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.545704357 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.547786503 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.538745423 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.542100957 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.547256906 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.543546417 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.543455114 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.54216244 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.551595136 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.539307338 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.539429929 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.546704694 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.541956996 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.549264007 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.540169237 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.544527275 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.542646011 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.54811533 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.545641849 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.544519369 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.53919038 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.541599895 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.551074557 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.549992918 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.544904568 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.544675013 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.547985536 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.540855432 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.542716141 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.544948816 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.541662355 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.542365236 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.549077169 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.541231672 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.542785293 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.541492107 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.547309524 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.550701893 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.547712616 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.54178638 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.553938206 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.55356346 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.552848365 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.541038624 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.544111625 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.542640025 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.547729681 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.546804012 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.540968357 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.555734677 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.552530636 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.549729921 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.54680743 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.547598492 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.541581318 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.549982324 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.548965443 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.545447724 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.554480305 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.545345572 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.554376389 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.547662954 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.548198862 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.543029054 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.543233066 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.545182512 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.546630827 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.549768392 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.547475004 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.550255032 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.549143332 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.554469605 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.549291493 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.548105692 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.547833162 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.542897511 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.550498212 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.543023407 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.551144462 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.549133569 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.543972541 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.55065494 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.550065931 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.546082274 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.549147497 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.554561234 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.54897164 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.546596083 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.55103416 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.555753822 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.556449743 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.551936411 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.54646209 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.550933508 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.55261788 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.550805103 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.55019003 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.545662871 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.560171708 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.561147949 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.546599512 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.549344627 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.554068713 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.559289124 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.551834635 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.552054175 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.54901427 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.552946384 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.556005308 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.551590953 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.555830876 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.555255255 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.548861304 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.555356758 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.546879117 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.550186518 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.554111342 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.559137961 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.551263046 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.549445076 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.560178593 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.559348482 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.5518537 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.566051457 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.556593311 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.553763694 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.557455797 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.546359867 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.58734317 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.550412771 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.557023033 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.55268936 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.552827746 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.552189503 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.546186058 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.556282881 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.560352361 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.561786765 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.55292217 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.547659918 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.54911598 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.554172373 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.553116317 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.554801182 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.553509865 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.554834235 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.554120304 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.548639567 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.566093954 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.567978887 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.558904553 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.555764974 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.555633166 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.555415489 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.558014078 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.554565109 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.559187727 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.555128742 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.55460115 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.555359281 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.563539912 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.557080591 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.550341693 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.552125375 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.550620628 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.559029421 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.563991745 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.571256837 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.559033009 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.557537387 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.557541005 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.554977211 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.551005388 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.558130746 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.555300631 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.551725151 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.553763935 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.55958206 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.556312903 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.556601732 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.552555727 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.559967469 seconds)
  done (took 917.676683547 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.556838384 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.556772748 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.556603824 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.556463001 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.556977321 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.55604269 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.556063517 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.5557101 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.55730717 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.557739864 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.557212938 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.555330035 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.557686271 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.558690919 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.557062921 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.556919739 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.55744801 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.557712776 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.557719819 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.557704414 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.556990683 seconds)
  done (took 34.130136785 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.558406789 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.557349234 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.558623124 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.558954738 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.558587297 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.55822579 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.558739716 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.558920477 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.558861205 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.557903154 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.558584286 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.559521213 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.558940825 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.559131682 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.559612467 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.558328931 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.559634166 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.558147128 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.559919163 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.56026621 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.5597597 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.559551161 seconds)
  done (took 35.731137928 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.562370121 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.558785584 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.554570925 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.563219261 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.559548073 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.560187831 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.561264285 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.56034755 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.560448246 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.554242188 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.55482841 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.555627923 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.558319793 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.56402261 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.558847426 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.565200234 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.561473772 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.562091814 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.561030907 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.561066643 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.565323924 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.569877397 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.560249176 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.554848911 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.560956313 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.560885938 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.562355109 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.562144825 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.555995225 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.566018476 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.562140416 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.557416632 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.565137679 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.56336508 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.557946712 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.565455719 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.562590063 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.56192411 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.563775702 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.561680928 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.571348624 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.562571007 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.566739384 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.571162264 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.563617458 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.55949327 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.567535094 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.561875497 seconds)
  done (took 76.399180433 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.563647413 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.563322647 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.563676248 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.563650726 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.563602235 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.563452318 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.564372959 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.564384409 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.564163984 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.563771873 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.565723817 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.563708824 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.563765087 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.564115544 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.565210562 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.565221232 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.566031072 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.563468729 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.565885623 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.565681987 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.56504842 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.56524106 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.565158715 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.565680767 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.564721805 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.564978677 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.564894199 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.565786058 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.566023441 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.565759289 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.566387062 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.565357463 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.565795561 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.566003983 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.56462198 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.565791049 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.567144207 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.566470629 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.566177572 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.565568253 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.567432224 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.565776432 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.566660008 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.565661035 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.566701391 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.566401858 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.566567142 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.567676628 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.566725357 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.566151142 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.567533348 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.566578252 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.566246144 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.56826541 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.567929663 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.56670836 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.565649954 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.567113082 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.567994837 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.568207609 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.567172376 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.567258419 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.568039646 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.567424337 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.569439018 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.568210972 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.567835455 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.567834068 seconds)
  done (took 107.923314024 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.568501669 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.56885685 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.566934891 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.567778925 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.568464511 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.570289469 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.568025183 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.568369046 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.570983608 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.569539208 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.569436426 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.569131642 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.569989132 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.570077369 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.569865543 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.569508775 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.57059519 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.570943936 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.569547808 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.570646937 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.56983081 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.569900926 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.569299623 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.569985169 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.570055886 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.569726466 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.570088223 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.570677257 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.570442866 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.570449341 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.572088799 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.573338245 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.571810088 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.571266301 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.572325424 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.570883935 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.571888594 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.571923413 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.572358104 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.571078077 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.572277431 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.572287752 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.571458312 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.57201705 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.571132302 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.57252354 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.571685947 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.57340134 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.571852309 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.571643379 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.5725321 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.573414826 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.57216262 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.571532736 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.573492682 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.572635343 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.573347681 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.573554062 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.572385396 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.57257751 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.574218253 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.573061447 seconds)
  done (took 98.847350872 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.573600561 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.573466794 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.573034076 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.574670295 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.573014572 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.573582643 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.574310475 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.573651283 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.573923416 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.574360613 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.575313924 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.574498793 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.575065505 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.574255314 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.575290447 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.57382701 seconds)
  done (took 26.632824892 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.574952643 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.576493842 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.57425269 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.573541354 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.573015281 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.574144857 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.574165557 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.574340238 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.575637674 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.575882343 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.574841819 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.575779344 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.575842585 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.575985465 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.575489122 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.57480089 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.574832226 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.575221503 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.575570202 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.578473595 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.575896653 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.574807321 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.575293393 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.57493516 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.575950746 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.576054966 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.575497318 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.575857804 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.575614453 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.576649982 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.575278103 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.576337126 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.578712945 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.576555778 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.576621901 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.576316748 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.576248886 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.578042994 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.576255605 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.57538651 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.577130527 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.57621443 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.578846138 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.576203294 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.577387262 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.579218026 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.578049787 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.577804165 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.577742018 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.577382268 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.57919561 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.578859877 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.578472707 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.578420422 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.578210503 seconds)
  done (took 88.144815221 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.578595245 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.579132718 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.578699782 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.579240445 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.578667018 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.5778911 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.576975593 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.580605205 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.578143809 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.577969715 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.579123867 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.579289045 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.578088136 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.578415925 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.580275636 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.578716939 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.578581751 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.579015187 seconds)
  done (took 29.869699055 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.579219704 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.578736881 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.579815812 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.578444432 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.578920025 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.578904579 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.579196987 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.580549717 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.578942781 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.580784956 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.579059833 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.58084212 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.579447697 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.579943274 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.580388056 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.580875403 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.580829367 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.580556437 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.580518378 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.579473048 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.580727547 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.580535261 seconds)
  done (took 36.208329217 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.57292028 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.572466262 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.572365173 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.586802902 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.583207639 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.573226778 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.573876913 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.573870169 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.589642173 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.597341325 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.594995969 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.582504971 seconds)
  done (took 20.427057436 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.581848966 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.581364856 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.581086937 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.582039128 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.581719328 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.5827348 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.584179886 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.581493736 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.583966917 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.582603909 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.581564916 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.582669401 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.582384206 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.583052836 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.583241078 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.582886071 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.582108976 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.583077093 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.583632805 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.582662677 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.583244079 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.58468612 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.583123025 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.583808694 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.583204926 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.584930214 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.583785478 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.584707493 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.583679726 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.583737886 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.583771547 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.584481034 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.584757689 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.584437184 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.584572478 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.583673945 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.584768248 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.584238366 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.585155536 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.584733501 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.584649328 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.585001253 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.584431289 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.586026793 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.585424141 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.585068853 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.58522243 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.585857118 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.585335349 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.585948887 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.584236065 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.585508759 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.585157986 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.586652728 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.585240824 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.585449856 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.586146038 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.5865525 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.585469719 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.587736473 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.58560016 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.586909506 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.58644388 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.587348198 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.58682542 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.587215359 seconds)
  done (took 106.022448889 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.587325173 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.587348162 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.587162407 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.586833874 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.586445367 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.586060545 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.587316861 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.58672741 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.588393562 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.586351879 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.58695152 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.587104195 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.58853249 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.586738706 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.588040693 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.588633068 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.588042835 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.587970598 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.588257603 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.589080736 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.586667232 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.588161904 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.588750958 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.588908477 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.587593487 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.588694814 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.588309355 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.587885396 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.58847357 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.589022322 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.58933585 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.588659835 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.588412423 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.588214337 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.588228695 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.589499304 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.587942696 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.588630483 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.588646284 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.588426447 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.589359 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.590541915 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.589977419 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.589993867 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.589543264 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.588809513 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.589074177 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.58949419 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.589395814 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.591131658 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.590422269 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.589896788 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.590601269 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.592370854 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.590242132 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.590031237 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.590929079 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.591533894 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.591136925 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.590945412 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.5912584 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.592090838 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.592047625 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.590228765 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.590799998 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.590791558 seconds)
  done (took 106.331973426 seconds)
done (took 2033.121247749 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.580621946 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.580369634 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.582773025 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 12.010714304 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.583851367 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.251437323 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.096191625 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.583048746 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.583525276 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.586769069 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.582655933 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.577516747 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.921237006 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.585399088 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.583640143 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.580641769 seconds)
  done (took 59.733393738 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.615297116 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.593315643 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.723003927 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.589008571 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.614834542 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.806350129 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.654958857 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.589802451 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.789793171 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.591384805 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.587334265 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.613202287 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.588881259 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.58359465 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.611139529 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.807537351 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.882683624 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.589809428 seconds)
  done (took 34.295772649 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.12832779 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.606138762 seconds)
  done (took 6.198670939 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.612858995 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.591388149 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.592121083 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.590701207 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.582509963 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.583333586 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.588121746 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.583857491 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.596597427 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.739359798 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.591842599 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.603630673 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.590504811 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.589870083 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.597932184 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.637699536 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.724560787 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.596879302 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.609220812 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.596572476 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.590558753 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.690104971 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.63719331 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.598513794 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.738379741 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.599469065 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.596045338 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.60003936 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.725202272 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.59860783 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.594329237 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.591142019 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.593388912 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.597847551 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.15895933 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.600462909 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.617797722 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.599080213 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.595566814 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.744716836 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.592199266 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.597903194 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.583939969 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.161925021 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.702109713 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.722104529 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.585239617 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.594093418 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.594978664 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.660701373 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.593764643 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.593650531 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.657908699 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.430249064 seconds)
  done (took 99.813336933 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.609231071 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.584974305 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.77234137 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.603844244 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.584681081 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.585982718 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.604975756 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.925152415 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.644809915 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.586770381 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.934448227 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.277161508 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.596338774 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.625459424 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.632551783 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.614948421 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.584675553 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.584788499 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.586072701 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.586360924 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.190475863 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.58894042 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.60936206 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.739005218 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.629740261 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.188823209 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.602835201 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.586229545 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.588595942 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.586917154 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.241951281 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.595796787 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.647560713 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.587090792 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.901686118 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.041341789 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.998824168 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.591326425 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.636565706 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.590455218 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.586765882 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.190158405 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.020806874 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.589235198 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.587203888 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.19250036 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.588872804 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.588900776 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.588655638 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.862915846 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.588440096 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.589919603 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.60420421 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.589201109 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.58884667 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.653569314 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.640166805 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.193420737 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.588634168 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.588800783 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.611278491 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.591574019 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.595717303 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.589720062 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.59105215 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.02397241 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.767737447 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.593613943 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.021405317 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.23633445 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.588916375 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.327331389 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.593398646 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.593318512 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.66373422 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.591162513 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.609783139 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.188141475 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.599454609 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.590603689 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.002641704 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.590626178 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.924069954 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.609877205 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.591327884 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.21559398 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.599007286 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.649092376 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.592301635 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.599126048 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.591517204 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.593878736 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.912039629 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.612376069 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.592184112 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.592161617 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.616803264 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.592328391 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.591965647 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.600250701 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.332433855 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.602874979 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.590966782 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.594439503 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.592256449 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.592939189 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.593722005 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.591176527 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.880748016 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.593080438 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.595345415 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.595796439 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.593178305 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.593161633 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.747892127 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.597600041 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.960833096 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.594783214 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.610364585 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.599312532 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.593919592 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.610385662 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.599357027 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.599454854 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.572197431 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.91562705 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.627069868 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.594657026 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.594906803 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.602299163 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.6032281 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.598662371 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.623923351 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.596937224 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.476966275 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.60529348 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.60773689 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.594325044 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.603953113 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.595865812 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.602867027 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.594139456 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.925651476 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917652738 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.803690551 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.596716775 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.594564612 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.462737444 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.644328035 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.783588249 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.617802098 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.596677541 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.903244946 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.78513446 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.596567748 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.59514398 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.596354663 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.888351904 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.599030501 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.930176117 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.279057388 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.600634887 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.603493298 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.472695462 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.360140983 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.59918068 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.59994799 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.932262056 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.619808603 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.598377748 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.597011394 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.597429993 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.597591058 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.600600762 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.601265742 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.599158862 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.5978538 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.712461476 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.797796428 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.617731531 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.602010137 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.197065763 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.602370731 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.60046586 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.604812125 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.601836592 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.598156869 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.628958128 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.601819832 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.645515713 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.601015608 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.604054827 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.230896064 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.59950025 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.601845418 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.800100378 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.430656906 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.601369628 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.600480559 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.599923655 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.633127347 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.228795829 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.66011774 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.971593189 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.606213916 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.646954062 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.603433095 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.645598107 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.241696181 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.604160313 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.599557113 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.404346639 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.602444999 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.289232984 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.600468004 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.601999451 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.335059385 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.602876031 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.60723233 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.601014194 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.600668416 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.92165907 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.605324453 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.622998046 seconds)
  done (took 559.085229287 seconds)
done (took 760.587502867 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.600460756 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.605566295 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.605192951 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.605187066 seconds)
  done (took 11.896844006 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.616328795 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.60722533 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.618125383 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.606894658 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.615400923 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.607210338 seconds)
  done (took 11.154946356 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.601993203 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.607026207 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.604731046 seconds)
  done (took 9.296487034 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.849310392 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.615275942 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.024286814 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.605863876 seconds)
  done (took 10.577427291 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.618319127 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.617753549 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.617486299 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.618255801 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.619363007 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.61800062 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.6169475 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.618326103 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.618183417 seconds)
  done (took 16.044015957 seconds)
done (took 60.45010417 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.587858495 seconds)
    (2/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.484555652 seconds)
    (3/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.588127216 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.709700255 seconds)
    (5/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.589179691 seconds)
    (6/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.739448716 seconds)
    (7/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.59327487 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.682754392 seconds)
    (9/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.680082212 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.604390511 seconds)
    (11/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.675842404 seconds)
    (12/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.905821771 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.641943898 seconds)
    (14/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.589094661 seconds)
    (15/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.715825664 seconds)
    (16/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.043769309 seconds)
    (17/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.592996463 seconds)
    (18/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.589369986 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.607582082 seconds)
    (20/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.011746168 seconds)
    (21/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.75673561 seconds)
    (22/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.589854732 seconds)
    (23/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.612796767 seconds)
    (24/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.599365052 seconds)
    (25/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.026626702 seconds)
    (26/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.650047508 seconds)
    (27/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.703444542 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.691046846 seconds)
    (29/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.588890043 seconds)
    (30/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.637219312 seconds)
    (31/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.822652106 seconds)
    (32/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.811728833 seconds)
    (33/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.679440858 seconds)
    (34/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.643738449 seconds)
    (35/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.606448484 seconds)
    (36/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.67776089 seconds)
    (37/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.608064039 seconds)
    (38/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.497742729 seconds)
    (39/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.645384086 seconds)
    (40/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.813699991 seconds)
    (41/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.600429241 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.686180064 seconds)
    (43/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.591123921 seconds)
    (44/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.49580716 seconds)
    (45/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.595542786 seconds)
    (46/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.712507714 seconds)
    (47/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.563273403 seconds)
    (48/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.595724091 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.654794352 seconds)
    (50/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.593436105 seconds)
    (51/192) benchmarking ("map", identity, Bool, true)...
    done (took 2.351505535 seconds)
    (52/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.408654814 seconds)
    (53/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.850708344 seconds)
    (54/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.595777391 seconds)
    (55/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.69586053 seconds)
    (56/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.693906049 seconds)
    (57/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.654320314 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.775091119 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.717929309 seconds)
    (60/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.593792062 seconds)
    (61/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.595721579 seconds)
    (62/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.596631303 seconds)
    (63/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.72479519 seconds)
    (64/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.787155015 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.739915876 seconds)
    (66/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.412227864 seconds)
    (67/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.594686537 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.59504428 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.74490515 seconds)
    (70/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.593887909 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.878460346 seconds)
    (72/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.891345927 seconds)
    (73/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.685082408 seconds)
    (74/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.592552145 seconds)
    (75/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.629755393 seconds)
    (76/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.595638414 seconds)
    (77/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.857847203 seconds)
    (78/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.471615802 seconds)
    (79/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.895151179 seconds)
    (80/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.502260232 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.721327858 seconds)
    (82/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.745389246 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.710542263 seconds)
    (84/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.699984173 seconds)
    (85/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.612623283 seconds)
    (86/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.543945541 seconds)
    (87/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.659544485 seconds)
    (88/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.612425327 seconds)
    (89/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.604022374 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.696506186 seconds)
    (91/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.478302764 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.741652151 seconds)
    (93/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.596096519 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.713670844 seconds)
    (95/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.641653108 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.732784319 seconds)
    (97/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.608837911 seconds)
    (98/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.641769785 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.7508634 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.644283627 seconds)
    (101/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.597471285 seconds)
    (102/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.652529075 seconds)
    (103/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.643804656 seconds)
    (104/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.836389774 seconds)
    (105/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.702446719 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.695761238 seconds)
    (107/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.596069174 seconds)
    (108/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.807415384 seconds)
    (109/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.598202744 seconds)
    (110/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.568590581 seconds)
    (111/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.51399935 seconds)
    (112/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.597921957 seconds)
    (113/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.843337201 seconds)
    (114/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.731640822 seconds)
    (115/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.601216505 seconds)
    (116/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.599304825 seconds)
    (117/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.604523984 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.893484366 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.783925112 seconds)
    (120/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.770466992 seconds)
    (121/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.467310275 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.653977426 seconds)
    (123/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.624080789 seconds)
    (124/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.660596989 seconds)
    (125/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.467210381 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.742543354 seconds)
    (127/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.616812787 seconds)
    (128/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.176452862 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.749464515 seconds)
    (130/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.848920396 seconds)
    (131/192) benchmarking ("map", abs, Bool, true)...
    done (took 2.353541745 seconds)
    (132/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.77675633 seconds)
    (133/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.768500731 seconds)
    (134/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.591757928 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.70473379 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.778688293 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.747416504 seconds)
    (138/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.624953137 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.716689343 seconds)
    (140/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.846606282 seconds)
    (141/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.599874336 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.689774482 seconds)
    (143/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.294443439 seconds)
    (144/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.722748293 seconds)
    (145/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.61720358 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.79588999 seconds)
    (147/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.59889993 seconds)
    (148/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.658077593 seconds)
    (149/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.566046099 seconds)
    (150/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.689028927 seconds)
    (151/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.602100401 seconds)
    (152/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.60057768 seconds)
    (153/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.601618354 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.792912096 seconds)
    (155/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.700979873 seconds)
    (156/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.601495951 seconds)
    (157/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.604002584 seconds)
    (158/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.61982255 seconds)
    (159/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.71082397 seconds)
    (160/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.512823975 seconds)
    (161/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.651733838 seconds)
    (162/192) benchmarking ("map", identity, Int8, true)...
    done (took 2.354933895 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.789684919 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.684616575 seconds)
    (165/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.74788114 seconds)
    (166/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.957491819 seconds)
    (167/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.086682768 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.657862165 seconds)
    (169/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.29541282 seconds)
    (170/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.650508242 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.723273503 seconds)
    (172/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.600349062 seconds)
    (173/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.678632281 seconds)
    (174/192) benchmarking ("map", abs, Int8, true)...
    done (took 2.357921394 seconds)
    (175/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.603560198 seconds)
    (176/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.723448416 seconds)
    (177/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.703458296 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.751782662 seconds)
    (179/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.603294788 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.602801687 seconds)
    (181/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.728795212 seconds)
    (182/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.653398123 seconds)
    (183/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.602080093 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.841303327 seconds)
    (185/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.6475794 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.888268056 seconds)
    (187/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.602381999 seconds)
    (188/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.976189174 seconds)
    (189/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.749348288 seconds)
    (190/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.833791579 seconds)
    (191/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.601313511 seconds)
    (192/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.607762824 seconds)
  done (took 409.852691125 seconds)
done (took 411.336602933 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.649712227 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.72982443 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.628441631 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.629072403 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.631161585 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.619355005 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.651613391 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.630019728 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.643938299 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.644715665 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.619370122 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.638140341 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.644735109 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.639877285 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.66387156 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.629765942 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.629178895 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.640234089 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.645961215 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.646797768 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.631400796 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.632134548 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.657777678 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.628748008 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.636959294 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.639834146 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.636685883 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.62689491 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.638876847 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.645291842 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.633066871 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.637101892 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.647970828 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.64146634 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.633018702 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.642046295 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.632342852 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.731427267 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.653892473 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.642738094 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.639526997 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.649238602 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.636086232 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.63479759 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.643139821 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.660423274 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.640208874 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.645271677 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.63515942 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.636204306 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.652850883 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.645116766 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.639641861 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.63816171 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.632083366 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.646501416 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.641533739 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.652783169 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.639627805 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.63445527 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.665157694 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.65135615 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.645420454 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.642067674 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.640311425 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.648184949 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.6414495 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.648956389 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.640548889 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.634900563 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.63581561 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.6424393 seconds)
done (took 127.803873187 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.755211434 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.629505047 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.789835833 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.637726587 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.799880108 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.756738077 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.636576432 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.638690691 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.63779965 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.438228881 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.638425905 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.638882584 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.631267323 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.637928943 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.754821672 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.638573289 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.638976243 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.338407694 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.639056049 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.774143097 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.632622751 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.638084875 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.638975044 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.431409397 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.63261363 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.627218172 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.771948154 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.640311534 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.32888212 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.626732215 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.62918814 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.32745761 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.774781657 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.657756433 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.649345717 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.648855644 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.802842383 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.642115016 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.759170593 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.758765782 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.792563899 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.678980008 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.626009659 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.632153938 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.641505542 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.64271391 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.639591178 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.669613477 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.63306328 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.64140595 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.340209586 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.651178307 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.650353704 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.641504867 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.641632474 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.660051637 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.641750152 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.642710777 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.776261136 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.642560426 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.760714873 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.431906162 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.440996386 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.641949563 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.629367181 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.642666309 seconds)
  done (took 128.604980877 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.704363001 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.710451927 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.758310659 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.63619958 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.685198684 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.760019909 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.635870473 seconds)
  done (took 13.394396205 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.640213548 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.643889539 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.683356267 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.683899325 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.643300332 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.80900271 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.642085837 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.648452362 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.642514883 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.688260934 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.64464255 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.643134142 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.650601108 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.634204872 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.682962946 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.647179982 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.752438275 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.637352692 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.644254393 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.791274757 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.64362968 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.652504333 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.689314118 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.649377434 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.645643745 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.642776245 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.397129712 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.643549918 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.643934049 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.644261744 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.644828912 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.705142581 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.644883562 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.636063962 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.646090381 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.752913317 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.645344683 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.64402325 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.645588211 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.640193101 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.644566339 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.644355548 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.645314145 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.645645205 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.646869245 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.664063147 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.646976594 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.645776323 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.64580569 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.646053674 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.6879212 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.646419427 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.646330474 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.646312036 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.693891021 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.654636442 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.647114578 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.646261817 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.645663044 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.64574555 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.795720834 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.686162308 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.647930738 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.687683341 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.647664167 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.647438455 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.647846336 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.647179827 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.730398512 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.646743374 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.687344031 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.649965478 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.821418421 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.665462536 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.648723745 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.643263273 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.643325081 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.647116729 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.638753814 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.646911323 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.646315294 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.643687225 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.648392156 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.648327348 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.647863277 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.799896995 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.751024537 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.647464414 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.658109122 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.649338492 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.647361059 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.691958543 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.647901432 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.648417072 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.692062641 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.757628373 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.693592877 seconds)
  done (took 167.851327137 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.654854535 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.656217829 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.645922064 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.669534112 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.644330738 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.641814838 seconds)
  done (took 11.423232534 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.645381636 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.652906271 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.649230103 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.649383549 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.650482373 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.651585063 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.652591919 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.644909289 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.654206449 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.652403006 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.653453147 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.654784551 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.652774773 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.65201657 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.653869555 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.651556676 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.651839417 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.651056023 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.651799113 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.652959447 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.642437577 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.651387261 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.653154051 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.646733353 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.6561924 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.654631106 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.668852668 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.651836578 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.651802037 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.653027567 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.654312727 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.654592732 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.648001373 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.650593554 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.658110138 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.648362076 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.655735601 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.655238313 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.65244751 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.65469586 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.655435079 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.653678839 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.652569428 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.655084962 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.647317619 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.651829491 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.659063029 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.671648445 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.654041637 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.655802963 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.655991167 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.653301262 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.654042529 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.656871388 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.649067352 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.651135172 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.659223803 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.655020478 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.654145071 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.649624853 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.656979601 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.654797833 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.649772405 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.659423569 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.654738315 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.656252536 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.649888463 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.658968566 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.656329122 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.654984426 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.656786998 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.655190276 seconds)
  done (took 121.563951472 seconds)
done (took 444.3363866 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.039893778 seconds)
  done (took 4.556253023 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.777717587 seconds)
  done (took 4.296348623 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.478608501 seconds)
  done (took 25.99883299 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.680869311 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.645029895 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.647415545 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.644978348 seconds)
  done (took 12.135891468 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.283622387 seconds)
  done (took 4.800367189 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.65350256 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.649792755 seconds)
  done (took 6.822191224 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.045812088 seconds)
  done (took 4.561445641 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.462093932 seconds)
  done (took 4.982935025 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.663852697 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.652407635 seconds)
  done (took 6.838534793 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.628621592 seconds)
  done (took 4.144864661 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.56726535 seconds)
  done (took 20.084698496 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.664226755 seconds)
  done (took 4.184750302 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.678621166 seconds)
  done (took 4.19665855 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.731930282 seconds)
  done (took 7.249111069 seconds)
done (took 116.368630503 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.644363351 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.648240943 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.642570551 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.645160878 seconds)
  done (took 12.098210735 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.720354974 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.719989204 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.730210715 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.716427137 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.715226182 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.723779901 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.684392495 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.683356476 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.712981277 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.709717832 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.725202016 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.716204683 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.725434583 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.681816589 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.709354549 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.726462895 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.714500509 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.730920183 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.683325593 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.710544354 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.65980452 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.716562153 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.710921538 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.660138456 seconds)
  done (took 42.506963378 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.147220263 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.724174192 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.805737719 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.704522736 seconds)
  done (took 8.90044406 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.76315818 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.7643463 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.782369807 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.816376472 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.865816605 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.778937521 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.685503908 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.682194428 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.668046399 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.764838825 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.838159845 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.763155898 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.98281936 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.660479162 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.981123521 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.659492488 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.658722136 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.764457527 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.812732422 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.845794859 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.660090829 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.764170952 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.769679653 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.764369825 seconds)
  done (took 44.016929887 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.667367811 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.677523143 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.662219652 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.676946112 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.661643087 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.662271059 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.6643503 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.668630741 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.661524334 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.662158391 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.662676452 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.675705994 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.662157407 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.664140344 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.670117074 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.663869405 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.664469454 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.668142545 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.671159826 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.663817699 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.661687309 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.669447219 seconds)
  done (took 38.184651152 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.648959658 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.648262851 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.001031978 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.903665743 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.649078496 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.650159632 seconds)
  done (took 16.024249533 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.739924181 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.889201639 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.657411789 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.085638263 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.169329762 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.659104226 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.656555419 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.936590152 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.304749571 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.333725609 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.710012158 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.737661099 seconds)
  done (took 24.404891386 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.738916152 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.659009599 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.671278668 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.740257654 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662290392 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.659750514 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.738610597 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.21510656 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.669916517 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934749946 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66373718 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.74463597 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.907248552 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663626646 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.663539863 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.651001359 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891923305 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.287344409 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666928641 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667961531 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.696065987 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.666370816 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.67693418 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.914204272 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.666168673 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661347201 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.922512811 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.659986613 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003210774 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982845835 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983045552 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667472679 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936571689 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160666132 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.771784563 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906360537 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665488075 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.663236104 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.654086326 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.674931927 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667907508 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.668803795 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978870939 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667139921 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.660342419 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.660583271 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218117525 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.672021641 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.662005833 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.663387528 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981274278 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.749557252 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.668011517 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.662653855 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676417035 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665951989 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.667665629 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783895938 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301370169 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.6713541 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.685769268 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.666328874 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.658480206 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664121451 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.395924415 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.670849903 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.668066792 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667637974 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663605785 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.678134145 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687489482 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661636759 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.686360786 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663737225 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542383296 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.674422114 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670642083 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.336614918 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66902715 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.668296625 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892582708 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664908501 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663924464 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.665462181 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.664519536 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.578491989 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.679719981 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.641690554 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700850232 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.218474409 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.919462106 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.691257527 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.693970266 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.887997884 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.64157343 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665381183 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.67507883 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671614839 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.685796959 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.197682779 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666643325 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.670538091 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916752566 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.879027929 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674575836 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.659716791 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231834728 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675945349 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.687105953 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.682944523 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.919584506 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.383850258 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9919708 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671181952 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.708555149 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.66734856 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.649313606 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673596805 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.676411272 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.677748889 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.988610312 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.654298069 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673986382 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.74079185 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.669314372 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.66784655 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.680612998 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673413202 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.668352054 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.903563073 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.672996157 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990034968 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.676117103 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667658681 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.668052737 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.703295927 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.675540753 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.891722134 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67515292 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945347252 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669540911 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669961948 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668934556 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.890809821 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.670965329 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.682352443 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011348945 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.686131402 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.687539513 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991037874 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707200492 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.783288611 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.703630006 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.687321153 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.923228546 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.676630368 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.675890421 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.686899282 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.674762814 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674155687 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.677722724 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662379788 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408873204 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642342291 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.675356448 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.670757682 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.686933549 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.745594973 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67962068 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922915688 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.682061225 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662803597 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.679714911 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.670225937 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895667045 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990708733 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.692137285 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.850561751 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.207749363 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387456945 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687324173 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.671857946 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.672343396 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.671080094 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673149967 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670393055 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.673409931 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922846588 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002722834 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.670284418 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390699436 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.677248656 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.672807383 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.703659818 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99010902 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.687396969 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672394671 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.673296922 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.677407065 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.683116305 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.996357793 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899827836 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.689820418 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.673675245 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.191307249 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680930247 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.674912639 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.675305503 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700654553 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.674489549 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290223513 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016940895 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.669255572 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038686262 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.699554806 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.697291643 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.675564094 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.691099949 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.681637774 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.701033062 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687163329 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.928565102 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.680202116 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.701326571 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.313247407 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.566202143 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.328675772 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.688066991 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.676524372 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.680251611 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238442285 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679461854 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.677696026 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958377373 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.215952327 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677313995 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215413035 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.696077385 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.585709671 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998061079 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909187572 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.683381293 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.694058711 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004775299 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.894324127 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.702928417 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.677076758 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.681959357 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.653926802 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286304697 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.683165104 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.860546263 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233749567 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.700435029 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.683514413 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.759343787 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.686007836 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162729717 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.683056506 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679364227 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.69023758 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.699977374 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295592195 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.68252116 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.67646746 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.414442987 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.694620772 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.244720672 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682187463 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.931219541 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.00295176 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.988176279 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.697962364 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.684513241 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.926285207 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000147699 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.684337678 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.69135079 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.336238733 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.537667377 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.687453679 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678870499 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.659662206 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.695949084 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026741006 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.688296083 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.683686101 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.685082651 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.680425156 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680665633 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.680455736 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.687625085 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650211208 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.293361614 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.680669997 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.680515921 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.690852154 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.685746344 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.929264191 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.698775721 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401317917 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915123033 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.684360583 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716816956 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.686934984 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681194694 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.664574803 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.682487898 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.681532438 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69613388 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.909615729 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.703415703 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.663696622 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.746554007 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.897910607 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.682959884 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.681464441 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970832946 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.687205653 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.684296264 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.581875468 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715131461 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.681782702 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.68921713 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.681162881 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715808994 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.757048034 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937802255 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.01008412 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.010832817 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170330027 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.686107811 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.690565583 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.699758101 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.765183696 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.700060847 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.692285748 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.683516809 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410497883 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.577608392 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423416136 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013081235 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.689268852 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.694033585 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68427682 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927331653 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.684380699 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.961962001 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.685085851 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.682708725 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710311716 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.684969178 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.695345959 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90144718 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.960654374 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.685238702 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.689962827 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.69116776 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.686567042 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012221933 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.902869413 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.321557648 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.3709977 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69269316 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.689700854 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.251328422 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.966210692 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686990572 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.689051246 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687433924 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.693870795 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.695797127 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.699082023 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.685869979 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916905736 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007801995 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204190325 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010867344 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.718953816 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.569776021 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.6943114 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.940122921 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519968921 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.942062623 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415155031 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.545853093 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947183562 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763555723 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944804473 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.693000193 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924425919 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.704841365 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.689935362 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.688025132 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688310916 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.688141975 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.007263436 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410515987 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94475713 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.694446781 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.703968228 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717388386 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.945028805 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.916532246 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.610441776 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.916118714 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013728192 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.701216491 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.690547745 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428674542 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017469074 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.696622234 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.697319066 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955041258 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.695102611 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.723760687 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.55461867 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.690462806 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368567142 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.909393363 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.711478078 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69642126 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.556257651 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42133876 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.70932473 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.311006298 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.698516159 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.710176753 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.971371323 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.697582266 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.701076045 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.982440039 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.697512159 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.706406082 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952360429 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.410584531 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.609039033 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.702782385 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715957174 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.696180462 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.692020339 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.766179438 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.696822009 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.692523012 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.168429857 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.696606623 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.693491416 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705454725 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.69643727 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.698621469 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.696489896 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693257593 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.702114463 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.69569343 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.675590647 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.705993106 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820129312 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312522529 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.699324879 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.309978989 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.030959797 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.942711899 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.69858008 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.675495758 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.69993635 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.697513696 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.695153609 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.695540236 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.688622178 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375707813 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.702793319 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.020585674 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705621058 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.906705274 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908148856 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.696227153 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956727591 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.707579138 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.719817794 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.673527256 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69584764 seconds)
  done (took 1134.241501263 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.694983864 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.702673621 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.714728065 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.728632825 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.710079691 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.76630183 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.749489223 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.742990376 seconds)
  done (took 23.365362944 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.691798444 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.703226634 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.690010207 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.70288894 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.68914598 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.238674683 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.69351518 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.699643097 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.715156638 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.697436085 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.694549333 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.421000738 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.704638039 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.703357389 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.695434085 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.700293693 seconds)
  done (took 38.00318149 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.183424055 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 3.15847708 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.51614389 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.737416922 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.773472328 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.698467523 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.227981808 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.70788395 seconds)
  done (took 31.560165854 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.705700693 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.705726671 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.706989689 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.708229169 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.7065274 seconds)
  done (took 10.091737121 seconds)
done (took 1424.915724238 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.702544026 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.705265264 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.703863109 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.703980995 seconds)
  done (took 8.374201832 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.675731203 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.678606082 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.681025544 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.697480002 seconds)
  done (took 11.292568805 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.139712268 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.357634799 seconds)
  done (took 6.055294257 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.698799483 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.463329638 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.450947397 seconds)
  done (took 9.171311294 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.992218288 seconds)
  done (took 3.550138363 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.117261682 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.181767865 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.701942974 seconds)
  done (took 8.560894505 seconds)
done (took 48.560718729 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.693040741 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.460503322 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.84936215 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.692960005 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.873865208 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.847700552 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.968017935 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.701215048 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.710712413 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.696523875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.692856324 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.875047527 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.956653746 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.459999261 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.95761243 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.461935084 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.857341044 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.710688165 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.695339822 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.704613478 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.968181745 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.709043231 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.694450764 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.694549078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.858393464 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.841699606 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.711430211 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.463286775 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.694603535 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.699754233 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.841393591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.694619882 seconds)
  done (took 93.298026846 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.695154714 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.71277535 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.695118975 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.695413177 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.726367106 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.694208488 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.69708814 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.695483535 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.696357598 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.708350641 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.697267447 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.70266611 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.697486164 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.696106305 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.696423552 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.696478652 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.7136196 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.695319847 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.712922059 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.694518302 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.698391198 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.695794424 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.713584014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.700384154 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.696923131 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.696417578 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.69741057 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.697222792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.697730402 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.717692795 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.698554984 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.696921796 seconds)
  done (took 87.991286488 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.69800282 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.69690266 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.695997049 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.708815054 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.699366702 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.698276672 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.700201742 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.698508473 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.708197993 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.70105804 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.697829848 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.698924272 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.702230986 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.697538142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.70046163 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.699535416 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.698554626 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.698696758 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.697376365 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.697922167 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.697858425 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.69775146 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.699306324 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.70215661 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.699671386 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.70013299 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.699869003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.709505517 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.698812173 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.702708219 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.701629893 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.706950388 seconds)
  done (took 87.975049402 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.939445508 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.714640887 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.716316493 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.707073389 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.7161631 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.712583291 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.708949776 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.946424317 seconds)
  done (took 17.726705994 seconds)
done (took 288.550834966 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.725500901 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.709156516 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.740112773 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.70832736 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.728569487 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.737257457 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.940932796 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.73682047 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.930952728 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.717200651 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.725666228 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.726157343 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.659177948 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.857872571 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.707674147 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.719028978 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.704990037 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.706049302 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.711690368 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.980702782 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.738569236 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.714697259 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.715162962 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.714082614 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.69834016 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.78701429 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.790645047 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.876845683 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.842898834 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.785808134 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.704103069 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.727340264 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.711549118 seconds)
  done (took 77.549660968 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.710759719 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.716677771 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.717394326 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.71767591 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.718344957 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.719355137 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.711362877 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.718930032 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.719315368 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.719233192 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.719020005 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.721373379 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.72066342 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.718574317 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.719073852 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.70008819 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.711662013 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.718192623 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.712562404 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.700492951 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.718232762 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.72057227 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.721332804 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.718955472 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.72079419 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.719111177 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.718313264 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.719302925 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.718972463 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.719431507 seconds)
  done (took 53.07518809 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.721646185 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.727288726 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.708041492 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.744062326 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.714904402 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.719070935 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.078783244 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.725584445 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.719993592 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.718007277 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.707931668 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.726868657 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.770707986 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.709311236 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.722522783 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.722684231 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.720493722 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.715839834 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.706555478 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.731621773 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.080687997 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.725170908 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.07899308 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.736881005 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.716971471 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.717973515 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.720634288 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.70834614 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.723832987 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.709933817 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.717393874 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.075432489 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.718353934 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.731918669 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.714224489 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.727022872 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.722871851 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.709795354 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.717787309 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.716813509 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.075895865 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.7213685 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.710315204 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.714448954 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.723454813 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.724713718 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.723554533 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.712864298 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.041916032 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.723930781 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.710652423 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.744244635 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.726001493 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.720705723 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.023323465 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.725888095 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.718620934 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.710547248 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.749508734 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.07041524 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.726782224 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.719602353 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.71181476 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.723258168 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.712545679 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.723463535 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.733091788 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.719627586 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.712603407 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.725987534 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.712121295 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.724958354 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.725086166 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.721021862 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.717433106 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.71477341 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.728140221 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.723897741 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.716356255 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.082399675 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.730122932 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.713326677 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.098958587 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.729003378 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.729962914 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.730230074 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.727268646 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.789406556 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.078043084 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.670818804 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.735852818 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.738762036 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.078381092 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.729268709 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.722806519 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.734223125 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.73190027 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.729486561 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.714643145 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.719901338 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.725665312 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.736707945 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.716405573 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.730594351 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.087196802 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.73188537 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.714960019 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.728364765 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.792469935 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.729145872 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.737078563 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.726295949 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.097078868 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.731133622 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.728877639 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.716978684 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.743014346 seconds)
  done (took 246.212469736 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.717382023 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.739437079 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.715006078 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.737270439 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.717349637 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.725233544 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.718471889 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.719393542 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.723402201 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.717239953 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.718798643 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.726308013 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.725688949 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.716964872 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.72367535 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.718665707 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.717185781 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.72690018 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.721293406 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.719577279 seconds)
  done (took 52.023148947 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.731141289 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.405663957 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.396275688 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.7373552 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.732194454 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.727226218 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.793290839 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.733857954 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.733146186 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.098126936 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.947533868 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.737251204 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.732410952 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.731188309 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.397699857 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.717671665 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.106565303 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.4419179 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.737570051 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.437357887 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.716841939 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.731766067 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.724430195 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.407484288 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.097922037 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.084984917 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.801238041 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.408969968 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.733257685 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.733508388 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.440523678 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.738590681 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.72642238 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.426953517 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.737785699 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.747306863 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.732183656 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.797778302 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.799086055 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.094140466 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.430317863 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.097287456 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.749439337 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.927496631 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.737347617 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.713792474 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.443685554 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.741641028 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.713762793 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.735173996 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.741522977 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.409554363 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.734103703 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.409225656 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.74009717 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.734173598 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.411282215 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.409751674 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.407246153 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.948527639 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.732856588 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.092513772 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.741982104 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.429246565 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.739639511 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.737198703 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.735633892 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.946426348 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.418379908 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.092697572 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.114960375 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.115301277 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.741784586 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.809320194 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.73835259 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.114038129 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.812433292 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.155908868 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.108252803 seconds)
  done (took 156.951787404 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.048315364 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.837788966 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.182743644 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.3710464 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.30496042 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.878437009 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.861666246 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.005549675 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.738642836 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.845784018 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.503900955 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.833248198 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.563869829 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.814598438 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.851960111 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.869322352 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.199210115 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.725356615 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.444038425 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.478495047 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.734047203 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.868674896 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.538495803 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.147106607 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.748653605 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.520181353 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.72776776 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.336170504 seconds)
  done (took 64.565714968 seconds)
done (took 651.944463467 seconds)
SAVING RESULT...
DONE!
