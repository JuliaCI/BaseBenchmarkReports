cset: moving following pidspec: 7645
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.178891209 seconds)
loading group "string"... done (took 0.644301827 seconds)
loading group "linalg"... done (took 9.789093499 seconds)
loading group "parallel"... done (took 0.173109821 seconds)
loading group "find"... done (took 2.461481701 seconds)
loading group "tuple"... done (took 2.37018857 seconds)
loading group "dates"... done (took 1.43335042 seconds)
loading group "micro"... done (took 0.651777439 seconds)
loading group "io"... done (took 0.691972816 seconds)
loading group "scalar"... done (took 55.352811235 seconds)
loading group "sparse"... done (took 13.681428409 seconds)
loading group "broadcast"... done (took 1.342545047 seconds)
loading group "union"... done (took 10.901995883 seconds)
loading group "simd"... done (took 3.647282008 seconds)
loading group "random"... done (took 13.974876573 seconds)
loading group "problem"... done (took 2.192483531 seconds)
loading group "array"... done (took 23.898020814 seconds)
loading group "misc"... done (took 1.548209517 seconds)
loading group "sort"... done (took 3.78134006 seconds)
loading group "collection"... done (took 20.800774702 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.900473092 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.176149733 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.238755915 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.566894123 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.308899258 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.204657307 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.201506104 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.184425147 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.619612485 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.228962375 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.191352452 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.402125016 seconds)
done (took 7.030519468 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.299150237 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.092740509 seconds)
    (2/2) benchmarking "String"...
    done (took 0.236105928 seconds)
  done (took 0.989256468 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.097847534 seconds)
    (2/2) benchmarking "String"...
    done (took 0.15265783 seconds)
  done (took 0.915188596 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.131654193 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.202188519 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.148413798 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.147217013 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.134612206 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.149163811 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.13441709 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.152142975 seconds)
  done (took 1.73264062 seconds)
done (took 4.732662175 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.52976206 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.986332461 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.540349718 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.216615514 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.345975013 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.360018576 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.372476615 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.26566117 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.129411045 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.097231469 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.253269512 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.473307946 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.460896316 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.96894262 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097980532 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.152903245 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.199229913 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.801105242 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.118896183 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.155305169 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.53360737 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.253432259 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.156279853 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.150408113 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.225616022 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.164683554 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.171628313 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.142847863 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.723246388 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.175756519 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.239218606 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.122857166 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.172226058 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.201182147 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.276035664 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.1500781 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.721954051 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.238689177 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.124609793 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.140924729 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.738306047 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.160375108 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.248823088 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.144170791 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112185711 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179247887 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.13969533 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.117881554 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.150974295 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.143808608 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201236909 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.472649822 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.146753742 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.23611394 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.149588002 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.734360269 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.139079633 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.318523491 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.164625949 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.145682303 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.13036986 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.127863106 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.19784327 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.134640028 seconds)
  done (took 22.735528785 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.247251917 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.246990497 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.118092405 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.204101202 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.183493222 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.121257862 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.144491522 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.118728715 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.171473037 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.220209544 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.182170385 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.254871674 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.134668229 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.136943333 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.225527281 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.292826014 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.150876395 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.1661976 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.131380973 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.156949166 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.185806948 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.135257744 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.151091404 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.135055033 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.2110861 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.244778788 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.162026746 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.163024179 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.142968775 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.137934595 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.184595472 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.20287415 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.116409005 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.14472101 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.218333257 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.16356273 seconds)
  done (took 7.00152965 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.277385513 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.142158341 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.306205051 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.228521392 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.166024876 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.231242949 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.217928221 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.329425588 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.344213973 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.223024129 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.168509091 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.136032667 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135344889 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.120863116 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.117922473 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.881350694 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.211041022 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.198778581 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.228678258 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152588145 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.120944533 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.410675294 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.143931826 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.127740046 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.152674096 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.093540315 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.262974453 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.15167074 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.516918134 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122953896 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154719274 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.168157016 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.233597209 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.161600535 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.176654703 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.151319454 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.127366537 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.252538609 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.156394003 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.256626654 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.13863215 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12170828 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17690741 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.154790113 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.148291746 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158784134 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.175985432 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.141450559 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149306965 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.165498153 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.238122719 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.221118397 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.124822185 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.31749487 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.164933069 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.139199967 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.152371201 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.87916134 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.163609406 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.138626273 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.119320638 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.152526769 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.14384596 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.120121149 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.499622842 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.160337685 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.226910388 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.12581845 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.203461607 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.15368303 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.155777876 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127467545 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.146162303 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.14922108 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.147327727 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122401021 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.146371956 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.123226677 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.150101666 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.14886642 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.145201926 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.119615243 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.204246915 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.135304783 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.162543498 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.16615501 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.128777899 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.141368334 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.172634294 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.125650842 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.13763037 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.129843213 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.245541916 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155983575 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.14513049 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.154810455 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.185194861 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.142582688 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.334314815 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.126084213 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.183960086 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.139675471 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153511269 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.151934567 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.122586197 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.144009793 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.119146465 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.139483382 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.124851892 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.147971943 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.192042694 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.146630004 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.125282581 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.156565876 seconds)
  done (took 32.248677735 seconds)
done (took 62.650045308 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.497197473 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108792691 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.130261164 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109835932 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.130890083 seconds)
  done (took 1.723871901 seconds)
done (took 2.45231028 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.229128408 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.334230904 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.244142091 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.154324518 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.217112526 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.217222424 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.202825455 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.214579573 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.22688672 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.211831071 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.140640319 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.236223642 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.229116152 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.199817953 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.147729907 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.2515167 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.191044912 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.211808334 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.239761748 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146655581 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.141966235 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.168710205 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.145671482 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.15032823 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.145290291 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165974234 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.150579501 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.166490775 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.139950803 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.150661375 seconds)
  done (took 2.412069271 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.172691237 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.144580307 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.137268836 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.153980179 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.14074195 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.149007634 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.142851144 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164194503 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.15212003 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164668126 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.141131537 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.150612549 seconds)
  done (took 2.382732795 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.122422639 seconds)
done (took 9.944943978 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.240981649 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.873440771 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.19745615 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.309820322 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.387467834 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.322308306 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.674893299 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.250309461 seconds)
  done (took 16.111034265 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.160367987 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.149957387 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.138139688 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.249513445 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.157075562 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.139292546 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.154783012 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.136888209 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.15418793 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.134437146 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.147861981 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.134637189 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.133407589 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.150894315 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.133739212 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.151347504 seconds)
  done (took 3.227889478 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.178173947 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.177427352 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.138765989 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.159877461 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.136759672 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.159729073 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.144147403 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.158563649 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.137758228 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.154006193 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.144399057 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.157040582 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.139239019 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.153186145 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.139564525 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.177380301 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.136110638 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.157594544 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.157823936 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.159070961 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.158691471 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.139628811 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.156194295 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.14162598 seconds)
  done (took 4.473756578 seconds)
done (took 24.557214319 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.196640699 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.147275908 seconds)
  done (took 1.095221693 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.210987588 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.22732414 seconds)
  done (took 1.195863271 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.155550009 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.150070122 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.16335708 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.16261267 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.13425726 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.149831797 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.157616679 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.152759108 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.132902415 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.151271996 seconds)
  done (took 2.271196982 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.137130897 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.152071215 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.149753353 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.219352637 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.158783352 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.137827951 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.155388031 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.137559419 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.155539554 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.134394547 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.155254308 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.152127634 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.154522756 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.153844257 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.155197431 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.139006163 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.15900915 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.137061407 seconds)
  done (took 3.504850081 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.134609162 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.133162495 seconds)
  done (took 1.032678041 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.137394613 seconds)
    (2/7) benchmarking "second"...
    done (took 0.132237554 seconds)
    (3/7) benchmarking "month"...
    done (took 0.153904863 seconds)
    (4/7) benchmarking "year"...
    done (took 0.15132935 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.134669461 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.131994253 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.152995577 seconds)
  done (took 1.758498897 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.584556986 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.271241667 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.399259306 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104374621 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.155551998 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.376818356 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.157604393 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104944667 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105819804 seconds)
  done (took 3.051532466 seconds)
done (took 14.667923281 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.136113443 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.329085026 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.652758184 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.172150908 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.133005928 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.212934852 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.388489896 seconds)
done (took 2.797902095 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353010088 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.209566043 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.120256928 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.135632805 seconds)
  done (took 1.584985779 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.125538619 seconds)
    (2/2) benchmarking "read"...
    done (took 0.142340438 seconds)
  done (took 1.042394865 seconds)
done (took 3.401572994 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.154098712 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.153521479 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.138910797 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.153342062 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.13694439 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.153817469 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.13716356 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.152729176 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.137360257 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.15056118 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.137615099 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.155150572 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.134173931 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.15536533 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136644982 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.274123965 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.137067524 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152432349 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.135441746 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.15638604 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.140810896 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153777474 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.140787954 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.158911735 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.140584657 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.157118198 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.139338074 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.154765499 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.140964168 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.156803576 seconds)
  done (took 5.294662778 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.140079931 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.128109302 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.149697662 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.139335522 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.148341008 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.132862315 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.149021192 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.133234281 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.151389235 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.133240596 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.151996292 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.133138799 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.150056506 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.134639148 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.153237203 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.135795195 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.160470293 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.133784566 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.150497004 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.134816937 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.13713635 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.152554659 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.131574927 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.153373459 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.133103619 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.151119375 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.134659149 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.150729653 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.133938613 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.150181343 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.136738561 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.152469468 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.133857843 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.160664629 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.136798925 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.150839813 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.142129609 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.151823001 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.140037523 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.134898387 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.155137175 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.136631368 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.15851874 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.147033859 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.157700102 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.138744404 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.15673867 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.139794854 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.157223588 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.139889004 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.149286592 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.1337734 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.154424985 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.135064618 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.156283633 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.133530917 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.135710609 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.157523897 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.139277168 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.156805993 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.13091681 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.152921922 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.143552704 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.15819278 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.153586589 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.163984826 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.134836475 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.155117345 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.135193459 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.15798272 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.137508492 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.163132694 seconds)
  done (took 11.217791071 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.135553408 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.133365993 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.154364983 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.134143498 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153557574 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.136662805 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.153054639 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134176894 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152326809 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134098282 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.152837072 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.134806077 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.151165963 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.135158698 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.132904544 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.153019902 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.133636735 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.153044094 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.133720373 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.153422082 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.133997698 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.152221966 seconds)
  done (took 3.929498541 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.280061047 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.14012654 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.204110766 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.146831686 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.173215012 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.165146078 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.140164896 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.159159809 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140303482 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.163330822 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143671258 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158756781 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.153255961 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.163007052 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.161582473 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.145813178 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.156390521 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.145654687 seconds)
  done (took 3.731520443 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.136436928 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.133346787 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.153708935 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.133357698 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.154221884 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.134749684 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153827204 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.134455537 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.154344835 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.134671357 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.154347199 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135527693 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.133974037 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152849511 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134126507 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.154506646 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.135907687 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15370744 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134886423 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.153739698 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.136530705 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.154125483 seconds)
  done (took 3.952829779 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150420349 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.156668691 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.158886706 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.159124524 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138341697 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.156293803 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.142132874 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.157383627 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.145402097 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.156171148 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.137835079 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.154312455 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.155689885 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.160302248 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.145087982 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.158275161 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.139818769 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.159086835 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.142152873 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.141094417 seconds)
  done (took 3.809924348 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.228639407 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.17312904 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.172835826 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.161704575 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.172898543 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.153766427 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.18148006 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.153369133 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.172177402 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.184032803 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.153256318 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.171607218 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.161985921 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.176729177 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.152470158 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.180506778 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.160285838 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.181405908 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.172668785 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.15381842 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.183859783 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.152719622 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.179949642 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.152418253 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.172736235 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.171003016 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.154928172 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.177831476 seconds)
  done (took 5.567306597 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.148883676 seconds)
    (2/2) benchmarking "in"...
    done (took 0.165099685 seconds)
  done (took 1.116076879 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.139416762 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138191284 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.157161415 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.138447496 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.157620512 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.137743424 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.158031826 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.137409566 seconds)
  done (took 1.966060244 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.248715751 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.258418084 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.141864741 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.168171505 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.253703449 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.234787825 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174395902 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.164415745 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.138356024 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.152039423 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.249210243 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.128672528 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.158128113 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.135246523 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.159597656 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.142081963 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.158511399 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.146002413 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.1650564 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.13903198 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.161135471 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.143128202 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.160778543 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.146758739 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.162799721 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.139813508 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.160517835 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.148995218 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.155729583 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.139722863 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.154948908 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.137170644 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.162439493 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.141586477 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.158122989 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.254267451 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.144416203 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.155827567 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.15748403 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.143956444 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.18344598 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.140317739 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.158414538 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.137055152 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.160251326 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.143283326 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.163027583 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.13951224 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.130602634 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.154489867 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.137540952 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.154758601 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.136541383 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.158328641 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.136648316 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.16623827 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.139236834 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.156398918 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.1333174 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.153813015 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.135926185 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.156811672 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.139150736 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.161319504 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.139989179 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.159540283 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.156174777 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.139487417 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.139230026 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.160269667 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.137070913 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.174399704 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.158343991 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.145950712 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.142997861 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.159107312 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134859224 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.163274728 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.136901553 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.15968726 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.143019706 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.181482435 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.159225296 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.135102697 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.132544931 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.165353431 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.140235108 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.161665247 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.129935339 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.167771369 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.139721759 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.161177503 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.130353752 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.157946115 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.133591863 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.162218049 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.130262482 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.160071584 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.137420147 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.163827374 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.143946322 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.156928819 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.140365723 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.16630337 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.143676859 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.15938378 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.207898781 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.136089642 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.155192378 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.140818837 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.165583658 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.134160611 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.160628314 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.13915769 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.138224552 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.157779906 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.142775239 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.159642486 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.140196305 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.163696082 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.140300585 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.160915635 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.140045211 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.168460021 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.135389828 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.165070057 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.147144645 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.160861547 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.139801927 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.159799255 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.138371755 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.159372895 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.142892046 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.156477363 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.144386529 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.156295609 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.140584089 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.160435299 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.144367413 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.16103473 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.134623838 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.15774241 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.138686653 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.159376068 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.140827601 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.160520621 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.134788999 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.153041499 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.139484999 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.15533855 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.140173569 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.168279918 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.135412197 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.162562369 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.135910495 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.167777698 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.135809066 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.164534677 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.143183136 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.165929323 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.145170199 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.151977963 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.13712791 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.162218674 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.141027194 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.155771229 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.140176364 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.159400079 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.147588916 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.153650238 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.14287001 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.151985937 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.137971189 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.165094903 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.142935972 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.142403203 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.156790015 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.172330769 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.171889046 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.164633249 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.140289737 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.159473695 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.145420358 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.159008352 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.144723232 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.144676128 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.165697929 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.137210989 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.159374751 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.144981236 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.157775071 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.142088085 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.15979848 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.140526312 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.154113359 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.144086554 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.157115018 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.143782827 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.164395127 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.144870396 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.166239321 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.141597906 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.16071974 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.148969713 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.157004162 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.144099358 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.154755499 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.145181096 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.172297508 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.146129775 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.166477974 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.141550984 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.161035931 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.14065529 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.170492342 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.142128963 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.161336595 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.141210729 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.153618655 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.133824354 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.166120963 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.144113189 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.155894195 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.141493874 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.162488665 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142408116 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.157592163 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.133942674 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.164954057 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.145071495 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.156528824 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141337011 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.157898986 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.140526751 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.167404485 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.133735301 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.156769624 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.144476712 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.165475867 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.141116367 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.160992235 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.145242505 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.165801493 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.145681289 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.144796163 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.160592482 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.14654261 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.159762708 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.139463967 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.158810996 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.143882487 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.15707133 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.142461135 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.161655714 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.137420179 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.159249156 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145013468 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.16798885 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.144894181 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.161790622 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.14390704 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.16847456 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.146841324 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.159409862 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.144941746 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.158016921 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.133563754 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.158186119 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.133750839 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.163739477 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.137209157 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.165502682 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.139205995 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.160185674 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.145221309 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.164317927 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.13903145 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.166618619 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.15234682 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.156427832 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.133675341 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159182988 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.140392719 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.159597923 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.138884106 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.166579349 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.144107055 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.167092383 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.143340122 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.158676369 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.142293325 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.16946406 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.138706754 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.167127659 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.146674719 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.168012204 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.137388554 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.165161113 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.138916777 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.164668156 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.134963041 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.159927515 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.141304189 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.162778422 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.138507023 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.159475543 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.138640199 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.154732841 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.138880533 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.16724746 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.140016631 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.166159526 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.140268424 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.159091823 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.138867139 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.157937196 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.148079463 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.158715805 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.148713617 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.161958149 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.135840749 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.135187645 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.167434308 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.140243218 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.168215304 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.13561891 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.166498041 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.146776882 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.16668978 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.142164666 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.171103207 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.148343774 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.168050682 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145685171 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.157088983 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.140219535 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.167093601 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.14126316 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.165569482 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.144630437 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.15672529 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.143274057 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.169564119 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.143541685 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.161534068 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.135696435 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.16390647 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.147717776 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.167363889 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.144226734 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.168115752 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.146204983 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.157893139 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.147321843 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.169262218 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.142943742 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.169412123 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1449102 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.167475604 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.139786297 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.168125441 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.144252713 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.155831622 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.138177003 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.139140021 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.171516621 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.135382812 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.169728317 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.14807375 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.161840148 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.139593067 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.167705275 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.138495107 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.165011498 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.146902699 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.160910511 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.151420311 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.165517797 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.139773633 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.16736449 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.147024983 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.158243652 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.14239342 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.161637089 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.149642481 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.162567579 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.149769163 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.165716245 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.150240835 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.169532381 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.154472417 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.175989253 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.151008359 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.161571489 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.151341974 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.167365956 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.146309417 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.162620071 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.14578393 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.158360373 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.143931263 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.170250113 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.140695887 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.171457403 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.147822467 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.163104633 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.142134547 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.167858096 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.144979447 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.169352988 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.141484052 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.164250827 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.138625929 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.164932513 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.143261185 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.168785942 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.141278547 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.157031565 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.148247482 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.146571415 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.169242608 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.144398602 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.17059374 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.136221306 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.15774169 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.144860009 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.161447533 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.152763252 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.167200952 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.14108959 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.163870528 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.144648678 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.167992931 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.148948273 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.158604285 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.138924189 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.164536169 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.145372184 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.164515521 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.138689974 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.170047949 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.143075726 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.168156188 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.143013787 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.159628173 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.142774867 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.171749357 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.14146593 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.160300295 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.140911191 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.171655694 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.144907868 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.161626065 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.13829756 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.169606776 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.145439461 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.171163438 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.140615612 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.16490835 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.142461051 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.167718734 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.151088433 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.162059184 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.144934373 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.164124177 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150032095 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.169852612 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.137570887 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.162781434 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.154893673 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.170568257 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.145965055 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.167610474 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.143905122 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.172483841 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.151847945 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.168708005 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.13944895 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.159491177 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.144151289 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.159504188 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.147268485 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.170167652 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.144738379 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.163000675 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.149540967 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.149030952 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.169271925 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.147361571 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.161031789 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.151921489 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.164788075 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.148412144 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.162342382 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.139424197 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.168846449 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.152476197 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.165907142 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.146496675 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.168108445 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.147456263 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.163452158 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.143731928 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.169331229 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.149721456 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.172258969 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.145448398 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.164321253 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.148355085 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.177123105 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.146787546 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.165975608 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.152733047 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.17214102 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.146489047 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.165400907 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.149605018 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.172869063 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.149453025 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.172504703 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.143340608 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.165341264 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.153059362 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.175635524 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.156545925 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.166645666 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.140908254 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.170945711 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.146803733 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.162084429 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.150101538 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.174681428 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.153019849 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.167346821 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.144009132 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176354032 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.151200458 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.16693672 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.144555557 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.165179731 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.151093405 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.165226761 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.15064591 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.163365123 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.154168049 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.173235938 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.153147547 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.17480519 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.140820266 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.17234875 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.148681023 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.174907414 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.148051153 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.140173315 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.163400411 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.14876763 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.175378692 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.152976179 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.171785624 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.151268143 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.171861124 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.146739115 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.169152647 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.143863119 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.175427719 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.154202222 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.169995266 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.149352402 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.169281786 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.147605548 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.170370618 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.152743465 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.174947798 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.146919458 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.177939969 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.154692153 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.16639488 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.144623312 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.168036143 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.149420267 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.168650445 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.15146914 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.165002029 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.14144048 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.173455476 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.153891035 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.167646611 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.154893907 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.174324903 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.146827561 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.170233779 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.155615163 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.171174914 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.150536555 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.147303162 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.171706635 seconds)
  done (took 92.94249815 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.195490387 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.176795769 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.148875032 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.171069281 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16713609 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.174196569 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.149310442 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.171406983 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.15073678 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.179972684 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.149345939 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.170038105 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.164608106 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.192744619 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.188550628 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.159226803 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.170760203 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.150979608 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.169666027 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.151478701 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.185837185 seconds)
  done (took 4.436190848 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.14944198 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.147915426 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.172781314 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.149079504 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.171822135 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.149117967 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.1716833 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.149613071 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.17099008 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.150076992 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.170615021 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150601614 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.147942638 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.172057998 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.14821782 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.172712433 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.149864567 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.173255518 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.149812839 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.172002897 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.150107762 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.171131183 seconds)
  done (took 4.407730972 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.174504126 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.151932145 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.171427713 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.150408632 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.175119905 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.149411175 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.176490589 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.150172809 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.181207398 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.145408829 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.162407093 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.145445059 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.171392855 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.150396798 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.166374886 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.149876759 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.1805374 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.152908418 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.177528249 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.149754938 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.163528057 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.151045577 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.172161135 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.143134933 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.15416705 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.178190713 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.153344672 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.175458416 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.140882968 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.177803663 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.149897263 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.168372084 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.140666817 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.163411088 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.141925278 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.175632108 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.154352705 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.173600463 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.152770578 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.165198963 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.152489159 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.175556701 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.144410873 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.151164782 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.173522196 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.14465479 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.177758658 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.150025297 seconds)
  done (took 8.598740691 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.179167386 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.211717578 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.153459023 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.205967468 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.188363981 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.160568718 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.177626952 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.181544194 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.176647 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.15531685 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.190533635 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.166623397 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.178651141 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.158585234 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.179536236 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.155660546 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.179275805 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.152553737 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.181914397 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.176870798 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.159357829 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.179096021 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.166318575 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.1853156 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.156837392 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.176342697 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.153949868 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.180411708 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.16319416 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.182425174 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.157755826 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.181832377 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.186477096 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.155158225 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.175113096 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.155971502 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.188434199 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.156727329 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.178199955 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.153399172 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.178380213 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.158608647 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.179361477 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.167126938 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.180540322 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.156100862 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.178172345 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.153372054 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.188398159 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.156184453 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.185419265 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.187350877 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.159389987 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.177049419 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.16003584 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.187407296 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.159138869 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.177857515 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.159592556 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.188887415 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.154194511 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.18033083 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.16605278 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.180831786 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.162196117 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.191705424 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.157394698 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.181638445 seconds)
  done (took 12.712055472 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.185822982 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.181311509 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.166890178 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.189875585 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.158541951 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.182569365 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.158968595 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.181505852 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.158962285 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.430629051 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.180281736 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.292397165 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.162811315 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.187445195 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.15886827 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.184006839 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.158986836 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.183135084 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.159082655 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.183203788 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.158702623 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.189765646 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.157604505 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.188435193 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.192492154 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.155898532 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.180430052 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.158947848 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.189757547 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.158317778 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.192930447 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.158964448 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.182978581 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.190004646 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.169161416 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.181398482 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.153973132 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.181066565 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.158663481 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.182741236 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.155894884 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.189916075 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.158466185 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.178332257 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.159049548 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.181385463 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.166761386 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.19229559 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.185918165 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.165755035 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.181879819 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.167306717 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.183148115 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.158300276 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.188947326 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.19583892 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1676419 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.190451983 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.158362039 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.188745185 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.187542832 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.17493047 seconds)
  done (took 12.128536403 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.155820821 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.154761965 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.176275793 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.154868783 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.179022017 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.154075941 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.177404694 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.154256258 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.176163464 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154604545 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.177748299 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.155157948 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.175429383 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.15559393 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.177358565 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.15646257 seconds)
  done (took 3.567217685 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.17331556 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.194711652 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.259118425 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.158268331 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.177581175 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.162052763 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.17907309 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.15966152 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.176592087 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.16112571 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.181522661 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.159475852 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.194965988 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.159999929 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.177074296 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.15959846 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.176034323 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.159816628 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.176946848 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.240721318 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.184616495 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.156741702 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.181879408 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.158786194 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.182530256 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.158974504 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.187430949 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.156351561 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.180814085 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.155123357 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.180751896 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.161511836 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.17850491 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.159279766 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.180729371 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.155942258 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.178748941 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.15584594 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.181810066 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.155645637 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.182404141 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.156426082 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.179526383 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.157609518 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.177995005 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.156665137 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.178604147 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.160806923 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.180993122 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.157843145 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.17954414 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.160973245 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.184780722 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.16384131 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.186587431 seconds)
  done (took 10.479029775 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.168613228 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.181384402 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.169267662 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.178325721 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.158690586 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.180564625 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.159957498 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.1572443 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.181431045 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.154600284 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.182862298 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.157465283 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.182172396 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.157421916 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.183029148 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.157645134 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.181260736 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.157574422 seconds)
  done (took 3.992567649 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.156212977 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.154424747 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.178784086 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.153576744 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.178403416 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.155381392 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.17765461 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.155733398 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.17884677 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.154809277 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.177423715 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.156222704 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153731976 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.178360601 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.156667846 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.180763255 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.155709111 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.182803539 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.155781117 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.177900841 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.157096146 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.184745539 seconds)
  done (took 4.608407452 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.169673856 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.283346252 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.187285619 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.300655065 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.152718805 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.177216176 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.161622919 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.178413195 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.189978783 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.155131185 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.174534623 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.155150725 seconds)
  done (took 3.230709831 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186259098 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.214962211 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.158259728 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.181333578 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165963335 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187210258 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164332602 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189254817 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168706911 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196020144 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.184505753 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172969593 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192973291 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169224079 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190342121 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165354068 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185530503 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163042523 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.182409091 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201570245 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163392409 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192213986 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162769167 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185574218 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166022125 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196483959 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169434419 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197049109 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185497596 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171663865 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.189652873 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162406218 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194652224 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173462851 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.183213093 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168807672 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187712843 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201474023 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167177763 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194643786 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159013919 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191407023 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170351291 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192302419 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194744082 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16558945 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190763313 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163216149 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187215768 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.186008726 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192386262 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194438005 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168036668 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194219043 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173646231 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.209962135 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197429282 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171610613 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19157421 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17574675 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195072236 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167720917 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195567875 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.200359024 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169073366 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195296104 seconds)
  done (took 12.981063172 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198639396 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.183513672 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165219045 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198966995 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171251237 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187087692 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163254941 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186795419 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162742323 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.184033392 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.23083443 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163519442 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19641381 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170840132 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187155512 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163229087 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187306863 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195234862 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161755756 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.208978083 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164105327 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196240743 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171177004 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196689388 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.199778027 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167812573 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186745438 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163278929 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188193966 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163672589 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195972567 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163399619 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198725888 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.160195707 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196075427 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188288784 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168391034 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192520122 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16659265 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191771602 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172646853 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.203393263 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163205077 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188328743 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198594238 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165512412 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187522751 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.160692718 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.187279329 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160669004 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.20016131 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17443869 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199056802 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195595285 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164732827 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187185992 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16550582 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187532514 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164042801 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192809186 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170729229 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189143877 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.209842638 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164470441 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1874323 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172720279 seconds)
  done (took 12.963035049 seconds)
done (took 228.408651911 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.323890498 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.351969982 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.149285937 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.529543898 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.150393692 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.855160274 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.839406615 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.231701602 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.176110605 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.150884324 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.175450566 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.168373629 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.519559708 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.171565123 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.151739207 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.189260276 seconds)
  done (took 32.094541022 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.355000555 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.400875986 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.1897036 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.156664067 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.155857326 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.182970561 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.154422775 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.181653974 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.154607547 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.185120637 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.1775706 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.15676546 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.183038248 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.157221267 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.178853888 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.157903762 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.18455352 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.157003296 seconds)
  done (took 4.439515797 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.175560997 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.228221656 seconds)
  done (took 1.380668436 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.18507692 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.275622064 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.378151053 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.229136264 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.176505205 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.199233572 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.228705809 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.16951524 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.26940382 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.169009755 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.193755407 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.177618363 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.182362144 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.185520862 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.175734962 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.179102659 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.18443076 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.196337095 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.168961554 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.182847484 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.181445884 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.185333184 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.159817628 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.200288027 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.261554814 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.167088972 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.18389071 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.156829081 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.182745787 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.168981808 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.192182444 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.173106131 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.191480072 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.239079394 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.181655358 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.209938403 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.186246169 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.155988315 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.19530032 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.157182515 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.185255713 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.183279387 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.16786485 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.177363793 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.156042515 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.183438269 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.155810543 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.17950297 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.168010709 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.182675566 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.167069209 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.189175564 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.233136962 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.15878862 seconds)
  done (took 11.295904318 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.997208392 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.203478976 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.18203692 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.151332153 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.207755779 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.170966985 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.012459003 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.182611989 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.313703091 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.088773858 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.20138331 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.166114594 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.301097508 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.338475767 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.360354494 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.417590064 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.844802144 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.19437885 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.187191994 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.224973217 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.185661244 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174610128 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.196567865 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.515153496 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.157277199 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.181197763 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.16222287 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.190831745 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.239003294 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.158623741 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.187537656 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.262043215 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.355820699 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.272517014 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.156720677 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.180915871 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.155538747 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.247403919 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.359247457 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.280223243 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.249832652 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.155799609 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.180251309 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.161973559 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.196047503 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.155329623 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.241905793 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.25408266 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.253950173 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.185404059 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.166638785 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.191614431 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.160821271 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.239900555 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.181974584 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.42588506 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.451028094 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.157906615 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.18878441 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.1716802 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.354319654 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.160215837 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.299872901 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.204181443 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.274568332 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.181396517 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.866526875 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.248142379 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.15723463 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.187851152 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.161680479 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.189050729 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.184443558 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.222016895 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.493181329 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.188411415 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.162086674 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.181609225 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.291523261 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.158485497 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.181967387 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.242608141 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.161395489 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.187435671 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166858251 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188878815 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.254304539 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.336017239 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.165229565 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.189922157 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.163510956 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.194133079 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.158301175 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.291473519 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.319908359 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.239551259 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.290798814 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162065975 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.243706167 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.249031246 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.186868901 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.253669031 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.162873453 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.194635215 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16136037 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.312822861 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.194857376 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186927904 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.163687326 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.188906967 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.224878542 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.163154237 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.189305828 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.268978014 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.555692126 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.247084713 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.156877147 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.187352745 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165037098 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.242055908 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.190218079 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.326764898 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165104337 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.24779059 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.188402184 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.155693984 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.189519751 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.244684874 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.166208011 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190038797 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.185533788 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.168668091 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.344156731 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.282791624 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192704452 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.309990766 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.257904868 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.164268393 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.257938615 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.191356419 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.248625042 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.168735162 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.187901084 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.159317283 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.901354557 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.169277419 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.189656653 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.163353003 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.267330953 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.183777538 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.162790244 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.182237802 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.157214075 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.892549243 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.188758407 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.157602476 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.187100267 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.164049555 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.190236284 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165385789 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.189921892 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.244619993 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310348208 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.193457573 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.163459954 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.184869788 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.242179044 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.160163326 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.185347624 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159384726 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.184780513 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.166469844 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.190765388 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.161808496 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.252202115 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.240596862 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.320498327 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.630781555 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1583141 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.18528343 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.306758827 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.183971442 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.390163239 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.190153839 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.302457469 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.247348096 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.156341463 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.450322713 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.248358245 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.267093412 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.164492967 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.255787223 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.156421009 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.190705733 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.243401456 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.158532036 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192390237 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.240633564 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.168314619 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.19239071 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.325652194 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.186947096 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.31280627 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.156815654 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.253157076 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.186747292 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.165071607 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.419275368 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.159651553 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.196091703 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.242987166 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.165604422 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.185276287 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.034879822 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.160162958 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.194408298 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.164191444 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.32442174 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.244906613 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.165469661 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.19241601 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.168754278 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.244197989 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.290852416 seconds)
  done (took 61.574560585 seconds)
done (took 111.757244428 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.318228202 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.22771322 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.421709379 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.234178051 seconds)
  done (took 2.272215255 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.337170844 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.198841617 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.296856585 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.182047874 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.304852126 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.15749015 seconds)
  done (took 2.501339468 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.229953258 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226184997 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.225922617 seconds)
  done (took 1.708686681 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.267768206 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.2695842 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.41059679 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324147591 seconds)
  done (took 2.357096876 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.338851492 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.175592749 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.216065798 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.288208539 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.306343986 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.268895321 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.207603787 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.211628343 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.216105062 seconds)
  done (took 3.287019736 seconds)
done (took 13.15217472 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.36330445 seconds)
    (2/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.463344239 seconds)
    (3/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.525686985 seconds)
    (4/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.2380736 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.29780543 seconds)
    (6/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.425649515 seconds)
    (7/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.390612454 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.171854742 seconds)
    (9/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.372703115 seconds)
    (10/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.199325118 seconds)
    (11/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.247432931 seconds)
    (12/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.207691089 seconds)
    (13/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.187869941 seconds)
    (14/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.276592386 seconds)
    (15/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.282967384 seconds)
    (16/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.190884427 seconds)
    (17/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.341595606 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.16134751 seconds)
    (19/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.271157516 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.18565665 seconds)
    (21/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.264452056 seconds)
    (22/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.293997529 seconds)
    (23/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.291110109 seconds)
    (24/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.273215286 seconds)
    (25/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.256525896 seconds)
    (26/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.269610848 seconds)
    (27/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.186049085 seconds)
    (28/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.168129887 seconds)
    (29/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.30383742 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.215306249 seconds)
    (31/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.254009421 seconds)
    (32/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.217724139 seconds)
    (33/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.16916088 seconds)
    (34/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.199412023 seconds)
    (35/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.137449739 seconds)
    (36/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.399735701 seconds)
    (37/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.259841429 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.183061369 seconds)
    (39/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.219390634 seconds)
    (40/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.247737538 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.141122409 seconds)
    (42/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.22760708 seconds)
    (43/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.13486061 seconds)
    (44/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.195142084 seconds)
    (45/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.252098861 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.206443032 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.318237617 seconds)
    (48/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.287490741 seconds)
    (49/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.168453754 seconds)
    (50/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.22220444 seconds)
    (51/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.130439043 seconds)
    (52/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.134604758 seconds)
    (53/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.162582912 seconds)
    (54/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.303620424 seconds)
    (55/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.358733473 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.191676687 seconds)
    (57/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.167335155 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.19047485 seconds)
    (59/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.191807707 seconds)
    (60/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.137846178 seconds)
    (61/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.256173682 seconds)
    (62/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.129826008 seconds)
    (63/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.194669967 seconds)
    (64/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.199610645 seconds)
    (65/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.135535256 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.189259754 seconds)
    (67/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.135666054 seconds)
    (68/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.223426698 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.21781708 seconds)
    (70/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.268936439 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.164337165 seconds)
    (72/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.213618987 seconds)
    (73/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.129185474 seconds)
    (74/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.182706055 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.193949546 seconds)
    (76/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.279381805 seconds)
    (77/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.171404786 seconds)
    (78/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.240011819 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.18335703 seconds)
    (80/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.192827642 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.167477775 seconds)
    (82/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.198144733 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.184416892 seconds)
    (84/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.372811487 seconds)
    (85/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.196748147 seconds)
    (86/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.183240419 seconds)
    (87/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.188771952 seconds)
    (88/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.161487668 seconds)
    (89/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.12921096 seconds)
    (90/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.198418488 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.161090338 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.199220066 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.172454535 seconds)
    (94/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.228654003 seconds)
    (95/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.135127023 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.212684706 seconds)
    (97/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.129622143 seconds)
    (98/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.178936266 seconds)
    (99/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.211039402 seconds)
    (100/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.215407701 seconds)
    (101/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.130595018 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.190389833 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.166603295 seconds)
    (104/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.202147103 seconds)
    (105/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.17126361 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.207598038 seconds)
    (107/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.136126251 seconds)
    (108/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.212060868 seconds)
    (109/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.171984794 seconds)
    (110/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.136502916 seconds)
    (111/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.225514535 seconds)
    (112/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.136678091 seconds)
    (113/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.131136636 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.202753808 seconds)
    (115/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.170440834 seconds)
    (116/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.170630763 seconds)
    (117/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.184359089 seconds)
    (118/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.20821928 seconds)
    (119/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.222121879 seconds)
    (120/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.131452034 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.193363716 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.16892381 seconds)
    (123/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.162754894 seconds)
    (124/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.137469839 seconds)
    (125/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.241578902 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.194010834 seconds)
    (127/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.225660309 seconds)
    (128/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.162901791 seconds)
    (129/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.17286582 seconds)
    (130/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.214145925 seconds)
    (131/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.18827278 seconds)
    (132/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.132623192 seconds)
    (133/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.130924676 seconds)
    (134/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.15774563 seconds)
    (135/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.133532543 seconds)
    (136/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.132726888 seconds)
    (137/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.198838066 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.165106 seconds)
    (139/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.153359467 seconds)
    (140/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.170749627 seconds)
    (141/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.13660026 seconds)
    (142/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.157546941 seconds)
    (143/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.17436015 seconds)
    (144/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.135879473 seconds)
    (145/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.163995259 seconds)
    (146/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.142930606 seconds)
    (147/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.130072678 seconds)
    (148/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.135694351 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.193443088 seconds)
    (150/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.193882076 seconds)
    (151/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.161347317 seconds)
    (152/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.164658651 seconds)
    (153/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.190137203 seconds)
    (154/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.134145946 seconds)
    (155/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.130403586 seconds)
    (156/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.132606632 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.193840421 seconds)
    (158/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.172165055 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.192275344 seconds)
    (160/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.137232153 seconds)
    (161/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.161397833 seconds)
    (162/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.164558745 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.185858251 seconds)
    (164/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.154778917 seconds)
    (165/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.167329996 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.190975718 seconds)
    (167/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.130401331 seconds)
    (168/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.137545682 seconds)
    (169/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.185421396 seconds)
    (170/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.221164606 seconds)
    (171/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.143110244 seconds)
    (172/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.135816618 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.195095595 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.164614547 seconds)
    (175/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.190212135 seconds)
    (176/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.13085092 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.209849589 seconds)
    (178/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.139022203 seconds)
    (179/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.133298533 seconds)
    (180/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.13283816 seconds)
    (181/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.158432891 seconds)
    (182/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.133747704 seconds)
    (183/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.13590285 seconds)
    (184/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.136098434 seconds)
    (185/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.165625042 seconds)
    (186/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.137139669 seconds)
    (187/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.130193253 seconds)
    (188/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.163727735 seconds)
    (189/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.133803311 seconds)
    (190/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.162230814 seconds)
    (191/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.199387248 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.163530245 seconds)
  done (took 38.868160393 seconds)
done (took 39.901844442 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.313950823 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.155531045 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.172373456 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.199287594 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.297286609 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179101465 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.216494074 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.172672828 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.210949929 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.172208266 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.189692926 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.18449953 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.198799868 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.308857649 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.20126393 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.166250348 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.189480604 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.18448042 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.212266542 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.189897455 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.296794568 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.163523702 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.210322441 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.162618869 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.297479446 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.195112266 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.170018144 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.203305454 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.184354103 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.200808314 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.172112103 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.189977334 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.188772207 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.214257556 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.161970498 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.199844699 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.163097624 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.163544895 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.173105188 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.201526427 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.186393843 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.200437708 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.173376072 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.19134817 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.17462331 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.20011203 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163651852 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.203033681 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.163063068 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.200617246 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166637515 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.214940362 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.173369782 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.189798067 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.163586211 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.191266954 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.184397949 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.190560872 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.186968424 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.189299591 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.166787976 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.189641525 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.176287446 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.190158092 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.175370909 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.163868599 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.201518049 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.175454569 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.200981802 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166148707 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.192313046 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.172787348 seconds)
done (took 14.99985906 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.169998817 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.233841229 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.317421643 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.318407074 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.19359183 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.210433588 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.20556864 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.188568387 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.203759437 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.183152733 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.23053021 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.198565198 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.317738869 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.210894173 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.208532532 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.178646522 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.174831691 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.201284183 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.316146996 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.21766083 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.189246427 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.211638318 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.190353219 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.210513273 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.168126144 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.220103193 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.171368671 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.205258043 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.167792297 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.214305288 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.215139106 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.170652736 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.196938825 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.187619893 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.212589308 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.180037173 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.209790612 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.177970301 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.195259312 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.169933003 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.203845601 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.184596155 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.197086738 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.181696555 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.205940272 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.184580953 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.204244581 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.182393122 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.198842575 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.177050731 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.197663292 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.194537692 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.210384733 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.184082859 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.209946529 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.182432403 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.216562606 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.182470533 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.201621886 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.180537998 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.198251533 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.168825111 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.198575149 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.217594358 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.174657238 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.209148942 seconds)
  done (took 14.47802508 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.189666166 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.22898078 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.182021708 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.209563581 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.175976383 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.193522572 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.163808394 seconds)
  done (took 2.443364401 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.167460059 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.334374866 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.322420538 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.323218181 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.314557726 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.366195923 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.188495745 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.196225397 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.20198249 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.206028485 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.33528873 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.420181182 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.177583779 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.210475845 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.331928636 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.165493597 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.3282309 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.196943552 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.180156941 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.32598182 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.213113311 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.227284414 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.181443263 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.195082621 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.331739306 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.167312905 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.403230212 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.186215352 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.203086382 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.181636829 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.209217137 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.243759598 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.325063301 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.212770613 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.173347951 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.354420592 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.31968123 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.183664541 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.405049005 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.171565159 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.313822536 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.212454181 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.18146401 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.212378606 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.18135384 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.31064257 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.218274443 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.210673622 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.181331401 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.338625473 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.209915729 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.332668619 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.177784182 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.211345758 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.177954946 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.213381403 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.187526749 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.211546963 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.337958693 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.212472303 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.327227088 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.328856019 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.319869265 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.327739898 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.221770574 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.335332371 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.310056557 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.179962691 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.206754415 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.181649517 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.325745378 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.212689871 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.207413866 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.318774596 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185715955 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.329694231 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.330571336 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.209995017 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.179830802 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.202687123 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.178347336 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.198465869 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.320697741 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.180357157 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.210505431 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.21382871 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.182491304 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.209733474 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.174307348 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.219944551 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.181453057 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.209912901 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.187142499 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.212169191 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.183599439 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.360188497 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.180240975 seconds)
  done (took 24.773287954 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.170285882 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.16804337 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.202722249 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.16843238 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.197904069 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.168861472 seconds)
  done (took 2.219330571 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.207173207 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.211547441 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.192247973 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.212180786 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.230719913 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.318951237 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.326925111 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.208384314 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.231527004 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.196376685 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.321657107 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.323896477 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.322792614 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.217130088 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.327412914 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.185784344 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.330459772 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.212158545 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.192086283 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.212303947 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.1811349 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.218323616 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.180125948 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.310011152 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.216691197 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.185517873 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.208180322 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.223403971 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.194058892 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.207436763 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.186861987 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.215044335 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.17670052 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.209599316 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.330829358 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.175863506 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.210777516 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.1850805 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.216974309 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.184953937 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.324804174 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.214249785 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.18919732 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.217708892 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.207137241 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.177265903 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.213892263 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.177507856 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.327956107 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.216996616 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.186088515 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.214480324 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.1858965 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.217654011 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.176437886 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.208534528 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.18590443 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.328131518 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.220078897 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.175291858 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.216648426 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.213380008 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.18033534 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.216011367 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.185936483 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.214529857 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.176429087 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.214479716 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.183185345 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.213355128 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.186921362 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.215136659 seconds)
  done (took 17.124276903 seconds)
done (took 62.136206232 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.651749466 seconds)
  done (took 2.795608893 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.269200813 seconds)
  done (took 2.413139176 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.647534615 seconds)
  done (took 19.830169361 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.500964119 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.420884544 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.104936579 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.243823407 seconds)
  done (took 3.419977315 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.158727599 seconds)
  done (took 2.324476359 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.475301502 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.346420491 seconds)
  done (took 1.976545223 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.844180368 seconds)
  done (took 2.01418935 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.972638917 seconds)
  done (took 3.132955483 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.364198654 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.286185464 seconds)
  done (took 1.818450851 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.729576377 seconds)
  done (took 1.90204255 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.313517269 seconds)
  done (took 17.488630153 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.322148956 seconds)
  done (took 1.499143027 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.356986356 seconds)
  done (took 1.537696807 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.814356583 seconds)
  done (took 4.995408979 seconds)
done (took 68.30706178 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.185732673 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.214503253 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.190277105 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.212846562 seconds)
  done (took 1.968513611 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.189778578 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.211535922 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.190023809 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.210185586 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.191548897 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.210221009 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.184197656 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.215241936 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.183914111 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.21288094 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.185641144 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.181537712 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.217089648 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.181062684 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.213263382 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.185571862 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.217649168 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.183143712 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.214181418 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.183980412 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.213152778 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.18492874 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.218585295 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.186845267 seconds)
  done (took 5.940878403 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.181907759 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.174356345 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.207903993 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.173074124 seconds)
  done (took 1.923537104 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.196794741 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.226943869 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.198364082 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.221835547 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.199757452 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.224697065 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.184383183 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.210687174 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.185200492 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.2229527 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.201242644 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.229412702 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.1978318 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.22001016 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.194813916 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.209435352 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.188929196 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.227344766 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.193703765 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.225911938 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.187634984 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.224158147 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.185274738 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.22504085 seconds)
  done (took 6.169099878 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.26134757 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.226762913 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.211123385 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.262307407 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.243720566 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.183808216 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.241596259 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.190713253 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.219418209 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.194710836 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.21403564 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.229848199 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.22055376 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.185821009 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.215494811 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.189701392 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.223887661 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.189241857 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.255231908 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.217134453 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.191137384 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.225085196 seconds)
  done (took 5.981350462 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.188677237 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.203478557 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.176624556 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.202075831 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.18892457 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.206639007 seconds)
  done (took 2.355365265 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.176149764 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.170123242 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.20095767 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.169426086 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.203593698 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.170665768 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.198419617 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.170501827 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.198910424 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.172076747 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.199684818 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.171066014 seconds)
  done (took 3.388796447 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273522309 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219575901 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.352070017 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.470432657 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262001693 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257565746 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.37926058 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228001608 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.276471195 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234304737 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278607849 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231759869 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253661342 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285750968 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210117709 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.246864575 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240118622 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.309466593 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240999924 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314115273 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25377162 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.245416885 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.289756584 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246154444 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.235826291 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230249105 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.216795177 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195503369 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26595347 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264165085 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274435825 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217416658 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239181505 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286555132 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326639193 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276852744 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.364791271 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.232366108 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.232738242 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.290294122 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.329070552 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23978583 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290624547 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248943032 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197709173 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291630418 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247426982 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.254669469 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.231986 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24015504 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249508109 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279679928 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.268471617 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234440918 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.398232081 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202422458 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.240997819 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276006758 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283895635 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27028875 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281607637 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.221551845 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.268057707 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290678073 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315572874 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.209415654 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.262444684 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190780933 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262579088 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.309139415 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282194056 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257901865 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.288575461 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199207038 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273373495 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262996799 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221593979 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309230672 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272342887 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.217444694 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220179614 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23338738 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192469324 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.288367688 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187659397 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.316653912 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231142911 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.275923444 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244070991 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.252400514 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261401182 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258673906 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230019131 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247424986 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.159690243 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243248342 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.254177745 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227171079 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226577318 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218787357 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237752349 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.223349906 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2206392 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.22040372 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238137677 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.2253118 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258712969 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239780074 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.231821898 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278683073 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215628857 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.263537992 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268533088 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297315506 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199432348 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.231632634 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323393997 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270407017 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.205471122 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27022491 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.298976711 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.210373642 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235532021 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266167551 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292098113 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211314643 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303777375 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237767815 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203425409 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.228724099 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273376587 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.226562683 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.258906852 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225324707 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.235184591 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287178994 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.22594965 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207731265 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283944898 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232654525 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19361876 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234909687 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204096941 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.24184167 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.249609166 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.207428487 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254889286 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266194183 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235473657 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257173026 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234325881 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272440146 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20065547 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.271429136 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215804784 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.218938738 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.274943247 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300057981 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197484796 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28011099 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.260439236 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277694201 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24433664 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229055652 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.281579013 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196551609 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.218857826 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230025671 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.270607971 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263422806 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.292514872 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272686397 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.265631376 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.233364249 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248678189 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270150824 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.28513554 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226181476 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.239432877 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27410293 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237952593 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.221942806 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.189877333 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.227547318 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235814415 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199766221 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236701838 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279509489 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233249205 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274905127 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.269205139 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237027888 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.261771806 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.225612034 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259207355 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.243636647 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239336536 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.294569671 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290723063 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27812003 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210057842 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263113441 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.188436939 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226650624 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.201225965 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.261259099 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.237155317 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203079532 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245745449 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.295541799 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268014317 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216612676 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288596296 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265840797 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.305737524 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.18919115 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.262465005 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26628277 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267428147 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.258046805 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232916505 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.230422963 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.295082287 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242483008 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291410279 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237948847 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283813471 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295969546 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.265993048 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199621217 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.244204271 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258942263 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208232846 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.262421355 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211133781 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232543962 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249352909 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.206556613 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240695692 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288329043 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211242933 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27595112 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.257068727 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27070368 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194345966 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242033185 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27477394 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215124619 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.195117344 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234184307 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293601888 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251815828 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252339709 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240415744 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.230994345 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.417981035 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250703638 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272673422 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238015652 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206536909 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.277008351 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.257621528 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259819229 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.254389503 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243429314 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31317432 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.27060494 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.209438008 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231549414 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215966606 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251921055 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.228351612 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.222061321 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.265836639 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.244068126 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288406529 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207288532 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274744337 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279273366 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.215440071 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.249759621 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208423298 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.330659927 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273050928 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275650964 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.266256069 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.233901898 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283999413 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225588922 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196917648 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.233917282 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.254371578 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233574645 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285471958 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.263044389 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279366289 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246350746 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264784213 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243154746 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.196816832 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.27139047 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217213413 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.311698951 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205474806 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.239866535 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287577716 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.188006203 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199339496 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263361799 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393447202 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249457405 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238235309 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.198374969 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.386621158 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199186262 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235461085 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.227240447 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270206414 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.234863619 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.256314825 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277857626 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242705595 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.229540559 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23718339 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.275942276 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281157992 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237496327 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276566371 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.248387866 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263504433 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226568114 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274798479 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247483176 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.216215508 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261611797 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301407964 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.276103481 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.203536691 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274218348 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273512572 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242362898 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273795038 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241459761 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252184572 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230992041 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267494982 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20771065 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2281043 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261526856 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.234819443 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23209625 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276997106 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274441001 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203037923 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228520176 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217971466 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271223431 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24406772 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.200508723 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290329698 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.231045926 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253661441 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317254207 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234858773 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238059102 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245146107 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232687763 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209626964 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247839475 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201362391 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.279677241 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280529862 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.201663322 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27757602 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268958818 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235037216 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25722472 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246377041 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.336019943 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.231864143 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29750606 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219489077 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300425546 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.253142851 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280761373 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242891021 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253217013 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269933073 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218411976 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.3242536 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269693752 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.270810007 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203831439 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246972822 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207970112 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.23725684 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.253936366 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243574487 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24935082 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.206527751 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.272681732 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247593891 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.217151755 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245590367 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.307478611 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22185077 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290970578 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.289884949 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243321037 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247713124 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278853328 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233076894 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.268710979 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24271358 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.248429694 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256677866 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.205014878 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.241654222 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319688717 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.196207148 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.264799462 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280060483 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.24267486 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279344519 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.237269884 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252342728 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245615263 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281348265 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198765196 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.256440811 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.275456679 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206059317 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.230418922 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.244783972 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264278153 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.270879227 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214106185 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.283235556 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302820648 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.19435972 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238654912 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394531359 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233942632 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298845504 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.227621201 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208041573 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252244008 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262927353 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.237356894 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278133961 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.233707162 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202453808 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.250027771 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.223670134 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.230155853 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242304681 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288025369 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262040091 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289438816 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.205731294 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.359465174 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212764699 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279325912 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.210020898 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.201639421 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245458791 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206098424 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247201754 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.281585994 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325444047 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.268234124 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.2200049 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239569984 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.198155824 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236307357 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231592348 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255490144 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279703167 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218862213 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.198058702 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213092799 seconds)
  done (took 122.328552203 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255001529 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.246489396 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.264195475 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.315676621 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.293747683 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.390820859 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.321078518 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.343221322 seconds)
  done (took 3.750101218 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.196471317 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.241237978 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.250297702 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.189616534 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.213938611 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.596056324 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.244184482 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.225643877 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.234078166 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.228634868 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.214619018 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.651370104 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.227642647 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.22239819 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.225101299 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.18782748 seconds)
  done (took 5.65847082 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.612395417 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.773310261 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.527699685 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.430388625 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.386226503 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.300435075 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.985734907 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.294865401 seconds)
  done (took 14.632945979 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.247994664 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.278406548 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.538370049 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.422519878 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.292520636 seconds)
  done (took 3.105337502 seconds)
done (took 178.369562245 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.202250359 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.197114533 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.231746332 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.199371667 seconds)
  done (took 2.139421149 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.264579214 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.154860116 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.191026871 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.153803935 seconds)
  done (took 2.092379483 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.466408122 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.154533904 seconds)
  done (took 1.970057821 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.222216349 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.755274061 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.210135509 seconds)
  done (took 2.528370978 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.214822681 seconds)
  done (took 1.547389999 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.19602742 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.189835591 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.391665921 seconds)
  done (took 2.110811283 seconds)
done (took 13.713533365 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.219586037 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.03707261 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.656937443 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.206962603 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.826980658 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.471389828 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.647959082 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.254406799 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.277933348 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.21677542 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.247830033 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.767347238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.633419129 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.956842516 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.616824891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.95378519 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.800862157 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.18504703 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223669625 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.185910725 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.63025349 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.1835578 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218512977 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185216758 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.804336246 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.490369228 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216494772 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.965432113 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217106925 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194192886 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.506294164 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185555614 seconds)
  done (took 24.499957143 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.187298627 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.274198133 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.241233571 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.220716178 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192538346 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.219832216 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196450394 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.231483851 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.319468921 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.185345762 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.241354256 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.184792803 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.225572745 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.185877373 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.242237147 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.184233167 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.220319842 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.186085011 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.22608453 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.189304687 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.240326491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.184266016 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.220777494 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186103503 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.217091772 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.203502658 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.217886225 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.196909996 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.218460355 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.195119726 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.223982182 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.18785683 seconds)
  done (took 8.188272225 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.232458759 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.287602103 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.244057658 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.2582833 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.27484802 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.188123302 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.308869059 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.255318464 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.295093096 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.224805303 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.206807602 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.220839621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.225312108 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.221510057 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.209399869 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.219403601 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.188132887 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.220238027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.225538933 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.189179362 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.23997298 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185387977 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.220738628 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.18759779 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.218350299 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.206507886 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.218227239 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.198324504 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.218524063 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.19614527 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.224007307 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.187922368 seconds)
  done (took 8.542684441 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.203733696 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.201046491 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.242879352 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.242241556 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.196543181 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.200227995 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.235341523 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.195696138 seconds)
  done (took 3.070398867 seconds)
done (took 45.627751878 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.21322035 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.234951855 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.209328201 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.201039482 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.388219574 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.192940767 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.239222985 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.194198074 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.199607461 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.24257502 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.185317289 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.227572636 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.206097447 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.232422691 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.357820584 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.201204882 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.395138626 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.359162031 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.194338074 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.236497468 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.19559126 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.361167705 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.235294445 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.195144393 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.339895681 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.224793727 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.349179346 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.196861576 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.23246907 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.186945742 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.359819679 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.232093872 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.195229882 seconds)
  done (took 9.549225606 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.308686925 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.2319986 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.195181694 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.230970753 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.197860444 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.230729145 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.344442399 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.194587722 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.231602618 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.195949623 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.22938539 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.288823647 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.237925094 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.190439313 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.232273905 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.175691898 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.346864505 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.231988918 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.188529881 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.159233367 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.227417464 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.195291555 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.354991036 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.226350096 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.196557846 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.229570073 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.196846037 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.201024942 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.234484222 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.197079294 seconds)
  done (took 8.265870543 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.204266872 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.208224979 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.248966281 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.29784606 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.227412372 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.242551769 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.213470636 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.242863175 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.218080169 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.225036344 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.204506713 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.260118172 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.206228412 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.236720711 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.188385078 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.240487161 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.205729092 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.226531313 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.198051522 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.24204015 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.20971537 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.242214402 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.213399184 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.232766485 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.189939198 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.232865915 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.199458416 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.234643567 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.198287871 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.239557978 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.192100154 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.227226141 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.19132953 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.259520412 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.193244445 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.237500085 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.210280529 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.237899656 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.203825598 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.258606754 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.191276695 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.227824713 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.21618106 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.28146719 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.19193927 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.235352991 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.191632777 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.239740005 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.188882057 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.243823489 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.232154486 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.226515495 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.245917013 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.190055697 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.188275021 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.235162159 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.190649521 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.228443626 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.205677411 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.226235715 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.211273742 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.233801316 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.202550672 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.228429378 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.201266961 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.224821471 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.18951684 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.229707344 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.217174391 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.234260777 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.227174657 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.22588163 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.202335751 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.23896849 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.201124439 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.236667888 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.189634874 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.23746478 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.201845677 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.229501579 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.203704404 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.228105631 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.195244162 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.241567862 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.211723142 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.240469185 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.202087591 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.235770655 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.191900375 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.228288459 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.208340238 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.226658025 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.194753216 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.238471347 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.192137679 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.229009999 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.202060791 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.233591758 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.190167893 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.250668574 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.195320424 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.191165898 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.252802143 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.193316254 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.230698065 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.200074457 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.267361477 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.22507617 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.20014406 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.201179595 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.226460282 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.199075631 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.228349528 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.190379006 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.24126912 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.20657064 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.233276981 seconds)
  done (took 27.081916491 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.459458307 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.446018133 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.297003636 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.532271992 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.204552148 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.402772433 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.446654496 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.450249787 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.228588643 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.225775031 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.286330591 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.449006805 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.193413279 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.257906192 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.452277395 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.537924507 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.220057618 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.270458325 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.264999217 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.204115315 seconds)
  done (took 8.21728356 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.204703231 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.260491874 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.214147191 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.24426258 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.202565296 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.242625468 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.192432157 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.248352539 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.203033413 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.233281734 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.196063334 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.232353118 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.205660173 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.205959913 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.243162678 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.212000643 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.236178873 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.196346603 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.249671118 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.195961671 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.204875527 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.216568681 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.23707463 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.213621704 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.245199232 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.201676751 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.224891939 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.196805601 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.233332683 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.201181521 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.230783716 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.200089547 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.234043341 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.172537686 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.237878195 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.207717545 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.232144377 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.196102068 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.19784254 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.229522913 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.205254807 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.238760992 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.199266701 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.200729634 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.212114761 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.17765342 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.240839283 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.203401592 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.208827653 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.212069022 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.238784709 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.205663404 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.233922897 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.213356048 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.233643026 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.209848215 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.237975437 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.206148321 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.23265988 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.191199798 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.225530949 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.196346533 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.234679631 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.207564039 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.239383133 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.201529205 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.234810509 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.193089083 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.229850803 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.197321256 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.195488414 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.240458085 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.248106319 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.202654518 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.198511179 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.23784478 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.199853197 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.197234924 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.201424619 seconds)
  done (took 18.525225983 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.221091086 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.236997804 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.211376163 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.261063549 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.205950604 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.233804237 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.204375359 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.211711754 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.24342133 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.211430178 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.242093426 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.24150014 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.217099364 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.239727316 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.203832624 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.242523443 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.207638792 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.266390021 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.20498598 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.255466433 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.20746416 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.233403616 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.205964487 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.240046247 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.221960997 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.240222876 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.220425527 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.240644101 seconds)
  done (took 7.787461421 seconds)
done (took 80.781720932 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.590299271 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.743728906 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.504452533 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.511124845 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.495648378 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.544956724 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.502533224 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.510562345 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.142238529 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.475235336 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.508866662 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.508917719 seconds)
done (took 32.490259118 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.611829797 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.238624746 seconds)
    (2/2) benchmarking "String"...
    done (took 2.241951116 seconds)
  done (took 5.885438506 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.21665832 seconds)
    (2/2) benchmarking "String"...
    done (took 2.229231948 seconds)
  done (took 5.836518427 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.493424506 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.501264927 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.736669713 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.493673618 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.49382172 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.49492136 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.499705366 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.512743929 seconds)
  done (took 18.125084486 seconds)
done (took 36.346256325 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.556764661 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.770756639 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.77015144 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.480111951 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.499021341 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.498142276 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.494735799 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.54904464 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.506190937 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.478574224 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.9478425 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.774862248 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.515800879 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.908796093 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.47972105 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.496451934 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.502197187 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.844429196 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.502888643 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.541798377 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.489212453 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.481969651 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.504952977 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.527868284 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.508943903 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.50355536 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.521784874 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.498126867 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.780929289 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.503804016 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.541446067 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.498803644 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.518084306 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.499815021 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.496695415 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.513782296 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.782513994 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.517660644 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.502673214 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.510479042 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.81887757 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.532781229 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.498444548 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.509831433 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.480449531 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.555869278 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.489974266 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.622134658 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.526572026 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.512283575 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.572687537 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.928966729 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.509158973 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.511591701 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.503146724 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.830387735 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.502480138 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.618017674 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.524977985 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.50898922 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.499050681 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.499284468 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.551896608 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.518822427 seconds)
  done (took 163.842667059 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.504918632 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.497426684 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.498711668 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.506040367 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.501102343 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.498193972 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.504475975 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.505340411 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.498552763 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.515761087 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.498073618 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.501076824 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.504634951 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.451341589 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.515023353 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.52355492 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.505516927 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.500118842 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.51009127 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.504449897 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.526565584 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.500075226 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.5200916 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.500053401 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.504574869 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.594807499 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.536866381 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.51395687 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.507189837 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.506580234 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.516329866 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.507816234 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.220416349 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.366982091 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.511926934 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.501891227 seconds)
  done (took 91.278045008 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.508225471 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.50635192 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.506911952 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.542611603 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.503515282 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.181634334 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.181960799 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.581040517 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.971182401 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.167019482 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.803207008 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.500260024 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.603045377 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.512449723 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.502152535 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.606377436 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.5276158 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.505845391 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.50684073 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.182135333 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.521614897 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.529907111 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.697078651 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.5016663 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.545933979 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.905432657 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.504599144 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.547106322 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.851670415 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.540908618 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.501941799 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.950754791 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.881098423 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.619694844 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.503685687 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.546831884 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.506500334 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.80028077 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.504479591 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.511363314 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.508958844 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.514617992 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.197174994 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.503115954 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.18712156 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.510996007 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.545013284 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.503732973 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.509265232 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.000649133 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.299427625 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.502334751 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.509857041 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.51201643 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.510422291 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.509887472 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.547494171 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.994182534 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.452634487 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.504320368 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.513627043 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.548889655 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.505185816 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.50859662 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.109122331 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.51158736 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.775429712 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.573562636 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.662817828 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.188435129 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.512738207 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.61320992 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.628710361 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.505836367 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.510369006 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.509237648 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.51218868 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.62908945 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.505326228 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.364837514 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.696684116 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.507051949 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.181400315 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.616849749 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.506317632 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.964378505 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.513062164 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.513273037 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.297459622 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.505458176 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.61237795 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.505357352 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.512390677 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.513164628 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.366577303 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.18559234 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.884749533 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.513860032 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.410036325 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.512271267 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.494448801 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.154397393 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.258170652 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.513402471 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.630223499 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.700198316 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.507996903 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.511624026 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.514281856 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.513832083 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.193852099 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.514253963 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.571734772 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.912726998 seconds)
  done (took 417.597540243 seconds)
done (took 674.11373985 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.498731235 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.49209779 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.493881519 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.491748862 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.494309463 seconds)
  done (took 13.873616794 seconds)
done (took 15.281531957 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.516339093 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.510353972 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.511395569 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.299309169 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.511969423 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.510342392 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.510414791 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.511226595 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.510618842 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.510766099 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.263996421 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.511168668 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.522233036 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.451951995 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.260877015 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.51368107 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.384493498 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.51285322 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.513544489 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.821799228 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.519488369 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.57499336 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.806121757 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.553835242 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.816093912 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.872193598 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.519693638 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.68850537 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.569297642 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.535195254 seconds)
  done (took 21.6829326 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.402903203 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.825751855 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.518070479 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.595141201 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.802372519 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.553102962 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.835826113 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.873614255 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.520771229 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.685045081 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.537930527 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.537030675 seconds)
  done (took 21.693062046 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.255117524 seconds)
done (took 96.279682359 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.555071397 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.622806226 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.549843795 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.533877057 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.534610222 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.532092174 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.534754473 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.535653098 seconds)
  done (took 13.805608845 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.533220045 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.533243804 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.529677254 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.529871002 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.530669552 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.532110599 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.531410788 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.533793126 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.532561276 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.532762428 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.530717111 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.532721767 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.534794858 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.531667019 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.533462921 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.533220339 seconds)
  done (took 25.925815653 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.533268347 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.531315948 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.534515863 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.533839597 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.533377074 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.532462528 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.534634645 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.534168779 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.533342265 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.531818411 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.534300893 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.533190946 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.535436934 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.533552205 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.534240363 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.536002702 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.533092854 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.533927874 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.53950312 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.533756171 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.535365067 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.53350827 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.534717281 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.536495921 seconds)
  done (took 38.230315864 seconds)
done (took 79.371564435 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.520041244 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.53546044 seconds)
  done (took 6.465190267 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.595540518 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.593303516 seconds)
  done (took 4.602388599 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.537126054 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.534769112 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.536533449 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.535180235 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.537205762 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.534746534 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.537453276 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.53541674 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.535906538 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.53597013 seconds)
  done (took 16.771916038 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.538248131 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.536579445 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.535199081 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.538561838 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.536157359 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.537109917 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.536512134 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.535920331 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.537468305 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.534035873 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.53749683 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.536498212 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.53932208 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.53624355 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.538927011 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.536918861 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.535944012 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.536882806 seconds)
  done (took 29.076087274 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.549215767 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.555262377 seconds)
  done (took 4.517501142 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.664582541 seconds)
    (2/7) benchmarking "second"...
    done (took 1.58008093 seconds)
    (3/7) benchmarking "month"...
    done (took 1.640692093 seconds)
    (4/7) benchmarking "year"...
    done (took 1.634584142 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.579076163 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.557401039 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.577536656 seconds)
  done (took 12.646031604 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.530886723 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.823561573 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.006116723 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.691316045 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.516681627 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.548623582 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.506042376 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.543102584 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.54875381 seconds)
  done (took 17.12760505 seconds)
done (took 92.619346501 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.527012951 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.599027321 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.535639109 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.534918131 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.835450825 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.538425474 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.527014001 seconds)
done (took 18.515427285 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.517018973 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.510225558 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.505314297 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.53446878 seconds)
  done (took 11.480964525 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.526813937 seconds)
    (2/2) benchmarking "read"...
    done (took 1.8428682 seconds)
  done (took 5.786019568 seconds)
done (took 18.685409147 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.538643511 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.539578047 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.540982596 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.541491816 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.539493496 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.540990976 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.541826659 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.542027802 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.53990151 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.54025356 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.5405205 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.541123689 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.541718155 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.541270885 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.53998028 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.541953348 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.540437592 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.539645937 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.540896931 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.541154789 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.54095339 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.538841205 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.541470482 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.541024349 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.539610051 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.538438717 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.542432539 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.540894547 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.541265368 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.538812344 seconds)
  done (took 47.632667663 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.545339299 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.5463168 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.541522297 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.542750031 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.542524764 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.543316902 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.542955573 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.541530449 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.54429435 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.544408395 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.539540242 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.542765925 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.541889586 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.542884564 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.543008093 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.543753995 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.542550894 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.542728436 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.542813968 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.542305562 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.546443886 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.54476032 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.543760197 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.542993253 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.543774816 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.544096458 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.544207487 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.545424859 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.544359406 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.544258257 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.543362574 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.54236279 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.543690889 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.544482145 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.545536871 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.545887008 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.551060975 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.550560708 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.543384939 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.545189864 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.544812517 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.545166526 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.546733359 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.546757607 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.546428484 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.54341864 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.544426132 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.546976897 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.543286466 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.545273057 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.544530818 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.544798479 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.546083847 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.547230465 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.547592298 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.545067215 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.54882202 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.547347647 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.548248458 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.545395091 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.547536105 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.545083742 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.546119743 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.546702669 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.548475589 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.545909181 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.547119638 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.545987789 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.546473308 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.550073288 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.546790921 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.54652373 seconds)
  done (took 112.661716373 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.546800816 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.547508012 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.54693006 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.545706352 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.548083864 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.549791652 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.547387001 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.549462492 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.549896464 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.547402465 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.548940077 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.550258449 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.548548088 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.549940629 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.547060941 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.54782645 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.54962325 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.549340537 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.550300721 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.548885519 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.549134871 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.548949265 seconds)
  done (took 35.488687246 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.548143681 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.552424878 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.549066089 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.551486117 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.550360785 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.550950131 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.549629699 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.549008781 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.550338207 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.549783812 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.550071764 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.548294845 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.551990989 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.550909705 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.549127669 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.550574092 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.549514989 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.552563577 seconds)
  done (took 29.327626393 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.552060131 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.551133947 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.549970717 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.550562451 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.550318955 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.551700746 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.550509254 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.551453133 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.551492143 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.552639177 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.550425342 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.551114329 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.549807725 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.550707804 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.55031215 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.552675719 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.551620971 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.55158248 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.551588033 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.551689556 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.553685789 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.551372984 seconds)
  done (took 35.55265465 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.549911799 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.551915554 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.551922246 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.552397759 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.550060209 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.550512539 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.552678633 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.552658737 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.554409087 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.551274809 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.550757356 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.552398982 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.555626569 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.552456822 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.554267494 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.5513331 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.553778425 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.551645551 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.553117268 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.552629054 seconds)
  done (took 32.471836015 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.55379214 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.552786584 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.552855754 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.55426068 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.556138849 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.555198184 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.554245691 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.556971917 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.557566129 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.554703601 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.556980041 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.554568687 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.554905321 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.554587961 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.555796626 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.555719224 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.552581697 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.556684686 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.556533612 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.55450239 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.55729517 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.552987632 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.555927927 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.557442148 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.555097386 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.556076614 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.556500591 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.557293125 seconds)
  done (took 44.977065469 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.574245671 seconds)
    (2/2) benchmarking "in"...
    done (took 1.574483867 seconds)
  done (took 4.576585411 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.55584945 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.555293958 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.555944081 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.557211369 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.558158346 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.556499572 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.557036528 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.558800325 seconds)
  done (took 13.882585687 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.550574062 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.55774906 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.556003954 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.556265993 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.557323756 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.550545332 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.559720068 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.561176517 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.550661165 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.55447265 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.557856284 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.557500036 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.556209127 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.553426037 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.554572179 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.555030559 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.560598128 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.559397875 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.558880329 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.559438336 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.559194244 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.553953689 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.557785358 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.562074214 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.554917878 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.565778503 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.559832629 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.559704943 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.55403789 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.559051619 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.555281374 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.560622717 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.561767157 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.559173611 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.562454523 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.558057858 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.563912274 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.556933142 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.56509397 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.562500324 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.560867758 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.560635507 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.556304897 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.559708855 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.559824401 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.562737431 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.560837928 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.559856285 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.555053179 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.558414137 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.564597024 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.554544235 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.564591932 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.55850369 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.559349354 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.567235224 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.563992861 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.559960757 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.563288104 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.565649118 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.576924379 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.570583599 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.563116353 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.567258705 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.564078149 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.568869876 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.569884641 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.568013795 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.56301117 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.561735922 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.565881512 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.573260027 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.574622289 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.566912786 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.565571524 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.563823823 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.561444103 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.565686199 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.567591386 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.568759981 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.567900309 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.564383189 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.56601595 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.566917629 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.563549893 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.567688231 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.564664095 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.565994336 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.559136304 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.570097509 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.570408752 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.565010748 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.558048736 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.562047229 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.564510727 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.56849724 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.558740699 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.561967709 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.568037007 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.566663833 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.56518802 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.563429316 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.569173166 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.571140702 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.565438141 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.568879685 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.570533162 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.559943614 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.569726337 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.57200693 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.565802141 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.562688453 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.56706404 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.570085553 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.561439825 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.56945035 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.572879693 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.564906354 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.573877003 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.567958604 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.565318169 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.573504851 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.568295732 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.567344477 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.563276975 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.575368484 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.566994355 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.567422964 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.571875868 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.568028504 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.565799917 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.566923069 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.573832463 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.566699279 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.572187182 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.566034426 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.575460989 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.569630932 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.566559169 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.569352031 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.569601967 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.568595791 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.569731213 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.573181878 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.574318195 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.569854475 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.579462045 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.566734755 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.569499419 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.574140102 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.573751918 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.571653273 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.567996726 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.573826291 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.564434504 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.572928942 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.564707904 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.577096652 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.569458663 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.5731131 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.568696442 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.565907934 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.569996651 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.573041518 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.573318024 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.572511478 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.575144794 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.571897707 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.570977097 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.56597458 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.574319425 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.566375269 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.56984326 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.57821547 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.571900681 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.572798672 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.572196058 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.579725365 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.572295067 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.571000748 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.569370437 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.57631349 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.579950905 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.576491619 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.579287876 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.573768191 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.572974451 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.566592584 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.571905952 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.575820954 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.569044297 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.580861709 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.579666336 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.58370096 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.572076664 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.578599851 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.568122778 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.579211073 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.57366234 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.57989648 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.573817902 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.574623979 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.569722757 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.578025631 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.572031982 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.579031235 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.566706098 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.577342444 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.574468556 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.573496929 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.575478555 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.572657833 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.574068433 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.577694948 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.575127543 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.573688213 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.567729626 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.581327115 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.568538148 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.573029183 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.57828345 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.575316343 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.577504314 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.578433082 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.57550663 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.582570626 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.578154733 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.573413323 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.579904926 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.576914403 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.578865987 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.580571913 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.577681385 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.571813934 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.584144675 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.579826733 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.57282319 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.577700527 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.584511194 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.580060182 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.5718847 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.5832252 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.577601318 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.579577343 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.579270526 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.570733239 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.579739393 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.581605554 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.585370283 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.572488993 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.582110169 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.5745479 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.580983952 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.575878554 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.583196924 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.580098513 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.582258999 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.582924149 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.578324731 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.571324828 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.580774241 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.578278342 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.579171411 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.574282068 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.584461117 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.579447895 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.580736566 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.575969674 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.579493815 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.580846469 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.573029156 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.581647655 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.574626214 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.592864672 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.598307633 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.584744975 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.585650839 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.582798889 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.582697592 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.586018807 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.577272648 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.575107714 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.57822517 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.579179341 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.577715775 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.584026417 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.576751165 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.58424356 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.577241022 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.584851385 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.582557025 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.58258019 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.572713547 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.58502203 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.581495506 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.578996149 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.576217294 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.580567376 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.578865794 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.581560675 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.583166731 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.576531801 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.589454005 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.581872038 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.581471372 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.580572787 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.578735179 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.57579254 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.580971818 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.587792469 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.578146742 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.586848536 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.577083449 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.582098805 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.57781358 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.584141662 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.588382385 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.576527177 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.584632087 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.578960714 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.574586044 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.577281195 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.58235371 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.583638756 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.590177427 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.574243851 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.584075561 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.584475906 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.580506638 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.582162393 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.58433051 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.585430839 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.584520138 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.586178157 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.587852287 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.580023729 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.580959066 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.588841728 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.580485191 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.580641636 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.578087359 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.586623736 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.591452319 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.578990216 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.586777842 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.583310639 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.584062488 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.582037578 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.581392832 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.58431874 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.584351344 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.591743798 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.588563141 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.586287573 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.583837594 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.58718712 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.592188077 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.586517347 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.595716185 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.583633741 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.590278852 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.58867315 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.582498655 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.580572597 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.583501633 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.588162628 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.578383142 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.58954872 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.586005577 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.581225015 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.588636155 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.592299465 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.579283833 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.589869226 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.59528272 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.578658234 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.588480138 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.586577388 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.580898345 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.59249998 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.587158098 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.581019305 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.586735037 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.586604537 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.592761286 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.579368288 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.59008566 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.582533641 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.590111895 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.584404756 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.586645856 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.585973514 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.585910841 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.58068515 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.590582897 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.589332991 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.592982013 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.586754493 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.590660609 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.587684893 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.596362388 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.598361683 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.584791602 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.593128059 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.589340187 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.581911935 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.588210706 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.5940815 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.581853661 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.592764117 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.580953322 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.589017971 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.585898673 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.588264832 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.59074627 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.592328306 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.580808391 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.583423178 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.589832438 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.590918854 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.590636045 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.588221003 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.595382334 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.579207304 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.58131572 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.590516575 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.581238959 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.594788918 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.5822034 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.581421642 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.583121772 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.592504743 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.584281098 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.5884171 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.578280733 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.583740687 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.593427232 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.592402436 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.588722521 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.586718148 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.593982108 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.586680824 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.587271865 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.590194093 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.584192707 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.587267545 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.591587229 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.584072673 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.586348973 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.586697365 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.592445962 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.596306922 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.592426157 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.583493449 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.601459684 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.589998859 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.59388597 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.585062868 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.588410198 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.587215086 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.586676399 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.587548317 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.583205401 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.594805203 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.592324019 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.592083476 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.585330088 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.586642323 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.585235153 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.590266908 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.58939298 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.587487038 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.598192725 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.589973768 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.598636923 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.585399285 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.587078858 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.584570503 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.5831809 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.586405856 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.588994124 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.593912447 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.589394231 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.595581462 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.593839643 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.594515103 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.592087779 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.59096462 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.593638888 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.583382246 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.591574086 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.581033306 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.593157265 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.592559692 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.584269632 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.594742961 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.587380662 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.587908491 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.58937051 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.593376308 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.591307303 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.584217957 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.588879323 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.593243199 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.602072722 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.58850209 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.582419424 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.590523972 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.596877989 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.593845011 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.59041272 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.584841254 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.603234914 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.600623752 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.588228786 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.589701829 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.595696365 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.597118297 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.589259144 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.589150537 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.587110763 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.588145043 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.594842993 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.590556159 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.595528986 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.59897758 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.586746452 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.592391374 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.586952085 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.588343479 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.593729364 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.603034005 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.589463167 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.587575953 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.59897171 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.598603906 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.592614267 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.609511254 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.600322693 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.593649293 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.600907667 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.58924865 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.595721809 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.592600451 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.595474361 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.59020226 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.593785076 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.590971908 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.584831041 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.596171632 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.596900079 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.63495999 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.591025919 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.58688861 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.586770936 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.597614826 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.588130253 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.590531226 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.590492556 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.592578138 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.590370019 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.58755646 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.605025178 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.604887127 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.596135902 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.590362962 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.590486992 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.592790186 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.59921173 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.591445564 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.594762242 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.592968346 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.590805097 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.596699197 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.601869116 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.596057593 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.588290458 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.590523963 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.588412545 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.598010143 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.606458386 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.616937132 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.596718345 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.59659128 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.596358247 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.591144602 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.590557019 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.597764615 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.595264739 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.592048241 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.594953515 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.597403739 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.595274009 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.592290933 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.589830315 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.600242171 seconds)
  done (took 942.968842573 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.597384097 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.592273052 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.592045392 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.598546912 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.591183344 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.591792172 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.593143774 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.595457634 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.591992364 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.592559079 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.592181048 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.595368471 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.593951501 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.592680574 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.594042772 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.592012704 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.593898556 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.594188956 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.594408142 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.593197906 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.594367953 seconds)
  done (took 34.933660325 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.595779511 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.597624936 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.595720141 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.596047293 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.594572778 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.593586991 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.593744129 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.594473858 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.59344404 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.595657116 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.59517765 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.594820864 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.595970019 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.596795586 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.593574718 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.593301277 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.598205448 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.5949403 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.595598706 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.596282781 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.593551253 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.596757773 seconds)
  done (took 36.563545736 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.597833966 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.597216682 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.592109428 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.601821934 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.595155097 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.596110383 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.595979359 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.594158421 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.596105473 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.592097414 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.594191555 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.59196371 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.595438617 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.602942443 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.59434424 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.603263163 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.596419701 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.597389979 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.595975915 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.594094869 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.600430852 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.603818649 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.598218877 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.589636425 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.600156043 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.596616292 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.598180058 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.598117152 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.592000145 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.603949649 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.597087968 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.594414749 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.599908997 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.600633287 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.597166468 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.60094288 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.597404122 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.597163805 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.597904722 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.60075841 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.612766611 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.600652788 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.603112186 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.60707071 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.597477404 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.594136902 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.605079134 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.598479267 seconds)
  done (took 78.18156525 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.600448253 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.598762975 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.599543491 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.598033124 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.599595922 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.600343577 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.600115743 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.599911793 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.600000766 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.598624976 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.601333949 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.599309994 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.600089325 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.599148214 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.599330728 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.598682214 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.59933967 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.599321816 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.600704008 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.598629369 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.602092565 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.599892795 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.599102813 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.601416349 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.598627918 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.599310229 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.599895406 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.60161436 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.598462536 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.601417567 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.601462089 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.602036596 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.602046919 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.601784512 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.603365085 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.605524845 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.603864945 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.601360275 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.603561787 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.599678986 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.601645818 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.602992199 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.606058816 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.603504541 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.601516354 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.601334256 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.60321986 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.603381022 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.602970208 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.600416623 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.603215415 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.603013666 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.60022882 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.600456839 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.602327136 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.602076559 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.602913576 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.603391807 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.605850728 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.605360476 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.602029109 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.602928966 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.602711036 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.601899545 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.606214253 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.60524912 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.604088542 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.60269283 seconds)
  done (took 110.376981068 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.609755301 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.610105403 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.60771244 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.605670657 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.604739813 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.606671982 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.606862393 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.604507271 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.604773011 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.604645993 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.604409152 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.608312341 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.608661719 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.607982248 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.605361245 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.607964932 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.609344924 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.609241516 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.607603704 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.607756842 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.605868535 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.607018636 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.605958948 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.604807269 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.606470117 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.606527533 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.607995869 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.606588755 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.608006611 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.613343525 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.611577299 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.605582668 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.607136671 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.608409512 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.61048576 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.609110037 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.607512088 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.610510097 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.605161586 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.607683438 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.607878543 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.608700981 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.607826375 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.605679101 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.607452074 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.608145895 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.608938407 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.608969449 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.606708717 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.610853088 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.610802554 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.609047601 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.60749049 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.607323054 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.607831017 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.609600116 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.60990088 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.609224932 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.607901313 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.60915481 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.609820719 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.609317119 seconds)
  done (took 101.165462884 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.612051518 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.608652475 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.607101738 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.60811996 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.609839057 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.60893137 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.608545853 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.606629177 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.611970449 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.612824642 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.612632033 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.61069527 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.611154759 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.611579535 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.61686009 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.612117233 seconds)
  done (took 27.251896866 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.614552128 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.613736196 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.616583986 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.613487927 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.611089008 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.615478991 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.615930647 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.616680964 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.620480613 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.615776907 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.610463578 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.611115527 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.618110533 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.614154776 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.615978453 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.617675641 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.621352859 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.618393755 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.616843399 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.618773023 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.617944549 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.615592165 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.616082829 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.61971579 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.61382838 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.611776611 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.613611274 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.615032771 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.617878516 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.615895645 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.612508845 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.614053883 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.621155909 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.618555383 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.619994935 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.616644604 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.618526668 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.620418709 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.623843217 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.618804883 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.623701614 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.613153926 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.61884487 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.618513076 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.62571077 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.623386684 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.617232236 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.627963117 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.618719344 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.618378132 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.620768386 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.623557736 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.623624319 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.620871131 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.618592392 seconds)
  done (took 90.453905838 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.62528678 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.627058601 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.626409682 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.622177853 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.621742035 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.625172928 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.618381338 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.621787933 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.622554756 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.623960774 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.618270375 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.619094615 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.624738482 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.620466452 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.619142177 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.619551079 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.624635414 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.623220541 seconds)
  done (took 30.691250294 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.625395352 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.617089766 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.622879434 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.620326609 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.623226253 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.627043695 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.618756364 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.627084411 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.623629187 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.62062133 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.627403061 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.627222069 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.626803252 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.621577829 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.625733463 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.623237492 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.617897997 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.622386462 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.625605515 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.626047256 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.622705055 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.621550935 seconds)
  done (took 37.202327779 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.617544407 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.612607171 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.616181775 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.631648796 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.629103219 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.61795836 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.617773801 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.613211136 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.635053369 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.638711707 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.638096525 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.62172532 seconds)
  done (took 20.978627119 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.627645321 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.623479898 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.621136467 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.622633501 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.622031615 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.619139454 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.620225402 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.621042828 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.622245049 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.623354673 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.620575381 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.626460825 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.628347894 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.622976064 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.621679335 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.62343432 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.625285714 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.628662309 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.625745946 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.619873646 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.62601871 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.622186197 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.621710631 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.625300463 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.632875868 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.627808704 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.621938799 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.626765553 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.62242049 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.622719973 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.625008457 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.623337427 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.623520246 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.621460498 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.622126273 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.624125609 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.622712151 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.622368312 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.624716774 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.621779911 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.622983127 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.623645231 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.624762552 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.621176418 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.619909257 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.620793257 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.623922972 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.625202717 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.621131015 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.622794856 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.624537267 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.623547352 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.625751147 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.622571072 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.623585251 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.623138625 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.621614435 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.622745045 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.622676839 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.623960502 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.62448577 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.625303255 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.624629659 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.624802122 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.625767392 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.625169514 seconds)
  done (took 108.652395142 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.626613887 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.626032842 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.621871986 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.625150276 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.626784049 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.621728883 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.623905538 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.623762557 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.625464322 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.623742401 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.624717901 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.625000772 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.627631438 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.62424875 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.626135763 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.633066176 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.625081061 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.625157255 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.623693985 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.625165613 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.627381839 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.628254447 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.625861837 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.626112556 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.626611235 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.625020412 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.62852842 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.628343873 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.626777725 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.627266352 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.626388955 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.631105019 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.632219651 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.624962005 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.62907839 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.627974073 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.628720316 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.637293984 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.631703998 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.633760621 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.635156121 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.630076914 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.626750861 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.629124714 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.630525704 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.629302519 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.626998621 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.626387051 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.63738329 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.633829187 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.633268079 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.630085084 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.62863113 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.627548209 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.637083916 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.633514955 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.630829541 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.634497047 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.635731419 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.637091576 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.640913731 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.638697859 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.638956632 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.635569343 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.638784349 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.639405626 seconds)
  done (took 109.040863947 seconds)
done (took 2086.447714597 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.62912637 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.630011771 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.629775711 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.691314001 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.625374455 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.296102577 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.272486614 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.622546541 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.625586212 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.631366732 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.633758575 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.627486193 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.959973822 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.624980952 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.635364228 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.625170485 seconds)
  done (took 60.258744074 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.669307666 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.633048485 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.780938282 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.633784943 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.666874844 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.864767982 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.697176257 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.636750164 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.84609549 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.63088509 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.627798882 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.655379138 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.630501851 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.629780343 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.651261663 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.859254295 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.951210973 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.631435056 seconds)
  done (took 35.196776253 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.198108176 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.622577494 seconds)
  done (took 6.321600783 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.658462632 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.636928491 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.634765288 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.633468011 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.622190146 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.620154192 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.640539255 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.63732408 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.636739267 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.785007453 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.633693642 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.648321393 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.634043808 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.640356618 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.642906348 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.691750845 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.76701665 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.650774962 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.639947661 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.644597794 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.640096679 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.831491025 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.691585645 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.647775194 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.795264891 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.627211292 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.645861278 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.650296164 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.79704549 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.640694299 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.642082906 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.638411893 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.640676709 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.633115828 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.213378717 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.626524967 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.666724811 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.641915042 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.64298315 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.803292078 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.634329037 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.649301164 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.636423525 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.209025633 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.765039343 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.871703219 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.626539627 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.635514241 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.641907046 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.795611138 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.634836775 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.638453512 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.709384276 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.641457846 seconds)
  done (took 102.814419994 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.681308397 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.634217623 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.826424255 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.65412835 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.631050065 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.624249856 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.647117845 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.994042393 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.632269264 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.63245197 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.963240821 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.341491688 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.625495672 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.688332585 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.674964387 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.660803992 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.635115922 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.626405818 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.629155686 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.628523017 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.249436829 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.629801919 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.647491747 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.850915222 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.67424358 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.251103623 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.628427441 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.627150878 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.63365043 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.628225008 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.305179771 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.635049128 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.69748081 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.631495416 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.961757987 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.10192371 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.065003339 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.637162183 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.634522571 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.63035629 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.627304997 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.264620242 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.084843139 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.628485909 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.634379074 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.255890413 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.628282425 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.638894337 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.641467932 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.912724727 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.62905605 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.633285465 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.629691406 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.630203719 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.631240236 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.695898105 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.69130079 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.258072204 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.630288571 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.6275609 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.676592361 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.635079842 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.63940614 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.637844396 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.630766099 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.086333894 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.820959065 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.636940431 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.091043586 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.29968781 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.628295397 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.378351188 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.629753458 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.652515972 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.75587735 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.641141064 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.631042474 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.249716344 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.634318609 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.632405261 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.069600908 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.638459695 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.971746872 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.65260001 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.633402626 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.27033439 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.642564354 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.701598452 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.634825052 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.631482715 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.652275537 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.639466969 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.9609736 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.661640783 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.637360649 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.63515914 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.671899633 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.631104359 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.634017975 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.645185898 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.3865369 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.636860956 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.640155018 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.632971793 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.639209497 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.634290219 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.634255713 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.640003901 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.928383451 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.633000705 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.641226723 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.64525115 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.633198001 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.636524246 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.846371099 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.64204219 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.024024032 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.638704976 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.636111665 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.659527283 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.643271063 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.635214832 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.635776136 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.64186118 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.607300869 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.99682342 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.655671702 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.654343576 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.644157271 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.659632822 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.635316768 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.638788529 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.683007403 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.639313416 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.544664843 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.660028395 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.668656998 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.638499084 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.639684791 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.637690962 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.635566022 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.647656591 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.983960834 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962696253 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.865408754 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.645564144 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.638142422 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.530454043 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.683084075 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.825082009 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.660069361 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.635225153 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.943571369 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.862818175 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.643243332 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.635858763 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.640136819 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931814471 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.636548165 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.972298062 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.343001671 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.638615495 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.651800296 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.542849059 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.425995097 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.63873603 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.650995938 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.974426222 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.657641826 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.643949157 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.63996132 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.640685325 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.638788258 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.640516484 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.63654403 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.642806633 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.641473729 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.711472377 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.845996234 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.659599919 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.642599745 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.261946821 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.653162949 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.639988835 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.644825912 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.647182411 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.643621615 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.6865924 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.649340675 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.680556561 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.642903698 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.643547538 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.340130222 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.639474113 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.640362912 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.842518218 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.484457348 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.64048289 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.645713565 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.636817812 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.677642547 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.290345715 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.64151149 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.032025078 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.648772826 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.692131308 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.641444951 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.665531998 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.291807952 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.662922632 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.63962687 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.460918589 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.639732694 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.420029227 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.640268341 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.641242516 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.389750385 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.638549149 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.645507297 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.6421851 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.64307803 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.961785137 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.642510632 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.689063635 seconds)
  done (took 569.702281387 seconds)
done (took 775.794351844 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.64518146 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.651516087 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.648732478 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.65183871 seconds)
  done (took 12.116414609 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.664361492 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.656409815 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.659011915 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.658824392 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.667234602 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.65453455 seconds)
  done (took 11.481814314 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.648651828 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.653640366 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.654169031 seconds)
  done (took 9.474873878 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.905417492 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.644708026 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.098158835 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.646925005 seconds)
  done (took 10.817909274 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.668851551 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.666478269 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.663702213 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.658776633 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.665827382 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.6701075 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.667898658 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.663498305 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.666093208 seconds)
  done (took 16.510345531 seconds)
done (took 61.922037259 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.82983243 seconds)
    (2/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.990151465 seconds)
    (3/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.630278511 seconds)
    (4/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.755053556 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.726893253 seconds)
    (6/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.644413227 seconds)
    (7/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.450001617 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.681824424 seconds)
    (9/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.695468141 seconds)
    (10/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.67987806 seconds)
    (11/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.629910306 seconds)
    (12/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.654757732 seconds)
    (13/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.697247785 seconds)
    (14/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.631805968 seconds)
    (15/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.856926957 seconds)
    (16/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.672893518 seconds)
    (17/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.54884891 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.821211986 seconds)
    (19/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.75932357 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.728265756 seconds)
    (21/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.631899526 seconds)
    (22/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.638369301 seconds)
    (23/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.650216905 seconds)
    (24/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.64279024 seconds)
    (25/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.644254516 seconds)
    (26/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.510095423 seconds)
    (27/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.555432897 seconds)
    (28/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.691627635 seconds)
    (29/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.901077835 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.739242259 seconds)
    (31/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.610335398 seconds)
    (32/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.747327233 seconds)
    (33/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.689853353 seconds)
    (34/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.727887622 seconds)
    (35/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.638561927 seconds)
    (36/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.651411171 seconds)
    (37/192) benchmarking ("map", abs, Int8, true)...
    done (took 2.384273015 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.836377042 seconds)
    (39/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.881000098 seconds)
    (40/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.634217885 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.644136229 seconds)
    (42/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.75740007 seconds)
    (43/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.630623651 seconds)
    (44/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.70484244 seconds)
    (45/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.721719622 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.759456114 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.653116816 seconds)
    (48/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.638108744 seconds)
    (49/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.689384438 seconds)
    (50/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.836897662 seconds)
    (51/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.943256072 seconds)
    (52/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.2068723 seconds)
    (53/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.532797971 seconds)
    (54/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.120640906 seconds)
    (55/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.645971784 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.650451499 seconds)
    (57/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.755647323 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.828621454 seconds)
    (59/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.76924242 seconds)
    (60/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.634732743 seconds)
    (61/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.652804492 seconds)
    (62/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.63933466 seconds)
    (63/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.75456161 seconds)
    (64/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.682287204 seconds)
    (65/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.63451096 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.831373665 seconds)
    (67/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.456847893 seconds)
    (68/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.90521043 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.736388836 seconds)
    (70/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.63827339 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.774340247 seconds)
    (72/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.728832972 seconds)
    (73/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.820503948 seconds)
    (74/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.621534245 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.734429026 seconds)
    (76/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.697606014 seconds)
    (77/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.694099797 seconds)
    (78/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.640649219 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.734968616 seconds)
    (80/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.876181014 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.785611609 seconds)
    (82/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.728681946 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.736262305 seconds)
    (84/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.805259385 seconds)
    (85/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.683160309 seconds)
    (86/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.652866137 seconds)
    (87/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.883760956 seconds)
    (88/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.742028351 seconds)
    (89/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.647917859 seconds)
    (90/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.688864906 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.805123356 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.683433442 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.786579316 seconds)
    (94/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.965104713 seconds)
    (95/192) benchmarking ("map", abs, Bool, true)...
    done (took 2.399467322 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.737396422 seconds)
    (97/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.64568984 seconds)
    (98/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.66585677 seconds)
    (99/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.648371288 seconds)
    (100/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.669844115 seconds)
    (101/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.891004936 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.723848621 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.783378682 seconds)
    (104/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.810113198 seconds)
    (105/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.73004229 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.934808734 seconds)
    (107/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.629611073 seconds)
    (108/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.66451168 seconds)
    (109/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.698189136 seconds)
    (110/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.640538433 seconds)
    (111/192) benchmarking ("map", identity, Int8, true)...
    done (took 2.389536031 seconds)
    (112/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.640821388 seconds)
    (113/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.638159202 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.761243083 seconds)
    (115/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.693048451 seconds)
    (116/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.636224254 seconds)
    (117/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.804963104 seconds)
    (118/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.73961055 seconds)
    (119/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.641351422 seconds)
    (120/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.636671483 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.94977124 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.791887963 seconds)
    (123/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.637764872 seconds)
    (124/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.047910843 seconds)
    (125/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.638276761 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.661794221 seconds)
    (127/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.643447303 seconds)
    (128/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.550319561 seconds)
    (129/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.732565862 seconds)
    (130/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.340283924 seconds)
    (131/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.952550642 seconds)
    (132/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.643562076 seconds)
    (133/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.822890701 seconds)
    (134/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.69884441 seconds)
    (135/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.354351541 seconds)
    (136/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.868781662 seconds)
    (137/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.695538156 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.655799847 seconds)
    (139/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.646364671 seconds)
    (140/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.781413361 seconds)
    (141/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.647191799 seconds)
    (142/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.651527509 seconds)
    (143/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.756973617 seconds)
    (144/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.108222755 seconds)
    (145/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.655556902 seconds)
    (146/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.640448904 seconds)
    (147/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.747001556 seconds)
    (148/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.530202705 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.94888831 seconds)
    (150/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.76661594 seconds)
    (151/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.653338348 seconds)
    (152/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.740490991 seconds)
    (153/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.654977977 seconds)
    (154/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.660543874 seconds)
    (155/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.645004131 seconds)
    (156/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.643666627 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.769241876 seconds)
    (158/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.699502591 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.790156785 seconds)
    (160/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.642776408 seconds)
    (161/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.801807544 seconds)
    (162/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.646768487 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.762997092 seconds)
    (164/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.645725307 seconds)
    (165/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.680125128 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.766358525 seconds)
    (167/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.641264227 seconds)
    (168/192) benchmarking ("map", identity, Bool, true)...
    done (took 2.403346631 seconds)
    (169/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.851509224 seconds)
    (170/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.779909542 seconds)
    (171/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.081848577 seconds)
    (172/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.529942791 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.826450079 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.791726685 seconds)
    (175/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.802330274 seconds)
    (176/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.64572287 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.870570299 seconds)
    (178/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.60967405 seconds)
    (179/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.912421797 seconds)
    (180/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.51652857 seconds)
    (181/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.642024206 seconds)
    (182/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.851358531 seconds)
    (183/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.527740079 seconds)
    (184/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.012668276 seconds)
    (185/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.642102063 seconds)
    (186/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.641203967 seconds)
    (187/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.65243841 seconds)
    (188/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.666531575 seconds)
    (189/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.567549744 seconds)
    (190/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.812746208 seconds)
    (191/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.68953262 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.770578743 seconds)
  done (took 418.363248396 seconds)
done (took 419.889884307 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.693986074 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.758884386 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.673738307 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.671959228 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.673139552 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.679118286 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.689857954 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.67788962 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.686224946 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.686968395 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.680733774 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.676152424 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.695600913 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.679323297 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.706586888 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.670705793 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.671398266 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.678579799 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.684237265 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.685967849 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.675036702 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.680043046 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.70093038 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.669513854 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.680665363 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.68441554 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.68443317 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.668814849 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.67726242 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.692480031 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.679110037 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.679372286 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.689302492 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.68997974 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.677839003 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.681009408 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.680471228 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.768034173 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.69497186 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.689409233 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.682904452 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.686698385 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.677878524 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.679911686 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.682329055 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.701262794 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.686982352 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.693471618 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.677929663 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.677884313 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.694303841 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.687402967 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.679779839 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.686928092 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.668473743 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.686535923 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.685794765 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.700182274 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.683615832 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.676559199 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.711722877 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.698413 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.690569963 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.686823071 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.681256972 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.693963414 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.686876369 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.692866156 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.684858077 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.683823567 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.684780091 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.686459761 seconds)
done (took 130.981897307 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.803238752 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.669357906 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.834002692 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.685047623 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.848750221 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.797684442 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.680062374 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.684483172 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.683114159 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.472450388 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.680769913 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.679844425 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.670511105 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.684263168 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.797222796 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.681304247 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.682134705 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.373505786 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.684041583 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.813732954 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.675347259 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.685759787 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.682254075 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.481436094 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.674454822 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.675655033 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.813155692 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.682606563 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.380841558 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.672862124 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.670011513 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.382026994 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.812583567 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.703491287 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.69441403 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.692994108 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.847094102 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.683862469 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.80050982 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.799901454 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.835533855 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.720679443 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.671842921 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.678574567 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.689486031 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.686406953 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.681877364 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.711203383 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.673100501 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.686785254 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.37332939 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.692133034 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.683778584 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.68290751 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.685980762 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.709772968 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.68104945 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.683133024 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.813022365 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.685420005 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.79867193 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.478454947 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.473483637 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.682666611 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.676129246 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.683452925 seconds)
  done (took 131.473135429 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.74667818 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.753612847 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.80687467 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.67698787 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.728426007 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.810050096 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.67656615 seconds)
  done (took 13.742815323 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.68280079 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.684375785 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.72851296 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.730943793 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.685902648 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.854968762 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.686173177 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.688920073 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.681801973 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.729256266 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.684429261 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.685367861 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.694776658 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.673838011 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.727315841 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.689479761 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.792180191 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.679318848 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.685781355 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.836094177 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.688127347 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.69276422 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.730344065 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.690209045 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.68549441 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.69009562 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.434870505 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.683122131 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.684356383 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.686234769 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.68548566 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.746185673 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.684383156 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.678007814 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.683125467 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.7952177 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.687392617 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.685339789 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.685132474 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.671392944 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.685891242 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.684968556 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.684807691 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.684691885 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.685700462 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.702903385 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.687178842 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.687874821 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.683825822 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.686260773 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.729603538 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.683876641 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.685322673 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.686953398 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.729477672 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.693583628 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.688062591 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.684542606 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.687329051 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.685444151 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.837478317 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.729021457 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.686469108 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.728296381 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.684748762 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.686495585 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.686178136 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.68750014 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.771548341 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.686483286 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.73036908 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.685720546 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.86220099 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.703989326 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.686465196 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.686751311 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.685710236 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.685729475 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.67782135 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.688849257 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.688811956 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.683238208 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.689643471 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.687133313 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.685666075 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.84288975 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.789479332 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.687783024 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.699126821 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.689525348 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.686451683 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.732252147 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.686998004 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.689566855 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.732615593 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.798536879 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.736671852 seconds)
  done (took 171.829474341 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.700305657 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.692416656 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.683540264 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.708232869 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.68364838 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.682886486 seconds)
  done (took 11.696928763 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.68457334 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.690858899 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.691026804 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.688437666 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.68947926 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.689167032 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.691082148 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.682604885 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.693634369 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.691961003 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.691463568 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.692398155 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.690777651 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.69082274 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.68935213 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.687473577 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.693468275 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.689259051 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.691379521 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.690938902 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.681130235 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.691641328 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.688607645 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.684715093 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.691993685 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.689746899 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.70719382 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.688201077 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.688268089 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.685790645 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.694634294 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.692178089 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.686026752 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.689448604 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.693345199 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.687071671 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.691742456 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.690992339 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.690686202 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.689861876 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.690897261 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.691278215 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.688757279 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.692810077 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.687529093 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.689958492 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.695667442 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.708877696 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.690584014 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.6900938 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.69234322 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.691015375 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.690953829 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.69223001 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.68747199 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.688324314 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.694403396 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.691416754 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.693974621 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.687012127 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.696208915 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.692656994 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.6872666 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.69564197 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.693450101 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.694172905 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.687056248 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.69728884 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.692985265 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.696495429 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.695750729 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.69160936 seconds)
  done (took 124.310058911 seconds)
done (took 454.590143293 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.140083855 seconds)
  done (took 4.69269018 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.822373293 seconds)
  done (took 4.375671797 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.433564176 seconds)
  done (took 26.989465951 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.766932649 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.686577599 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.704995619 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.686834196 seconds)
  done (took 12.398432444 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.304738497 seconds)
  done (took 4.854951061 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.689692946 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.685539347 seconds)
  done (took 6.927777835 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.116078729 seconds)
  done (took 4.668301146 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.505853996 seconds)
  done (took 5.062484688 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.711395344 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.700221426 seconds)
  done (took 6.96893 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.666777727 seconds)
  done (took 4.221853147 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.343666869 seconds)
  done (took 19.894982145 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.699982814 seconds)
  done (took 4.254710279 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.71898352 seconds)
  done (took 4.273803194 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.958915974 seconds)
  done (took 7.510721252 seconds)
done (took 118.65033955 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.67969805 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.681174439 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.685883748 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.679798114 seconds)
  done (took 12.282450772 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.757450401 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.762768183 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.771281009 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.752039566 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.753727624 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.761943954 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.720993418 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.720268041 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.75426088 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.749086262 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.766053624 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.754989439 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.764568836 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.721357551 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.750215965 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.767398049 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.752912062 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.770993854 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.720782093 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.754198109 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.697006951 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.754924137 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.748098252 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.695593749 seconds)
  done (took 43.476446247 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.191874034 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.768394732 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.848002185 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.742781062 seconds)
  done (took 9.106059153 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.804803219 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.804654585 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.823245898 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.85867036 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.904495357 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.816519646 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.724659866 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.721437477 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.705702307 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.803883126 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.87816181 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.802803871 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.023564544 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.698347843 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.017260095 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.699674949 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.69742032 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.802891955 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.853486962 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.884317246 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.698488888 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.805692155 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.8193903 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.805875756 seconds)
  done (took 45.014466608 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.714626684 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.717412981 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.704380995 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.71918044 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.702226232 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.705108358 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.705525313 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.708359173 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.703792316 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.702757541 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.704873459 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.718889732 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.702181471 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.701811846 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.712546553 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.704748518 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.706286586 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.706260789 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.712045307 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.704670171 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.703245894 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.710397794 seconds)
  done (took 39.131820239 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.695207997 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.690722216 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.041973093 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.944126844 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.690412521 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.699703089 seconds)
  done (took 16.32273874 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.789050605 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.937512911 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.700458151 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.14865244 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.229865602 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.696991074 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.699764123 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.987870063 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.377069358 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.407222391 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.750427575 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.783752662 seconds)
  done (took 25.071082044 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.78208584 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.698435082 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.715749431 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.770322397 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.699796727 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.69887894 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.78532252 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.237952009 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.703206901 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.976421826 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.69976152 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782900459 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.94947794 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.701211253 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.703637774 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.680380217 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926914776 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.321226635 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704158821 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715994991 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.733759053 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.702182366 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.702479326 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.953962242 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.700343806 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.699835068 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.965391838 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.697652961 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0482137 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024146308 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025399078 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.704245763 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.976890637 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202674648 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8098267 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960152868 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719400913 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.701037247 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.686927741 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.719887506 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.714226055 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.703440073 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025449594 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.702450518 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.699111747 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.715370734 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254683421 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.710769915 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.704632014 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.704349736 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028334769 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.785067716 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.706429374 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.701341708 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.734068688 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704469053 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.707493467 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831388772 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.343718451 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.703726315 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711644391 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.699963404 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.698488511 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.72767981 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.454710787 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.710675384 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.709300124 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709744014 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.70223838 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.702635655 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724892753 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.706069021 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.723123183 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704956226 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.6044197 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.709355113 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.70556476 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.373484106 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725456343 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.707529082 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931692734 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.705818344 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705053249 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.702034418 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.703708512 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.610587709 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710646224 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.680690452 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.73718684 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.248635299 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.961822716 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727128059 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734772039 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.928664953 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.681768319 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.705251033 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.708030564 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.707278959 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724884375 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.252675493 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.70434334 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.709582676 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955206949 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.916595129 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721820516 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.693068102 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253902592 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704395749 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.746602779 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.715427581 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.95782548 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.436348623 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039473261 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.706532895 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.742493465 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.705813715 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.683690394 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.705342647 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.717770012 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.707973602 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.030434021 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.695756867 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.710545521 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.778868122 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.70759306 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.705669022 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.707906094 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.733853478 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.70795591 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.947506364 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.714249846 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040762854 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.709180825 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.7074806 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.713626387 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.715682005 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.713062026 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.93086687 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.724820376 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.981990635 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.70847335 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.709127856 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.711668014 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.927843213 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.72228339 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.712707347 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050522249 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.717252186 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.726500389 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04093987 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.745564892 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821088817 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.744461443 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.726665996 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.962919476 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.718501256 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.71554488 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.730557225 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.71233431 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.713440285 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.717604715 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.709692654 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471085104 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683309303 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.717031036 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.710407899 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.72528968 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.787584993 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71640563 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.965808981 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.714831867 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.702863694 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.719105164 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.716169263 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932664081 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039559512 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.709823958 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886799654 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.263346859 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.4493172 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.728767912 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.713663852 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.709799801 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.710589739 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.715329393 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.711587682 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.712198716 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967741895 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046891173 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.708412724 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.453550286 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.715714646 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.713307301 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.721432656 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036960705 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.720881471 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.713589606 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.710509108 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.716540256 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.71447475 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.04677316 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932849699 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.727352489 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.713741243 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.232488732 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720806825 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.713489647 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.710927498 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740067448 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.712975758 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339476007 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055012049 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.719929313 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04032319 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.713907677 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.768802182 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.710582765 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715853217 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.721976413 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.730127877 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722419011 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.970371613 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.714617439 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.716357481 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.356812413 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.621292221 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.389543298 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.719029502 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.721577189 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.719494215 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264057283 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713316284 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.712178932 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.002887089 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.265171018 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.714255764 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26446893 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.7272822 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.652511142 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039875427 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94161077 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.714273559 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.714935959 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045449118 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.928275843 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741773141 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.722726644 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.718968277 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.690538865 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343013598 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.723233763 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895244125 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265948401 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.714956419 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.716095252 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.763529195 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.724489635 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200358427 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.715298145 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715241958 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.729716301 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.720085029 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344507218 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.723172277 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.71690944 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.474616529 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.732886607 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.272127366 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716427061 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.973579077 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.043140117 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.027497408 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.727051122 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.732454457 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.960854052 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044612394 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.717676038 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.730131455 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.405112943 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.578873639 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.724910932 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.718118003 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.694073701 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721201577 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070034387 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.726130572 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.72355445 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.72776702 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.720029941 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.717451153 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.717680798 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.727781216 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687449752 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.329455242 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.712310547 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.72061627 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.758077508 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722992174 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.968833408 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.734660639 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.453694783 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948276797 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.715107182 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754345153 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.72398979 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716792254 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.696993208 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.720363873 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.717688621 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.73563891 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.94158147 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.71991444 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.696145723 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.795162088 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.93080756 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.718110464 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.720820763 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987968636 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.720398758 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.739704959 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.630918693 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752597535 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.721008469 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.72259675 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.713959764 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.754255625 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795793579 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979076943 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.050042498 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.049771691 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208262251 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.721431462 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.724755048 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.737117905 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80402652 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.739171386 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.727179598 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.723753858 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454128807 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.631664573 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.464682038 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052846607 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.72316562 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.733602363 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.72296732 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964383966 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.721894576 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.998581642 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.724111347 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.721176163 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747568766 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.724139642 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.735879661 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941394054 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.997526003 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.725236344 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.728048504 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.724714228 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.725933708 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058012887 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.938175491 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.352916207 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394051578 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725862394 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.734398395 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.289798159 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.000506769 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725957986 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.724220242 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.726093458 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.752408171 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.740929302 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.735237722 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.729553887 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951186488 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055436055 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238525919 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.053583787 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.756080403 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.601789236 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.738078427 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.975205323 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.561979462 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.983120485 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469242778 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.586320627 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981849072 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802076813 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985779242 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.726545239 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964716665 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.729119795 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.72687676 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.726447005 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.727782302 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.728371089 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.054778232 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472904411 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984078889 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.732832409 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.731069244 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759549161 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.987192277 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.952409475 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.650978116 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.950031157 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06293675 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.736126618 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.728567641 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4837562 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060969009 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.728754748 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.733318765 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996174726 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.729824152 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.766278836 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.610400753 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.728724908 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406378464 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.942492296 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750716094 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.749978606 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.595311118 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475211457 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.7343941 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.345326117 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.732385051 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.748639805 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.009212672 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.737487966 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.730836579 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.023013125 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.737051096 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.741532769 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99422552 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.473975916 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.68048343 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.733715329 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.734815421 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.733699647 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.733356935 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.790090877 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.731935671 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.743146778 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.213085152 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.73133048 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732323153 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.745390656 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.737397015 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.745661547 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.733590969 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.734003542 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.740740657 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.739068615 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.715072889 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.747776664 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857611198 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370994065 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.737000322 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.350772096 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.07293107 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.983274563 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.743151659 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.717648203 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.741241978 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.737321025 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.733979492 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.735102786 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.733334523 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407289997 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.746890103 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.070508594 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741632164 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.947520921 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950875449 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.738173126 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995486233 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.74890105 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.76429878 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.713251847 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.73697978 seconds)
  done (took 1153.216239601 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.75418223 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.77041288 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.747912368 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.78524643 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.773783015 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.82494805 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.802088315 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.800784916 seconds)
  done (took 23.855337126 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.730151174 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.7379975 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.743060966 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.737695612 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.738380073 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.291328681 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.739629033 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.740709782 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.757405677 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.741388889 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.743432956 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.469966819 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.741009614 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.735984508 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.75124565 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.739955829 seconds)
  done (took 38.739937778 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.429756664 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.738640653 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.643825924 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.807647711 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.751406355 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.738659613 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.327110269 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.764838737 seconds)
  done (took 31.793769746 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.748504388 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.746212357 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.746350134 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.746003698 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.746612293 seconds)
  done (took 10.328250341 seconds)
done (took 1449.893422138 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.745297683 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.744970097 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.744381659 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.745524414 seconds)
  done (took 8.573508861 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.713495758 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.717017373 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.714922955 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.73231537 seconds)
  done (took 11.473807332 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.187170099 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.394020936 seconds)
  done (took 6.175730463 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.738318038 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.505776583 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.48834447 seconds)
  done (took 9.328736195 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.035299786 seconds)
  done (took 3.63149829 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.166152852 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.37240318 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.733234585 seconds)
  done (took 8.871047914 seconds)
done (took 49.649139846 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.745043245 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.502263109 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.892274163 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.734346374 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.917840579 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.890713131 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.127819796 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.746302656 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.74375827 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.733259817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.737010337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.897068773 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.113065067 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.503285319 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.115091845 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.504215487 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.898505301 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.73734284 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.734912826 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.743162637 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.130716818 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.738716343 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.741134574 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.746356288 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.8988641 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.877863815 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.739075888 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.506252698 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.73427401 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.747126624 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.87755338 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.734479147 seconds)
  done (took 95.087461403 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.734966093 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.735362452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.755583635 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.735154663 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.735632768 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.735454738 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.738388064 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.736490927 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.734258237 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.73621005 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.755686317 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.736746361 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.75667302 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.736583051 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.737898895 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.735419356 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.733760509 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.762539367 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.736765922 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.736294947 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.736137961 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.749070443 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.737107576 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.736110187 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.734568056 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.737797543 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.735764757 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.739357354 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.738514503 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.735778505 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.735845418 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.738450019 seconds)
  done (took 89.262073163 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.749911748 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.737673735 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.735885792 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.737895231 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.736232677 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.737125214 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.738264303 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.745074186 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.750242927 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.746121475 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.738436432 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.753444638 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.741163747 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.741640789 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.740260084 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.744098127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.74368928 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.737779916 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.73975557 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.7384658 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.741399724 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.73946257 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.738192468 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.738875937 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.738489623 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.742040567 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.756203006 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.738909829 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.750390164 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.73840137 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.740169437 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.745251396 seconds)
  done (took 89.343155343 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.979875443 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.754252522 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.754840115 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.747429406 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.756858585 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.75260892 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.746166436 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.985282973 seconds)
  done (took 18.078124279 seconds)
done (took 293.36932527 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.744778 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.753649466 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.774854571 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.764422292 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.768417447 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.776100772 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.986300393 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.775830295 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.977747497 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.755600155 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.766226432 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.761110903 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.74000614 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.897884016 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.743763155 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.748967983 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.756026259 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.741353751 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.750684946 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.006517816 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.777543762 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.759244415 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.749769094 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.767621868 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.728290548 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.827998848 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.830241272 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.918684371 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.883659582 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.829138047 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.752990663 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.75148892 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.75815432 seconds)
  done (took 78.928760698 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.751115778 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.759378258 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.758512079 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.756616851 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.755409089 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.757480561 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.748497346 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.756083966 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.756496741 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.757137105 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.75966521 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.758501066 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.757577885 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.756827962 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.757359931 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.737286634 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.750227145 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.758027539 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.750729916 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.738391353 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.757256061 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.756918353 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.756274828 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.756958346 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.758442101 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.757656733 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.758385892 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.75819572 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.756995805 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.758039876 seconds)
  done (took 54.265141645 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.758493098 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.745866897 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.764102554 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.759634861 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.752366419 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.755513339 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.121840325 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.760289852 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.755742053 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.756400776 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.746186812 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.762119823 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.807832082 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.747510157 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.756987388 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.76156569 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.760491039 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.75410698 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.751958182 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.77076607 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.13035925 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.762416313 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.124717498 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.770505882 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.760133174 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.755524245 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.762098375 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.748186555 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.758141983 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.748370841 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.764413001 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.117567549 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.749299744 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.757643599 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.764569231 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.763053201 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.762064952 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.755690612 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.756600103 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.75639992 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.123009957 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.756935766 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.750029264 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.749987795 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.758125025 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.763157863 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.74914705 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.753342357 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.068380335 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.764120171 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.768267048 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.75853996 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.765166576 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.758796543 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.068843533 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.758799806 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.757563355 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.766324265 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.76277185 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.126460159 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.76451025 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.758081661 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.750968381 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.758637297 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.750549916 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.757886351 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.772590934 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.759244142 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.749799913 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.763155988 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.751162009 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.761151906 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.765225843 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.751663801 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.751628555 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.750252472 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.760509388 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.755237371 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.768080223 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.124562468 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.764071009 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.752861836 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.13657668 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.762560706 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.768424646 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.767200472 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.765158432 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.83057212 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.124912455 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.716177097 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.774312061 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.767003796 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.128622307 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.767406424 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.761769621 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.771958985 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.765636898 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.766367676 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.750812981 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.753604214 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.763920643 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.772720519 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.754887841 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.763550735 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.129669969 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.765326535 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.753288337 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.788473701 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.832370866 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.767222562 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.77186722 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.764724789 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.13877106 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.76494926 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.767504068 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.754807179 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.771172627 seconds)
  done (took 250.705030575 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.757748764 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.757292281 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.754873473 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.75689582 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.75468234 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.764391388 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.755699081 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.759415686 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.762353859 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.75643623 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.761440294 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.76701477 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.763849466 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.756471396 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.770979297 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.756471784 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.755396201 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.772659253 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.759548572 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.759680536 seconds)
  done (took 52.817435015 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.769911793 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.473141429 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.448063511 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.770698202 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.770127995 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.763335781 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.834406453 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.773325844 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.76934411 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.143684098 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.98596888 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.772629764 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.771361949 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.771417991 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.448885017 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.752234501 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.145623554 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.479885668 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.772117737 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.47548779 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.752240959 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.773058247 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.763975715 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.478897091 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.152519765 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.134369429 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.839755534 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.480154167 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.773459774 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.771814325 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.479502811 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.774221215 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.766185451 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.467669134 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.774328642 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.786811827 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.770972887 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.840111494 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.843426072 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.149730356 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.481654744 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.141194862 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.784705101 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.955105834 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.777336883 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.75140892 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.485651652 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.774512658 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.752035037 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.775260037 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.778129417 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.462824166 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.769115869 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.461394805 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.77385223 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.772880167 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.483201522 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.460810602 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.454763174 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.990480025 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.767098414 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.138269298 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.774520199 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.488848402 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.775022283 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.773277202 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.775458056 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.99200703 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.486049406 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.13795841 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.149641991 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.149642912 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.775671229 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.849991717 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.779041077 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.152862271 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.848798896 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.209352602 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.152883738 seconds)
  done (took 160.346681419 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.092381492 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.879630316 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.227138058 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.424029708 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.349333296 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.92528826 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.903704559 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.049740049 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.772557855 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.878712124 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.574282122 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.876258887 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.618930088 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.850119465 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.888346887 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.911545301 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.250508919 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.7854108 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.533191928 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.546064132 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.773461241 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.886635833 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.594397677 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.1861536 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.773548968 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.569006171 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.783361756 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.3717629 seconds)
  done (took 65.897085068 seconds)
done (took 664.563875112 seconds)
SAVING RESULT...
DONE!
