cset: moving following pidspec: 20794
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.392801736 seconds)
loading group "string"... done (took 0.563566745 seconds)
loading group "linalg"... done (took 7.218478686 seconds)
loading group "parallel"... done (took 0.157844337 seconds)
loading group "find"... done (took 1.117269051 seconds)
loading group "tuple"... done (took 1.749789482 seconds)
loading group "dates"... done (took 1.193005409 seconds)
loading group "micro"... done (took 0.216350531 seconds)
loading group "io"... done (took 0.993868459 seconds)
loading group "scalar"... done (took 38.030144266 seconds)
loading group "sparse"... done (took 11.781419162 seconds)
loading group "broadcast"... done (took 0.978598238 seconds)
loading group "union"... done (took 12.746523823 seconds)
loading group "simd"... done (took 4.554173351 seconds)
loading group "random"... done (took 9.322092632 seconds)
loading group "problem"... done (took 1.903659652 seconds)
loading group "array"... done (took 22.043049651 seconds)
loading group "misc"... done (took 1.794685554 seconds)
loading group "sort"... done (took 3.350046624 seconds)
loading group "collection"... done (took 17.509158155 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.491076603 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128055184 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117769747 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122649892 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15012946 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117858897 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126963728 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086533899 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.777003031 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14888478 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119695705 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.420213492 seconds)
done (took 5.123530078 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176258976 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083923084 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083914507 seconds)
  done (took 1.294901883 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068041936 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12221665 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066181138 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06879627 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069123726 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068552994 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068621905 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067949193 seconds)
  done (took 1.658919186 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073976552 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070326667 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070949511 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070504613 seconds)
  done (took 1.412420119 seconds)
done (took 5.748414718 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.781766214 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205753367 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183102081 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.405592495 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133028694 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158380171 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639503187 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323728865 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183904854 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081790673 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104982885 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.320539864 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110643069 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.634826749 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077637987 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094254205 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140760897 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.42344097 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068362714 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082416115 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088792696 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128943391 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088867194 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07726505 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146980234 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067999837 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132937925 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084550684 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067201047 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.211143003 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177229253 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651917036 seconds)
  done (took 10.243599061 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096152687 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099677234 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071317972 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140148869 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100929346 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072330755 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073631219 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069540448 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090252263 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131629471 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091915863 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104449106 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068351532 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071464477 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088015742 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207472046 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083157252 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084173004 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073290627 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077768893 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122994544 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081352064 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08107043 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080465366 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131964206 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182475662 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100222362 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099946908 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069435048 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082849793 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117011708 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129474161 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068024192 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068704185 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127633627 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096940362 seconds)
  done (took 4.700228072 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.301048411 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.142092433 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094013661 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13769476 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067696252 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111151568 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068517767 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083767521 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.20765319 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.312521382 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.582920917 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113213188 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103863777 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068414395 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068476811 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067817027 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.365536508 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.113143037 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108672807 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084688263 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073108672 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071883349 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.113295435 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070193485 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066872005 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070839381 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.105195435 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.302972672 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129437074 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070517735 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.929182692 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.128968453 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068970109 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102933195 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.171650008 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090265578 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.27663724 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071222292 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067143115 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155656312 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073513141 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069465896 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08634092 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107425365 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117216804 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067770222 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069820685 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166776452 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067664071 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08219312 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.992205387 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15611779 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079979036 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066193787 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.249434004 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087932619 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072636735 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067378841 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.186389894 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06800466 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137815745 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069713396 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068897015 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070366909 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067047821 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071977161 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374215055 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066849565 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.83606786 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071290189 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079409974 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072171061 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07222939 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07804609 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075074356 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088247238 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06887996 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078100356 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06837972 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068614766 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069717991 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088084606 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.362318828 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066838224 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070572436 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067012078 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093607471 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099213049 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069308087 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067583594 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102851023 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.16698524 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069129731 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067647938 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.109707027 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070156838 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.088510018 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072740205 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11587347 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070009597 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.093479281 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.0680801 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10071333 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073709311 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102132368 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.0851334 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070912304 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.402726296 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06608433 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06749089 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071142881 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06720242 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070049923 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068666345 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082706102 seconds)
  done (took 21.347589074 seconds)
done (took 38.72042331 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.279859226 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079993374 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080118676 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080450886 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080277966 seconds)
  done (took 1.823452853 seconds)
done (took 3.031242352 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121825067 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102191281 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066468216 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098828561 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066549309 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10296734 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103027918 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083963828 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102453693 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066231113 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099087392 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066558391 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06627375 seconds)
  done (took 2.36401476 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083670319 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086082297 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072325497 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085707727 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066375211 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085140339 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083421569 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091379752 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083079606 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074246198 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065750332 seconds)
  done (took 2.070389826 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081838267 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08585037 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071326825 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083913398 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068555392 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084309725 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083357696 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088433243 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083966964 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075667618 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066211881 seconds)
  done (took 2.063395132 seconds)
done (took 7.686544555 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07892049 seconds)
  done (took 1.258491896 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.604128306 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.11423071 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081756875 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116029202 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191356776 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.12419477 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.286697779 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090854221 seconds)
  done (took 8.979567188 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10529038 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070639687 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075010371 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073282918 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073795911 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073638858 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072081363 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070785866 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071286992 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072652287 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07371276 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07079685 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074926406 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071549361 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074042491 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071409741 seconds)
  done (took 2.450262278 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094981028 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094178899 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076457794 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07780156 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074402889 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074781946 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077267568 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075799842 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073356391 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075216794 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077243906 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076362011 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074250433 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067253922 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077305742 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078687351 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073603199 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077138787 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077546342 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077641687 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077519042 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067099495 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073524346 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076388479 seconds)
  done (took 3.140265635 seconds)
done (took 17.01837148 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115860592 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072860676 seconds)
  done (took 1.378786226 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083815717 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086992505 seconds)
  done (took 1.367877659 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084187704 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066795761 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093956155 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079615001 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06745849 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068695554 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.092904354 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069251748 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068542318 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069336602 seconds)
  done (took 1.958500955 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06971019 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080913321 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073787272 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084464696 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077270879 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066769963 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076353823 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070816828 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082178084 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065169004 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074422033 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085132144 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074532441 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087172115 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076147475 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071614857 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073962412 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070295304 seconds)
  done (took 2.561212014 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066017001 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067895 seconds)
  done (took 1.337867498 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067650261 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065390343 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069390866 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069271243 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065630924 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064926979 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065697139 seconds)
  done (took 1.666893555 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.401764739 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113822992 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.309503583 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072764883 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084887157 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.254621185 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067195744 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072266805 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072313547 seconds)
  done (took 2.696167593 seconds)
done (took 14.17210904 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079058624 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087616467 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098432618 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.371474333 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092186519 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066583808 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116098708 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.195075435 seconds)
done (took 2.323675471 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213675374 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.61473882 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.396138785 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204343496 seconds)
  done (took 2.420253459 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329687842 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088810599 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060848717 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069069198 seconds)
  done (took 1.763975415 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067396863 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071388283 seconds)
  done (took 1.355006864 seconds)
done (took 6.968193818 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068743996 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087535477 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068354405 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067483006 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.065599167 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068504641 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065395907 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065367149 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06532919 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06797193 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070749689 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068194787 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067735009 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068231359 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071063256 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065741712 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065562625 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071475258 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066716299 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065433617 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065301634 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067968112 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06572669 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065206586 seconds)
  done (took 2.887027907 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083678966 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068405661 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074286058 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073896888 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072634973 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073539852 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073585413 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068416222 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073463903 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070989281 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071996801 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072222523 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070415437 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072489902 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070392975 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072319324 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07407548 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068964361 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070850681 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072515222 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073477538 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068360155 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071965915 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07334984 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072055585 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071813517 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070122777 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068680116 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073276719 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071901647 seconds)
  done (took 3.389821715 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071027205 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065138321 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066718062 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072742059 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066116702 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067160712 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065089125 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06594868 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066257318 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065628799 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066632157 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065463344 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065508545 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066344799 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066330904 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069626905 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081201886 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06612879 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06559879 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066345278 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069119535 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065666846 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065650707 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.179304163 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065447662 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065272538 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066216878 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065352958 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066532224 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065209635 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068236092 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069131959 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065867024 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072227148 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068952302 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065240512 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069363466 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064996732 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06600738 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064736709 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065060934 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065042867 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065163087 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071839861 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065570332 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066893548 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065638672 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066347151 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065563678 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.0679371 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064688539 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065108674 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067090769 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066235948 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069605209 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065001234 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065561004 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064573672 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066281322 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065056557 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064873028 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064430453 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067665636 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065948742 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080599353 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072246942 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065347928 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067044751 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066658987 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068332443 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067620507 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07923572 seconds)
  done (took 6.17882361 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091291236 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087584497 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06565029 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065439244 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063720749 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066697155 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069718291 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066384085 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067932519 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072033594 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066291071 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067440526 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067623392 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079088982 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066501339 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06816721 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072038746 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064244738 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066447902 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070253587 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0661861 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070008639 seconds)
  done (took 2.778392553 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154334668 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071024017 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108686461 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075866295 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069947003 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075449678 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072418307 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072183569 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072316372 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070525838 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070554696 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072207434 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070112031 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070249126 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070678876 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070783841 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072144338 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07021894 seconds)
  done (took 2.637738981 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078089467 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068306594 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089608732 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068745356 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068464338 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070453901 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07316083 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077024164 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070483279 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068224194 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076869758 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070923106 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070810152 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068370954 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070263127 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068834641 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07050191 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068245075 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076574466 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072964846 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072784585 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076796749 seconds)
  done (took 2.825904772 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080133882 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06973183 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085466817 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070916793 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06460515 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066931487 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072392096 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068217272 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072468868 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069910156 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06818273 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066401582 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07168066 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067980743 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072056439 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06886084 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070240068 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068239126 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069630295 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06397407 seconds)
  done (took 2.637920691 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08813984 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070128513 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070151935 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078476286 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06971217 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070114692 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077510716 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069710852 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069266541 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09204547 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069312303 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069297037 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077729628 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074409192 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069564148 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07789842 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077866163 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077415096 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069444028 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069067855 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089579639 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069372141 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077168076 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069873207 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069177943 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068858624 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069584773 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074363608 seconds)
  done (took 3.314209532 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068164228 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068465762 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065640274 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065904454 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066211339 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066320688 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065545547 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065561494 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068179134 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065662503 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068323097 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067900861 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068347403 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067880258 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068303858 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068150614 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068032859 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065532301 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06599462 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06600184 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067645809 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068141492 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067647568 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065949457 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065272052 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067626995 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065284129 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065825416 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067792979 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065461722 seconds)
  done (took 3.251044918 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075005695 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075156995 seconds)
  done (took 1.395016835 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064090341 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082289003 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065579006 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072530783 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07302149 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069076216 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076359575 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072484194 seconds)
  done (took 1.815829068 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083181169 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080204243 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070223502 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083689218 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079250731 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085587757 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136684587 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069525648 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075389729 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066428475 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082699506 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067692551 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074502136 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068723048 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074008225 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074822752 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066359019 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074668723 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07103034 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066978972 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069618417 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077223027 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070741375 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063983599 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069667529 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091317967 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080318119 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068149176 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071531364 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075898048 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074632541 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062396761 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067957976 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068829755 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066022752 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.0785759 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083868652 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071363284 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077175381 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069006673 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079445026 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063158594 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072917988 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075197012 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078178912 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068892849 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069115011 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063153994 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065800289 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070316457 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063421938 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068834791 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063040853 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077829295 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07177321 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078894416 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067063359 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070389846 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07161728 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072154357 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07568265 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070945982 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071143587 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068304568 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078191869 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073219326 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078136604 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063373637 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062435913 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06604157 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078464931 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090903791 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074655424 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068816979 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070004056 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065592533 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071800758 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069484551 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074122426 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074691416 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069080948 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0747005 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07602376 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068506672 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071260637 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077191774 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066595921 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071739876 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066294377 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085440516 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067226864 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066540956 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066358922 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079512716 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071600302 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.0681464 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066457962 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075711307 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062711868 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068646119 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068927956 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068589566 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078342564 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072262124 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072594004 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076747624 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075618614 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068163829 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070647809 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064237123 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068551422 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066456699 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075234554 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061829623 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070860686 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068711575 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067973968 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.202471424 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066892132 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069493185 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078576695 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075136522 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067894917 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066567424 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072834818 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06958395 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073440585 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076976424 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068798831 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064264083 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064281197 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072810256 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069326118 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072421674 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074241772 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072086268 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063619628 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067297835 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074833928 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078714449 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069029225 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070362424 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075356886 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070796995 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068354064 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076119556 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072551779 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068087244 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075032388 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069893246 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064786479 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072657693 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072770481 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068099929 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07308365 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072039906 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070634942 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068502213 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067507227 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07740446 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07004527 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067511315 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06841341 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067605602 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080290248 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071277025 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064032782 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065677463 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078919508 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066660784 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069073643 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067871406 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071049989 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069752448 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066957282 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068707425 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070503538 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08019624 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07355352 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069901814 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.0748202 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080457848 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068893743 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071770092 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068382245 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069557766 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070590236 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077329742 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074190366 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073721438 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071366455 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065405161 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074923832 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076145214 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068110462 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066474622 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067718777 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07354022 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075087859 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073192378 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069521989 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066696406 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06924063 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072345986 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071297539 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068922223 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067966889 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076145497 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066783352 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07609688 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07060741 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079372253 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072234554 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06389905 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07189848 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06699317 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07496699 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06394724 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066582267 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068325468 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069761759 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067104476 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070351569 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061602987 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074345561 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075279809 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067890042 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066652003 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066985791 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074023351 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068624608 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071243441 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070740992 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073444325 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077653031 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06646832 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070484197 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078132763 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.19682422 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062627094 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07602509 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068118182 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068277155 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068625576 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067417149 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072755036 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079226469 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076797933 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063340033 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072032963 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067881717 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068098937 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064900168 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073433519 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072762454 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070299256 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076699488 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071249558 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070486888 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073355201 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069690044 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070205067 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070518399 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072468336 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070330292 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070981211 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068814644 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07243922 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068499628 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066924896 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07156189 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069476168 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070490089 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075310727 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068980561 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070151213 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072209272 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070509518 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069879586 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070074096 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068841523 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07379041 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070304483 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069281775 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071483422 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064071079 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07741633 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068875205 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0771151 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069752556 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066012559 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077651369 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071478089 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076380547 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069807913 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070576884 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07104433 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069008884 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072072241 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076885368 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066430785 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080122458 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077701854 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070406218 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072455347 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068955511 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070612903 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068454808 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070647129 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070053587 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068692309 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068933967 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073620746 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071247599 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069093446 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070275528 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069395736 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068756837 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069612438 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063264114 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06771869 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068382671 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068533983 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07945184 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069696191 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068420894 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06832022 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070565333 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067864839 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066194778 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077355956 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078847927 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069364119 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076566293 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068255838 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070361447 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080166668 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063189718 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067569194 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066535852 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066830625 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076267991 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069681831 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078487859 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068307276 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067798546 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065392033 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068775928 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066723796 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062413343 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06552319 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071368375 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066957745 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06712742 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068098132 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070352757 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068801506 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077524569 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067190736 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068252192 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067973566 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06472056 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.200426378 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069398609 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073052915 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071321073 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068262102 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066809727 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069519394 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070568411 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070616119 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069018716 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070494752 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079720713 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069387571 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073326067 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072669329 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064666928 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072335573 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069663914 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069281087 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067960198 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073269195 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07330279 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070523101 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079100883 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068947811 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070606288 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069411719 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06810977 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069952889 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068925915 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069648013 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069206345 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070599487 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078470976 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067728383 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072793279 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069546238 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069949389 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076350519 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070466808 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072928923 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076624367 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069316311 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071252252 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077892217 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074063512 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072863368 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07019528 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071125107 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075052864 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068274717 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075658027 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069678713 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070885678 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071199611 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068009481 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069484148 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069452644 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068965554 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075401604 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070126443 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06869304 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069114703 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066852577 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070011635 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072138204 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076847108 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071835676 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072428146 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064982467 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066662606 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070530583 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066870506 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070959639 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071310272 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074700582 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071512699 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068917971 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067502062 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078199039 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074898884 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07276393 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066720416 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072861851 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069797272 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071434324 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070425208 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069147369 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070288605 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.0729288 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070779342 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068355496 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076273239 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07262887 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070301928 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070609177 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069981714 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06985224 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064082216 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069700977 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070979724 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074664625 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071675568 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069136568 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080354083 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066489896 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069472539 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072450035 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067681361 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072976244 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063522609 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069995691 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069157908 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068941981 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062928155 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067325534 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065714318 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070039285 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067420475 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063412375 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078546018 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077440511 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07108997 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066888419 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.198826303 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063558954 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064512758 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069006497 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070948668 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071884864 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080922756 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.0691245 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068483347 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064850776 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06996071 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073104481 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073304804 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066794288 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065375598 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069069118 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072750421 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075384182 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067720844 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069900939 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072840518 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071780712 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068063897 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073366763 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06670711 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073572075 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083378026 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070760396 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0703486 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076453839 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077356628 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06991167 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065281423 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070586803 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073080162 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070428997 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070766182 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070701004 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086097498 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072600605 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0690881 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069153576 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07286403 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068493021 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078244076 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071024278 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070361568 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075232663 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071786419 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079238802 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071851699 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078384201 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073247738 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072926839 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068581598 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069976445 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067447579 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068358528 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071726341 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.07062412 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075498517 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078176588 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068524998 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08073938 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079368592 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071696945 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066618803 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068178251 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068317093 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06426151 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070414452 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067251133 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067569902 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067082232 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068060967 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069670264 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074403142 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069849875 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070132471 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068579706 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062902024 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070774265 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071326277 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06941574 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065460031 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068823163 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069706101 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072626766 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07233506 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066244042 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070998268 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070636967 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069374058 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063929298 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075538809 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0680313 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070497246 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06824465 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069000853 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069812494 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072702879 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074628944 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070002167 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070809244 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072415502 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071220108 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065675656 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065796008 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073836641 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06628286 seconds)
  done (took 44.147478965 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101574711 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065442091 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064769144 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064253425 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076807261 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065916632 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064235179 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065298147 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06601429 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068339225 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064609954 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064424524 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073704016 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080762426 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076616944 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069552295 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064623874 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065638681 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06464141 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065431653 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073857132 seconds)
  done (took 2.80387324 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077356049 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07253236 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075778081 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078861439 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070020989 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073510525 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075604044 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073350139 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079190346 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070124466 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088506852 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073149881 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069882334 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070152253 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069891325 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073891264 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078966143 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069943138 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07359942 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075388567 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073874061 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075622813 seconds)
  done (took 2.95031259 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069736532 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068708845 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070787543 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063861528 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069036409 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064110289 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072295447 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066254905 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072637334 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067652503 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068211462 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068058392 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070272704 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063653703 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06830384 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066169872 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112808296 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072080972 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067679698 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069506881 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063894259 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070514001 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064109896 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064364857 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067725916 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072083621 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069619995 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066528482 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068225704 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067694252 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068229734 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065994059 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070123784 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.0690078 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067306531 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067404045 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068148482 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068404926 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063981624 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06635874 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068825517 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064419496 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068508258 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069630227 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066359732 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066569683 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069576288 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068119251 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063301147 seconds)
  done (took 4.680300002 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082369633 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112515166 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070418971 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091182296 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084031368 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078257099 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071876777 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09263857 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065536612 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067025037 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084474951 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082873739 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06823384 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07313652 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075136523 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067948384 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069279014 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067292682 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072392857 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067817069 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072127683 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074825957 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083064526 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082371254 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072154051 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06723624 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067771756 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072323316 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080922788 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073217985 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072999548 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074074102 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083245898 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074058566 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067359841 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070049512 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084160925 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068611075 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070071911 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065872203 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070047876 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072288045 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074267685 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084988135 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067798751 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073484142 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067956011 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064857429 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080502193 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070220601 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075815957 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082950359 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071743393 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068064372 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072548961 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083005476 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068127162 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066347766 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070841543 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080230666 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065687215 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071696261 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082028238 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069961757 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075627545 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082382163 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073331182 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07160772 seconds)
  done (took 6.546810778 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078445191 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.075203686 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083867298 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083522968 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074794884 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075111893 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07486735 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075172823 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074557284 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080012065 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075218481 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.096678449 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070421139 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07771158 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075056391 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075005875 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075195436 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075644934 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074966761 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07488332 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075158347 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083295364 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075453774 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083302067 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102117428 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070336352 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07508381 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075131718 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083419737 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074568594 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082114004 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074754263 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074815678 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083549707 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082181575 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075139882 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06784938 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074279408 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074859897 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075282332 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070155137 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082849915 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074306238 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069753497 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074758094 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074649423 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083256649 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081972511 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077566723 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079431495 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074381808 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082982228 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074306104 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074891757 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08273653 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.109194755 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082851414 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082918401 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074788551 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082444394 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082660861 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089048636 seconds)
  done (took 6.210577982 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084699786 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077049253 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079243321 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064127323 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066434129 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072601132 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06632061 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066820865 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077449673 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077264809 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080135841 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072476382 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075855822 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079852749 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072629275 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075723991 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072903949 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07292987 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07714228 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072403752 seconds)
  done (took 2.825871449 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075601806 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085523092 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069065602 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074324023 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071706155 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074578378 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071393413 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071560811 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069652831 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07156488 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078841339 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078739154 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069534653 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074376088 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078557503 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074528471 seconds)
  done (took 2.524829789 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075396981 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076060081 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082880867 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068335003 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06646164 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065145796 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068073238 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064073032 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06509492 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080999488 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068351566 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070668843 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068614097 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067009984 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065364273 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071193576 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064628821 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065619931 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067943129 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081191559 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079388853 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066616322 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068662719 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067778969 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068603143 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073232802 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067511511 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065895405 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065461822 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06814644 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068907071 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072054506 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065263283 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066172432 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066991901 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065432027 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067565336 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06801901 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070273586 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06758372 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065865659 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068022304 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067732344 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068871165 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064352474 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068247697 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063998675 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070018603 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066015056 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068455463 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067832808 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070893074 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068819214 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07497864 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071499805 seconds)
  done (took 5.133564087 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079829062 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071347795 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064393591 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066176646 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071195677 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069993829 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072093659 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070135573 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070361765 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06634329 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070242374 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071333978 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070499034 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072328788 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069857581 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071839817 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064546613 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070564431 seconds)
  done (took 2.607982133 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072854123 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068703228 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076882314 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068503809 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069382741 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070590099 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064454469 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06690436 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066816227 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068391031 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068628079 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071003829 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06711235 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07052723 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067926337 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068008381 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070071679 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066829307 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068050305 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064502274 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070539041 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067146824 seconds)
  done (took 2.853852394 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093911949 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084150832 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142962889 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082372758 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086231399 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074121014 seconds)
  done (took 1.904533183 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091043756 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080023226 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068892561 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090612104 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076677784 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070108621 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069801475 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070530058 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079062274 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078676616 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069972241 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078857484 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07855965 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078266794 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076282628 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075422259 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070113734 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069515722 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068773411 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086913087 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070081944 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078186278 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069720676 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069743982 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069864522 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078312244 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078510693 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078810174 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069737216 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078787442 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075712972 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06993173 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078830795 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078881609 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072009641 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079176877 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070438431 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087417209 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075929098 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079045813 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071353706 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076347114 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079435922 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075408399 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078706741 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069954749 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075202105 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070000588 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070623369 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08883052 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075952892 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077692405 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076112166 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078589633 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078941089 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08952195 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079044487 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078632765 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075746698 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081677081 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078213672 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075763998 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07790701 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078809846 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075992644 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078049146 seconds)
  done (took 6.391310421 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084271653 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088466436 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070626996 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079079082 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077963283 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070171021 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070576731 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070078693 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070452341 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069545507 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110828416 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070610766 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079143069 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07905984 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070733287 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070326622 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070409701 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078418018 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069922641 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089699489 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070265971 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078820198 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078571838 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078257479 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079055859 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075762877 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070498157 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070266412 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070109628 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070150799 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075523555 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071122195 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078227882 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069540633 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078119845 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070493773 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069872146 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075178272 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070222608 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075743289 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078290922 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08696482 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069997787 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070249223 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079290528 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070025157 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070333641 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069646015 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070350666 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069748818 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078981718 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078735302 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079011911 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07812916 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070102772 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070213791 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070362395 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070164472 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070013554 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07548514 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078134767 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069621247 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089272015 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070249795 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069939378 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078408753 seconds)
  done (took 6.307810695 seconds)
done (took 132.216005923 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184984752 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166247167 seconds)
  done (took 1.68378268 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069745268 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100256997 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080601873 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131452679 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067656659 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101067906 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099963568 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078145689 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066847301 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066847157 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066558162 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068904513 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132259058 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066846001 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066888368 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069313955 seconds)
  done (took 2.68119974 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099366556 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158161182 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100527748 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065285504 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097657856 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073408218 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064833222 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075737685 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071599831 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065336267 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073433247 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071401365 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065338594 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070909519 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073620077 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076017026 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067232452 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075840714 seconds)
  done (took 2.800895225 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105063946 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09446692 seconds)
  done (took 1.55500424 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158268999 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105269832 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.151718102 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.347890347 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168746177 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231006042 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127760076 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128539133 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117229629 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124479826 seconds)
  done (took 3.012542566 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101832072 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153302393 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.261326388 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118010714 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073899363 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096707538 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11727789 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078395179 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081433057 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083549101 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083463118 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07965955 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10255345 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075162018 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074549348 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077028022 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103272335 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072836688 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07491078 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077350206 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101385659 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067052832 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076503303 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074983417 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080638247 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081065155 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068037148 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068419248 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079908921 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077154622 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080259601 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097373921 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08096764 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.111621061 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072678791 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.112289189 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079667813 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077310959 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076777114 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077235752 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081941657 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081845887 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075121811 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079398442 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067514934 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079989433 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067908789 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068206091 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081379482 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069327817 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081623989 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080255156 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.111525298 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069878497 seconds)
  done (took 6.103895628 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104373947 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105656488 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071813227 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112674028 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100788717 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071837739 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102192808 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093891686 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103803661 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070850124 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069225085 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071159456 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083608231 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086846524 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112831082 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105316127 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074139144 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071367839 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104420414 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103665671 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068864482 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095767862 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090967097 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102611021 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068259348 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07087387 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068632147 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071135431 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079248059 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081236135 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071092273 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081475395 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085542628 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079187083 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068007677 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068652685 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068831044 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081603939 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081944684 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080011812 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078298467 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068630906 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068874713 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071549272 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072775837 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070200978 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082320848 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084404819 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08227502 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072285782 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072905967 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070931057 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072118446 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083393883 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081236298 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.085528832 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082677038 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068921291 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06902906 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071884515 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082086485 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080491312 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079841551 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070668886 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080550193 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070558228 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084386638 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088812123 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07140146 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072401088 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070856913 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072365189 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071957331 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081003116 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081526815 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072658722 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072233375 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071022079 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082960332 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081979834 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070923548 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08050874 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069747252 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07104321 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072438939 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072365575 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079785161 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080680827 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070578492 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068403808 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071634638 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071232056 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069204344 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079380622 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081843766 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080675431 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.08068104 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071706743 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.08128599 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080906 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07022272 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078800974 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070037326 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.200234312 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071166459 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080976302 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080003565 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081546207 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071022717 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069572988 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082380092 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084724572 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069901011 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079456145 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082506964 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081666015 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068949766 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081911172 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06971575 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083474369 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070408853 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081004464 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070409699 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08039983 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070326604 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069169353 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07064041 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081346875 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070921388 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070561355 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071263803 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072053437 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.084239977 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087217605 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071603755 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082588942 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080075932 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071487233 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080337498 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069805414 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08039349 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070627383 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07013977 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068900522 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083314123 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069221198 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06936502 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069948055 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081138726 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069953782 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080800018 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079233068 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069114246 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083188201 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081461327 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078557892 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081432525 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070215109 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069607948 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068936676 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070899982 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07940896 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081018328 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071741653 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069653262 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079237158 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080194297 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068067004 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079318284 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081282793 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08082357 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069165834 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070120107 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082524932 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081536859 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079571817 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079162142 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079554185 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068720649 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078139567 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078820722 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070206563 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089299691 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069097019 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083494138 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079678807 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079365986 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080481956 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08142903 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081036746 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081163139 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083833885 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068333305 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068920352 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080404921 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068866507 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069909142 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078589072 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070210557 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069982225 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084612319 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068166113 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078812623 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067250518 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077971971 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066865687 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069498158 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082673953 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.195435824 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072424032 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082306336 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070748329 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07914177 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082477025 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080580786 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068950142 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070943537 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083176531 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.0809551 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070852557 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068896653 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07117969 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080156867 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079298235 seconds)
  done (took 18.976051838 seconds)
done (took 38.174503976 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.217043016 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155386696 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199734832 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118728084 seconds)
  done (took 2.143747617 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.127562769 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105292082 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09981757 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067507425 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.106756383 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068026326 seconds)
  done (took 1.971324755 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312584438 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211830667 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18303909 seconds)
  done (took 2.102242221 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205012932 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193060867 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.398082927 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254248514 seconds)
  done (took 2.556362407 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.148116462 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.094211174 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069507722 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086498358 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.14850143 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.167443639 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.105893038 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.131000304 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081229037 seconds)
  done (took 2.47942826 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151279121 seconds)
done (took 12.795303976 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float64, false)...
    done (took 0.149072973 seconds)
    (2/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091077826 seconds)
    (3/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.084038748 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.12941398 seconds)
    (5/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.214736336 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.166156379 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.173002101 seconds)
    (8/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111046255 seconds)
    (9/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.198852098 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083796749 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.107290924 seconds)
    (12/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.180055933 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079937183 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076625487 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.148042985 seconds)
    (16/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077035004 seconds)
    (17/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088708589 seconds)
    (18/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.197705859 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.11254823 seconds)
    (20/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108749413 seconds)
    (21/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.152797946 seconds)
    (22/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075693666 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.19923297 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.110410983 seconds)
    (25/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069893672 seconds)
    (26/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.166602419 seconds)
    (27/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053220059 seconds)
    (28/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078678076 seconds)
    (29/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.15828609 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054286114 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074073697 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173061859 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075007166 seconds)
    (34/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079722132 seconds)
    (35/309) benchmarking ("sort", Float32, false)...
    done (took 0.130333454 seconds)
    (36/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.156337685 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.104042718 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.22440826 seconds)
    (39/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.084498108 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092829727 seconds)
    (41/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.115354041 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072839032 seconds)
    (43/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.163510886 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074864308 seconds)
    (45/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.151436429 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074756645 seconds)
    (47/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.223194268 seconds)
    (48/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067676328 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092709597 seconds)
    (50/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.181100322 seconds)
    (51/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051608489 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069028021 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136602678 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114375474 seconds)
    (55/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100046845 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074266085 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180108804 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.201236254 seconds)
    (59/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.0717413 seconds)
    (60/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.12228651 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.092953337 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.103116684 seconds)
    (63/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070548424 seconds)
    (64/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.0743536 seconds)
    (65/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069211824 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.104576138 seconds)
    (67/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075113535 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.093640974 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094263965 seconds)
    (70/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073685928 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099921777 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 0.068276 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.140585158 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066628358 seconds)
    (75/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.0745733 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089783515 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121656147 seconds)
    (78/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074375848 seconds)
    (79/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07406296 seconds)
    (80/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.195166413 seconds)
    (81/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.174126558 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.153614561 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067177517 seconds)
    (84/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.21050779 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.213521961 seconds)
    (86/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085627046 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.37336861 seconds)
    (88/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079564771 seconds)
    (89/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091441238 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089878627 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.095145857 seconds)
    (92/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063399344 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.110123387 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068236121 seconds)
    (95/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078355421 seconds)
    (96/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090799062 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068411939 seconds)
    (98/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074903335 seconds)
    (99/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063790172 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150891382 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072190422 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138205926 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.093530471 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139523373 seconds)
    (105/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.10824702 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.142532867 seconds)
    (107/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052039623 seconds)
    (108/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.188260084 seconds)
    (109/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.177725153 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065742584 seconds)
    (111/309) benchmarking ("sort", Bool, false)...
    done (took 0.135584574 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074026143 seconds)
    (113/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072952578 seconds)
    (114/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.186711291 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071236067 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088141434 seconds)
    (117/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07299457 seconds)
    (118/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105202641 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090808152 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.187587676 seconds)
    (121/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078118625 seconds)
    (122/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079968712 seconds)
    (123/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052247993 seconds)
    (124/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072126143 seconds)
    (125/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075435314 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.164312305 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169998701 seconds)
    (128/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074874621 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069548984 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067322831 seconds)
    (131/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053222512 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067060011 seconds)
    (133/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080901608 seconds)
    (134/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076877468 seconds)
    (135/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.0752338 seconds)
    (136/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.199480343 seconds)
    (137/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069135315 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.053295145 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067882417 seconds)
    (140/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074685591 seconds)
    (141/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077445657 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06726917 seconds)
    (143/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.186573971 seconds)
    (144/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074353823 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.179256814 seconds)
    (146/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073929571 seconds)
    (147/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.152877282 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073892456 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05403491 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067844012 seconds)
    (151/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072504566 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075970865 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.123153429 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077908069 seconds)
    (155/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.180645929 seconds)
    (156/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079296114 seconds)
    (157/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.111052657 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053640098 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178289918 seconds)
    (160/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05606135 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067064286 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091281202 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068931079 seconds)
    (164/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056096071 seconds)
    (165/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053638292 seconds)
    (166/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.155039193 seconds)
    (167/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075685489 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054614538 seconds)
    (169/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07474701 seconds)
    (170/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078392987 seconds)
    (171/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076805514 seconds)
    (172/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.053688665 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053974645 seconds)
    (174/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094177473 seconds)
    (175/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.100371086 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054453048 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067081557 seconds)
    (178/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067690768 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053458865 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067107011 seconds)
    (181/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077201617 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069232738 seconds)
    (183/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.10128619 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069388051 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073910815 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075272107 seconds)
    (187/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187607067 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096247385 seconds)
    (189/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099446968 seconds)
    (190/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150363599 seconds)
    (191/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.221605682 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.058104216 seconds)
    (193/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062400525 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07579867 seconds)
    (195/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067032177 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053477959 seconds)
    (197/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062086106 seconds)
    (198/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052793719 seconds)
    (199/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.070233226 seconds)
    (200/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.05239251 seconds)
    (201/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05328755 seconds)
    (202/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054427836 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.180170459 seconds)
    (204/309) benchmarking ("sort", Int8, false)...
    done (took 0.14272724 seconds)
    (205/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.151052322 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066981247 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090359209 seconds)
    (208/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067304686 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053396916 seconds)
    (210/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.15035193 seconds)
    (211/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076027391 seconds)
    (212/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064189722 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.0957777 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076086919 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068409205 seconds)
    (216/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082352778 seconds)
    (217/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070887005 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089074989 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075118118 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073456112 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051786289 seconds)
    (222/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081828651 seconds)
    (223/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052695707 seconds)
    (224/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063559591 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089874283 seconds)
    (226/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054818231 seconds)
    (227/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052129132 seconds)
    (228/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087910453 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072167763 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071224643 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080123413 seconds)
    (232/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.151943783 seconds)
    (233/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052636879 seconds)
    (234/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076819955 seconds)
    (235/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072849201 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06545934 seconds)
    (237/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052066232 seconds)
    (238/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068176303 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064029435 seconds)
    (240/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11883686 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067672831 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132419865 seconds)
    (243/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053136638 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067399597 seconds)
    (245/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068580151 seconds)
    (246/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053218499 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100355339 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065757338 seconds)
    (249/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173750518 seconds)
    (250/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052337218 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052469953 seconds)
    (252/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.0521585 seconds)
    (253/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05189882 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052774309 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09008077 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065369966 seconds)
    (257/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068016217 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065291975 seconds)
    (259/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109035975 seconds)
    (260/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05141819 seconds)
    (261/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06451951 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065371121 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086181134 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072304696 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072929983 seconds)
    (266/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060884764 seconds)
    (267/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051091337 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091977703 seconds)
    (269/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052037973 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069364205 seconds)
    (271/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113090444 seconds)
    (272/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068560167 seconds)
    (273/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074959236 seconds)
    (274/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06961114 seconds)
    (275/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073067663 seconds)
    (276/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081124541 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055100949 seconds)
    (278/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066575091 seconds)
    (279/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053529386 seconds)
    (280/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063998718 seconds)
    (281/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064689796 seconds)
    (282/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055159425 seconds)
    (283/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073781679 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075048558 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066478729 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065981678 seconds)
    (287/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.053625737 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074725524 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138418397 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.111970547 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068630217 seconds)
    (292/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070928857 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073274684 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05352205 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066500399 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088837697 seconds)
    (297/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061262558 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09140302 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051655127 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111931956 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071096393 seconds)
    (302/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.05226861 seconds)
    (303/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054638651 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053561547 seconds)
    (305/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055540963 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139198612 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163893633 seconds)
    (308/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052138558 seconds)
    (309/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051431731 seconds)
  done (took 31.013149394 seconds)
done (took 32.418743643 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08967067 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098396347 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078585429 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097759083 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085639372 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.081218724 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076497824 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082760956 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084158437 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085882887 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083012181 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058087888 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077971942 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077840055 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078214706 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096433976 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081727813 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076414636 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.0760205 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06799702 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076289107 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.0692239 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070713116 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057969476 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.081606683 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075364134 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076386661 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076634678 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067987404 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067908462 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069648363 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075047032 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068771516 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081949011 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07554985 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07650266 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078157792 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079912853 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.07139307 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069461177 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077617435 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069557329 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075575918 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074676734 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073883407 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072279003 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074245018 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078747104 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092340807 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070692891 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076293627 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076897581 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077307058 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073137065 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070369236 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074162716 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071970686 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092111541 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074389006 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06909586 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076216555 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076746698 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07403219 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076261935 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076325152 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.0789543 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078730152 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074643723 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078384948 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074651894 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069283979 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076417735 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072438003 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068798266 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079043785 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080061305 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067513675 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074207864 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075500204 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074635418 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067942836 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071644156 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070444115 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074627901 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071500458 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057305869 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072041666 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074419928 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067543818 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075920875 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074562342 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075162069 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070228258 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078956087 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067628493 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073402312 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068459458 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068398441 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069827482 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071882061 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068131068 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071097963 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075985356 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069057999 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073581476 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08173165 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068380262 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074865038 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067169669 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067783607 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082506464 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.0775691 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.0683452 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071402638 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067213475 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075238933 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066982218 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068052134 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06788413 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067893381 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073463144 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067219517 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069788901 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074211184 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079527255 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06700074 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070127339 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069769139 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066937625 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072040491 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066818332 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067062867 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.203589712 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063145778 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071446984 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069475453 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076767761 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071934256 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076794777 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07118794 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07768387 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073746961 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074940818 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074202692 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067836874 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061792919 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072311248 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071977473 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071673917 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069027022 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070805979 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069445367 seconds)
done (took 12.910925233 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070631914 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146542526 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100771348 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096315178 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086629903 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067597295 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077130642 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103023292 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069264488 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103564599 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088479947 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085955045 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113796824 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065838111 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066772309 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070329189 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068243861 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.083435672 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.102986431 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08794421 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117727983 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066468889 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096130774 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091351884 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088380991 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10292362 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067781177 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070605663 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070548167 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092278967 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087572879 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070820599 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067341221 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102034862 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093789009 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084263004 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067451405 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083651508 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067315658 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066875049 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068567118 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099122323 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081025457 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081505208 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070743247 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070535821 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067994048 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084355635 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090136425 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079376735 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087632563 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104355516 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069549387 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066722381 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06536459 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086217764 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065973366 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069612794 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067415485 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068960621 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066771379 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070259959 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082201819 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083157928 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071099573 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08184461 seconds)
  done (took 6.871429944 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088950242 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092593675 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084597061 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084506379 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067639271 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067099801 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067332066 seconds)
  done (took 2.050660448 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070763417 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092680178 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09412905 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09306718 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.089162605 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09177389 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079324703 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070342549 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.084777549 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071310658 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092346479 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105962392 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.0691083 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074374034 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091834052 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067464046 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091445569 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067659841 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070658862 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090687732 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069648284 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.0830581 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070499613 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067832133 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081753199 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067433944 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11431229 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071787152 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06931912 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070321925 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065683715 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109173959 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083177218 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078201578 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067143411 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081573524 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083879457 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067607082 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085893976 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074566269 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083329004 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069264826 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070113443 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066532105 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072190427 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077822217 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067882982 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069545701 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072070342 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089576737 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069838228 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083355526 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072492906 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072213995 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070729824 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073551033 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07971494 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070266191 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089604497 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070890006 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086831798 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086055195 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.0834968 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086122619 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071548044 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083178886 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082825385 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071836991 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071314237 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072366155 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085483256 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06662464 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068438695 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077505493 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068581671 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089865396 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089714999 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068338477 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076242545 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067392988 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066844059 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066785127 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089782812 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069900175 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066790559 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071573165 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070103703 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066842443 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068927471 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072975661 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067250373 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071111183 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072830867 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073333786 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072356092 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086548584 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071884723 seconds)
  done (took 8.980461768 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071980282 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070794703 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073307357 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07176366 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072249352 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071624442 seconds)
  done (took 1.952257906 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097672828 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071603612 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084671848 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076320164 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109076044 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091021763 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091536558 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.083224166 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088658429 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082812616 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091080923 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.09296052 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.098238093 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076718538 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090964232 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076044133 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091547153 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079995539 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08267716 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076974907 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091157341 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076830122 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075259009 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082562713 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076959808 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07271448 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067920918 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079479665 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079117936 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079700941 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073355727 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076307304 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072074188 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079256292 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087680276 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07145817 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072596941 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078015596 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072968859 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076424272 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089121712 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073622147 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075450107 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078459046 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079423245 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071897068 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077601284 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076928934 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086682472 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077661193 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078281979 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072262246 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075619438 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077531603 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071265676 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079090379 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077932208 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087263248 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072659851 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070912692 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069520681 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076107683 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07908948 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076145915 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079611116 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078155126 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071859994 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072972093 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074007065 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072827508 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078023365 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070018172 seconds)
  done (took 7.222025822 seconds)
done (took 28.563261604 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.555919838 seconds)
  done (took 2.041368099 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.604256167 seconds)
  done (took 2.11653735 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.611777857 seconds)
  done (took 8.119831164 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.39607071 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.479367883 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.700999772 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131963089 seconds)
  done (took 3.260397905 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.676574094 seconds)
  done (took 2.195989252 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211484296 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.198702555 seconds)
  done (took 1.941160171 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380249841 seconds)
  done (took 1.889083929 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.113260509 seconds)
  done (took 2.626603496 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265352132 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.168142306 seconds)
  done (took 1.954431948 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.471915333 seconds)
  done (took 1.988844083 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 5.034933265 seconds)
  done (took 6.553286855 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215352097 seconds)
  done (took 1.773406431 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241157555 seconds)
  done (took 1.757216445 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.682235936 seconds)
  done (took 3.198590027 seconds)
done (took 42.934354112 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083000167 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08207245 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082294314 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079230411 seconds)
  done (took 1.830978274 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079616962 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07341152 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077101574 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073524287 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077428196 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073635114 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075122949 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07755524 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073426067 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073932557 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.0730434 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073550616 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075787887 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075008162 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071844344 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075379834 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07705528 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073431836 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076312719 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073541341 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071681612 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075668404 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075539015 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072684758 seconds)
  done (took 3.314664865 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078881803 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074171492 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076072529 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072968895 seconds)
  done (took 1.82749936 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077934868 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09336072 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090489664 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078363721 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092745031 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086879194 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069823875 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069895036 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074002006 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078090523 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069062602 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097050047 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088282698 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077562587 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079581616 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066594139 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069232298 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087608087 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078154552 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078884354 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07068489 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077553962 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06917257 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089354896 seconds)
  done (took 3.43239571 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078608088 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104748562 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078518622 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088968059 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091101203 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066373282 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074940562 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090110903 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124062449 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066244968 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07098352 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066287177 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073219009 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066681798 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076794373 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105569003 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108950871 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069162557 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096489081 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065959497 seconds)
  done (took 3.196761195 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075081583 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07133992 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066866977 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069797134 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078975415 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073995389 seconds)
  done (took 1.969578781 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070152208 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069396165 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068007534 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068215149 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072319858 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067920238 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067713172 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068213378 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068226979 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067612478 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067851705 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06630043 seconds)
  done (took 2.350564042 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.173601001 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069709328 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070762454 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066561078 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072189618 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067291128 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08050026 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068486637 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091039551 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067040881 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067366309 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069339954 seconds)
  done (took 2.496037861 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210599573 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078024746 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240485537 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138703335 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112298402 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116984028 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105663519 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114482563 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145291118 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10367864 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16999455 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168236578 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108689917 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138845754 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09013365 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098728986 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157191965 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163438688 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104967561 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167938265 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145002581 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126383467 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148302914 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102407787 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107374298 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123207419 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072123465 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081018255 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17231089 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13333506 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1485024 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112719764 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094790132 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178712512 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172533827 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144178975 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135460897 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084532166 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103780509 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13664767 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202470685 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090124233 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164383191 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246445958 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08296126 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137113693 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122294614 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121132028 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109254547 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09159493 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147822586 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186729228 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140800771 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088080253 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113147272 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116879691 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117161894 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104930251 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184352922 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162758905 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129457894 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072825783 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100648355 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154888166 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133065973 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110944611 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128886196 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095665533 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135488006 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156294276 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12008987 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145910137 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129842725 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0896167 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121175461 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141360341 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13026729 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172154472 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126288377 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073737527 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126885121 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104845191 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08227747 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14431515 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076252668 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17578073 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099072272 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106700047 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114254228 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109887662 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109659424 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161824753 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142911183 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245359805 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067287261 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10565702 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121359403 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149418771 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089505942 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109315704 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118840185 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079187501 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142335431 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07609115 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125689263 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076984013 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127725085 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135209161 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077057383 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124183831 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102157747 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101913187 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136501969 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16384262 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090279877 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083036633 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168407562 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124580012 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105828826 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145159351 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158238011 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100423695 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104337302 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151969242 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182338889 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09049924 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164696414 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109343904 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08465864 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088377231 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125875521 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113558601 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123587629 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083387574 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120245317 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171808307 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076650436 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096128247 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134434346 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079708677 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08096057 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103955907 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101458453 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095471163 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100772927 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105014666 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137849569 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12369239 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104564314 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271182861 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100046732 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173778114 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090848372 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102259355 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10487735 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071457398 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138982968 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159261137 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080687997 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166676273 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124956429 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106090659 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119600593 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084567028 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141251552 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079069586 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070640098 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147499453 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112083086 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111282491 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153504262 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106266295 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128977857 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.122045917 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137014011 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135269187 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131577475 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107027146 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089385016 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113127901 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127579682 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073684559 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092342729 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081197655 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105988407 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096575016 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084199664 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144079244 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126864839 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10158462 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113195189 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09816703 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149070003 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077448319 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131168752 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119936306 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094877099 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152673462 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153044069 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132117744 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099814031 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145393145 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070923175 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073765058 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.232835826 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126916192 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084502126 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08532647 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118861092 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149380223 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131309709 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140928826 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113579562 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123405594 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15646507 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070918296 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117270585 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150718407 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12325848 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105172459 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091096941 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100525617 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143937398 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110251879 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185107853 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116364186 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127857206 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155271357 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100940952 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080921254 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11007554 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136845402 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105520702 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145657976 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101362576 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089475894 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111332166 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075006655 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101552443 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128882929 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121505672 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137667345 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116034685 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134650928 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077829435 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118302485 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122010293 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124492902 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064488495 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120711709 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162348293 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094680567 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119658089 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154016888 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07967325 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.125069882 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.323039329 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149250081 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087073152 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112631881 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121549403 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130055375 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122170856 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143069314 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110177202 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136940379 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111088864 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087538669 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088632028 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098094925 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106402288 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095799525 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109754663 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11627421 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096386419 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132694299 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104098814 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111255279 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119966452 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097620692 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091078561 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098029831 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176114516 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122146741 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173588307 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100131484 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148060275 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166903313 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075619582 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080034455 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079593593 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141520155 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08494195 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132436188 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099384217 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107058233 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12549029 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14387429 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09629567 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069550748 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109825911 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136441626 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113609086 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098861337 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104919919 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164020503 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100963951 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079945417 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114067252 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105653316 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102589706 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316263814 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063367409 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099285131 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077303752 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082766458 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129629003 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155758529 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081722576 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103600659 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120664531 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111889849 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130280961 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102993996 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100962382 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116479909 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152259333 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130968727 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091215651 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114234523 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131961799 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158924098 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107620184 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096946689 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174648658 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171480485 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16224876 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089227899 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11619373 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115348335 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109037764 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140928248 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084076018 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166249481 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082701933 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137715246 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105569091 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091465067 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131895925 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100165368 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089137047 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149791223 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11892732 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083830508 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078708893 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11927501 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121900669 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107265881 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075903815 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139814596 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073174816 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132872906 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170364174 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081467701 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104319808 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09567715 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0788881 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106013952 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101474933 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088742733 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.09817523 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168793922 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086718133 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14684185 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138854879 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111253305 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134160081 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098552452 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633998948 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076239837 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144975697 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112388801 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163221295 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095291213 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11326329 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105094439 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117968558 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137609003 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100183561 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175260014 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124762072 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.111167369 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078435669 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098571148 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098646682 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085384882 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101613695 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109625698 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114484423 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090188005 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11168159 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117644292 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079825068 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09205409 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148348296 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112344023 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13721427 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133910872 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082624537 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112490997 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130797767 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07729305 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.11613523 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143326089 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102785471 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094731893 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.339462772 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.106152793 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17659856 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076899487 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167855644 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123294604 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112878429 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11684151 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116968479 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135037023 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111908916 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126042595 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096913559 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.113715815 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116115348 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085208175 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080074341 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106742702 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115866633 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100346505 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100923456 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100926088 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154967633 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07353092 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097559872 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106246457 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148098577 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177721412 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090250863 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084563294 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121125241 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114939154 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11566178 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123292979 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080866833 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083937799 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083139167 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07813166 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110035937 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113868886 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106305891 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112819305 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166280249 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083845105 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22819965 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096736102 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105937957 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070416158 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079722451 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097345427 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098368501 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109763952 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101612488 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170311611 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095085881 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090644483 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093538081 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073627385 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083709964 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.278629516 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114111075 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121322984 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099420397 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063565522 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110528431 seconds)
  done (took 59.353400048 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111328873 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084039529 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098692179 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150661533 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122946901 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213745925 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.159393848 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200910103 seconds)
  done (took 2.809947282 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070582895 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095236257 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100420029 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083997452 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067718923 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070519287 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227244254 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081628324 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067654536 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089668085 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081187157 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070161749 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.432195489 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069404093 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071333373 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063883711 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067995096 seconds)
  done (took 3.47256833 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.371083847 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.603450107 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374654855 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074399944 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.879545422 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.094630085 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.050632299 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132405726 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075491058 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.527118423 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702946007 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129006445 seconds)
  done (took 18.683641132 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07899134 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072964118 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.087916527 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088716119 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077388009 seconds)
  done (took 2.075188134 seconds)
done (took 108.391480378 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084446318 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401568193 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054905252 seconds)
  done (took 2.154404639 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087367888 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087989258 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089729087 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087540625 seconds)
  done (took 2.029883637 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078147886 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078145826 seconds)
  done (took 1.828004591 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225837533 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.141253298 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089096755 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085353342 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079600211 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08071206 seconds)
  done (took 1.917969088 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074897676 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075914138 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073773618 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077235762 seconds)
  done (took 1.968922775 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079501703 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055176411 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056348032 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.05664792 seconds)
  done (took 1.915724975 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087157993 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080112204 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079388727 seconds)
  done (took 1.915238987 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104360709 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08639621 seconds)
  done (took 1.858741307 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083294788 seconds)
  done (took 1.753391371 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101564983 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.115276225 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130378898 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111041198 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138137859 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110252605 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087060485 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088494927 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078296621 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088975225 seconds)
  done (took 2.71950916 seconds)
done (took 22.271167327 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080647052 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373407644 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36149928 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090738089 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669713598 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358074159 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987330334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093317373 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114866425 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071392913 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08838365 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651196395 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980922245 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328341187 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969424503 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.422654866 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652612928 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072285025 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07162848 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06896293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.974869755 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068328709 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068930135 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06935309 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650743743 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37233033 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069073979 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.414729923 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06910816 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070814836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356084857 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069129741 seconds)
  done (took 16.415825176 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073476791 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119018482 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076061628 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085551421 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071362966 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070540335 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072280031 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070069879 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123269736 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07196658 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090176145 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071994011 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076628198 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072745645 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092336908 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072160164 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073236035 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07256999 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072510871 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072531347 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090451876 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071822062 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071819963 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072163006 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072197439 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083111845 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070249407 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071163428 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069509461 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070929145 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071819374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070050383 seconds)
  done (took 4.171435975 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117739007 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127043065 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075674842 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104524201 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113732888 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070757471 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145414304 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094618138 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128995553 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070754597 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088669094 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071840984 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103439862 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069796819 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088999011 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070598497 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070797418 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069678447 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069847389 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069555643 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088264732 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068998086 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069623675 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069815383 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069929053 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082999362 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069916073 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069630274 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070005728 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071015025 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072493033 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069709571 seconds)
  done (took 4.380762388 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076248502 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079174227 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088038335 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088402833 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073404242 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076143894 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076478073 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073452275 seconds)
  done (took 2.320126527 seconds)
done (took 28.965105484 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084637849 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073419114 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.077082879 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084782194 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076972164 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083506393 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071346808 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078961484 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076251321 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076680083 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078923863 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071238937 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074077436 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068068355 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074759091 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068758638 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080071555 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07268949 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08028947 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083174503 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073478628 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074202552 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075501687 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080675776 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080511718 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080637796 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078544671 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074135612 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070760217 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07190642 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078867434 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088770938 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07256393 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083729593 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071927903 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071801841 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075667979 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071837402 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084083678 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.08094045 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073638911 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080304854 seconds)
  done (took 4.896071295 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091139811 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096166654 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089128365 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065718487 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071352019 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069051344 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093545698 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063246562 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063536115 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092435483 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059273896 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063024767 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066339916 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057702981 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063184712 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060378907 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065844764 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059104174 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062779118 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06195006 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.060124633 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057009505 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.063844075 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065941741 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.06095141 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062903193 seconds)
  done (took 3.484225766 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078193434 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087327446 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091145536 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13015294 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107739806 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081221586 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08253742 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097500323 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089106353 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071133573 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074956748 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09854293 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093168732 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078104055 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071775795 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102186854 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083399886 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073376219 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07832767 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095651839 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088936325 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087920621 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097588797 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085237218 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071144196 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073579682 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075275833 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08605592 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075803041 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081456702 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075629767 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073585531 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070544313 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082562375 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074689443 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072977211 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095711274 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080962906 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08131624 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070323718 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072647032 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069476301 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091350497 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125322283 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070300878 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076874358 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07715907 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078957106 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069020899 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087149322 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079632595 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06853404 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071581632 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068345252 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068583451 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081257768 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072980337 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074347601 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080364788 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073298871 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087731228 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072585044 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084000706 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068377573 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076243519 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067911702 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069296862 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067659029 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093204954 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071080951 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109674969 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072326529 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072299645 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080206188 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078887256 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076396176 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068855079 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083290209 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07867664 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072253269 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076885177 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072102339 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071484834 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088608545 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070855356 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069994281 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069060613 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074833935 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071251882 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070083766 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082024431 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069031044 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071750902 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085191292 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069525495 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071119673 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074734287 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073430466 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06810696 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079477073 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075621152 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071953775 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079630954 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071187653 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074290842 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081375119 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077714053 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070267561 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075937029 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077145296 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071701958 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072458911 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073691246 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070427125 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076728912 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074637238 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072206702 seconds)
  done (took 10.921641771 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164688656 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156522972 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071402214 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146948489 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077577847 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080160489 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149174296 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095746992 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06880562 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069689565 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06964916 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111716226 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107515142 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116865319 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079592401 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068755051 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085028083 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11523235 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151537074 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145678935 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085189501 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077817099 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071214891 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070117123 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071615964 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079666598 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08646267 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077939368 seconds)
  done (took 4.483837485 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082497523 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.098263824 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075958438 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09080397 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093084905 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068830472 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071097465 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070765093 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081840613 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08004365 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068747439 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074789902 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075971554 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07195359 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069806227 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075491724 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076142919 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070202794 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072156205 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074281087 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078616313 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081860636 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074222797 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06889282 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075351312 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068471811 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066492101 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086296189 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069220401 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091013318 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066534325 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075545362 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082187186 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070147049 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068809762 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068761186 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068388796 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068312194 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070511958 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067249113 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06740353 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058611392 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067735957 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080778022 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075198821 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057072335 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073389463 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073515357 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074026556 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065998616 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071329039 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071329186 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071904118 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075525683 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073516375 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073429368 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069752325 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066450391 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076349758 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068280426 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06571159 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066877019 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073314631 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069644163 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078528898 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073110818 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066590655 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068395528 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070086265 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074370983 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068680914 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07162105 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065957934 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07026006 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072823958 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070160413 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069428671 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066940996 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068422401 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068764189 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056126327 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068440287 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054189229 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07143956 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066585098 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066805528 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068367106 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072943412 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080989169 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069845013 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074256062 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069421378 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06734698 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071309987 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061043418 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071662996 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083780491 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084074859 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068661446 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066500845 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083135982 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.0729671 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067563935 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056837245 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075873337 seconds)
  done (took 9.296893037 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090204348 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07162881 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084679093 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093626251 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.0873478 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076546884 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077847679 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070092897 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083524613 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074845643 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078054625 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069165919 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078619654 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077829724 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071708981 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078260185 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073196689 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083747243 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.0836329 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069279003 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077009892 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081524008 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090885224 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081271745 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079543925 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081364623 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090690505 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.073258823 seconds)
  done (took 3.974038307 seconds)
done (took 38.743315574 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.785849259 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.945437539 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.771991155 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.149010551 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.944247792 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.791942782 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.897935723 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.764414706 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.908496244 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.808475521 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.00916995 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.876382126 seconds)
done (took 65.358385064 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.8220413 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.913911748 seconds)
    (2/2) benchmarking "String"...
    done (took 2.039605058 seconds)
  done (took 5.658018817 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.072806342 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.396605726 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.011171566 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.763934563 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.76910076 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.078060078 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.589364911 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.291226836 seconds)
  done (took 30.60480891 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.945995309 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.995989858 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.478931707 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.5408394 seconds)
  done (took 15.718440958 seconds)
done (took 63.66557787 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.775314618 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.80026735 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.775178874 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.748261194 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.824988817 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.784202038 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.940084877 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.978365724 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.764406953 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.749964075 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.766094252 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.199929189 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.767115377 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.951887952 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.767541399 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.773714847 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.777255501 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.258083827 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.920321332 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.786435896 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.786848483 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.786866913 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.772521422 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.770446514 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.790222961 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.769950407 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.207898494 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.765650691 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.394095616 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.772182763 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.801080076 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.174533291 seconds)
  done (took 204.606668294 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.766934594 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.954154132 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.993834921 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.80010928 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.337473963 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.948766617 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.884771931 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.447729447 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.767303583 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.789642247 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.096281344 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.764972318 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.104352746 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.729361518 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.796027354 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.851720682 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.021045621 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.10301338 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.798519878 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.938520213 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.79520752 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.924562517 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.888724325 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.059275187 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.778307354 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.874013486 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.939138237 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.783391606 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.968816011 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.000505123 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.782232276 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.772457062 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.990698751 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.641516726 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.774184889 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.77669844 seconds)
  done (took 171.353674026 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.928411339 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.768380633 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.767811517 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.768926243 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.78107073 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.766426789 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.894024181 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.890832956 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.228026995 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.272201687 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.820475333 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.583798162 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.762814322 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.835286048 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.805672273 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.762039705 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.779384683 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.793955395 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.760303835 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.766734047 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.892076605 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.776667996 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.762819578 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.773271287 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.767068045 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.771346945 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.135044 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.847216471 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.760824939 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.768194141 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.02444926 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.762709962 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.765678124 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.656964793 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.123436667 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.844036656 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.7608407 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.765840179 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.759132478 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.978629102 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.758186736 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.760033608 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.761993192 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.929977064 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.760417377 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.88015754 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.761017212 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.254641401 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.76036626 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.757328357 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.325141229 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.431047001 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.756356463 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.75561816 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.758028366 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.758312117 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.755703821 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.760386464 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.391700571 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.757434623 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.825726146 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.754453475 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.759594534 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.760812493 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.755305761 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.756373004 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.7729508 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.752847928 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.099831654 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.816703111 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.873910101 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.879318906 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.757657622 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.823532025 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.847496386 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.758754833 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.758202548 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.756506336 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.754949552 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.836699168 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.753738229 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.876666935 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.761351977 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.757294011 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.80609049 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.829204578 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.755080701 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.647974585 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.759078432 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.756131534 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.065737421 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.752058978 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.823317534 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.753784226 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.756185505 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.755730632 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.888137447 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.876107168 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.53558503 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.758484591 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.420306257 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.750807881 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.899004266 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.748090108 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.935299632 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.752292309 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.830484059 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.752688003 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.752949426 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.747760537 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.782139795 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.751983988 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.809031653 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.745869715 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.121831387 seconds)
  done (took 400.62587415 seconds)
done (took 780.278390061 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.445059608 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.381607395 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.501960406 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.41831353 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.404535707 seconds)
  done (took 13.835905076 seconds)
done (took 15.522457709 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.838079759 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.836797984 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.771094173 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.840429455 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.768587068 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.841855608 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.818549282 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.775009144 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.806501758 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.775278805 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.807426575 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.781975427 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.768940385 seconds)
  done (took 25.118995765 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.989883042 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.001019319 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.828989694 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.994858865 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.801035156 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.99081172 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.934267934 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.912783822 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.912973627 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.774146561 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.768578219 seconds)
  done (took 22.607574433 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.997898222 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.004833789 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.830127603 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.001235259 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.806408577 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.000471903 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.930407942 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.914940278 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.906831071 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773725533 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.768222707 seconds)
  done (took 22.63132932 seconds)
done (took 72.045477435 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.766079095 seconds)
  done (took 3.462428858 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.784533999 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.929754924 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.773666886 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.766565455 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.763116605 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.765277122 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.768020499 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.768518121 seconds)
  done (took 16.016676119 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.763926008 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.7583678 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.76221 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.761802439 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.764317778 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.767112063 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.764064318 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.761884136 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.764280342 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.763783575 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.766302404 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.762321146 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.768494459 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.760895564 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.764084155 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.762370696 seconds)
  done (took 29.916260085 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.765472735 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.763030438 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.763886772 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.763104431 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.760545075 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.763229271 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.76191176 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.763375473 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.764079485 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.762921659 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.767019348 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.763997045 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.765097909 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.766694881 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.76243514 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.765463252 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.762085172 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.764194558 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.771320338 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.762570341 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.766173237 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.766434457 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.762335431 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.764475432 seconds)
  done (took 44.041616905 seconds)
done (took 95.13518788 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.681380107 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.161798466 seconds)
  done (took 8.541053326 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.766096976 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.765492812 seconds)
  done (took 5.267283397 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.76613599 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.766180474 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.765157618 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.765954429 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.766532668 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.766424163 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.762843489 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.768044992 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.766913142 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.765778947 seconds)
  done (took 19.35897964 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.764973839 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.767142625 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.7640179 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.76676609 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.766487646 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.763678337 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.766232375 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.767483525 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.764458148 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.764844077 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.765464216 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.764837478 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.767172553 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.764730486 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.766243842 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.760613634 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.764554553 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.762972511 seconds)
  done (took 33.470039331 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.764306368 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.765882634 seconds)
  done (took 5.229642648 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.767785339 seconds)
    (2/7) benchmarking "second"...
    done (took 1.763745646 seconds)
    (3/7) benchmarking "month"...
    done (took 1.764252214 seconds)
    (4/7) benchmarking "year"...
    done (took 1.763013853 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.762166055 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.764644365 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.764525519 seconds)
  done (took 14.044830794 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.762521992 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.929533624 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.006752112 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.422051594 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.765955984 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.768144224 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.672964723 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.769630825 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.77201205 seconds)
  done (took 19.566225619 seconds)
done (took 107.174806194 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.569604755 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.759467595 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.126222108 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.814607373 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.819852332 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.095430037 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.799756999 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.989325304 seconds)
done (took 42.673195838 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.824940425 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.31516421 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.341198641 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.233865472 seconds)
  done (took 12.580550047 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.736943749 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.294032117 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.800092572 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.427048795 seconds)
  done (took 20.152884647 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.12187165 seconds)
    (2/2) benchmarking "read"...
    done (took 2.118193014 seconds)
  done (took 5.935533425 seconds)
done (took 47.185560547 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.757015769 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.757213236 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.756885775 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.756134756 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.753247678 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.755240819 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.751726241 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.752684828 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.751589977 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.754600855 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.75410728 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.754531017 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.755274241 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.754474973 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.75196419 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.752387342 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752260612 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.754834427 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.753884285 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752245373 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753124394 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.75474446 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.75214921 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.751946081 seconds)
  done (took 43.7838023 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.754854777 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.753382525 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.753868727 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.754254162 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.751644002 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.75403937 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.757016705 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.750984832 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.754052513 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.754501729 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751304918 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.75063087 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.755233072 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.752037078 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.754080721 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.751181378 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.753682449 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751664581 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75540804 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.752248132 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.753725139 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752606003 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.753073738 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.755037475 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.752356689 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.751214171 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.75479161 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.753447268 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.755325055 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.753258166 seconds)
  done (took 54.289029678 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.758399614 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.762481677 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.755872555 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.755684113 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.755313298 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.753639779 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.753674123 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.753699949 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.753752029 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.753758878 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.755161473 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.754346703 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.753331675 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.753651368 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.754520268 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.755413347 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.754907066 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.754280314 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.753232912 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.753397385 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.754087489 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.754372361 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.753658282 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.753194683 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.753111808 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.753258949 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.75384342 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.754643716 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.753643552 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.753951442 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.752607553 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.752893872 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.754463487 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.753022527 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.754712212 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.753213344 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.757513077 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.760195579 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.753598063 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.751940027 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.753300912 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.753441509 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.753779929 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.75385781 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.75438244 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.753071343 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.753723479 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.75236159 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.75325919 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.753833061 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.753177752 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.752832597 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.753978167 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.754261013 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.753058544 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.75395825 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.753106822 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.753562089 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.753035603 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.753177288 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.753110227 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.75449239 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.754137894 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.751933434 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.753604365 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.754417127 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.753722781 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.75434878 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.752455026 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.753458175 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.753193146 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.752838423 seconds)
  done (took 127.981281788 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.752497079 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.750823532 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.750716347 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.750072251 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751230858 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.754110634 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.750373158 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752536854 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749770343 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.7518193 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753145774 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.751983692 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750482624 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.754188999 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.752013107 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.750050809 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.75234881 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.750621749 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.753261815 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.753478229 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.753727336 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.751007166 seconds)
  done (took 40.227042923 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.752646956 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.752825028 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.75062585 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.753361714 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.750489481 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.754000063 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.753339902 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.753679935 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753695677 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.751496291 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751772539 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753809416 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.750627213 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750964899 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750970824 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.750322729 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.755652348 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.750597469 seconds)
  done (took 33.227280594 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.750795715 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.750251329 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.754660706 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.751520965 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.751279096 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.753580472 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750993665 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.753327276 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.752871274 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.752517172 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.753420073 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752532024 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.75325977 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749830751 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752441129 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.753086176 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.753370842 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751061785 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753437524 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.750679474 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.751789161 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.753476471 seconds)
  done (took 40.23689412 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.75358878 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.75389076 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.750412561 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.750710107 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.749946599 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.752575876 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.753728801 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.750182373 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.752663867 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.754341118 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.750078721 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.752939064 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.749390115 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.751323811 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.751137989 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750973094 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.753134155 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.750833432 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.752491363 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.749582797 seconds)
  done (took 36.720797001 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.750467051 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.752214037 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.751821382 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.753205971 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.752029315 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.752101334 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.75202052 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.751622873 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.752467809 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.753267031 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.752045798 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.75394273 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.753061984 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.751247437 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.751865768 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.751965923 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.75311904 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.752223934 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.752679465 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.751957908 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.752849597 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.751963089 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.753464048 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.752993929 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.752330309 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.753107345 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.752462097 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.753361739 seconds)
  done (took 50.75529843 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.754769119 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.754027289 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.751267222 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.751303071 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.751534305 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.751938571 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.751881878 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.751469747 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.754376739 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.751556254 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.756207805 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.754573124 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.754547686 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.754465489 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.755875795 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.755412981 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756108199 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.75208283 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.752448795 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751713195 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.754469352 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753984977 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.75532774 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.752774134 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752612209 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.755010148 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.752812944 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.75298488 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.755876252 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.753113097 seconds)
  done (took 54.296148877 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.773316807 seconds)
    (2/2) benchmarking "in"...
    done (took 1.774628584 seconds)
  done (took 5.235939999 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.75360405 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.755429837 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.755484557 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.753214202 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.754387417 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.757384644 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.756471714 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.753440938 seconds)
  done (took 15.729024317 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.753074295 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.756770208 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.757159014 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.755973681 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.754931042 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.754880838 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.761179898 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.756962646 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.756042711 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.756000759 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.759866979 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.760003046 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.757386736 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.755462511 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.754852517 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.757385758 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.756026098 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.755466953 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.754852826 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.761260298 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.758723657 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.7601211 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.760582575 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.758410467 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.760423994 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.766056212 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.762831424 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.760706927 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.758402496 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.760812973 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.759204704 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.757861602 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.758875682 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.759182682 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.760012545 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.759132855 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.766515188 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.759067226 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.763872937 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.759544241 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.761766846 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.759104229 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.760953741 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.760087343 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.76121511 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.759958108 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.761728183 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.75912803 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.758915546 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.762160899 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.764285274 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.758901166 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.759266116 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.7642103 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.762276366 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765494425 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.761381472 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.763175015 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.766270013 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.767913955 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.772043416 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.766927672 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.761956778 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.761041193 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.769135074 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.779879531 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.767176297 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.761088438 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.760968696 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.762371099 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.767279921 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.772162641 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.768565807 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.761480943 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.761341536 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.762958539 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.760717156 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.762898344 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.766909406 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.763617344 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.761716838 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.76253815 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.769384691 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778801529 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.761007936 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.762088081 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.761581504 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.762246042 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.762852585 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.770977838 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.762730591 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.762968752 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.76135094 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.761856817 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.763637924 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.76299921 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.760689437 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.761682209 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.762826819 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.76437292 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.762935662 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.764436882 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.769065694 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.763090196 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.764237922 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.768240945 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.764621873 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.761931889 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.767838689 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.76494696 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.763104973 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.763661976 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.767986173 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.762576805 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.765738276 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.771173853 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.763553868 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.765330243 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.763552751 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.766292496 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.772245578 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.785593748 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.76663267 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.765447758 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.767204759 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.772173786 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.764382191 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.76639358 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.767060759 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.762252493 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.763693314 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.765227177 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.76698068 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.76486154 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.763968828 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.765086079 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.762855813 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.766065999 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.765818071 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.765730687 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.765087925 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.764754386 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.7660033 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.767095457 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.76528747 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.766311354 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.769285697 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.764272555 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.765459573 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.767755745 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.764805158 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.767019465 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.76599925 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.765267421 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.764740436 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.76704014 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.76460034 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.765901789 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.766475246 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.766596435 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.767822116 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.765261549 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.768976169 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.765923218 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.768735648 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.764399768 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.76560283 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.768546803 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.768866575 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.765815365 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.768197908 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.763518363 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.770023461 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.773121877 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.767436174 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.767240872 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.769363862 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.767442888 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.767071251 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.765598554 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.768229321 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.771733349 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.76742085 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.773012853 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.766883809 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.767164617 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.768682295 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.766973866 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.767432105 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.766959125 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.769260617 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.773236431 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.778500619 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.77351838 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.76895993 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.772211188 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.767380406 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.770518725 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.770780841 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.768418744 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.769457598 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.767958651 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.767627322 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.767664479 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.768813784 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.767841874 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.767577233 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.769941875 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.768860311 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.76849186 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.770658598 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.769099244 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.768312655 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.767745098 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.770396 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.768808274 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.767447244 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.767594947 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.767554799 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.76880848 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.770345127 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.769377821 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.774400519 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.768532855 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.770193222 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.769218881 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.768756056 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.768675127 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.771585526 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.770148257 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.769014644 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.775023158 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.768345352 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.769830473 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.77601089 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.768343973 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.769475 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.772186101 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.772176406 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.769511157 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.77118202 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.777466323 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.770896673 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.769748217 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.769949815 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.77039886 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.772253898 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.775706027 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.768674155 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.768890924 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.772299733 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.771700698 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.769002884 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.771593243 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.770991109 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.77107004 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.773041321 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.772293522 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.772107191 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.770675693 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.771448215 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.771555972 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.771628384 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.772745787 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.776525645 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.774774795 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.770944121 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.773010431 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.772897899 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.776126762 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.77073705 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.771722647 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.771303774 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.783190176 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.777994575 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.775799471 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.77277085 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.773532207 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.77610287 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.775023204 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.775418587 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.771740098 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.772278405 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.771693503 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.772722589 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.772097334 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.773111226 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.773306354 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.773382262 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.773280236 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.777973389 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.77340923 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.771695734 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.772629969 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.772044059 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.774950467 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.772675465 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.775027115 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.774848985 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.773800496 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.771399902 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.773141019 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.77768019 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.77291727 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.773434049 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.772809667 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.773054623 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.772383653 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.773927466 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.773632319 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.775024803 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.778878997 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.775163814 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.781888188 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.77364205 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.780654328 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.773771372 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.775161269 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.781292867 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.773486953 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.772695284 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.773968625 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.773650607 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.780326827 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.775507722 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.773485166 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.777179234 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.773425742 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.775062283 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.777120288 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.775979804 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.776333658 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.774790501 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.781473608 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.774567418 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.779219364 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.776052841 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.773510066 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.774724408 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.776824354 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.774276294 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.779069845 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.775127203 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.776134602 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.774325877 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.775581547 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.77789736 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.776263479 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.777238478 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.774209509 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.776814426 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.781045807 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.776528389 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.778575897 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.777295948 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.782161295 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.775366096 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.780854707 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.777137389 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.77584589 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.775974807 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.776886834 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.778066218 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.776395062 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.778354952 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.776992018 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.776086135 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.780239932 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.776950264 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.778208626 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.776657425 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.776973089 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.775298017 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.783770847 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.794370872 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.777502032 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.780899948 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.774913086 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.777130769 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.780129666 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.778318264 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.776541306 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.777704412 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.784330547 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.784308578 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.777227665 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.778821332 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.778185726 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.778076585 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.778847471 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.778792423 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.777910951 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.778643015 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.778507916 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.777583169 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.780529769 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.779514703 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.778776571 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778749485 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.777848946 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.786779674 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.777478224 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.778251145 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.779747923 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.779402534 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.778948606 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.777329707 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.77906637 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.779415045 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.780324132 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.778545213 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.783354715 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.783075202 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.780772097 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.779986094 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.778886604 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.77874781 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.778440544 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.779288679 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.779677444 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.779442368 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.780384431 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.77868192 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.779059702 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.777876045 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.781838004 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.779754534 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.78109088 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.780996662 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.784630982 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.780425022 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.778417399 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.782248054 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.781154548 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.778721738 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.779148217 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.786751308 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.781862949 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.788790801 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.78581628 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.782927267 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.779994876 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.782890346 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.786395745 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.779591581 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.780922451 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.780776684 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.781589211 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.782209068 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.783362065 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.780855959 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.787295722 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.780535983 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.780858693 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.787881441 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.782017937 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781356106 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.782808844 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.783967685 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.782525306 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.78064797 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.783227237 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.781265137 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.787441522 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.783540067 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.782334506 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.783625209 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.780111797 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.781019693 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78481539 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.783851393 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.781846259 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.780899889 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.782518282 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.782002676 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.783817004 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.781324043 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.781939123 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.781709555 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.783615603 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.787850169 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.781423679 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.783943643 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.781752308 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.7823208 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.782481128 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.783278199 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.781580664 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.780983012 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.782554762 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.783379325 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.782291283 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.78519801 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.782839174 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.783212119 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.784987495 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.783067259 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.784734332 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.790463469 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.791599248 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.782878399 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.782416183 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.784168589 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.786883252 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.784068179 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.783424974 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783514444 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.785727455 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.784840422 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.784227889 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.785407118 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.784874497 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.795646084 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.785114976 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.782937581 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.785236598 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.787439388 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.786462918 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.782084491 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.785313122 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.786858545 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.78559604 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.790422454 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.784344871 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.789783297 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.784469642 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.785738396 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.788929992 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.787332061 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.790514212 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.787632793 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.785164423 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.786847989 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.788974463 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.797485212 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.78712154 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.79235789 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.810107865 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.785357969 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.78627198 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.785461811 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.784709938 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.785812284 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.787048239 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.786419858 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.786981883 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.787288675 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.78599807 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.786384251 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.789902176 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.78746494 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.788601759 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.78662197 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.785647407 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.786687805 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.785223467 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.786211606 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.787877974 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.786579595 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.787200354 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.788607507 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.786460394 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.797359423 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.794635041 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.789230356 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.787692019 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.785921016 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.789952225 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.789060347 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794376609 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.795104441 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.787130014 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.787466534 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.788994608 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.787469928 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.785544644 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.789587271 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.787132002 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787199771 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.785994919 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.799762536 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.794646202 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.791844246 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.787748756 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.78789553 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.789721341 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.787313663 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.789525851 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.788425002 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.789019473 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.788809611 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.791558876 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.789637491 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.791182037 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.789596779 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.794947696 seconds)
  done (took 1059.329661375 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.78693322 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787187695 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.786809857 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.788202172 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787270736 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.78801858 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786680503 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.78823209 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.787650357 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.7875411 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.787269956 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787880383 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.788015589 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.788501891 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787486792 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.788315538 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787756068 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.787346419 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.788989406 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.789779029 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.788081464 seconds)
  done (took 39.265904926 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.793129048 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.788536154 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.789548257 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.79040929 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.788042739 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.791507364 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.78866769 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791113489 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.792327944 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789024364 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.791632821 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791612532 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.789045678 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.78977196 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789007451 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791610192 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.792273562 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.788667957 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.792061976 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.789911669 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.791764671 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.789727469 seconds)
  done (took 41.113714009 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.790558348 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.790618692 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.791365703 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.789706335 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.792165878 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.789108688 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.791453214 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.792353332 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.792807985 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.791342811 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.790105242 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.791501832 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.796048433 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.796721784 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.793910252 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.792770292 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.936936846 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.792196466 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.792133964 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.791507338 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.79055947 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.795285258 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.790074411 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.790153859 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.790301825 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.791663155 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.794446282 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.794292504 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.792375671 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.793380564 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.795117226 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.793546486 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.791816134 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.79329873 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.791936618 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.793723593 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.796236663 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.792234777 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.790579954 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.79354199 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.800059608 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.810922446 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.794188597 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.797887301 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.794715009 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.795839349 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.796512148 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.799600019 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.792595875 seconds)
  done (took 89.747166893 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.794213398 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.79464954 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.793361225 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.793865014 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.79579442 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.795713587 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.794691454 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.795214899 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.792740558 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.793282238 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.795553203 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.792829554 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.792568443 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.795914975 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.795940131 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.793448339 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.793403541 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.792932882 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.793983517 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.792861198 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.792921253 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.795199491 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.795362352 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.793847974 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.795511597 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.793324939 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.792605812 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.79594619 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.793824947 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.793874379 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.796699648 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.796329448 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.795874921 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.793859675 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.794267606 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.797572056 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.796564384 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.796132526 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.796535924 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.794458324 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.797283352 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.796851027 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.796129806 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.797262529 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.795090068 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.79569902 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.796805848 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.79508767 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.795383933 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.797902552 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.79709775 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.795221452 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.798158375 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.795076697 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.797818916 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.798806817 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.796406621 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.796091251 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.797654066 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.795746099 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.796329772 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.797301217 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.795930014 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.798527931 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.79782843 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.795718791 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.797141327 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.79859219 seconds)
  done (took 123.820305713 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.797473283 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.797459482 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797515829 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797231795 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.797298684 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.798369232 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.797188892 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.798055037 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.798003358 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.797514264 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.798291487 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.799460886 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.797572193 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.798956764 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.798030007 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.797570583 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.797559523 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.796869321 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.798264071 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797712371 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.799201485 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.797461326 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.798525206 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.798635135 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.79936599 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.798930877 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.798024664 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.799447889 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798275877 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.798208519 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.799339529 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.797681142 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.798861663 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.798887612 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.799638385 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.798491352 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.798379952 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798642458 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.798618083 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.79900191 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.798960981 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.798890696 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.79890986 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.798028768 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798945606 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.798501686 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.798104391 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.799107896 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.80081306 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.798949583 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.798901905 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798812478 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799735553 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.799371177 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.79935592 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.802114978 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799653871 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.800238349 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.799440309 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.799596679 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.799163258 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.802201349 seconds)
  done (took 113.250610644 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800655879 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.800669501 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.799003828 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.79810672 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.801306752 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.799486827 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.801349861 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.802184166 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.802603319 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.802079543 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801727279 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799629577 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799342953 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800637404 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.799959934 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79960558 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.799102213 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.800094386 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.802002743 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.799632386 seconds)
  done (took 37.742153015 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.799981741 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.802550308 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.799423004 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.799729444 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.803584971 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.800579064 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.802551947 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802464288 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80027314 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803660204 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.804455859 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.803423059 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800007096 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.800374229 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.802712461 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.800593997 seconds)
  done (took 30.560394816 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.799871715 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.80309782 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.801235188 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.801096961 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.800029921 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.800717615 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.803843092 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.80214935 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.800983648 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.804542058 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.803773751 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.803773239 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.803467425 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.802555691 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.801546403 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.804992687 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.801180108 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.801687381 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.804351727 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.802329369 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.802538319 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.80248844 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.804115704 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.80545267 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.800979618 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.80239514 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.802373177 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.801352564 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.802503663 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.804379786 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.801059043 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.802170264 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.80218244 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.802630704 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.803774785 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.80199945 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.805677739 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.805819328 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.805644348 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.806217817 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.805935871 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.802954994 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.80555297 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.807173911 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.802288477 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.805559255 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.803633427 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.8036935 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.803015503 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.803272415 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.805586407 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.804292936 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.80553183 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.806735602 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.80654112 seconds)
  done (took 100.921061321 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806418396 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.805473759 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.803431835 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.806155434 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.806857155 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.803881614 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.806285674 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.803649215 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804033154 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.806725015 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.80370192 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.806335438 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803440239 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.806426417 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.805114261 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.807218824 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.804970092 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.804621545 seconds)
  done (took 34.232429117 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.805726887 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.805339684 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.806973319 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.804789133 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.80455158 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.807358161 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804803499 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.807250402 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807944768 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.804359013 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804698608 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.806799353 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807865793 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.807606574 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805932681 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805384081 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.808008467 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807665814 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.805507372 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.805147194 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.808178148 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807139124 seconds)
  done (took 41.478029539 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.804672271 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.805898481 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.819933314 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.820502282 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.824905129 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.832760475 seconds)
  done (took 12.648027958 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80651536 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808703346 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.806652684 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808908956 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809010658 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806408269 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806320315 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806789153 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80926625 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807549888 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807078332 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808277969 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808712314 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806383559 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809781276 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808685023 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807128253 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806334917 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808033877 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809556598 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807922565 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809856087 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807677509 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80726418 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807446372 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808227031 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809211916 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808268012 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808811282 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812198621 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8100619 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807155594 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809387976 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808147043 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811239222 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809704438 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808750918 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810317029 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810812414 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808140267 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.810309871 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810944813 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81034901 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807999922 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810984322 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807884795 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809317561 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808175318 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808626963 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812540856 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810307995 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808636439 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810960569 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811140432 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811998367 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811341072 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809982036 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808688181 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811664763 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809526238 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809271099 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811034225 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809356367 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809084073 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811599883 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809235894 seconds)
  done (took 121.140303745 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809293794 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.809263501 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809366732 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810300025 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810320359 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809333895 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809650054 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809504278 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809082632 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810029729 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812875727 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810005339 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809869227 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808783881 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810373408 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810837087 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809935664 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809978967 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81024611 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812945111 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809560113 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809914116 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810131655 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810285562 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811121662 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812082838 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811098363 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810803226 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811159853 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810086021 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811289013 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810440166 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810941188 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.810699244 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81048395 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811698586 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811453731 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811954599 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811699688 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81258673 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811125261 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81384458 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810422979 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810993253 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810893503 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811258343 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810855944 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811258492 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812146467 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811390565 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81127167 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812204098 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812627721 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81215835 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811954127 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81170142 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812311315 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81267119 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8109315 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815066474 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812714101 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812445939 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815051017 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81110973 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812968253 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8127623 seconds)
  done (took 121.281432855 seconds)
done (took 2470.700940085 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.893335522 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.847090873 seconds)
  done (took 15.48590349 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.974017972 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.926588557 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.812283102 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.853270719 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.812495329 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.827786268 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.829714129 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.812861748 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.812285735 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.812519591 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.812810579 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.999408317 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.831843397 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.812028744 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.811895116 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.904435818 seconds)
  done (took 51.398061905 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.817013321 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.816924093 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.826765708 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.818684857 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.81591853 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.827658704 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.848966151 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.820016761 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.848613894 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.827416777 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.8815292 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.823629564 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.814879824 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.864127499 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.826934774 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.83003696 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.900967812 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.887233723 seconds)
  done (took 34.845085346 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.892030914 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.820718586 seconds)
  done (took 10.464967729 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.820173676 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.844358519 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.816356652 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.828831477 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.808848804 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.822626588 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.821544652 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.823779539 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.834919474 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.839643855 seconds)
  done (took 70.012142786 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.822159481 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.819193222 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.818252134 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.816229572 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.809354586 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.813707402 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.815353668 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.811744298 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.493314004 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.851659087 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.823232775 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.822400898 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.817332198 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.819321956 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.817948663 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.841454202 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.930527612 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.817026265 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.816814597 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.823888869 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.819762486 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.873048073 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.830562069 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.820534234 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.847415804 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.492185431 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.824635394 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.825013236 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.96592932 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.818214945 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.819455467 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.819227387 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.820608591 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.216882165 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.148705317 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.81723601 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.825624473 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.825897607 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.819623393 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.951868747 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.818746577 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.823597854 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.811689954 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.140596075 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.906168409 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.857625383 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.191782985 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.82187892 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.820416967 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.848189175 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.820946784 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.820115134 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.831667886 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.327727241 seconds)
  done (took 129.978214489 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.814950851 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.105868194 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.96709579 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.813601033 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08782315 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021813266 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.755906889 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.863190338 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.815643232 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.016481867 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.033600344 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.924181936 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.81490082 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.812752305 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.81701497 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.813517609 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.974551101 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.880634062 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.81548972 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.813723673 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842207883 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.020429981 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.93559928 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.814444366 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.837521013 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.023766486 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.935741618 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.919862231 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.28151869 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.812646029 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.87917478 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.816667805 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.814949058 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.814439154 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.970153196 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.911508513 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.902650709 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.815538098 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.813353264 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.813400659 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.478100179 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012421521 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.912749171 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.956787838 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.965652481 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.017617415 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.463358927 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.815428056 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.454711683 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.980290697 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.027766733 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.020954281 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.938764204 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.817332659 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.170305997 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.8144422 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.814010307 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052440772 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.958628543 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.91777647 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.818590121 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.815141601 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.815191516 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.059131954 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.816800222 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.912916132 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.817859764 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.816654194 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.914797072 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.920056182 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.95852269 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.028879385 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.850186653 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.553986645 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.034963393 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.030770211 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.883874324 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051602127 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.81856895 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.81585271 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.903555761 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.571803529 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.015942958 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.064302306 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.037070892 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.851777053 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.41317689 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.817077518 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.010492923 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.001900771 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.013466418 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.964527638 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.968101968 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.146739674 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.816863561 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.816281953 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.053045145 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.954531933 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.820932998 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.176248366 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.053253161 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.440976599 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.839593973 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.113956023 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951298379 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.138513186 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.444403542 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.818763218 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.988613554 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.859658717 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.818652787 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.821050309 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.009799721 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.624631038 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.81923766 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.636880613 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.88335077 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.822812847 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022301909 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.821363326 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.028135367 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.819182419 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.054121958 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.967908568 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.853651251 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.043718519 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.965730543 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.610257317 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.067688864 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.063207845 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.937627078 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.109567592 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.546018984 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.819669852 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094565749 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.821176564 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.818957038 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.986888226 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.820076936 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.967311235 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.822068509 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.049499379 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845302907 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.974700876 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.824235471 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.05329949 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.856103166 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.8720786 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.821764148 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.946381396 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.823425595 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.70482273 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.975692298 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.823948288 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.821445341 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.445561471 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.821638772 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.967136508 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.052337292 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846468873 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.889024994 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.347677942 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.821344353 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.908093289 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.84910855 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.215954038 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.823265673 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.038676853 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.793993254 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.268629107 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.821359777 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.062186019 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.074030599 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.82444668 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.822065555 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.564449311 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.527990673 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.821640839 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.980881286 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.148170579 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.47424623 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027594991 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.823862193 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.95098367 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.826685573 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.906215742 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.172830218 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.821985437 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.822348714 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.821752307 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.823377912 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.82268981 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.079363079 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.857231336 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.321812253 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.958173543 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.03770291 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.133646226 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.042755303 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.86765357 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.82487297 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.084234244 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.824631621 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.888928872 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.824486974 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.847244776 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054083588 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.824920667 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.058960119 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.076790412 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.731028932 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.875345854 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.827405834 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.822731274 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.824169736 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.97181219 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.915144804 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.825730625 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.823235892 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.934444956 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.944857913 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.016902815 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.41094217 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.933793184 seconds)
  done (took 887.478522017 seconds)
done (took 1201.40865795 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.824499744 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.825620628 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.814751494 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.82651347 seconds)
  done (took 29.054868445 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.832014697 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.829361591 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.831209276 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.829473531 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.831430147 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.829063552 seconds)
  done (took 12.744098465 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.874649583 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.827878938 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.826212666 seconds)
  done (took 21.291344319 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.89753826 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.228598809 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.931895433 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.262556247 seconds)
  done (took 10.08343777 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.831828953 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.830917741 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.831283173 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.833002275 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.838518445 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.834139576 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.83169882 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.833117182 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.834503241 seconds)
  done (took 18.262414476 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.220217877 seconds)
done (took 97.418815557 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float64, false)...
    done (took 5.600121395 seconds)
    (2/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.92775625 seconds)
    (3/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.950902127 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.061865436 seconds)
    (5/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.123936711 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.921718569 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.824779177 seconds)
    (8/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.84429686 seconds)
    (9/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.115929623 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.9669372 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.48080758 seconds)
    (12/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.979430064 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.869693777 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.853246565 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.936548475 seconds)
    (16/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.932786048 seconds)
    (17/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.843625449 seconds)
    (18/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.387679412 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.466119592 seconds)
    (20/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.748278606 seconds)
    (21/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.959575542 seconds)
    (22/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.916042994 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.025402704 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.964508458 seconds)
    (25/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.894123302 seconds)
    (26/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.914354468 seconds)
    (27/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.917765452 seconds)
    (28/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.854843788 seconds)
    (29/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.955246298 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.399842528 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.932932958 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.826395972 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.855545575 seconds)
    (34/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.932806747 seconds)
    (35/309) benchmarking ("sort", Float32, false)...
    done (took 5.587633807 seconds)
    (36/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.827395448 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.151272332 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.813665947 seconds)
    (39/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 8.03400082 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.670451022 seconds)
    (41/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.719236996 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.972541815 seconds)
    (43/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.887850402 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.944049281 seconds)
    (45/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.043688825 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.090369234 seconds)
    (47/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.18182127 seconds)
    (48/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.918207897 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.822355897 seconds)
    (50/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.712017309 seconds)
    (51/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.120575193 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.894437036 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.829881468 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.912235894 seconds)
    (55/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.967677203 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.177541685 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.831734888 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.205053062 seconds)
    (59/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.897492774 seconds)
    (60/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.030942491 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.159661373 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.739936796 seconds)
    (63/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.905014755 seconds)
    (64/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.85935853 seconds)
    (65/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.890906166 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.903114437 seconds)
    (67/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.859726905 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.200484432 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.629587887 seconds)
    (70/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.055039282 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.881238375 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 5.542528449 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.832887938 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.104827384 seconds)
    (75/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.862707052 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.96402147 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.4350804 seconds)
    (78/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.952033775 seconds)
    (79/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.229921889 seconds)
    (80/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.409855975 seconds)
    (81/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.014441602 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.911504744 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.228869055 seconds)
    (84/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.815656607 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.942710165 seconds)
    (86/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.676654854 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.905889904 seconds)
    (88/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.340410389 seconds)
    (89/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.866840893 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.124901893 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.832695627 seconds)
    (92/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.116460606 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.822133049 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.881301511 seconds)
    (95/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.919460223 seconds)
    (96/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.05549625 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.214451385 seconds)
    (98/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.058625625 seconds)
    (99/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.344993426 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.854693752 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.924848932 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.833915677 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.83337421 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 3.730268396 seconds)
    (105/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.815844109 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.239818736 seconds)
    (107/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.069615733 seconds)
    (108/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.820262796 seconds)
    (109/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.857259811 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 3.485597578 seconds)
    (111/309) benchmarking ("sort", Bool, false)...
    done (took 2.288141305 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.859282253 seconds)
    (113/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.092570286 seconds)
    (114/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.177558542 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.050199158 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.756580347 seconds)
    (117/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.105255464 seconds)
    (118/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.99868607 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.077471581 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.122088019 seconds)
    (121/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.845772192 seconds)
    (122/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.658216371 seconds)
    (123/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.717756308 seconds)
    (124/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.85618959 seconds)
    (125/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.939401131 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.703867794 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.777999525 seconds)
    (128/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.942975474 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.833746736 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.914869138 seconds)
    (131/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.037698739 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.086183718 seconds)
    (133/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.653490718 seconds)
    (134/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.436424271 seconds)
    (135/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.958745408 seconds)
    (136/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.819502569 seconds)
    (137/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.900596803 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.433003527 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.217131902 seconds)
    (140/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.922867689 seconds)
    (141/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.836620908 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.117861075 seconds)
    (143/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.823586883 seconds)
    (144/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 3.531233561 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.005750168 seconds)
    (146/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.931020976 seconds)
    (147/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.941793572 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.180283001 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.020614584 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.225489924 seconds)
    (151/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.94502181 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.862119882 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.860481005 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.965819573 seconds)
    (155/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.190301842 seconds)
    (156/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.924757779 seconds)
    (157/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.117520831 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.111646608 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.838658097 seconds)
    (160/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.053394508 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.154510588 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.091717784 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.838349185 seconds)
    (164/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.925978044 seconds)
    (165/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.024163536 seconds)
    (166/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.456416704 seconds)
    (167/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.851505917 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.141148293 seconds)
    (169/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.960354014 seconds)
    (170/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.849232266 seconds)
    (171/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.451382309 seconds)
    (172/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.136253476 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.126374037 seconds)
    (174/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.841920096 seconds)
    (175/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.011896116 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.232214316 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.173845908 seconds)
    (178/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.845324355 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.196220749 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.184087178 seconds)
    (181/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.741531045 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.956013527 seconds)
    (183/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 3.458340632 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.950684488 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.866265694 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.81003026 seconds)
    (187/309) benchmarking ("sort", BigInt, false)...
    done (took 6.926743954 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.962745846 seconds)
    (189/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.266114461 seconds)
    (190/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.122297107 seconds)
    (191/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.840630062 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.374775786 seconds)
    (193/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.03813326 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.889193198 seconds)
    (195/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.427346656 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.964198706 seconds)
    (197/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.008944081 seconds)
    (198/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.980143049 seconds)
    (199/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.364969299 seconds)
    (200/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.449328326 seconds)
    (201/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.219630616 seconds)
    (202/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.827444561 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.916796714 seconds)
    (204/309) benchmarking ("sort", Int8, false)...
    done (took 4.809916644 seconds)
    (205/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.264906741 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.904860324 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.845187992 seconds)
    (208/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.920027519 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.882227083 seconds)
    (210/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.261420235 seconds)
    (211/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.857036624 seconds)
    (212/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.355935539 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.487411606 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.874733938 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.137664903 seconds)
    (216/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.359457093 seconds)
    (217/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.954316115 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.822442706 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.637932213 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.049009231 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.146860786 seconds)
    (222/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.409982544 seconds)
    (223/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.091941312 seconds)
    (224/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.827672117 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.811021778 seconds)
    (226/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.831541244 seconds)
    (227/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.875237342 seconds)
    (228/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.926576911 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.869036747 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.86567842 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.51319875 seconds)
    (232/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.952416646 seconds)
    (233/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.243128537 seconds)
    (234/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.845650435 seconds)
    (235/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.903245854 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.971330286 seconds)
    (237/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.992011798 seconds)
    (238/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.993697874 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.883670963 seconds)
    (240/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.848141616 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.842036034 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.821054273 seconds)
    (243/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.220729896 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.436005799 seconds)
    (245/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.945796838 seconds)
    (246/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.036956466 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.920874801 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.028730634 seconds)
    (249/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.849078458 seconds)
    (250/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.975911828 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.078991743 seconds)
    (252/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.829895449 seconds)
    (253/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.133691436 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.833767538 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.619115583 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.130098508 seconds)
    (257/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.481463266 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.060370201 seconds)
    (259/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.149871282 seconds)
    (260/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.943848788 seconds)
    (261/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.930046851 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.088426487 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.784077141 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.879686353 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.234286183 seconds)
    (266/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.343823533 seconds)
    (267/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.041363202 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.894392448 seconds)
    (269/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.98520917 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.86952336 seconds)
    (271/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.197354107 seconds)
    (272/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.93843187 seconds)
    (273/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.017358061 seconds)
    (274/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.928043491 seconds)
    (275/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.870809228 seconds)
    (276/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.53308687 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.722895087 seconds)
    (278/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.931753477 seconds)
    (279/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.014094403 seconds)
    (280/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.128781358 seconds)
    (281/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.17307614 seconds)
    (282/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.452928217 seconds)
    (283/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.932323621 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.931148153 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.929170523 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.9558945 seconds)
    (287/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.931846498 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.58822708 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.848029629 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.831540732 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.042144929 seconds)
    (292/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.004850147 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.889356205 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.028314525 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.2257138 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.893399078 seconds)
    (297/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.02106078 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.214771674 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.151261085 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.947975951 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.869462997 seconds)
    (302/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.01497284 seconds)
    (303/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.364637088 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.282696918 seconds)
    (305/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.833271996 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 8.262307438 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.850397883 seconds)
    (308/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.835127525 seconds)
    (309/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.228208133 seconds)
  done (took 1006.136381229 seconds)
done (took 1007.971372311 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.882632123 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.875394083 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.858889689 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.878173741 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.970638488 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.888713825 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.86944169 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.862715787 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.906727591 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.91024064 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.861164711 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.88804187 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.859934696 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.861249256 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.86059815 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.876556573 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.164636769 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.880296242 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.87859187 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.871223871 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.876795225 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.860271082 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.911459699 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.885406466 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.864372574 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.86420681 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.864223239 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.88131448 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.970724582 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.863244467 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.864048207 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.877213522 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.160512042 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.881203888 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.856066077 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.880643658 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.873735528 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.871586737 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.867386197 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.893194209 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.290071126 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.863020206 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.86568832 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.862564552 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.861819459 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.864654164 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.866046017 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.868222206 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.876454206 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.874129183 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.291211397 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.882121666 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.866162446 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.862544488 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.874922782 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.862424031 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.866415079 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.877117982 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.882250721 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.881283808 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.154649007 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.889201312 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.866821707 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.880602523 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.870678069 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.327207256 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.861041658 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.868072872 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.292251243 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.873401511 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.328283191 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.878199855 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.866487083 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.87806318 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.897213631 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.165158385 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.881544856 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.864290553 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.871501232 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.861621068 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.876368267 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.878600774 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.870491264 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.868096231 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.877659476 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.894264731 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.877697651 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.866304014 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.876158401 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.886790623 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.873288039 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.877954398 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.867777148 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.861174324 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.879026452 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.871250566 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.86893217 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.867534498 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.869351475 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.880690585 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.290699331 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.885904534 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.864064891 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.864204119 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.866797147 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.881526729 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.291762252 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.870200949 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.888979518 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.915528575 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.867911001 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.156841102 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.890182155 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.881011782 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.876938515 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.872518836 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.862313083 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.155521745 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.314224478 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.8862261 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.866515637 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.86415406 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.881305838 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.870347802 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.864285754 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.172532738 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.892871816 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.884383577 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.989013142 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.877557843 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.900204207 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.867620998 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.871334312 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.89322466 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.882099307 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.898473398 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.872510391 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.88339833 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.88249459 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.865620322 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.879787583 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.882001607 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.869494831 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.872785461 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.866169954 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.898652519 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.88059518 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.879053188 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.891070866 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.988436498 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.867932798 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.160530502 seconds)
done (took 292.970277683 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.93435006 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.859852081 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.965027149 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.864477496 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.947959276 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.955656995 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.864810906 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.864402249 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.865477723 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.252559654 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.866072297 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.867556985 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.861943825 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.866940701 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.948092063 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.866250754 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.866222968 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.214469576 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.869278077 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.934257636 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.856709453 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.869319447 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.870558516 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.246746999 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.861657584 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.866839774 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.939646172 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.873475913 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.213289609 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.869076682 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.861818346 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.21042871 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.955731839 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.88798445 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.880917253 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.877092839 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.952728136 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.878429827 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.947957563 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.948506165 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.965211204 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.909013896 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.870443092 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.864579998 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.877652567 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.86711396 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.866874196 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.898736762 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.860689217 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.877864714 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.219253766 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.880327106 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.865356328 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.869001982 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.865641092 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.900409029 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.8685433 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.870392841 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.959268042 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.869719254 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.929698175 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.248678776 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.253251137 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.869930227 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.866031941 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.868552398 seconds)
  done (took 184.262511974 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.936621803 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.943138538 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.935051444 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.870600853 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.326863846 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.940555185 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.86914912 seconds)
  done (took 15.620261701 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.873952105 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.870210932 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.919754258 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.91972778 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.872202299 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.022308983 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.874051436 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.878149382 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.867804308 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.923561964 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.871594104 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.868747735 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.87821741 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.868384725 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.918364279 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.878312826 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.984070502 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.868578742 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.870843376 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.026173036 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.871722343 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.879693731 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.926581358 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.880864448 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.868634757 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.877582768 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.454638162 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.872344037 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.872614927 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.874438241 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.872167633 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.915309486 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.87476855 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.868911263 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.871229839 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.988837861 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.872202573 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.874245678 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.874427165 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.86264811 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.872670659 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.876171358 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.876644927 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.875310799 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.876064211 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.895879957 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.875752851 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.87311978 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.875470255 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.875792718 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.924401014 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.877796026 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.875234988 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.872311904 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.927679625 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.883749967 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.871692522 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.872264728 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.878668208 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.873934721 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.028840592 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.919260033 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.875239405 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.918031051 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.876392356 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.872987811 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.872576262 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.875597485 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.928276239 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.874624156 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.922651389 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.871042378 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.034272074 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.895654741 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.87839147 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.875164362 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.875403073 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.871936577 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.867094989 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.880113543 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.874316131 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.874949801 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.881249975 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.873627228 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.875326083 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.986577402 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.982950838 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.874766748 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.888598558 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.880921909 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.873487285 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.924534995 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.876567138 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.874835844 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.9248388 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.98982097 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.930291302 seconds)
  done (took 206.141635441 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.87761956 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.881751879 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.874533509 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.886638072 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.877356189 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.875395922 seconds)
  done (took 13.075371831 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.876127698 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.87887832 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.876047555 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.877199404 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.873666065 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.876410665 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.877461715 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.875306461 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.87738375 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.877458614 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.876968553 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.877421225 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.878087103 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.877212586 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.877284702 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.87878653 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.87793485 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.874594036 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.877472767 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.877962808 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.019804792 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.875796781 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.876949182 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.878918407 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.881094923 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.879684224 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.885657157 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.877484395 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.880141599 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.885531667 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.883591548 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.876934427 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.877294353 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.87962856 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.881002832 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.877952605 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.882417895 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.877822923 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.875601399 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.879070989 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.879964029 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.879404018 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.880011663 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.87989098 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.880263075 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.880765432 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.88226333 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.883861716 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.878406745 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.878269714 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.87869857 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.882165466 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.880347212 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.880351196 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.87936105 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.885297491 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.884005434 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.88207581 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.880290676 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.879439064 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.882262219 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.882061985 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.87961477 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.88190806 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.888523586 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.880545633 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.881039789 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.88202271 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.881076114 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.881318275 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.881711734 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.8772378 seconds)
  done (took 138.274749787 seconds)
done (took 559.181839277 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.143828697 seconds)
  done (took 8.954142113 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.984964296 seconds)
  done (took 8.896736059 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.286680183 seconds)
  done (took 10.097605086 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.894170816 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.884879416 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.886162689 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.883158652 seconds)
  done (took 29.366566969 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.918079869 seconds)
  done (took 8.72561029 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.888858631 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.876018469 seconds)
  done (took 15.608870278 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.925355492 seconds)
  done (took 8.734956832 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.925537378 seconds)
  done (took 8.738755208 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.901340418 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.902621119 seconds)
  done (took 15.630000861 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.862388733 seconds)
  done (took 8.675102821 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.918992324 seconds)
  done (took 11.738938796 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.874162374 seconds)
  done (took 8.696744849 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.927520625 seconds)
  done (took 8.74008134 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.926374657 seconds)
  done (took 9.735764693 seconds)
done (took 164.149839933 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.877730418 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.876018917 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.877380529 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.873609336 seconds)
  done (took 29.315084346 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.918392261 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.915157201 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.918645982 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.925955109 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.919715995 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.916984671 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.91328407 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.910387034 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.928692812 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.921833728 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.920154189 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.919620653 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.92075087 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.908475055 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.920240592 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.92082814 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.927789946 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.91940594 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.910592066 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.91808074 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.881072703 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.929634971 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.921084905 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.883974078 seconds)
  done (took 47.803134023 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.077648847 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.95161943 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.037573684 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.934055521 seconds)
  done (took 9.814739503 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.936421165 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.938770509 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.949111772 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.988073682 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.021312876 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.947494214 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.912094442 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.907012377 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.893173414 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.936844583 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.012296115 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.954140451 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.023189875 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.885701727 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.073363507 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.883358594 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.884616502 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.938035098 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.987965682 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.005002098 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.886364806 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.936606722 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.944182626 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.95476028 seconds)
  done (took 48.61117179 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.885694033 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.894491674 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.891536107 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.887304693 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.885030411 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.885519549 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.892557531 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.884030708 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.907605767 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.886911203 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.886577895 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.887151247 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.885964434 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.887952417 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.884339619 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.898408318 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.899836893 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.886109076 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.890411341 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.894165401 seconds)
  done (took 39.615836955 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.875528711 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.824418797 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.229360021 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.134566612 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.880090011 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.881731149 seconds)
  done (took 32.637480759 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.89754841 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.887281059 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.884594545 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.940269679 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.020960551 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.89218676 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.886171601 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.894864731 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.927304461 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.945837182 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.902916808 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.91217774 seconds)
  done (took 24.807773925 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.879870308 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.881756349 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.880030489 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.897595236 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.890728134 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.892171584 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.892450837 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.880289238 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.899039995 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.903297253 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.891621707 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.895428193 seconds)
  done (took 44.503707496 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971431969 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.925119132 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.953679842 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.564417901 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.262430551 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.09430324 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.487909671 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.224848496 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.886366834 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1575777 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.04207663 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982643942 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13924115 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.261223179 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.909255373 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.357196598 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180974699 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10503212 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913399848 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.611872913 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944686981 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.953452521 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.686511871 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.940720912 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.09602248 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.015432377 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.145555547 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.885115571 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02580134 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924476344 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895288127 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.882498244 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15675642 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266405964 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986247544 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895400765 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.500909881 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.601106406 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.871664252 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.668294054 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.657578797 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.00839466 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895859026 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880527755 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.814986621 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.926108962 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258858554 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.890527326 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.597355717 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.882571953 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894461072 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975580894 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.881460726 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.695488713 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796624649 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.87838115 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.880514057 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882781144 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.456908556 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.026710439 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.962247519 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.847331971 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.970817678 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.690191206 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276333379 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.027259694 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.882057232 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88315745 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815706343 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.668145906 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935091069 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210650306 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.900806588 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.535238404 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193126718 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.103204557 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.821580406 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171448215 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.298876251 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.846100937 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108365946 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883059502 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819235292 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.841312293 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.816226702 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157279967 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921534364 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.649878545 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918074613 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.223490009 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.896996367 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899927336 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909055767 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.108107815 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.77090895 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882386168 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.800674282 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.028294236 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903161574 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.226288193 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817734753 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.888453415 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141468774 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.095547233 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.845644969 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.381453614 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048074321 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.339821816 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.926450532 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.927758303 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.924020507 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.161294065 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941649656 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.04507089 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935492496 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.878827778 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193085527 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.374053072 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.012406002 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.066816879 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.009040914 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.216950707 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909813814 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964594183 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895416642 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.888491219 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.693058418 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.440620832 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.882227894 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.886361271 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.862732098 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.925917938 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.888565875 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830282576 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.499605063 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.063429509 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.898021557 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.108616347 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.349195647 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187737976 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822015095 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216206706 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.981012556 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.113001515 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.539728151 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.970261642 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143532796 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.863456471 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.883829185 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923549886 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908581928 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99082274 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904582582 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.931587642 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.172741411 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.8908848 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.892990789 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.699863874 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.927390559 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895185054 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.892247933 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.649434705 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161888626 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.907015446 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.897066562 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.779856054 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.898214793 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95474826 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.889505794 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.903720531 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.424073967 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.592991798 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.894424348 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.469240546 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115682645 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900323829 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.690234951 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00479891 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.973810444 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179986542 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945469138 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.820609067 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.598657519 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.580510911 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884822475 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.819581131 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.891704172 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899243225 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900568423 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.085537733 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.165030278 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933977367 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.611589907 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.928812264 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899806555 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.89413359 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889268764 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.393686416 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.031928274 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.975295294 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.927874613 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026717835 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.909237012 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.828183522 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.891529479 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892639044 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.888490528 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.881063878 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928095611 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.617846652 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266887187 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146135145 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.500764604 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900539953 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.655412073 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.945096451 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.883855789 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.667757579 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.07853726 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.967713605 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904500815 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.904360343 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.61964927 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.584935555 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.45616311 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206325412 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201889405 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331673094 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.005821196 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.910597143 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241166792 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819520531 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.44137683 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.944064432 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.241749383 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832084388 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981345662 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.553126087 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240160176 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906545248 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117552404 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.279600347 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.761993453 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034967216 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100900858 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925017697 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.949573936 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843759744 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.17135237 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032324767 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.635837398 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098519594 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238942978 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.6750492 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.018649409 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.893605049 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.595862574 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981416248 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.602590708 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.061482 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.9752314 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.950787302 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375826657 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.896163662 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.116276631 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269619745 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.949714172 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.010715909 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822960903 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.901468171 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.905660373 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.887352292 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.886110676 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.767015128 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.141566298 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900062935 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826190228 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.897909869 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182056809 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.799321731 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.897757086 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896167231 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200161659 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.330726408 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05917376 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.896103051 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.403979066 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897669175 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.828746516 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826318959 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.589022554 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.906207274 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.869732101 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10852556 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.997989379 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812886107 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.873454078 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.96730316 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.155971032 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.911060421 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.181737911 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172190982 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.595273305 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920403073 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.996691772 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.677523005 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.010183911 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.896117047 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.131642023 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.653511674 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.125903824 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.977336993 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.853030755 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.897310735 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112149504 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.898301162 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.93136113 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133240165 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.618260527 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.034102394 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208673606 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969727787 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.941554144 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.942245622 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.989601275 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906189354 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980600582 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903840598 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.910006734 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.913747327 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944738473 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.942736685 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.021865444 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.914766355 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995280287 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.070730687 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.418960065 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.901551464 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187695977 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261897409 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.228733331 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960837912 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.898465854 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90119246 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835927358 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047041388 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.124059832 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170438551 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.028885282 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.00699561 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927158678 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.677782816 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.004731959 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132025575 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172559462 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.79708099 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298207361 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.93076408 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.900436796 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907165375 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.114350024 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108415338 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208966056 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.043338842 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.885873713 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.26438128 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17182752 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.89735869 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.896987376 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.491369138 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.043377736 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.6063462 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.936840526 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.926113884 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17597315 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911342603 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278313536 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.924248207 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.052247766 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.666019398 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.676871341 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.186274457 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.889046919 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.962480022 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177639631 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.297605229 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217259995 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967462992 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911817246 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.995121635 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041573954 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.76981342 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.894208926 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895402113 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.9486532 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.603055694 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.907680541 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173889861 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210587818 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.89385849 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.776596333 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919657817 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.904469524 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.124798521 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190495136 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.153941737 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903974569 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.908156746 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.714906143 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177791501 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961175679 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83382553 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.902836995 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995387892 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.149434195 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925920463 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.351086401 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.614730505 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193400715 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.898865991 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923413838 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.956305822 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.26766373 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229364046 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.4470517 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118441599 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.490457504 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.36555671 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191765963 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.909634538 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.957324598 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194290822 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.906626202 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.872042327 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930292581 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.174860229 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214184291 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.00842082 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.61262065 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.865525609 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.242984643 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.456887183 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836792772 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.891052666 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.958687732 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.893161626 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.031519131 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911089047 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.77387432 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.950807236 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.672722058 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.174489929 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.90449552 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.885132587 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.691002768 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.084609877 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925226598 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042271359 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897931672 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.576077129 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.256631921 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.158244146 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.887101004 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.896158421 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.904727681 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904736407 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.885660459 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.141828762 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.090860946 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183265627 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.91657997 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.928013922 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.901770212 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.114228364 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116164333 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.91148639 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037977534 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.882280116 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933578363 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.814074296 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.399950715 seconds)
  done (took 1684.204882964 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.927729875 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.968135291 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.957236326 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.041935827 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.991559389 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.991841833 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.941881802 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.955142786 seconds)
  done (took 57.612195307 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.902917028 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.103314515 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.916274029 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.90506133 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.91448345 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.912087349 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.072299985 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.912943778 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.914497843 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.914462305 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.90754301 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.902948966 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.209232161 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.925382593 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.904881726 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.894311852 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.912143449 seconds)
  done (took 74.964491182 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.912602857 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.964427212 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.938479514 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.921488706 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.863274702 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.907123943 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.698421926 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.967633873 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.907183536 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.126692495 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.537379565 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.957341166 seconds)
  done (took 90.544337551 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.91551807 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.911157544 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.909795983 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.909238395 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.910302053 seconds)
  done (took 11.400425519 seconds)
done (took 2197.666792606 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.157573626 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.117769106 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.140566882 seconds)
  done (took 6.098626875 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.059459183 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.106049622 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.223875826 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.230087734 seconds)
  done (took 10.465852252 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.198141046 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.277731295 seconds)
  done (took 6.317680825 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.301855194 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.914392077 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.283872774 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.909615898 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.910145784 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.910174634 seconds)
  done (took 22.579503361 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.918265129 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.919310674 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.915996794 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.918836304 seconds)
  done (took 9.520542154 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.893104447 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.582522394 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.89542234 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.912648037 seconds)
  done (took 21.130711874 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.662120646 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.672540672 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.658176903 seconds)
  done (took 9.839994403 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.389201366 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.801615588 seconds)
  done (took 9.032450561 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.173039657 seconds)
  done (took 4.01683104 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.044944755 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.220811991 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.385073836 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.41456074 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.526252972 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.636624857 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.211312536 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.146920131 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.31345866 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.337215473 seconds)
  done (took 25.081923188 seconds)
done (took 139.581906877 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.279330029 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.142937444 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.111068103 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.281521373 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.131666779 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.110701442 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.133293206 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.269329196 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.747573689 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.747041113 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.237787898 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.132457825 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.076346616 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.141816508 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.075535478 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.271917725 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.128494773 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.290208603 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.936727363 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.13438062 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.140129325 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.877775605 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.086640594 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.889340395 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.130467151 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.060763128 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.457896612 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.272643698 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.086516486 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.464336077 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.063928941 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.285897483 seconds)
  done (took 172.040192232 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.672358504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.912768246 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.911229314 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.909852153 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.340365593 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.909235009 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.914849964 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.912073555 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.065001782 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.056122585 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.911497164 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.326293282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.912284054 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.911156164 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.915046673 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.914616151 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.224401192 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.696368081 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.91328603 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.916309853 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.919995082 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.27276221 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.928016724 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.323206038 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.253240124 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.936345971 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.910976378 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.939483987 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.917644519 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.90490951 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.923013201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.91307084 seconds)
  done (took 209.236587834 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.9097477 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.914663 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.915243656 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.91811308 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.913030075 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.917784008 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.9131071 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.912099149 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.596670087 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.587959756 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.922167342 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.918121101 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.92547792 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.914092547 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.915748096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.921810024 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.92597368 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.927290392 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.921778464 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.926549006 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.93518106 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.929730774 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.937818809 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.915910518 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.934492177 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.933718455 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.918284088 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.929549208 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.931748057 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.935135398 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.931900987 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.913412871 seconds)
  done (took 222.728811526 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.109438012 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.923846567 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.924584015 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.85455322 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.925398166 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.924814175 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.922487119 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.11347486 seconds)
  done (took 19.57715245 seconds)
done (took 625.435552621 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.36419984 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.213256076 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.101598297 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.948999452 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.184038928 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.97744579 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.943653819 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.00754324 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.681666301 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.016580909 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.6286924 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.952747062 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.730873558 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.966049963 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.071745168 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.000185676 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.506248395 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.589314771 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.11427439 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.995398683 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.113080255 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.870739896 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.014785157 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.704959645 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.735996055 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.909863163 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.122497882 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.512483122 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.955947309 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.106391609 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.662919395 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.33385001 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.952267052 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.940008846 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.992255274 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.976292542 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.295607049 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.949905828 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.064147028 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.684205003 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.00342458 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.568193284 seconds)
  done (took 105.316961596 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.915508966 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.911066336 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.911535298 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.914613255 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.91274812 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.914973482 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.915702131 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.917764496 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.914679018 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.913620473 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.913888232 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.916239269 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.914812138 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.919972746 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.914663241 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.916995746 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.917443351 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.918564057 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.911695269 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.910416821 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.912417511 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.913202734 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.914099622 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.913880202 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.915223937 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.915464141 seconds)
  done (took 51.650471475 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.928985753 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.067492421 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.145739696 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.941113062 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.923864312 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.930708364 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.947656468 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.933816513 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.929472992 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.932468324 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.021373123 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.934564485 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.948067418 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.149232875 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.94293604 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.940798193 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.930211967 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.926516455 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.073844055 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.94588537 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.950224885 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.938740849 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.947958691 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.940989165 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.931952324 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.930981141 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.933053573 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.361638926 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.936674367 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.024706983 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.972682607 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.950232768 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.32321896 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.156470624 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.981393425 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.937671574 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.934756537 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.028248906 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.937913717 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.930079298 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.948456104 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.935992311 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.154016465 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.41901718 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.939919243 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.931812763 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.376066435 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.031175089 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.97173674 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.942349507 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.154842491 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.944591379 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.935120457 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.932033263 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.9687917 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.938752678 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.934045684 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.232111452 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.939158861 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.947608952 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.941733398 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.930683515 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.081696827 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.93858441 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.071070684 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.936038411 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.937626647 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.929916819 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.152438615 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.947299988 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.421264916 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.940772755 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.9343618 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.025635867 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.074295429 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.402814662 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.943713901 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.087524187 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.337064586 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.952807882 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.938606738 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.357534655 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.96133449 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.942263492 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.938399198 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.938120802 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.935279295 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.980526321 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.946436762 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.364170744 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.426258631 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.243421856 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.96209531 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.948108261 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.931865722 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.235850207 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.945096787 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.936387658 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.149514088 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.43765099 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.947002573 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.941705835 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.413484653 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.946597108 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.952794473 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.941542295 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.16053355 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.945189916 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.978993538 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.932764674 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.942093785 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.934733378 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.952350243 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.939621904 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.933013006 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.398392529 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.042282049 seconds)
  done (took 238.792152533 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.925487905 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.94272322 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.930133985 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.945723681 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.928966828 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.929038133 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.924522745 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.931439868 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.932382888 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.925072412 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.926611352 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.927794671 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.927736547 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.926942144 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.454702881 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.943919331 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.587627885 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.930716465 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.931603868 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.952897035 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.613314892 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.946391618 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.934526228 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.955994704 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.931972153 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.929101442 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.936088833 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.971926896 seconds)
  done (took 169.911626211 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.94368835 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.119941269 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.962326753 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.981078975 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.952997615 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.943810029 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.967276254 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.961901456 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.946788489 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.942846486 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.941664822 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.99912325 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.957332475 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.075733742 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.976170652 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.975560559 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.042264576 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.954205429 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.944858126 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.941264397 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.970700221 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.940093999 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.003154901 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.071187946 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.963690656 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.058287429 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.948467591 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.946151272 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.944303357 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.060140421 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.962074566 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.004425619 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.976203884 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.961244544 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.065642641 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.063345718 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.054019074 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.98038658 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.951060332 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.942662055 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.942713518 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.932595395 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.061659034 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.970073186 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.947253697 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.049409883 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.968503616 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.947513025 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.95362795 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.943378418 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.958375337 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.961604841 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.011101295 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.078568373 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.985252529 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.971750651 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.968344851 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.224569851 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.95500784 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.048365375 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.941817737 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.058516941 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.966612961 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.932700251 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.945884878 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.953434801 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.977620882 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.984356093 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.054124336 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.95717548 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.043663556 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.984362378 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.957942442 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.945612063 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.951729803 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.063056013 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.06761809 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.985827488 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.982980361 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.982930896 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.944306559 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.948948497 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.932615086 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.962207317 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.950969643 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.063168828 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.067861204 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.959754928 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.951281521 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.949990059 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.951309831 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.968143347 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.069875714 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.984599514 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.039397632 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.013811263 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.019191331 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.963779039 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.962850384 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.952798591 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.008952135 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.963465737 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.959426651 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.272019069 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.019926415 seconds)
  done (took 210.771958576 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.429811789 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.007287772 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.000424316 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.218369252 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.371138706 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.745590607 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.993357798 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.999521503 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.020963899 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.157323549 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.059901015 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.020730995 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.982894863 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.970380121 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.998636969 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.016639332 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.0047352 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.306343636 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.117651227 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.154460122 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.979515542 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.304969015 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.323120307 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.377961208 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.02794658 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.319420353 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.677752263 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.241128022 seconds)
  done (took 63.708670301 seconds)
done (took 842.002348616 seconds)
SAVING RESULT...
DONE!
