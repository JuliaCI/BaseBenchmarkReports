cset: moving following pidspec: 10727
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.566125617 seconds)
loading group "string"... done (took 0.520264464 seconds)
loading group "linalg"... done (took 9.53966712 seconds)
loading group "parallel"... done (took 0.170025178 seconds)
loading group "find"... done (took 4.562976912 seconds)
loading group "tuple"... done (took 2.086242255 seconds)
loading group "dates"... done (took 1.402657086 seconds)
loading group "micro"... done (took 0.19269447 seconds)
loading group "io"... done (took 0.525857761 seconds)
loading group "scalar"... done (took 57.840273874 seconds)
loading group "sparse"... done (took 13.659058985 seconds)
loading group "broadcast"... done (took 1.714915005 seconds)
loading group "union"... done (took 10.569673011 seconds)
loading group "simd"... done (took 3.555242856 seconds)
loading group "random"... done (took 13.123514554 seconds)
loading group "problem"... done (took 2.228474813 seconds)
loading group "array"... done (took 24.225983074 seconds)
loading group "misc"... done (took 1.159765413 seconds)
loading group "sort"... done (took 3.684860212 seconds)
loading group "collection"... done (took 21.84138767 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.687979174 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.209409565 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.194516082 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.209290355 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.276830743 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.16798953 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157954693 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.172143036 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.635135749 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.20759397 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136520139 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.436005115 seconds)
done (took 6.255260359 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.262269725 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.244114946 seconds)
    (2/2) benchmarking "String"...
    done (took 0.188102014 seconds)
  done (took 1.141045456 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077904898 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.15822607 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110463646 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095536053 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095156824 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110272797 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094841908 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.11049692 seconds)
  done (took 1.489279589 seconds)
done (took 3.67965304 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.511220087 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.884197454 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.496061807 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.180583147 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.318521849 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306635355 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.267788312 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.221922975 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092249659 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085624573 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.178977185 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.416996514 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.388784362 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.956283133 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069233468 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095263086 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.154501894 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.777620227 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080390081 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.122097426 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.518337159 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213917197 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115977849 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107128374 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186384749 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13427316 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.141445544 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102625169 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664437939 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133336805 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.215029489 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083990446 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.139475668 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.165848208 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.215522182 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110877426 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677318617 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201244078 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097260739 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10058393 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.6748872 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117562956 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.207121028 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106234648 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.069065032 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.162812692 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.11776148 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080677022 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09538521 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103506107 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166135253 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.432594523 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108036578 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.192329272 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095350835 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.689993583 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097542972 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.27397083 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12659577 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094488199 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092444837 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088941919 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16127697 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095052201 seconds)
  done (took 20.126483346 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.166852943 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.185908016 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079325201 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157474409 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122695973 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097743991 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08538534 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080136678 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126610882 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179476663 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144336129 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.191147521 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.077141496 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091825709 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.170673927 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230467865 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.127586647 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106735371 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089459266 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107361175 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123535966 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113048859 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093297051 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092267433 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171894052 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204345012 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109802323 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123478057 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091503747 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095720813 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142369434 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144471747 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092600552 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089442139 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188703341 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107441078 seconds)
  done (took 5.333674456 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.115218692 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.245886455 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103823571 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.270871542 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155301086 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.199368583 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.153750303 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.186407135 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178460161 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.2954182 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.326730071 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178571561 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114215787 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113587276 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081216123 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081725172 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078451666 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.343428809 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.190413911 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151422236 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189552401 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117193841 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082952159 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.378189531 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086236193 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.105233385 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096066265 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.079855522 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.225907395 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097748529 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.072665891 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085231398 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102597742 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13637287 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20093051 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.138249266 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124220604 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113127961 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084731294 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087382351 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.225569992 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121794108 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083213176 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.115790679 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13335596 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115934028 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.113365571 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.128248795 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219911074 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.089375621 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112410202 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.052052376 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194705806 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.145630024 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.104115727 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.27300091 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.13003782 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102774553 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.113726865 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.790881424 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133922781 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083506368 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07932103 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114888181 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080845951 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.457724007 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128899198 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.106492722 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085915255 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158365769 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099021477 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121542657 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089108783 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102958156 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112753458 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086719064 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098404584 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.088713643 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081107668 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.109002812 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113244173 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.101732768 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085931346 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080511077 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159349308 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.0990565 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108760742 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127831845 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.090788268 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.10477607 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113771669 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099322798 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.0905513 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.186458921 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099538505 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.131252591 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115515479 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129530506 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.10617072 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.254213678 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.087075869 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12391611 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103232029 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12882403 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10148268 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081774694 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10255892 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080993305 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081831746 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161507644 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089773069 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081517924 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.106721472 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095780941 seconds)
  done (took 28.629183492 seconds)
done (took 54.799819883 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.418240188 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081072918 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082084113 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100197172 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081811958 seconds)
  done (took 1.552848313 seconds)
done (took 2.319486551 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.311650306 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199511944 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088255843 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188893325 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087348413 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196071004 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184215445 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101223081 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206068533 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086137575 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.190817195 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087974448 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104981036 seconds)
  done (took 2.826467321 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103855743 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106126725 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102434451 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121325993 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086467454 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100565878 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118302253 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10954654 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102987763 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113542445 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086770048 seconds)
  done (took 1.917526995 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101048675 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105135193 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092111147 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116994134 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086787926 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099594569 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115580776 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106586032 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099074313 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112885156 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087490654 seconds)
  done (took 1.890522417 seconds)
done (took 7.400404429 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.225708475 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.905650319 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.191011062 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.245090874 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.354258156 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.29802512 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.60869121 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.200392899 seconds)
  done (took 15.926946566 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.126204285 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092815306 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.193564511 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090671371 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.108926569 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091313714 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095858045 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.113958123 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09153801 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092647468 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092170869 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.11230994 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097148555 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092089237 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.113320594 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097041557 seconds)
  done (took 2.529100429 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143628201 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.14167519 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098803517 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100971814 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.112443717 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099407585 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102707239 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.116031796 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095390058 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09635201 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.119141549 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09993068 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.0981829 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.110627972 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098608171 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118791894 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.110260815 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098826029 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117222618 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.115608152 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099344709 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096803022 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114953995 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099342083 seconds)
  done (took 3.456073159 seconds)
done (took 22.680721334 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148575586 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102458502 seconds)
  done (took 1.021851582 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.165306896 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.182965092 seconds)
  done (took 1.124193268 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112473862 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091309479 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137404812 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104822915 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092434768 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108810253 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117863886 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107915201 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09126007 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092281279 seconds)
  done (took 1.839428191 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09574189 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096757866 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122347327 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.169272004 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117985012 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095274771 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096266961 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112326506 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097386598 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092254557 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114709574 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109899961 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096328878 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12815685 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097372429 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.112745005 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101211285 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095854336 seconds)
  done (took 2.734088305 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091283011 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093035577 seconds)
  done (took 0.967712668 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.0937031 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092052161 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093463707 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108829712 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092929414 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090018448 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106540221 seconds)
  done (took 1.460860582 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.52127951 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.234600713 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.369507215 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072077359 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123924913 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.446331322 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.105455956 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072401332 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091408677 seconds)
  done (took 2.855087725 seconds)
done (took 12.78136672 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093635285 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.241722344 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.635429285 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113508324 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091368224 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161881105 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.313447395 seconds)
done (took 2.436843779 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348248371 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.164688907 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084298652 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092417085 seconds)
  done (took 1.470054389 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082603303 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100424189 seconds)
  done (took 0.972121655 seconds)
done (took 3.232047471 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089617151 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.121599292 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.109423337 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09091678 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.090761706 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09138445 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.109578355 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091578146 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 0.089689746 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.107976247 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.091504101 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089979801 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.089825658 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.106478465 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091200255 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090364719 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106017831 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089809873 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08985279 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089652524 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105775583 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091097173 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089831098 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.106624421 seconds)
  done (took 3.143661741 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110493037 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092572001 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111836634 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094852711 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09502355 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110848134 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095589414 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092279039 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111789021 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092004579 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095464138 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.111838615 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092797716 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094502052 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107666388 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094172474 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094233595 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091525638 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10930514 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094807991 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092504261 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10923628 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095351768 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093282254 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110485992 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094453448 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.09218493 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108500034 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09430442 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093181977 seconds)
  done (took 3.765289621 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09652904 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087661231 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089646614 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115182152 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087727702 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.092136514 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104460579 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090531441 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09247193 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088792792 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109519597 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09132842 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090136952 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107605917 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092737997 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094380472 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116690697 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.090792671 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090832309 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091206727 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110490285 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09049981 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089970199 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.108199307 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090984654 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087516794 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089693592 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108314797 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090930826 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089773668 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.109861674 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094381519 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09206671 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.117378564 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093951651 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090835412 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.113378928 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088189285 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092442099 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086444196 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.105468702 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089820193 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.09007313 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.113711267 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091046596 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091370758 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090846961 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.109270594 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091582888 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093344943 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.105021656 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090304429 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092297968 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.108027843 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.093349179 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087537473 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091698686 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.105116321 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091628239 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090086982 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.104376272 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088036014 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096265031 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091079067 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123177704 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097896687 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089909285 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.108975409 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092195953 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095639763 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.110049285 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101929571 seconds)
  done (took 7.772745132 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115101659 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099524012 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109241844 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09226536 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093005283 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090257188 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113278276 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091756023 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092983191 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114443451 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091290275 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09213038 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109072666 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093671501 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091786204 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109025266 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09718215 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093293717 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.108139039 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092354961 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091651299 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094766073 seconds)
  done (took 2.977925657 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.238163587 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098007069 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140383401 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12178981 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108577469 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121873749 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096937812 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097218772 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112223865 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101437557 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100361824 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113222966 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110462847 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116625974 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102436757 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101963406 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113245551 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101586128 seconds)
  done (took 2.898255452 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105158388 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093470711 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.153778444 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093638372 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093313216 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.110988603 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099868168 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111794251 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111995862 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093724723 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099640282 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10990695 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094167487 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093726309 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110772155 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094562065 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094426744 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110250275 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10037065 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099770439 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116379245 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100518443 seconds)
  done (took 3.095952034 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108051907 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09264947 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127950053 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097145277 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092528832 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109770744 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.099018936 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094266745 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.119287149 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093567856 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093252881 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091660864 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125021578 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093471465 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097707872 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112082172 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093648448 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092203718 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110134402 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093524844 seconds)
  done (took 2.842237279 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.194235465 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126655614 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108569264 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11601221 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126377868 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109012095 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135674701 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109121833 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108608522 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137530567 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113050547 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10846167 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135636223 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.1129097 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126612151 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117586585 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133698795 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117681305 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10978201 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127345496 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120439324 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108102651 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13612131 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108331151 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12566084 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110062835 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110097952 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131047599 seconds)
  done (took 4.23198698 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091954959 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091377432 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090449471 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108786583 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091308263 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091398065 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090968184 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109929607 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092752772 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090659795 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109110636 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09228101 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091154435 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090188369 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110246065 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092684669 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09082978 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109022224 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09222864 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091659466 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091305922 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109127453 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092496136 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090911592 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109195962 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093374578 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092120767 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090655581 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109369975 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092552565 seconds)
  done (took 3.697307798 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104271295 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102691614 seconds)
  done (took 1.018800392 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099367135 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107000506 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090721558 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11049773 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099976381 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092976583 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118576187 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099328227 seconds)
  done (took 1.630993077 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.165923694 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.189391533 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096467478 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.122809273 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170794521 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.180457442 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130184157 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.117407222 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093271993 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085450277 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.183345963 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084774475 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111147752 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090633715 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092700815 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118329659 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094220944 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101489536 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.118222223 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.094836675 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097648298 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115296718 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095738603 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103159736 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106569981 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096309499 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096472712 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.123115064 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090637544 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093859531 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.110100215 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094075608 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.09581351 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.114546423 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.094660227 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.190270581 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100550987 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089882328 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112692012 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09856638 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125751638 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.112450487 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095340465 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092058629 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11377097 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0985344 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098511555 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.110360349 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086931758 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088537629 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.111788094 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089253851 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093660814 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093504612 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.112751166 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100018545 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094762818 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107810086 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090365571 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088702173 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.10971252 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090359806 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094741898 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.114395995 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095532438 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09493426 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111048621 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094443174 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094052385 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.112381165 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093802986 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108179855 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112723126 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099021223 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098293158 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.112418795 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091614302 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099794301 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108822678 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095799745 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097119058 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.140308612 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095388767 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089994477 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.107110264 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100985369 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095138172 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.114369583 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087363549 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102341219 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.11321843 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095290848 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086983248 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091253952 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.107446217 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.096856512 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085348201 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112164358 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093491038 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.096859741 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115925951 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09306541 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093406275 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116068626 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099297461 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092707938 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.176603274 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090535578 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108423902 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096683461 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099843012 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086586776 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112150534 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093836757 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090618776 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.107839108 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099686191 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092952526 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.113853216 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098237033 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094262213 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113534239 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096119585 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093150345 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108000218 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099145802 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101367036 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.112732954 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096380599 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094973854 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093504058 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.112252834 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098780741 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090967482 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117693019 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091293102 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093351241 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.11343162 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098956506 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093022572 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.107462276 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093630142 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094518397 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.110965972 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096629607 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094059039 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.107699886 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087458117 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094581882 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107501912 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095854207 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102583019 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107228211 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097102405 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090590894 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120183835 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092166491 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099474776 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095847964 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.117939739 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100777724 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085141887 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111760752 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097428331 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09484888 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.108170463 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095971838 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094188889 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.117641273 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.088149316 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097871054 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104484895 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091912906 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098320043 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095034971 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.115032088 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090216195 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131744572 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124254495 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100677782 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092849751 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112258039 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098046635 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092914315 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.11691084 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100623289 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099274477 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11026601 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093286907 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099653604 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108634125 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09802149 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091773635 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112856083 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087909753 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096023496 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084773523 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.117723147 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095756191 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097274375 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.118356844 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096404395 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091586558 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120732541 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.09141698 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099095574 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10496288 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101598675 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103992919 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.118261816 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100722256 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095491052 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109628956 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096942907 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103628432 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114426232 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.096192576 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095295544 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086986388 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.107744855 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100753435 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096568875 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109667344 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095085569 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098048896 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11517224 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093945981 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087186005 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.116246567 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099368653 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091192588 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.121001406 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091364366 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091494475 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119930234 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088218924 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091438744 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113997522 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100136399 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09440502 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093678872 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.115788385 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100888402 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096299465 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.115476569 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0938457 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102111286 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110306331 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094044715 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091765139 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.114793849 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.089606842 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095894636 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09466695 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111134444 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091291921 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097514764 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118994982 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100387061 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091849432 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.118083256 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100389618 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.09972455 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110848716 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.110105724 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089869872 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10589073 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091621473 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087266362 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.11435093 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092306174 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099769569 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092560155 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112952756 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099241 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114476458 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.093183247 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.099631713 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122460096 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089577505 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087548473 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110874381 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095726098 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092186937 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090251133 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.115582213 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096145703 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098217844 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116414284 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091197864 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094074146 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.118225027 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092447313 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101564602 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.118983766 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.1018493 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090008426 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.116283736 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09329812 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097814155 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.106610942 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095275423 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09281046 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111833118 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092663705 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09304625 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108659761 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089079061 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091017477 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101195896 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.11188091 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097934451 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092380384 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.111899598 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091983014 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090029121 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.120019344 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094181291 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101506293 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.112570197 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090525786 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088907265 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.117526743 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096237422 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101538871 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090656896 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.11812359 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102323935 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097540388 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.112904111 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.105025136 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102628569 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.119344561 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10137565 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087301042 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.110370385 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09925919 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094192413 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.115918756 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097387066 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087948819 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115523913 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101305447 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095674446 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09236802 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.107980642 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095760209 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10007774 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.115847841 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099264889 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095700206 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114196239 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091258844 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098819171 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119185951 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096620385 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101139262 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112231444 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099017518 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092364771 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098769348 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.115044739 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090022343 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08801049 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.110466028 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102370135 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088506189 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.117398138 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100686777 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092063911 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.11090274 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099805278 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092032689 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114633307 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100620543 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093472017 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103963629 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.115225147 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093831122 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098956738 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.118561653 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089589142 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092215507 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112591064 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10320094 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092518738 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.117431993 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095926456 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099978757 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.115628731 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101367821 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100609789 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100185222 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108135411 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10207357 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098370897 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.116713602 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093470381 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092750883 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108352047 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095050371 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099986672 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111090369 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103931497 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101417331 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.1112106 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09483562 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10035139 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112027251 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10195324 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090820811 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113529532 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090593949 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09658918 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093843153 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.121534506 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091813528 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089410258 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119557827 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101036891 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098494725 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.116461404 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102351016 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088934844 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107925854 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.10071847 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092026939 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123260714 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098679245 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094221303 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111848079 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098888365 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097625163 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101480306 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.109407591 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092400156 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094722172 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116002345 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09429197 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089366931 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.117738963 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094987806 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096120538 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112182061 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091867797 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093786839 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.119436021 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094811783 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091327257 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.110914367 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103320627 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094528878 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091642022 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.109299367 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101443118 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.115612925 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103325647 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093045186 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094587953 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.112258484 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097862725 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101069978 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.114012773 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095504898 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093713662 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120102886 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102045208 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088162373 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.1124082 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106956205 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099233053 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115412711 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099196628 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093502875 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120249009 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102618749 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097357589 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106814714 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.09215291 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094388555 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.0894806 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.116550133 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101337037 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093691957 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.112968452 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10035826 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099609459 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.116375525 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099183966 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090290205 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120795669 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094681507 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098584561 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088520447 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.108826725 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098138097 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100219124 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113769899 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096971822 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096614209 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.117684385 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091987577 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.094258818 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.117860509 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100853636 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100115677 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114151703 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095139472 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101391243 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10420157 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.118211595 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095196066 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102274467 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.122271792 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096708186 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093742875 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119224038 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101971539 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098023312 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.121848764 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093940597 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094343029 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.121949661 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103424618 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104075285 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114349606 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089544824 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099316532 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113669635 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091129325 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099747477 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12183927 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102994209 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095382105 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.111813361 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105285878 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101406041 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115839172 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09439629 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093987715 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.11844174 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094655134 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098973383 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091171181 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.123191504 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102931749 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10092368 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.123561134 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091061619 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101785415 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117666135 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104475832 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096286253 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110279522 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092756715 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099270321 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.120573623 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102777232 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100401856 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099380238 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.119821715 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097576051 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095770783 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.113132919 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104407763 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100625155 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.116731972 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099289539 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094906188 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116241037 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099383772 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10197386 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102254296 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.118581646 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106627327 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102202835 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.114850295 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093371352 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097186503 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.118961214 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.0976635 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100682808 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.113225701 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092029851 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102079978 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.121552613 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097280994 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10340547 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121786751 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095603238 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100115747 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122558742 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102169611 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099278015 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097562792 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.119623146 seconds)
  done (took 62.18957798 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146677461 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105033973 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119333488 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100162435 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1154261 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121344598 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098763111 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099304724 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119594216 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108373179 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098490935 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117709083 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113495036 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138072826 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118632129 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107863793 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117349169 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101272462 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099497815 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118351685 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11436202 seconds)
  done (took 3.241488187 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116161903 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111455237 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130628504 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111554999 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104000012 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12857078 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108286068 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129102114 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113395609 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106261212 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131177085 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108626861 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.124673962 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107477212 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107610616 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126934861 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113047758 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105606382 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130426358 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10991244 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126242527 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110322592 seconds)
  done (took 3.425925084 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129018515 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102130042 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096699191 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119101513 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102637265 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098920237 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120966791 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099545945 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107571297 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.114047738 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092391223 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094394149 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097762423 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118497639 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093627172 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.100012808 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.12650558 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103350587 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104011763 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.11761183 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091579814 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100222725 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100157694 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111001373 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107543857 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104165732 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119225126 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103625634 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.0898342 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.121112223 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101049902 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093803019 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.09123033 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.109879274 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091431633 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103825781 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.121167503 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.100340524 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101033788 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090639193 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.120782433 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104328473 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089360307 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.119643511 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101750864 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093274992 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.12158107 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.101153189 seconds)
  done (took 5.910151766 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128628576 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.393363123 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103942238 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.137504484 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135208944 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.10859578 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101857746 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137642309 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101626581 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123300624 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114752559 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.113179286 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12728442 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106383509 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101795557 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126911719 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105668906 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101275372 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127874685 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103050485 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.126075521 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105870645 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112787556 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132019287 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106213876 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102326357 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123497358 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107041002 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111885362 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.127988185 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107756987 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10737362 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.135838751 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105563281 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.120952248 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105940689 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114618197 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123506835 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104694708 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101548218 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.124287028 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107519926 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103999038 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.136279267 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10462154 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104981405 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124232368 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100382373 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112355598 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.126676698 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109556559 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133263759 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107149275 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104090596 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126655969 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.114058262 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103500709 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.122940166 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105746411 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110816481 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.121802776 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10652187 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113422218 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.124805369 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110274285 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.1323648 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.105928731 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106586216 seconds)
  done (took 9.091919232 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135513165 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108032598 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134733123 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116524644 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108228604 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128524964 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107640601 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.126569222 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108383914 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113477395 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127121077 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.225957836 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.127670032 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112988717 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128073227 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109557515 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108109064 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126940546 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108512487 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10824454 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.12725141 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116865892 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108032614 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135042871 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118402917 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.125068555 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109006295 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10787236 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135859389 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107539352 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117788908 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.129875752 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107746184 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134325309 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.120713704 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107622759 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123292546 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108950011 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107422581 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128822093 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104776774 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114741609 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12883066 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106075957 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108277931 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129039932 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115864207 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.139059309 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112877519 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133924403 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109148424 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115739094 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12818021 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108065202 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115627384 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143378628 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116469024 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136654132 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108569499 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113676562 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136003193 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122089376 seconds)
  done (took 8.372315978 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102351756 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.1009558 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099577524 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120525066 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101752093 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100624161 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120825282 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101541826 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101343859 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.10037757 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121551472 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101540197 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100666486 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120179114 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10249706 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101650039 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100266913 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120221941 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103277909 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100832622 seconds)
  done (took 3.00348678 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.11132692 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117258099 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122956537 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108818542 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102757074 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129032996 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104911374 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102984094 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102863305 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125675782 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112134098 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130377561 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104012277 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108602645 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.13163732 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110510943 seconds)
  done (took 2.705802522 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121385308 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118433263 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.211652421 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104873896 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.126607845 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110876889 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103351383 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127655188 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103091493 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108951481 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128588682 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107486173 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102561714 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.125135303 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105388605 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105853255 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10234595 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126928062 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104584766 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.214433682 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106959028 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.126316205 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104711169 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106385107 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104554211 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129259226 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109379597 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102899028 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.12829017 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105507991 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104987529 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131391872 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102579844 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107654499 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.125056674 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105138381 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103894544 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.124738361 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10772207 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104222911 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.125614422 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10700808 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104946761 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.125769578 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.104448931 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104451123 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101152003 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.130263095 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104495466 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104824031 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.125283285 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108210246 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108402606 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.132562862 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110944999 seconds)
  done (took 7.285157432 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114922806 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105998076 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134398715 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101953656 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104139391 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104002346 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126087449 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106434763 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104407108 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122464317 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105679025 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105386078 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124677092 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105297978 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106049277 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125654638 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103068436 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103802179 seconds)
  done (took 2.892358246 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108896504 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103406121 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106464966 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124514979 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10362537 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102944079 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123271523 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10287531 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103292977 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.124915365 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104460051 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103634378 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101569089 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124504743 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104620586 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102792378 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.12471511 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10339985 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103300388 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.12291678 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10445188 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102749946 seconds)
  done (took 3.295314216 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114996064 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.213840639 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109820676 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.221623322 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100024776 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.122103269 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111516085 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100510536 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.138848722 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100411974 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09972421 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.119992716 seconds)
  done (took 2.443542872 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131365048 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139778801 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126154029 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10648145 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113362348 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129830925 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109705755 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108363227 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139152961 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1184769 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129309182 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117847854 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115455955 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137251292 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113131374 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132401835 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108720093 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109055198 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126835792 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122781634 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108738501 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138617627 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107831157 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127733332 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110226858 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114883901 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137230474 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120324139 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128757571 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11830978 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113560822 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129183846 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117137211 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119251808 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127547154 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11591044 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129156975 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12474513 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113208972 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136567986 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10529796 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133423996 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118634504 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113720233 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1385242 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109110356 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113729163 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130994312 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108080084 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150601512 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114334574 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117250647 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135454756 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117147866 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13812643 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129322855 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1399935 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116858029 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112724199 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1419784 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117027223 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134648316 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117897745 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142005863 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1146323 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116488009 seconds)
  done (took 8.992190204 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143513426 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105798564 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13026684 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119873814 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138719513 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109883015 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109284073 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130022363 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11036176 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105421415 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171618792 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110225729 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137226104 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118793376 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109275111 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131460757 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110428915 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116812181 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128668637 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129871774 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130620569 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118076006 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11704039 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138574519 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120428826 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134500835 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109988845 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108691995 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130852719 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109658708 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114729983 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130193062 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117477743 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127358188 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118319741 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109094432 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129695542 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114948859 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110131311 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133767529 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116758474 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145331124 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109645897 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109145122 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143219079 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109387212 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109098332 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129254654 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109886689 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107011007 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141794818 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120246463 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141296254 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116980682 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131285297 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111203804 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109623972 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130310309 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110310431 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113961351 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140191929 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1104732 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151064014 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110380721 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109479942 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140326292 seconds)
  done (took 8.966403462 seconds)
done (took 169.681383116 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.175873551 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.215158919 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.197052311 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.15816815 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095461298 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.153096076 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128733653 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.199057709 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096347397 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095947954 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.096043223 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.122301284 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.163443939 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094956564 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.118862853 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098945438 seconds)
  done (took 3.102678939 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183473395 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.333507547 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111230231 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122127017 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103663602 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100615552 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.12245994 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102360584 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100504734 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129482301 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101266687 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09690076 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12840987 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098225029 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10058125 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123108345 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107814698 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100886631 seconds)
  done (took 3.168244978 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121881128 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143797321 seconds)
  done (took 1.167285424 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131670689 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.215705046 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.285250168 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171273059 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121908491 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142103745 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151180715 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135138952 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191384488 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134922373 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112884437 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098525826 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148834057 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106339208 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.137410421 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100628495 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129702785 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136974063 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115600503 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103423302 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146336664 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105268263 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105381893 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.137562219 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181907323 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13509168 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103877664 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104072169 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12490529 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11592681 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106743035 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.141252255 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112550874 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180703918 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103607777 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176958744 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.128304486 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102330671 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115117138 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121998338 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.106275943 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10425654 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.136673364 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099505896 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104011209 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.130717369 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105902733 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104543565 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.13194248 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108495452 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.13153338 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.108413574 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.17571254 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109089425 seconds)
  done (took 7.97702938 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.87531134 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140913236 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101217145 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.021324304 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146227993 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115326363 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.870085769 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146314739 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25321025 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.896300455 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117219346 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130168523 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23983647 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259081544 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.291385263 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362543605 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.727538349 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114899736 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129827223 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163860401 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108089896 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146368054 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121535182 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.51509508 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101924169 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122155508 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111144762 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108890638 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177939989 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101447832 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126748021 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172216257 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293144301 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211008437 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122824696 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101477124 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100509141 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184739316 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271528249 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219813914 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.195796051 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098190289 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099858402 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129874649 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121539488 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098108726 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176913832 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190240495 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.187820696 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106333011 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108881328 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134618511 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107917718 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178681523 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097937666 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357369358 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.385938942 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101901934 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109286183 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.13548422 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271581101 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103759061 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237128812 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151247567 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218574397 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100737199 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.828010665 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187218683 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101002041 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127892519 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110379824 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107833946 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130088228 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169102768 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.496985284 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111034338 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12659301 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102049494 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234804201 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101801009 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100894379 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180631733 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101766323 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132687866 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113290557 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133594093 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.165628719 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.271005737 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131462586 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11153093 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106630891 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13788441 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103477293 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23415166 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228918904 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176327439 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207948868 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13122605 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181250069 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164742546 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128163934 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.16565244 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130411137 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113477664 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130387065 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226828244 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134183926 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125595678 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107512495 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110930042 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159316283 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.1051639 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.133552229 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166532226 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553363273 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184151498 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099506195 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127411725 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112045301 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180678495 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109446976 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266755429 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110268253 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185285593 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130469776 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.10013487 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109786142 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180782101 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110654231 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133616948 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109786371 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133124803 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.259355647 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21966257 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132852594 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254162461 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.179158211 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131153712 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170746599 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132387844 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187043893 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113336886 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108404711 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126001433 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820787062 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115392048 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131861827 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108635128 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18400465 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124750784 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104478795 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1012213 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121080832 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814883977 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107634968 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099596029 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125167486 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108672819 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109237036 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131802911 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108391696 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179920022 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244258606 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110101421 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132222372 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103175531 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179865621 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.104379723 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102971352 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125413772 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103476784 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111016692 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129862475 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105586094 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191263171 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.17770615 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.233257815 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.655190488 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102342289 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102506052 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.263958807 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102700358 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326901893 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110352574 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.25922091 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163209981 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122241137 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362544596 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186874732 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18505419 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127620976 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.169966868 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.121191157 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111964596 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.177227505 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103092828 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10914581 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177192549 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134024263 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113639824 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.280615546 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102611929 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251186921 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099380359 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.18986198 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125376553 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109765159 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.329533309 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102631384 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140036781 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.177057656 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108700671 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103226231 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.627465439 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103639328 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137427331 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108216048 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233764642 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185408156 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110182369 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135473115 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111198347 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180499155 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230314609 seconds)
  done (took 47.911576295 seconds)
done (took 64.224498307 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.270065104 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.180694916 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.283164126 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180100241 seconds)
  done (took 1.914446444 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.276970418 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163140613 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.257045812 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099679356 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.262134691 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098787052 seconds)
  done (took 2.091013827 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.180264296 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17072289 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150653451 seconds)
  done (took 1.436667549 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202607939 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.218310772 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.331455263 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.237478758 seconds)
  done (took 2.006125966 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.295350317 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119692001 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126853603 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.237935892 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.254936804 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.21359788 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126027496 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.179997943 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131232704 seconds)
  done (took 2.661409725 seconds)
done (took 11.041761251 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.411451411 seconds)
    (2/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.429679619 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.164501646 seconds)
    (4/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.35834701 seconds)
    (5/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.104917914 seconds)
    (6/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.191771613 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.238600152 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.256606694 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.111211133 seconds)
    (10/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.285142996 seconds)
    (11/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.351163733 seconds)
    (12/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112378546 seconds)
    (13/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.238366605 seconds)
    (14/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.326001178 seconds)
    (15/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.399033189 seconds)
    (16/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.308891737 seconds)
    (17/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.082233721 seconds)
    (18/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085170033 seconds)
    (19/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.130496617 seconds)
    (20/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.237996914 seconds)
    (21/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.182952353 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.153663377 seconds)
    (23/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.167128166 seconds)
    (24/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.07704531 seconds)
    (25/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.085526214 seconds)
    (26/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.398612804 seconds)
    (27/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.210892992 seconds)
    (28/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.180190047 seconds)
    (29/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.15373852 seconds)
    (30/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.085195263 seconds)
    (31/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.129430884 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132213407 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.245668015 seconds)
    (34/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.242492224 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.122756398 seconds)
    (36/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111513593 seconds)
    (37/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.394700609 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.138318507 seconds)
    (39/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.113090099 seconds)
    (40/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.132530051 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.138353261 seconds)
    (42/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.244779553 seconds)
    (43/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.109643234 seconds)
    (44/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.141061781 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.121663407 seconds)
    (46/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.133870833 seconds)
    (47/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.191739342 seconds)
    (48/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084774416 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.151499695 seconds)
    (50/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.181918208 seconds)
    (51/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.182829792 seconds)
    (52/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.135412323 seconds)
    (53/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.210589809 seconds)
    (54/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.130185621 seconds)
    (55/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175550586 seconds)
    (56/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10805733 seconds)
    (57/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.191254295 seconds)
    (58/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108369066 seconds)
    (59/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.081250522 seconds)
    (60/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.278522902 seconds)
    (61/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102346777 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.261123387 seconds)
    (63/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.174485007 seconds)
    (64/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.156789728 seconds)
    (65/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.149746 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108234756 seconds)
    (67/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.138596683 seconds)
    (68/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.134239337 seconds)
    (69/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.088279918 seconds)
    (70/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.117918471 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.128421724 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124962332 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104761858 seconds)
    (74/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.105013519 seconds)
    (75/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.136213934 seconds)
    (76/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.086714283 seconds)
    (77/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.111725482 seconds)
    (78/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.167236052 seconds)
    (79/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.19467423 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.101859998 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.147222815 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.109407681 seconds)
    (83/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079091971 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.154613833 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108833398 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10903951 seconds)
    (87/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.081916673 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.125936107 seconds)
    (89/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.102663302 seconds)
    (90/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080706142 seconds)
    (91/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081252342 seconds)
    (92/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.167621993 seconds)
    (93/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079944942 seconds)
    (94/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.208347906 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.125095509 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111751234 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.112636274 seconds)
    (98/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.223005477 seconds)
    (99/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.081527909 seconds)
    (100/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082047081 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.12824469 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128975645 seconds)
    (103/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079358109 seconds)
    (104/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105384604 seconds)
    (105/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.108926152 seconds)
    (106/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105225884 seconds)
    (107/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.13596202 seconds)
    (108/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.160138239 seconds)
    (109/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.104867911 seconds)
    (110/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085976743 seconds)
    (111/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.157675489 seconds)
    (112/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083083315 seconds)
    (113/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.086868145 seconds)
    (114/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.079908568 seconds)
    (115/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111263241 seconds)
    (116/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.104843797 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111358117 seconds)
    (118/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078828525 seconds)
    (119/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110089096 seconds)
    (120/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.109258434 seconds)
    (121/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.081929522 seconds)
    (122/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081739869 seconds)
    (123/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.086533214 seconds)
    (124/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.143112958 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.127613654 seconds)
    (126/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112397449 seconds)
    (127/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.114921715 seconds)
    (128/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.107494802 seconds)
    (129/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.084529478 seconds)
    (130/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125776275 seconds)
    (131/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125544411 seconds)
    (132/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.109869617 seconds)
    (133/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112000624 seconds)
    (134/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.136842109 seconds)
    (135/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085575378 seconds)
    (136/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.134905292 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.106371394 seconds)
    (138/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.084258482 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.135861619 seconds)
    (140/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.087450571 seconds)
    (141/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.102752966 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.103690393 seconds)
    (143/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.109846998 seconds)
    (144/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.133768556 seconds)
    (145/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079229541 seconds)
    (146/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.203475421 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.106364113 seconds)
    (148/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078875492 seconds)
    (149/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.104293922 seconds)
    (150/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.110507662 seconds)
    (151/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.137414261 seconds)
    (152/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.080379198 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.103357368 seconds)
    (154/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.11013673 seconds)
    (155/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.10375042 seconds)
    (156/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080977334 seconds)
    (157/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.086286149 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.125365914 seconds)
    (159/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.083106991 seconds)
    (160/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.080229805 seconds)
    (161/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081054217 seconds)
    (162/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.136816576 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.129702761 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.107036607 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112260596 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.149766587 seconds)
    (167/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115149567 seconds)
    (168/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111893061 seconds)
    (169/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.166132487 seconds)
    (170/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119489914 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.086536429 seconds)
    (172/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.087513629 seconds)
    (173/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.1098284 seconds)
    (174/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.07992306 seconds)
    (175/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.105628626 seconds)
    (176/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.085281819 seconds)
    (177/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.138611264 seconds)
    (178/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087812658 seconds)
    (179/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.082946267 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.126005363 seconds)
    (181/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.130481718 seconds)
    (182/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.080393915 seconds)
    (183/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.087178043 seconds)
    (184/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080893383 seconds)
    (185/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.0841721 seconds)
    (186/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.105999098 seconds)
    (187/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.082923743 seconds)
    (188/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.083172567 seconds)
    (189/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114089604 seconds)
    (190/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.102959293 seconds)
    (191/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.08074636 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.106218148 seconds)
  done (took 27.429152808 seconds)
done (took 28.367465279 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.22790617 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129928853 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.11361324 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112596163 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.233100224 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121090057 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.154160714 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114911937 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122408153 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.136962045 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104289829 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125603833 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136919941 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206489871 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.140328691 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106133733 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.10378152 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.149056877 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129050778 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129545491 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.234485323 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10490648 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.147150131 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105023992 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235643609 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10732677 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112942615 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.139245097 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12702999 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112844864 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.138337656 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.106584902 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128815318 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.153279373 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105650005 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113337557 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126992043 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087027562 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114059738 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113895374 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.149937355 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115341561 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113697542 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.129524948 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114767855 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113421838 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128468644 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117792878 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102720188 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.138486219 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107563646 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129406701 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.13574953 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.103929051 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102347612 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.12924967 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.123670041 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103856204 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.15030459 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10558702 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105118185 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12718979 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.116068553 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104204756 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11292486 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.127679879 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115263348 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115863718 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.135974123 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107108521 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104333761 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.136518149 seconds)
done (took 10.211082175 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109611109 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.149779708 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.235568596 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.237844507 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132199813 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.1454479 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118919887 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127909831 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.142466584 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123432974 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142066243 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160636814 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.241653655 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.120571762 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.145167985 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.11826269 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117402441 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.138265504 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.214236411 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.154480649 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.129712708 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120366798 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157449055 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122627497 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108725692 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.166006779 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112998636 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.140079447 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.108895386 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.118266104 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.15249106 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108605657 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110837118 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.150855475 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.126692104 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11810484 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.14470617 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117944163 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108976074 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.133529492 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.117160424 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.126223469 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.132385012 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.121714112 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.140040492 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123991025 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115583069 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121222991 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.133751715 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116440667 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109324415 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158457068 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.121471127 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.147152437 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.121688616 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121569527 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.146173032 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.122866007 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11244365 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.14470401 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110143101 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.109176333 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.133153719 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.131402758 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112039941 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.144781242 seconds)
  done (took 9.897218661 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126345191 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139424634 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143470873 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.120866037 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113639722 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12656547 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.103377002 seconds)
  done (took 1.856835007 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104618091 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.243707746 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.219836886 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.244655764 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.241478334 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.256206535 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127634087 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104632918 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.165279476 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.116280982 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247072744 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.274584525 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114687788 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.145048534 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.222753815 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.129442131 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.223928316 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.130547376 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120021902 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.248005409 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122729326 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.162163505 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117959571 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.105890512 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.239245167 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105134832 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.293691373 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.149790635 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114468685 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119179413 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145822619 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.185199995 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.24323392 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118523988 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.140709333 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.24372223 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.217546449 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.145487037 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.258408334 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.109920507 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.241961283 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.118063246 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120118245 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.146569779 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119962761 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.233498777 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.124249596 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119582041 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.144783871 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.225932065 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.142018578 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.245314078 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.117268253 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119205623 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.142702185 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121963059 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126525556 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.146616674 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.227473389 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.148461882 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.245061678 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.222540983 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.245739354 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.247669302 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129084453 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.247155325 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.232441555 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118610253 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11411014 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.147410618 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.247476347 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.119722785 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116868632 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.238862165 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123794375 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.252137338 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.251373952 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116643259 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.144215543 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.109003225 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118127564 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.131823005 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.213404575 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.14536703 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118381486 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123776077 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14519569 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120345579 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110012771 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.154819439 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118691855 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.141472797 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.126468781 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.120569551 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147299623 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.228128616 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.144328517 seconds)
  done (took 17.220489401 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107561477 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.107162846 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.112142062 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.133115329 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107506449 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.108240473 seconds)
  done (took 1.690119068 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144301585 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121277765 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152645499 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122817939 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.193040148 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.227156173 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.259742166 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114350388 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.168055025 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131878949 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.255062703 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.255951618 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.255370259 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124557176 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.260584887 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123827082 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.263009023 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118908492 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.156660745 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117499385 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.11942914 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.150118655 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117724554 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.247928605 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121816083 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122691727 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.142360359 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12874661 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.152472761 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114903326 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124172444 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146347983 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.113317772 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.132042795 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.258934717 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.139679725 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117438083 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122943604 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.14799218 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121379871 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.259666537 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118184556 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127663435 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.149762536 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11609377 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.112070351 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.151150786 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11415457 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.261060852 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123337622 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.150252801 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122487054 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120365374 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.151147735 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113455054 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114355941 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.150135284 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.263135347 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124288313 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113073753 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.14712904 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121003723 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114260035 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.151883789 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121358258 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122871505 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.138706383 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122224553 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117997579 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.146575311 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123584464 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121363255 seconds)
  done (took 11.92962801 seconds)
done (took 43.568339028 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.641728348 seconds)
  done (took 2.651843394 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.949793088 seconds)
  done (took 1.955822379 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.32574598 seconds)
  done (took 18.369157712 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.43763114 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.464181281 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.147500547 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149951722 seconds)
  done (took 3.206772832 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.825621151 seconds)
  done (took 1.859035063 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.325735594 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.245924892 seconds)
  done (took 1.585493083 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.711973729 seconds)
  done (took 1.745129466 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.533726509 seconds)
  done (took 2.547073811 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.289893543 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.243883584 seconds)
  done (took 1.563473173 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.64595418 seconds)
  done (took 1.672944865 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.962151474 seconds)
  done (took 20.995535326 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.262801988 seconds)
  done (took 1.297927313 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.285299603 seconds)
  done (took 1.318708482 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.457041824 seconds)
  done (took 4.489522454 seconds)
done (took 66.280611482 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.116450944 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.119014835 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118429667 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.143231909 seconds)
  done (took 1.517357508 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125715686 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119465056 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.148276961 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121045598 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126793178 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.143771302 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12058308 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.123578203 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119386911 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147868127 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120660217 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119023229 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147265412 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119213736 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117383868 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147962234 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124637509 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120139305 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145865239 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122372968 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120487619 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147470309 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125175634 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122636451 seconds)
  done (took 4.133275798 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.118406852 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.111730213 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111456408 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135029959 seconds)
  done (took 1.511611115 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128531508 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131624382 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155609022 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128983437 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132452009 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155050465 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120421263 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11599143 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143800965 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129177063 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135491002 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158223861 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131676824 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.146577519 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.131908925 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114965332 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119847602 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156905074 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12741664 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.153815752 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121233818 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126428045 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.150284075 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129883964 seconds)
  done (took 4.275077164 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194794718 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.132344845 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.176481338 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165382525 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.178679095 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118354519 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148522957 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150064007 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.127971709 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.147253089 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.123254321 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166271885 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151280892 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.12271344 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.12067783 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150831121 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132347916 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.149757676 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.167426508 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125220059 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.151385639 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.13095463 seconds)
  done (took 4.269429862 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.124295208 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111858657 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.131503071 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.113009984 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123875335 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.138072135 seconds)
  done (took 1.783486882 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110644538 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105507644 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.105865294 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129587273 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109390786 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10467604 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.127711591 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.106874285 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105126759 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.105335592 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129682931 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105739007 seconds)
  done (took 2.376879138 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.330579627 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.110501238 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134714314 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112753301 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.115330909 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.10798453 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.150774449 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.109730125 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.26493737 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.105039964 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.134488868 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19410238 seconds)
  done (took 2.908518901 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209296364 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148085317 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259352892 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.676112855 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165565852 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18907505 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283139954 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189785812 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208538843 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139413247 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216959628 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1628164 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185496278 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189461858 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167008409 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.160209851 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194029367 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237604865 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144047087 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240913826 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158395083 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202972875 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218709119 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15100663 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166667846 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163446114 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120120322 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155630925 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169473772 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194339446 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204920127 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152064496 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168886516 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195786846 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261262086 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207984364 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270499642 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134603965 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.197584611 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.219050787 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26108427 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143182871 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221288288 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154282939 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157727849 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190257314 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182912375 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185312767 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.161866175 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14601929 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215133 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208121558 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173941094 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164364109 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320490785 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137271037 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144381824 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252980211 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216668183 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230798703 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182570067 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.150030545 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177002014 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218801911 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241910954 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144048079 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193872587 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126856685 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194392426 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.234124414 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184226236 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189360207 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.23987308 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132586544 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199456074 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173043674 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185839281 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23549772 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173485386 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120322528 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180692266 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135348353 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153501171 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191048363 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149039444 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219778359 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16014095 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.340698097 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180087161 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185211419 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16367305 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18943059 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164155072 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178359294 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10210473 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170853206 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.1629532 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187940095 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130580665 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183962585 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142512197 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126475107 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18143544 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124239125 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198372825 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135087507 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19524403 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172653165 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159390392 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180575124 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177998693 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163575071 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19889945 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221446114 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131780911 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133926757 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248657167 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197767587 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137806945 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203069614 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198582671 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178337755 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136654607 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195285357 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221276574 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147108305 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2287169 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140708129 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162594319 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.141486694 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201207255 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162686964 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.189323608 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129379128 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.19369832 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195698803 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.154460036 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141491021 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212727679 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134791099 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152244973 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140015744 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136967732 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.171557877 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.151107007 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.167910395 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156563269 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19609631 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167849507 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186942559 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136504821 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204115659 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133263549 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.197804263 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150713127 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.146308272 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.177232461 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22567844 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129841438 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21171593 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163727719 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211177474 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201417093 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131485625 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213416206 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129004681 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122143524 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191027639 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198605518 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165724963 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.217927067 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205568851 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.168111911 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.191875652 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153113309 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199123325 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.215574555 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159020933 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.171188301 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172549915 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200078107 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12210529 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124191519 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.156016574 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139164098 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15926759 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139097709 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212091208 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167760991 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206099127 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19593232 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139716714 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220576525 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126374114 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19088456 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177455696 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168536025 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.191305957 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221134022 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206222964 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142743939 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193714882 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123215622 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127769915 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.163477629 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164379416 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165346428 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137813486 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170227663 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194593076 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203754089 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150165732 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219971141 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1957135 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202398112 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.150744389 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.162956075 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200582709 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16979144 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.21219189 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135406133 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.191507987 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194571683 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171189646 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19473973 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197910445 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207835947 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198309284 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.194626148 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132612695 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177061398 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164328975 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167763591 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164706352 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174411646 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132332566 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154885536 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.16849447 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142597741 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21881493 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172844264 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181859904 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.188060616 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175193084 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154375329 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143689555 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203473981 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14762344 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.131897533 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173245328 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225591042 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151307625 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185422911 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200286403 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132287858 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.31451789 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216358509 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210080406 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137606037 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165043564 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174531661 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189279924 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164655255 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215302565 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143250655 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237855463 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20105142 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.145048272 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13236144 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177394106 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153499374 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168994809 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.154145206 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.192222345 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14696161 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220018942 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138335301 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200489385 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205423416 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148405586 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.151093088 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167171988 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258002724 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170098265 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203117225 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166877505 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.194855198 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212071783 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124991368 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12725551 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.160962594 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186973661 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157049361 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178509271 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194399899 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209855192 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177060922 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191027629 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142404514 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.155627415 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168682095 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176569655 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185034582 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163056624 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138832217 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220803311 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129402519 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160401281 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161136053 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315308782 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149291685 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202861476 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106469362 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.311413469 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130836221 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161533682 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164270872 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200611716 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133631821 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.210438969 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176702299 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141379191 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191815065 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136224733 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207961584 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212683478 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169085417 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206035137 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.176366735 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164309136 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192515991 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178339988 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175582996 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.148601168 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188321445 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198670905 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206552032 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.134137591 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199955185 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17081141 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201145209 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2059674 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141319035 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211725952 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132938539 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167093381 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169652 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127006793 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192828079 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192781092 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132991621 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206437137 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173706959 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159490818 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130646341 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149770615 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196029565 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14301514 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.158822415 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191588797 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.159013751 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185125188 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242802713 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130896824 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197719133 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148699959 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159373047 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140897753 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174770315 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133676048 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.17616654 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210662781 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.132739884 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210130914 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195632909 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168716625 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188677702 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146054283 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.293282026 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130716272 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220019551 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152594466 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227724243 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152036858 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205645617 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170291062 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181749283 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166507932 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17911805 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.223037714 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195243574 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.193086043 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133697082 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145725742 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168354356 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.136636991 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181488717 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170659599 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171810283 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.139832063 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.168322923 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175186245 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.150760063 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170786855 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204216333 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180881218 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219575653 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188767615 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167438297 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176680922 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207681825 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129786167 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.196142794 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202324569 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147113956 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154136951 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.164735479 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139462589 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246983194 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127035228 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191594953 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177292384 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198593887 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175364867 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.164971702 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180207002 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171465593 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177372518 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157362647 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.153966526 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199477406 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134970927 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129090564 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201172955 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19196302 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.167417249 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171331784 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.175396235 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224179153 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.126511077 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13761493 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31486387 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164136869 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223740155 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.163231256 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138282668 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147351001 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18947742 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.166166831 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201224577 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.131502778 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159689535 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.147906082 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.182095854 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.14336749 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197754635 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184042959 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192101814 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188090265 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.164848495 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255744321 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172328839 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174617634 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117870885 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.635234618 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142289001 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164114264 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144959358 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20849672 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245566474 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.16566506 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.176669882 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138177592 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127495139 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158961688 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167778587 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18100014 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171367152 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176792729 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104761423 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142146439 seconds)
  done (took 87.195008611 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164832708 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152827754 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168083231 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223086854 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195971662 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292727909 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229582925 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247617462 seconds)
  done (took 2.806015409 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.123210341 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159556299 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144794914 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143878338 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.112347641 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.484561895 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160199021 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.123262333 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.163376726 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152779036 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136954215 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.574896849 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118425079 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147401247 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123346601 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.135745001 seconds)
  done (took 4.122484624 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.625265789 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.524534017 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.817005476 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.277627177 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.262374918 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.207041616 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.745661283 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.204978803 seconds)
  done (took 11.786239348 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.171474632 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.160771857 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.450946014 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.308740728 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.18485076 seconds)
  done (took 2.413844401 seconds)
done (took 132.123932606 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.129627367 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125859871 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123902666 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153702628 seconds)
  done (took 1.655534946 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.199784248 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092551439 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094805987 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.119501458 seconds)
  done (took 1.640005486 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.4697824 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092367152 seconds)
  done (took 1.724112469 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.159442416 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139248121 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166970767 seconds)
  done (took 1.614609323 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.141305077 seconds)
  done (took 1.277415376 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.13495599 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125910413 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.273550551 seconds)
  done (took 1.677414145 seconds)
done (took 10.731910843 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125590378 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.923923135 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433619936 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135453849 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712653949 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.42797072 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.389975311 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178118016 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176257151 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139364435 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134622728 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690869995 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.40762443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.872599249 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.371328947 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.901136383 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.71438052 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113550768 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147827707 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113991469 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.378351859 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138448639 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114744547 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113145252 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.727014353 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422584181 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11141901 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.914380555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112554012 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11608064 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428780112 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112891323 seconds)
  done (took 20.927261568 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116827971 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171909453 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147421088 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115428489 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116506159 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142646159 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125591588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125158221 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20523596 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112796445 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162373298 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113390909 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119489156 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140692421 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138764387 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111926625 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.143582956 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115748643 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120818553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.144059696 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134767347 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111306547 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141183753 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115618051 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112681292 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160790683 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113970775 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125920305 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139993026 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118280803 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117654938 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142944479 seconds)
  done (took 5.367831597 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.164022587 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179760355 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150076333 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152038147 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.189517767 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115755958 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.226892514 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.15270189 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205818286 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113904135 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134946833 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.141381135 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154792 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.114357435 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166633322 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113991228 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115160226 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14279134 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121634543 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114951939 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161743729 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113662616 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114439344 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144936399 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113133373 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160677968 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114929697 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126914267 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139231568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117389815 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118340444 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139774569 seconds)
  done (took 5.669414629 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129938358 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128421303 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134332823 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162977839 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.12301752 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126159487 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.1539953 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123329468 seconds)
  done (took 2.220983568 seconds)
done (took 35.327430259 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.143982324 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132656723 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133209892 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155964533 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.256679029 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120232759 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130234917 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.120911282 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.158105415 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134058583 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112389215 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.149392976 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134903281 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12490864 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.259033647 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.128517342 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.265370905 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.259755875 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.120886586 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12699213 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.152433681 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.235243019 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.155379168 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121669224 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.250970864 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116190895 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.25113433 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123967739 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123373578 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.144484769 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.232597488 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.156562768 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121428026 seconds)
  done (took 6.485223086 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.247326347 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.153157287 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122796338 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121123634 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.123059682 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.150335051 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.248632151 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.152028979 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121376987 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.121222865 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.151119602 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229419094 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.157633039 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.118823314 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123047887 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111018112 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.280326652 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.153964701 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.114524417 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095643507 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116923428 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.15084805 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.261092563 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.147668308 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.122639689 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121399704 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.152237862 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.126862149 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124763519 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122408174 seconds)
  done (took 5.702733621 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131457886 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13638909 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.166607581 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.190968842 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150978842 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.163340966 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142363001 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134686892 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172886212 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11633648 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129902442 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180089167 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131200801 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126233732 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143841769 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134143668 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137737025 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144983208 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125988176 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133588161 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165414689 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133390654 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13828591 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152029165 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114919953 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122758617 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.154872763 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126711441 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122592777 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.159266221 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.118023494 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118922671 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.145211108 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.151932643 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.1171054 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.158339776 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141471527 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127801432 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157474746 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.149606804 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118694486 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.146098148 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.142810244 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170214965 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.148367699 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129284322 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127072558 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.159164257 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.115086073 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134349276 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.18715233 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.116196589 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.163384502 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.115931807 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.114763303 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124286811 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.145407919 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120485029 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130028355 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.146928392 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.141825693 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122600592 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.156870921 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119313283 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127024947 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.142240441 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.116651356 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120609065 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.170654754 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124442105 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.153397935 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114969715 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.157957476 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.129435067 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125518004 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.157345856 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.11574319 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127378633 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.155893347 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.121976371 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128097671 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147579905 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119390536 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.132909216 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.165235093 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.130142454 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127057374 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.1577589 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120187292 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.11863038 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.162398296 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118230411 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12148261 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.15712539 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117277044 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119378635 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.156383799 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127898427 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.114754379 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142712477 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.148455541 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.115786051 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.142641927 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148033607 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121048757 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.125498732 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.18611512 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116853744 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127345073 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.158273905 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117480444 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123418209 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.147207606 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.116766995 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13323959 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.160678072 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.124147977 seconds)
  done (took 17.290770331 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.362868649 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.345421771 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191001883 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.432246541 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129690677 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.276563488 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.343831759 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.347499457 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.117656614 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180318831 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178080278 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.315277788 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147696191 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.146207085 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.350404856 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.404337162 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.178001223 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.153059059 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.182290192 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130488681 seconds)
  done (took 6.083457329 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.13911142 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152977732 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166695599 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14539933 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12730702 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161562481 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.117791343 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136913174 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156658759 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126974322 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118530899 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160243745 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130122469 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.133680435 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.161462974 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150237504 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124145402 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150129967 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.140386603 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120935189 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133047796 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141992082 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125764444 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.168490543 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.135380691 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126910369 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.14468946 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122880491 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122769731 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.154099018 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12207235 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134868508 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152222207 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108971989 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127987459 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.158920579 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.123601947 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118936516 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12138559 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.14858316 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132930712 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129250658 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.153313403 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101105114 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.136016178 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111333747 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.158937883 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129320331 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107563592 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.165787205 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129959081 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131288248 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.151979524 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.13953869 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122626998 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.160819245 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128745548 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.130646963 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.149311176 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115339114 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114380028 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119374872 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.153216957 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.13077672 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127666291 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.164990927 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.132981205 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116021223 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.150952266 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120591794 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.12035438 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.158790289 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13793572 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125015161 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.153021399 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.128646999 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124493971 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.12290932 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129960375 seconds)
  done (took 11.921277458 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.147563403 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12789696 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.161993016 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.153356417 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131688335 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.149817694 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128273058 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.137037082 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130891046 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.166125574 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132298917 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12983131 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168149075 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127795062 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126361931 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161537103 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130960111 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.185231101 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.135995035 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143924396 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.161372273 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122062923 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129124651 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.156796336 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14612039 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128109104 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.1731824 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.131300975 seconds)
  done (took 5.213907015 seconds)
done (took 53.844508189 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.311806061 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.499329224 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.281977722 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.279002284 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.292633922 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.295318748 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.298072767 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.284625094 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.665698359 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.254025997 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.278696565 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.282171995 seconds)
done (took 29.197198981 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.352057883 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.787344197 seconds)
    (2/2) benchmarking "String"...
    done (took 1.560801894 seconds)
  done (took 4.517770031 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.27671939 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.272088832 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.519727243 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.274980636 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.284578832 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.271942775 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.275368378 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.277544507 seconds)
  done (took 16.3422911 seconds)
done (took 26.657775416 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.301434458 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.450242241 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.509383059 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.251604567 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.27714254 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.271644794 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.278521509 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.29169888 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.279057622 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.253581572 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.65758003 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.532501524 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.276208203 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.642929978 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.250562797 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.301359752 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.272554844 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.522736742 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.278254191 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.29986152 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.250223024 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.254937802 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.308960151 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.268521838 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.274779478 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.278467035 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.259150389 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.276248045 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.456828874 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.287714843 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.299857503 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.272791241 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.261559185 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.278093623 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.2730436 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.288010587 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.454488621 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.279085616 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.251711043 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.280676149 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.459070544 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.292901273 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.278117363 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.278332754 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.257318358 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.288009074 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.250294107 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.396772042 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.291841953 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.287260998 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.341406736 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.645184177 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.285650925 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.2759825 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.277796312 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.483228584 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.279732118 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.324930671 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.297056624 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.275162067 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.286155101 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.271810166 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.277939308 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.290025593 seconds)
  done (took 147.914867737 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.274412764 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.278317107 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.273119323 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.336808024 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.27642827 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.276048372 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.27553035 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.275642673 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.277971553 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.305229989 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.276336963 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.27875433 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.277077731 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.213798954 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.286379491 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.289064198 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.276351792 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.273496039 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.288564532 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.276261043 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.276125038 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.278787585 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.285929317 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.274091451 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.312248755 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.343450649 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.291900367 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.289759635 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.287646473 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.277876066 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.302487947 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.319551038 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.839273266 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.124565255 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.277751009 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.279221122 seconds)
  done (took 82.820018355 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.27447004 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.270499488 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.270505121 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.273343868 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.273842407 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.29839137 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.271944652 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.790922192 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.796804897 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.233671626 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.853327088 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.442822563 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.439527113 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.275032048 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.361399641 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.285413912 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.274043867 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.291305004 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.297603872 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.276637058 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.272147303 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785410428 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.286960832 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.293595224 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.438065187 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.278967103 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303388877 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.658157959 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.272066441 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301285081 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.592771104 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.311678586 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.272663877 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.532687305 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.437852643 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.377347931 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.272391601 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302867608 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.274043145 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.269154846 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.547331153 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.274643598 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.274439265 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.277872126 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.840424801 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.274676727 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.779740912 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.274814812 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.154108397 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.26823142 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.271985199 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.294582496 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.797148198 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.273922896 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.268108513 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.269581578 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.266429566 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.269199179 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.298913287 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.287070164 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.359907731 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.268435343 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.272588577 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302138626 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.270706072 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.381881893 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.272124958 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.901669584 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.326947195 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.485762151 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.76638115 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.272178668 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.364253001 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.384571968 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.270932021 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.270754761 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.269349565 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.26885807 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.378627816 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.270504154 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.89473129 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.266945589 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.434663096 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.282140173 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.384550169 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.365129768 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.271864757 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.534966778 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.272432159 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.268666335 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.889241211 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.358112014 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.268157022 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.271647036 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.269568133 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.896876867 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.768796748 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.420483894 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.272811908 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.862356597 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.273513984 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.074362569 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.76137695 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.835214917 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.27099931 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.376914014 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.434111225 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.280578863 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.272069885 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.387112157 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.275934977 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.329604644 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.275594133 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.67235442 seconds)
  done (took 379.653312962 seconds)
done (took 611.554624561 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.11837607 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.076627034 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.212394718 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.080646437 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.066343517 seconds)
  done (took 11.717854328 seconds)
done (took 12.884785715 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.446000614 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.447713989 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.329836332 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.452735336 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.302870731 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.461562643 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.426489835 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.288896647 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.377797666 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.345105639 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.373473107 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.315573018 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.308109575 seconds)
  done (took 19.039771452 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.559811777 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.283731382 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.339001409 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.522038041 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.3170742 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.546786865 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.581449506 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.283133443 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.443316227 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.301264567 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.295523402 seconds)
  done (took 18.640242437 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.557655018 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.28505442 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.341757521 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.529616097 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.320229545 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.54600304 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.601964401 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.283791385 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.471588351 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.300949812 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.29452842 seconds)
  done (took 18.697216504 seconds)
done (took 57.542742613 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.309718575 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.367201845 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.308819383 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.294346546 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.295464248 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.290720778 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.298139027 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.289016136 seconds)
  done (took 11.618518939 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.290525505 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.295506717 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.291376879 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.292059091 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.290770665 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.293367056 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.294620504 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.292195997 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.292590809 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.288871849 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.289662713 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.293164628 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.290953354 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.290026044 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.289288339 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.288697313 seconds)
  done (took 21.829313632 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.294957383 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.287884685 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.291457002 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.288614276 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.289678896 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.292775513 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.290891891 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.291114091 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.295320194 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.289430589 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.292993669 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.288670675 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.291308396 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.291812002 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.29246845 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.296135024 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.291097844 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.290480178 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.294320286 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.291871135 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.29221101 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.288837994 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.293132312 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.293243537 seconds)
  done (took 32.167747494 seconds)
done (took 66.780188265 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.275813151 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.284126255 seconds)
  done (took 5.730016344 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.350186221 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.351442256 seconds)
  done (took 3.872924165 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.291477082 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.292737855 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.289912839 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.291313002 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.290882254 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.291465275 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.290053411 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.293985371 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.29259461 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.294169615 seconds)
  done (took 14.089790211 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.290037364 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.292789373 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.292406074 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.294052129 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.29281921 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.296825894 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.293847254 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.29608362 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.293055673 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.295415501 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.293238206 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.293471848 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.297470139 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.294773607 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.299852589 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.295450243 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.295846797 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.294930044 seconds)
  done (took 24.47562831 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.309888254 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.31398376 seconds)
  done (took 3.79495951 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.418766777 seconds)
    (2/7) benchmarking "second"...
    done (took 1.339244513 seconds)
    (3/7) benchmarking "month"...
    done (took 1.398088749 seconds)
    (4/7) benchmarking "year"...
    done (took 1.39013657 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.336744008 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.312981716 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.338834124 seconds)
  done (took 10.704307191 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.278710945 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.570133582 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.745151417 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.43233858 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.275223809 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.29212438 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.262931437 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.291782134 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.298337861 seconds)
  done (took 14.617683324 seconds)
done (took 78.453621129 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.282166978 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.289880437 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.299471501 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.299446339 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.638521603 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.321158123 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.289436816 seconds)
done (took 16.597709737 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.266301164 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.269920854 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.265836179 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.277658455 seconds)
  done (took 10.248686831 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.269230277 seconds)
    (2/2) benchmarking "read"...
    done (took 1.610094271 seconds)
  done (took 5.054821777 seconds)
done (took 16.474479324 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298302869 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.296105206 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.297820928 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.300365345 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.288046743 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.289044022 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.288473244 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.288492845 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 1.287974117 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.289176157 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.288629226 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.289125745 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.281746075 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.280693793 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281130544 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278870659 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279478279 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280979975 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.27974605 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279302409 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276958705 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278055013 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.277348427 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.277716213 seconds)
  done (took 32.032456327 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.276262905 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.277703344 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.278740449 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.275691356 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.276120514 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.276300748 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.277574125 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.276518356 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.276117615 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.276552028 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274587584 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.272752668 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.27204068 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.272801632 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273239173 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.27432846 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.273582252 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272404234 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273008021 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.271936851 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.270442714 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270768731 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.271630211 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271659488 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.271118454 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271416583 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.270039096 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.268362392 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271364323 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.269709633 seconds)
  done (took 39.367148668 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.272543594 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.273603653 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.271766369 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.269243534 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.26809571 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.267879426 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.267623518 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.267313179 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.267418176 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.267349195 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.268079426 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.266141229 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.265010583 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.266554793 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.265932437 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.266856921 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.265317099 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.266365471 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.266142539 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.263468468 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.263808594 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.263244392 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.264031059 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.263301712 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.263238422 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.264038896 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.263748246 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.260880666 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.261948459 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.260310257 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.261173584 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.261253632 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.260157118 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.261486581 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.260824696 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.259026189 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.263231094 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.265321247 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.260273017 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.259940846 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.259336459 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.260867225 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.259851111 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.260074971 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.258950964 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.260850844 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.261613175 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.260796353 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.260437502 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.260918039 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.259960474 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.26022101 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.260003859 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.260289011 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.26163616 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.261306101 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.260731224 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.261632688 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.261763953 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.261592414 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.260821552 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.260226479 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.260740454 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.261865704 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.262015191 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.261381272 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.262029998 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.261791483 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.261162197 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.262868722 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.261925744 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.261791455 seconds)
  done (took 92.101757699 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.263382285 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.263390415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.261554475 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.262869607 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262775347 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.262980151 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.263304716 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263607713 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261385941 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.263730535 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26233806 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.261608755 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261447334 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.262640098 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262537806 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.262709136 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.26331782 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261919499 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.261929571 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.264993652 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263316324 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.262663204 seconds)
  done (took 28.929283548 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263315035 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.263853795 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.263407351 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.265532013 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.266088526 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.265059561 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.263511415 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.26459744 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264210522 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264597203 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262467383 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264282882 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.267331456 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263391009 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.263583719 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.267461252 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264715186 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.267076915 seconds)
  done (took 23.914070824 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.26531522 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.264978184 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.263946828 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.265346502 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.264942459 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.266162281 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265711038 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.265213856 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.264993907 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.265687182 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.267418766 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26397912 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.265671609 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26469167 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266856714 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.264505817 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.2641146 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265868036 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266035943 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266539737 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.265534159 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266604431 seconds)
  done (took 28.991453262 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.26711104 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.265755495 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.266280334 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.264133181 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.265284528 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.265496639 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.267502485 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.267115359 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.267637962 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.267241745 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266011771 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.265770486 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.26794065 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266288694 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.267284154 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266156521 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.267562132 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266056829 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2661552 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.26582599 seconds)
  done (took 26.480437149 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.267488542 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266915632 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266622708 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267357216 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267603263 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.269353426 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269684155 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.269959689 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266185927 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269481739 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26880215 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.268242401 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267453928 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269000747 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.268577587 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26793963 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267746567 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267372001 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.268308123 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268508053 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268418259 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268355928 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267428372 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269331614 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269030956 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268397818 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268727395 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.268989665 seconds)
  done (took 36.664760036 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270584603 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.26824323 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.268609916 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.267401202 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.269151301 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.270980555 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.269939882 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.269785291 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.268574199 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.268887094 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.271084111 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.269597498 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.27055939 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.269104518 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.26864661 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.269788045 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268435704 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.269166279 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270879251 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271805331 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.269985745 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271705918 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.27053688 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.269996238 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270334983 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.272174474 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268954241 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.269590573 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271617569 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.264598182 seconds)
  done (took 39.246538671 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.283750396 seconds)
    (2/2) benchmarking "in"...
    done (took 1.281061707 seconds)
  done (took 3.71660483 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.263873255 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265365316 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.268681316 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.258132842 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.258877796 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.259621712 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.259159388 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259738267 seconds)
  done (took 11.24536223 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.25194161 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.262924449 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.255589618 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.255166414 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.25545974 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.245924937 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253278896 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.259210241 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.248296324 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.250013208 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.248969399 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.249259856 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.248534534 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247801518 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.246743266 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250376759 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.257190484 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.254233734 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.25432387 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.253905799 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255183292 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248018554 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250929376 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.256447416 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.246505172 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255290564 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.254587081 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.258105113 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248293839 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.252708883 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.249478475 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.257028152 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.255156056 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.254598567 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.254770177 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.25516313 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256008431 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254014796 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.25611248 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259649767 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254371466 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.25481171 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.248524102 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.251613016 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252645809 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.260144887 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.254912209 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.255721469 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.247659653 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.250732238 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.259598484 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246912511 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.257495672 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252546353 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.254003713 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258096754 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.262033329 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.25028388 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.252667535 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.258312512 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.264806071 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.261141674 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255337419 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.261483686 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256050359 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.263447 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26087765 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.262242736 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.256322753 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.256010743 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.256953324 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265824314 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.264797708 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.261854416 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258459014 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.255504043 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251210433 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259604315 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258657322 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.261510058 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.263750614 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258268673 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257011155 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261516839 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.25220522 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.260870303 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.258905973 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.257916616 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.251047762 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261727272 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.264866271 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.258170097 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.248819624 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.253994937 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.254443202 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.259207785 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.249708407 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253729321 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.2617238 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.256350209 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257922947 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252175746 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.258394135 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263883553 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260162328 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.260212256 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.265119802 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25285674 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.262802586 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.266288194 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258343781 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.251915929 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.257661205 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.263454036 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25312469 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.258540687 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.2648574 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.256403265 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.264472839 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.259700924 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25983296 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.268745451 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.264613299 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.258940271 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.254737363 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.267205748 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261221904 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.258075116 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.265015186 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.259830092 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.260243458 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.25743252 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.266678768 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.255257477 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265295053 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253818008 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.263137884 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.259883992 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.26052569 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.255719615 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.260558544 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.258513725 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.260764991 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.264712763 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.267002762 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.258117075 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.267631063 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.261868804 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.261073675 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.262015815 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.267317977 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262673267 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.254845573 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.265342824 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.255088649 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263986474 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.25443253 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.265841327 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26148327 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.262439444 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262728571 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.251767588 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256883457 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.263448861 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.259417333 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.260030877 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.265653139 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.261025437 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.262505686 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.248608152 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.255299398 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.247828084 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.251979785 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.258422347 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.255232089 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.256068771 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.255512749 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258163115 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250488389 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251246724 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.245622998 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.250957397 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.255918219 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.253740757 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.261016099 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247995208 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.247915831 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.244002419 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.245237845 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250648957 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.243278108 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.253855522 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255362564 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258169707 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.244978473 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.251562714 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.240791426 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.25021228 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.247884296 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.256500828 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.249144289 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249509341 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242175503 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252375163 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.242036889 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.251613049 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.240871545 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.251290652 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.248871448 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.250404259 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249140001 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.242942128 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247213461 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.253207508 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24952084 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250605966 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.243832487 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.252848683 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.242176031 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.245518022 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.251768084 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.249732522 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.251570095 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.25600826 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247524758 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254789661 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.250513725 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.246190499 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.250802596 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248608552 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.250094017 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253825407 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.251873852 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.244574655 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254651351 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.251747107 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.24293797 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.249031638 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.257188551 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.249543386 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.242825493 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.253382418 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.250888229 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.251034972 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.250978586 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243522305 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253085502 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.253053987 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.257977366 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.2434779 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.255598266 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.245330173 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.253362817 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.246608631 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.251708508 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.250086746 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252816575 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258047204 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.252746657 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245414056 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.255296276 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.251513222 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.251899281 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245290901 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.256014746 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.252422696 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.251469065 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.250880669 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.248798887 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.252241968 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.246931768 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.253048292 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.24498268 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261634195 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.268602492 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254453089 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.255242081 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.254287372 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254260222 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.254943273 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.246546548 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248038088 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250126636 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.247389626 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.24646202 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.254833468 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246073248 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.255563492 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250979142 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.254584659 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.255452694 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.252542747 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.245584054 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.255605825 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.253649279 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.253097704 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.245020312 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.254337482 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.249182966 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254188298 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.25343785 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.248384818 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259981519 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257987841 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.251218888 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.250677984 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.248137725 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.246933609 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.249172195 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.258154262 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.247594102 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.258694959 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.250165323 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.252420534 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.248971274 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258819025 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.26342051 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.247953208 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.260562091 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.254017983 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.245613911 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.249125909 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.255262556 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258937801 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.267110317 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.247818281 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.256346385 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255294444 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.255623708 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.255791196 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.253908475 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255044817 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.255152254 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261033915 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.260399771 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.251700506 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256535443 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.265081352 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.25554324 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.25604984 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.247734604 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257620834 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.264161949 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.250554385 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.254975707 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.251595692 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.25843034 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.256858235 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.257391485 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.257284623 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.256785299 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261122302 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.261809959 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258068302 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.258176407 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.26125508 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268104868 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261919032 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.267861491 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.251180732 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.26124077 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.258434951 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.251486555 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.252800023 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.253906334 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.259595762 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.248659501 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.260652705 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.258288851 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.254318586 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.259064754 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.263436883 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.250706546 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258513291 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269276472 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.24988451 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260126836 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.257873222 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.249658779 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.260550622 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.257523045 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.249815151 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.252807305 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256108923 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263027182 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.252065147 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.261376362 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253434746 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262715753 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.259132086 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.25855173 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.25865878 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.25884007 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.252741271 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.261152801 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258822283 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.268355703 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.254296506 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25796016 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.254674559 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.265347189 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.270607613 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.254449286 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264149704 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.259898734 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.253053104 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.258271738 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.26518671 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253884108 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262718051 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.253322175 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25692613 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.257213502 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.261825978 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.26352513 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.263203092 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.25324978 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.255700628 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261667807 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.260683562 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260787664 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.257669842 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.265581483 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.254194964 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.254950102 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.262507409 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.255507375 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266259993 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254120632 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.257915953 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257909373 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.2632719 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.261476708 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260948891 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.252893607 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.257096949 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.267770043 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267480143 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.260526092 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.25753217 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.263527051 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.255335626 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259521831 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.260874922 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.257980125 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.257794223 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.26517124 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.256452221 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.257681257 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.256752273 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264526601 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.266853853 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.266098137 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.257149105 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270183539 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.27161545 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270478672 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.255880271 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.259110401 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.259722269 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.263770639 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.263838281 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.256622573 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270633314 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.269682843 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266488699 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262690538 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.264329872 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.256013274 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266042655 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263650648 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.258779644 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.269792765 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.260297541 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271377379 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264402513 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.262924762 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.256069759 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.258492554 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.259102826 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.260621481 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.265786588 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26403507 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.269123347 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.26359585 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268754833 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265729232 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.264833485 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.264343497 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.257714192 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266477746 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.258532151 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.266997264 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.26883474 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.259133219 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.267215084 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265703119 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259453606 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.263699514 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.271279019 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.265871724 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.259564782 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.263973326 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.270209324 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275793813 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.26606201 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261096306 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.264330138 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.270204793 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266116103 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.266936722 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.259436726 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27666362 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.280142001 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261483026 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.263155041 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270068392 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.275949324 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.267147475 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.26715708 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.262869564 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.265351019 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.270522583 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.266788661 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270232817 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273503265 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.264129355 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.269710718 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.26056151 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.264699277 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.268553418 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277411697 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.268189126 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.263319131 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.275245449 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27913865 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267157785 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284448732 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.275777251 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.268301113 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.272165396 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260453813 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.26948483 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.26449822 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.273559104 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.268077086 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26888468 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.268886463 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.260087365 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269525147 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.275401831 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.277336607 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.26816098 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.261306482 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.264851666 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.27211196 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.267796316 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.269805256 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.269408809 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.270305918 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.269734236 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.26327513 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279460444 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.284415112 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.273081447 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.270155143 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.270464029 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.270464034 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.273808829 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268366964 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.274519924 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.270608822 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.269446791 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.267993958 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278225623 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.27182572 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.265643491 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.266550575 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266776888 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273618832 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.278035316 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28973241 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.273916548 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.27615977 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27153735 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.270268492 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264714038 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274568352 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271173831 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.26632069 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.268646876 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273237365 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.272907858 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.270823968 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.265565058 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.275807757 seconds)
  done (took 751.285229652 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.270973768 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27081244 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271361171 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270760006 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273440444 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271996867 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272116631 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272003267 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.273007383 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.271854567 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.272091632 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272437343 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274083448 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275012161 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273045085 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.273413184 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273155556 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.272376665 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272467725 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272348531 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274125443 seconds)
  done (took 27.880072266 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.272422764 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.271444027 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274322087 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.273454305 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272241895 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.272761204 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.27360932 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273633198 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273655281 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273951259 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.27396186 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273344381 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.274629099 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.273429472 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274145273 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275032803 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.273633694 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273944018 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.274245782 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.274663231 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.27513555 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.27493854 seconds)
  done (took 29.182158632 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.275010441 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.274082978 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.267221338 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.278364733 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.273429092 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.274794332 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.274979796 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.274929463 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.274215081 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.268076723 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.270087081 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.269261077 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.270949752 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.278119791 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.271185829 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.279959951 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.275311082 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.276611724 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.274824131 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.276450131 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.280333495 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.288802641 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.27550747 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.267410467 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.278220169 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.277636767 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.275867472 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.276045935 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.269314641 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.277525123 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.276774502 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.270818566 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.278583447 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.279563336 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.27005191 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.279456919 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.277625623 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.277236487 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.279610497 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.276486057 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.288939254 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.277983046 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.280924048 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.289301072 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.277694263 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.271302969 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.281660727 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.277800842 seconds)
  done (took 62.41768486 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.27722417 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.277572328 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.278100248 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.277569928 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.277633445 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.278681861 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.278067718 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277872051 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.277447073 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.276863557 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.27803765 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.27933033 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.278072105 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.278939083 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.278624207 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.278581036 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.27856541 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279397959 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.277689663 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278386435 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.278035125 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.27871991 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.279415285 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.279566684 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.28022098 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279551834 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.278653479 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.279681062 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.279707874 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.279369045 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.280026756 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.279841485 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.279403645 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.279973164 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279665334 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.279863975 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.279251689 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.280209715 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.280727234 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.279377206 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.280407421 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.279474907 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.28011141 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.281139023 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280378946 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.280561332 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.279918805 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.280607488 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.280522002 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.281106056 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.280497534 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.281361934 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.28192393 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.282488374 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.280325125 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.281784297 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.281138254 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.281296134 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.28180166 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.28246866 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.280958163 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.280016318 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.281328524 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.281625388 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.281278154 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.281727768 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.281310894 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.282017275 seconds)
  done (took 88.188445758 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281827212 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.283000229 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283154411 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282741252 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282037868 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.281981678 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.282349263 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.284164038 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.283030211 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.282020891 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283499237 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.283150375 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.283803903 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282736098 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.282756512 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283281216 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284156374 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282297348 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284032914 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283656428 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.284007294 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284270015 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.284074174 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.282694488 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283624047 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.28394661 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28252291 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.283330081 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283847736 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.285006259 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.285087866 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.284039613 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.284038857 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.284666603 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.285070332 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.283729941 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.282879843 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283792355 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.28415389 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.285826671 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.284355421 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285948939 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284907853 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.285541305 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285077752 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.285185455 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.284949879 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.287046305 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286218561 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285494695 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.286299001 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286737437 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285516252 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286713179 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286048582 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.286273725 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286534258 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286182161 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285262617 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.286328721 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286680124 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.28558866 seconds)
  done (took 80.795352288 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28570642 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.285264307 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.28502051 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.285596482 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.286379644 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.286284688 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.285770105 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.286360137 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.286834692 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.285739844 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287882906 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287060213 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287752742 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286978849 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.286253253 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288182171 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28565078 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.286010578 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287337153 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.288223889 seconds)
  done (took 26.899835834 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.287031918 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288068407 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.287142338 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286735471 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.287174661 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.288438035 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.287165251 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287169611 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287173812 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287824619 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288989087 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.287699386 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287628528 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288013995 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289908088 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28815977 seconds)
  done (took 21.774198188 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.288832218 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.287631415 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.287631044 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.288873637 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.288656449 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.288182213 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.28772947 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.288765038 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.287872344 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.288029842 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.287993651 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.288853084 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.288272568 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.288208304 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.288893257 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.289598275 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.289644967 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.288817804 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.290488494 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.289338186 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.289770163 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.287961061 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.289118616 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.288831822 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.288841058 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.290719566 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.290472549 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.28903418 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.288940064 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.289499267 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.290947177 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.29099045 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.289749487 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.290423125 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.290905799 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.290219234 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.290674683 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.290907956 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.290848374 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.290906792 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.291966189 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.291233653 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.28995215 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.289841216 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.289906919 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.291836576 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.290005821 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.290526555 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.291552065 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.29148443 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.29112856 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.291165476 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.292009906 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.291464539 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.291768252 seconds)
  done (took 72.110340742 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290635756 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.291061686 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.290653284 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.291432022 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29114526 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.290953661 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.291180663 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293757411 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291618181 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.292885301 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291846828 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.293504673 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292050633 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293144055 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291933283 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292464457 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.292098315 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292198589 seconds)
  done (took 24.429145569 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.292348541 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292633093 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.293678838 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.293415427 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.292847867 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.293740301 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293041777 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.293545834 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29247037 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29353133 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292985371 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.293516266 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293660974 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.294364592 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.29404545 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293665518 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.294619804 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29468933 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.295198986 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29480262 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.293882825 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295034043 seconds)
  done (took 29.636800244 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.286933687 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.284669631 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.286560382 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.300453581 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.29826688 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.285346827 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.285746163 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.285755344 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.304711171 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.317486488 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.313778852 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.297791218 seconds)
  done (took 16.723202612 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295528946 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295941944 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294994718 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296461493 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296320015 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295621262 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295486145 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295860232 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295628714 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296777043 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295880062 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295387768 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296382054 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296477844 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296323274 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29593554 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296312554 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295931022 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29541703 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297246992 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29632173 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298359334 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296174523 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297206007 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297119679 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297749067 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297307819 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297543403 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297619442 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297073844 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297052998 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297907202 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296288363 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298264391 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296759342 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297602515 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297625659 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297380761 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298322024 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298678935 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297685404 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298103283 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297546426 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298214725 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297406807 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298105296 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298444105 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299118679 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298748634 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299546498 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299229251 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298388721 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298524799 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298640632 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298661974 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298222286 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299110913 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297773259 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299845388 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298759015 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298307238 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299685413 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29926373 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299462162 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300034089 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299766849 seconds)
  done (took 86.813805461 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299527304 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298864676 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29948451 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300193829 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299789096 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299636246 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299920787 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299249061 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300393529 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299552624 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299714341 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300059433 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299502212 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29968244 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299629723 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299933862 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299889671 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301631325 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300033508 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300568879 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300870309 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299595578 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300194863 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299546055 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302449368 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300374408 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300176785 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30110755 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301101761 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300957845 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300721931 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300473957 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30134975 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301281816 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300688308 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301166569 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300506664 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307919373 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301754434 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301821196 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302546547 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300820506 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30345269 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302048207 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302423313 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303408065 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302585138 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301365922 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302378771 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301684882 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303916425 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303668592 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30269654 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303641979 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3027641 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303630474 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303603582 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304669134 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303249216 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30261395 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305215176 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301086345 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305122013 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303526277 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304430828 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30277109 seconds)
  done (took 87.083798417 seconds)
done (took 1769.08810133 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.459166932 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.413960785 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.293028755 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.309271058 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.29478696 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.294653155 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.306018491 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.294717906 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.294537592 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.29478249 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.295296702 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.484961521 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.32863627 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.295742186 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.294226735 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.392752009 seconds)
  done (took 26.531536565 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.318113191 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.307674968 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.408220678 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.302349403 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.325596356 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.478946198 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.361706146 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.305628818 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.461871094 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.326576197 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.305133949 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.326057719 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.303784708 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.304394921 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.320366007 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.478131137 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.553235041 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.307164671 seconds)
  done (took 28.680448136 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.717564663 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.312257107 seconds)
  done (took 5.21911378 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.322914957 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.305109899 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.306596913 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.303148242 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.300689014 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.297346568 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.302922055 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.303513688 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.298463609 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.423731943 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.310748183 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.317114681 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.321225664 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.306379915 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.31197966 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.347484039 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.458592258 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.312186844 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.312407856 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.312131986 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.306158233 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.391423129 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.344634535 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.316474254 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.422495276 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.303395155 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.31386754 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.311917252 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.424717863 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.315291558 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.305538188 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.307823047 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.306529956 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.259113403 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.839078036 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.300046178 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.329609864 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.31586852 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.314645577 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.438208269 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.307768079 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.314014201 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.300582581 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.833103841 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.409366597 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.422963689 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.319662394 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.307606982 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.308713339 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.370277578 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.307732578 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.309420597 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.363331164 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.082435315 seconds)
  done (took 83.791463882 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.354341302 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.300759011 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482422741 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.323893368 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.300388845 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.300281164 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.299540878 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.570308915 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.307217478 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.302095721 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.608595151 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.902106213 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.316131163 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.366845021 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.341331599 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.352741721 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.302081409 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.30130331 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.30210863 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.30395819 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859001924 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.301714843 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.300992806 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.373855251 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.341875711 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.822613769 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.301408558 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.306465864 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.305560351 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.302968287 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.877863267 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.311272331 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.359088454 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.304192148 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.584044526 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.683936371 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.637448524 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.305498598 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.321694794 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.303340857 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.327383183 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.816019942 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.658561862 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.302251954 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.305802801 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.818778606 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.306168005 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.316106792 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.307339941 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.56973923 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.303574563 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.305594937 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.303971236 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.304208171 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.304375226 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.355657407 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.34938522 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.829103901 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30443301 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.304373956 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.350111426 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.306091934 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.309335599 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.310569937 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.308599682 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.663513454 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.53659906 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.308407093 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.660881651 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.869749051 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.309128877 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.959419286 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.310108402 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.310721741 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.334829462 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.305033525 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.306755396 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.830200481 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.338876456 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.305122555 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.643345264 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.309607903 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.605893815 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.325421169 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.304410712 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878148828 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.320777019 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.348651242 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.310493624 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.304786918 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.321968841 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.306056277 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.592131824 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.35119971 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.305406689 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.305991403 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.331767593 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.305944141 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.321792896 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.307726444 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.943026142 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.31151441 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.306039751 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.325367785 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30653737 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.308011737 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.309637642 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.308934235 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.584180291 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.307672319 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.32461234 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.308422332 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.309590383 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.306988422 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.382602069 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.316422413 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.601933681 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.309362218 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.306116898 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.309111963 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311413931 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.322177213 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307143428 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.330127491 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.30633809 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.607537101 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.32488818 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.324391841 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.309190373 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.307188134 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.326701309 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.312917651 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.362445772 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.309726174 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.068609835 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.351237764 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.30909574 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.308124692 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.318294321 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.307528832 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.336641774 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.309182572 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.606149302 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.591580982 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.53935228 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.31082909 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.309441113 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.098877302 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.345762427 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.49170298 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.324583235 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.309675801 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.591477806 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.532014617 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.311185493 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.309337347 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.313728502 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.58820609 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.321692676 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.623611353 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.901021063 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.314616483 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.31627417 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.070366569 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.122386955 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.314706568 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.312736168 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.603589748 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.330463884 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.310453052 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.309691952 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.310140904 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.30916087 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.314893323 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.320006967 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.310516488 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.310077466 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.652206466 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.505396627 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.325837698 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.311147635 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.833592806 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.34025574 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310536098 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.315739057 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.313796239 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.310108754 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.361154902 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.315885644 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.335477383 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.312483458 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.315942356 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.859397889 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.312575126 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.315824917 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.503588681 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.026788548 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.31615222 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.311075667 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.312057064 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.372779601 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.866786846 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.33625134 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.609983527 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.327517949 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.353163874 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.312272301 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.330245942 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.868132515 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.317255353 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.312337066 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.040967797 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.316318211 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.744295635 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.312824783 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.314402633 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.954264596 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.317301308 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.318385111 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.317046203 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314605754 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.630726916 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.312984299 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.36331654 seconds)
  done (took 492.812246285 seconds)
done (took 638.218702056 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.312659726 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.318826681 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.317784656 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.319289661 seconds)
  done (took 10.473987426 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.333579087 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.320713068 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.328471519 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.319540101 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.329538177 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.320737787 seconds)
  done (took 9.158099931 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.313730505 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.319397932 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.317400092 seconds)
  done (took 8.157119503 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.517695419 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.334841244 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.660257562 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.325483246 seconds)
  done (took 9.045303452 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.330076111 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.33096977 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.33060001 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.329619175 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.332958166 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.332103686 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.329982233 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.332212789 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.332432129 seconds)
  done (took 13.185706831 seconds)
done (took 51.225825844 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.391973787 seconds)
    (2/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.580626048 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.456124534 seconds)
    (4/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.65634093 seconds)
    (5/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.487892072 seconds)
    (6/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.44592308 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.478040078 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.384616621 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.35136968 seconds)
    (10/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.582487575 seconds)
    (11/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.320131879 seconds)
    (12/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.35270325 seconds)
    (13/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.385453003 seconds)
    (14/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.293312935 seconds)
    (15/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.555338311 seconds)
    (16/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.415349067 seconds)
    (17/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.49413009 seconds)
    (18/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.567795144 seconds)
    (19/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.409290649 seconds)
    (20/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.471333201 seconds)
    (21/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.428257957 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.403079282 seconds)
    (23/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.300186879 seconds)
    (24/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.297318901 seconds)
    (25/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.553833367 seconds)
    (26/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.316239855 seconds)
    (27/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.396778086 seconds)
    (28/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.60779512 seconds)
    (29/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.460573853 seconds)
    (30/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.314266135 seconds)
    (31/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.391651821 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.405989923 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.318732752 seconds)
    (34/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.569697082 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.479881454 seconds)
    (36/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.35833811 seconds)
    (37/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.626031681 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.390660068 seconds)
    (39/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.352047075 seconds)
    (40/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.399097575 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.417986685 seconds)
    (42/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.294472121 seconds)
    (43/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.851882284 seconds)
    (44/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.346563846 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.560349169 seconds)
    (46/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.357042939 seconds)
    (47/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.522392807 seconds)
    (48/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.473936481 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.318590086 seconds)
    (50/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.49493708 seconds)
    (51/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.300563107 seconds)
    (52/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.363885812 seconds)
    (53/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.295637784 seconds)
    (54/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.383028514 seconds)
    (55/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.519495638 seconds)
    (56/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.429278077 seconds)
    (57/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.296349623 seconds)
    (58/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.398552519 seconds)
    (59/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.414474944 seconds)
    (60/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.348409762 seconds)
    (61/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.407647609 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.594574304 seconds)
    (63/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.300852135 seconds)
    (64/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.494502439 seconds)
    (65/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.300930571 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.44412688 seconds)
    (67/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.407831809 seconds)
    (68/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.502103512 seconds)
    (69/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.297477091 seconds)
    (70/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.335646408 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.474990402 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.412353325 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.436693548 seconds)
    (74/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.487702734 seconds)
    (75/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.592136088 seconds)
    (76/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.302001736 seconds)
    (77/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.362189855 seconds)
    (78/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.478628983 seconds)
    (79/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.667592852 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.442362306 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.407873795 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.432289123 seconds)
    (83/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.298109618 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.407949365 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.427369865 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.423627735 seconds)
    (87/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.467712733 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.435573576 seconds)
    (89/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.43726397 seconds)
    (90/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.296828112 seconds)
    (91/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.332972601 seconds)
    (92/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.400216817 seconds)
    (93/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.512690906 seconds)
    (94/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.642574977 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.44533005 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.355957831 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.424604211 seconds)
    (98/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.322239955 seconds)
    (99/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.59007226 seconds)
    (100/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.527562368 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.480989626 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.401725497 seconds)
    (103/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.299113095 seconds)
    (104/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.351390047 seconds)
    (105/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.468591264 seconds)
    (106/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.336032697 seconds)
    (107/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.475359593 seconds)
    (108/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.317823547 seconds)
    (109/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.333333381 seconds)
    (110/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.562076961 seconds)
    (111/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.56001848 seconds)
    (112/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.317116182 seconds)
    (113/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.299080822 seconds)
    (114/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.394066946 seconds)
    (115/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.355206959 seconds)
    (116/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.4254815 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.36781733 seconds)
    (118/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.299777028 seconds)
    (119/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.367144995 seconds)
    (120/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.30546077 seconds)
    (121/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.468015212 seconds)
    (122/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.416718593 seconds)
    (123/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.470973044 seconds)
    (124/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.530628967 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.481596286 seconds)
    (126/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.354665673 seconds)
    (127/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.492485515 seconds)
    (128/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.434347678 seconds)
    (129/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.533155433 seconds)
    (130/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.461319927 seconds)
    (131/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.414094863 seconds)
    (132/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.320497734 seconds)
    (133/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.356705345 seconds)
    (134/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.400187111 seconds)
    (135/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.317006952 seconds)
    (136/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.365811545 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.447225028 seconds)
    (138/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.532475369 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.398707392 seconds)
    (140/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.59055046 seconds)
    (141/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.529055592 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.421951839 seconds)
    (143/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.808420671 seconds)
    (144/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.530830026 seconds)
    (145/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.317058312 seconds)
    (146/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.303567102 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.572569494 seconds)
    (148/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.302747584 seconds)
    (149/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.327282283 seconds)
    (150/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.555749418 seconds)
    (151/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.501686927 seconds)
    (152/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.396602798 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.43203107 seconds)
    (154/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.671367992 seconds)
    (155/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.399457196 seconds)
    (156/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.302651126 seconds)
    (157/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.662351189 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.391697354 seconds)
    (159/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.419794124 seconds)
    (160/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.42951038 seconds)
    (161/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.333938674 seconds)
    (162/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.354026434 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.567934928 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.417764163 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.366081965 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.438743067 seconds)
    (167/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.410947391 seconds)
    (168/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.377372895 seconds)
    (169/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.303708407 seconds)
    (170/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.355897542 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.681171179 seconds)
    (172/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.310377648 seconds)
    (173/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.441213949 seconds)
    (174/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.397897045 seconds)
    (175/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.348219616 seconds)
    (176/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.537282113 seconds)
    (177/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.408491942 seconds)
    (178/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.304089231 seconds)
    (179/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.642545698 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.52069288 seconds)
    (181/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.328200322 seconds)
    (182/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.315607725 seconds)
    (183/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.324035069 seconds)
    (184/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.307122304 seconds)
    (185/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.451149618 seconds)
    (186/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.431620899 seconds)
    (187/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.743763083 seconds)
    (188/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.470677369 seconds)
    (189/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.402129749 seconds)
    (190/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.355878473 seconds)
    (191/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.32173219 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.487961114 seconds)
  done (took 323.628421189 seconds)
done (took 324.835238842 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356312546 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.432049763 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.337541044 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.337697576 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.338199839 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.333028855 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.359146224 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.339833044 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.351661222 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.35209109 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.334447984 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.347365189 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.353036179 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.349017202 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.372675361 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.338163432 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.33698762 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.347450963 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.353483337 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.354066824 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340412432 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340219411 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.3659496 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.339052513 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345803931 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346238349 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.344715884 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.329867999 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.348161365 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.353970323 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.332741792 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.360316817 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.356057248 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.349979751 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.342005856 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.349599654 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.340742589 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.434489255 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.360702288 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.350033479 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.348764165 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.355731517 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.346866932 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.345286009 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.351855049 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.367136215 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347961426 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.355092925 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.331076609 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.333707169 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375887793 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.352873401 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.348939766 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.331710592 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.360894164 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.355813436 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.349321241 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360828597 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.348529668 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341901631 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.374331988 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359907864 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.352816318 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347997032 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.348662003 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.356626978 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.351002871 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.356470937 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.348314729 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344221425 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343143571 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.34884847 seconds)
done (took 106.51862374 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.463807508 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.337803941 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.499233007 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.349029608 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.505648511 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.463261671 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.348841667 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.348904213 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.349802882 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.143486682 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.349502163 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.350830648 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.339005833 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.349873346 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.462815675 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.350825067 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.350289202 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.041931023 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.351123604 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.478981602 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.342749095 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.352576587 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.352144117 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.145125502 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.339756609 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.337397817 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.479178091 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.350541247 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.043343384 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.335235565 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.336802693 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.047060814 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.479169086 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.369597411 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.360679405 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.360062791 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.507548659 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.354385392 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.466736993 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.469003813 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.501372113 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.389444917 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.336828167 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.339430527 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.354319997 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.352878354 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.353137423 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.379743098 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.339500537 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.352747704 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.044191521 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.361022668 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.361605494 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.351367604 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.351552063 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.372614311 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.35243213 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.352740489 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.482472086 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.353711186 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.468036055 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.146534541 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.146862828 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.353906817 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.340460503 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.353980956 seconds)
  done (took 109.182622354 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.414800774 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.420322128 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.456068324 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.344828176 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.396221687 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.455009487 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.345264436 seconds)
  done (took 11.058788384 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.353154843 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355223495 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.394267176 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396106635 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.356229016 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.517860605 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354072755 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.356156178 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.353049976 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.395738166 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.355030192 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.354389819 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.362703336 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.344500217 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.393980907 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.358201764 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.463084139 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.346981167 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.355129691 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.502509693 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353928057 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.36673554 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.398479056 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.358800438 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.354993916 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.353241301 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.131783286 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.355093408 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354940953 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.354813088 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35685685 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.413143583 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.356676944 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.346210501 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355216983 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.461707337 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.358095574 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357045226 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.356794226 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.349183238 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.357490889 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.355096203 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.357470146 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.356732697 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.357206886 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.369960595 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.357104169 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.356996478 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.357448547 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.356249555 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.398338089 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.357911851 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.357948835 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.358051242 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.403530407 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367935702 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.357478677 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.356688237 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.357488337 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357071298 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.503568478 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.396032882 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.357971552 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.396813736 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357815983 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.357217516 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.358081271 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.359059923 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.442680791 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.359328736 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.399047627 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.357683416 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.532514287 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.374258205 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.360375977 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.352841009 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.353652277 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.359561193 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.34837972 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.356132235 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.358829477 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.351076092 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.35794135 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35909813 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359323471 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.509954206 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.458326368 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.358175875 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.365644261 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.356744264 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.359524407 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.401607921 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.358788421 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.358852659 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.399559859 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.471148779 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.402604151 seconds)
  done (took 139.515966095 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.365085704 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.363737727 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.356021504 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.37786754 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.353568527 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.35384965 seconds)
  done (took 9.40160939 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.353399795 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.362331934 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.35903733 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.360121625 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.36111595 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.361021028 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.361798483 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.353933102 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.364460425 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.360844268 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.360981734 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.361724413 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.360692356 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.362741671 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.360934503 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.362453844 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.361482473 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.362074484 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.360695917 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362519169 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.349139097 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.362957858 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363085523 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.355688458 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.365332035 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.362569401 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379111654 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.363943843 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.362506698 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.359585456 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.364959751 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.362439789 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.356159517 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.359915873 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.365943108 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.356463702 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367351718 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.362673289 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.363691775 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.363287999 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.36510069 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363528818 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.364084453 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.36373009 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.356001854 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.35939803 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.367056968 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378735577 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.364458192 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.363721994 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.364497033 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.365322827 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.365398974 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.364742443 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.357759773 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360435233 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.368813815 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.365578859 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.365670055 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.360411395 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.366492972 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.365380176 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.357855091 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.36657595 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.367071106 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.366278324 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.357539514 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368765395 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366401134 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.365919053 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.366459819 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.365598546 seconds)
  done (took 100.36011928 seconds)
done (took 370.740415931 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.837293381 seconds)
  done (took 4.073499133 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.351088079 seconds)
  done (took 3.589608643 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.217176732 seconds)
  done (took 22.461038465 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.390429648 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.396859518 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.37775587 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.362643876 seconds)
  done (took 10.768359721 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.628125257 seconds)
  done (took 3.868322981 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.364028625 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.378864564 seconds)
  done (took 5.985946884 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.549625044 seconds)
  done (took 3.791273095 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.577679689 seconds)
  done (took 3.820994873 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.367049482 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.381450645 seconds)
  done (took 5.999413548 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.344802551 seconds)
  done (took 3.586231252 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.226212664 seconds)
  done (took 21.464380609 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.372960485 seconds)
  done (took 3.61451904 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.388486396 seconds)
  done (took 3.626649984 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.86374477 seconds)
  done (took 6.10232643 seconds)
done (took 103.988847384 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.353908359 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.357975723 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.358966872 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.354486586 seconds)
  done (took 10.663184332 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.431495821 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.430856635 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.440343264 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.425471728 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.426512562 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.434181567 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.393870987 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.394469659 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.425382559 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.420088322 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.437757273 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.422299685 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.435490392 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.41041553 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.420949764 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.438410621 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.425834357 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.44313109 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.397653346 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.42845618 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.370460095 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.429005026 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.421458165 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.369861141 seconds)
  done (took 35.313790437 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.856927434 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.431006736 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.516660107 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.413270114 seconds)
  done (took 7.459558334 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.475601622 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.475541665 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.498537836 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.531870872 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.576272536 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.487116258 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.39564586 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.394426261 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.379207501 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.476861306 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.562049458 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.474462782 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.689961839 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.370366751 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.687995236 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.370485785 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.37171818 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.475824262 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.524678198 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.553850401 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.373128656 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.474830052 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.479321249 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.474079944 seconds)
  done (took 36.815405083 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.380544556 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.387985257 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.373951868 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.38688331 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.373898715 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.373055634 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.373695338 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.380809672 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.372609872 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.372837928 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.37405879 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.387622771 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.374622631 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.372821866 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.379958195 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.375714239 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.375327731 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.379145798 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.382575739 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.3753565 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.373467743 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.380857781 seconds)
  done (took 31.55094091 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.358730146 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.358899008 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.708641674 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.614318355 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.360497265 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.359360926 seconds)
  done (took 14.004144288 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.433443459 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.572448363 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.366284928 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.709108993 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.795374866 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.365461001 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.366589732 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.603758672 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.897467031 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.896466348 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.426331005 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.434346459 seconds)
  done (took 20.112926125 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.37270754 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.363345643 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.37652557 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.380301452 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.416837798 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.370832681 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.372626262 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.361462022 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.423626305 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.422053182 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.372371573 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.420369428 seconds)
  done (took 21.900237843 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451746697 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367623268 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.385604981 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442213107 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370115107 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369274856 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.452605321 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.062831605 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.376468745 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64667994 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382492281 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468143156 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.618026605 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37896698 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373978686 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.343613368 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597729568 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849481506 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371677743 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383798865 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408934104 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371346778 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396532145 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.582452802 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378499905 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372173518 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.635311391 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371062953 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653909712 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631580334 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.633321969 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379014174 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648420198 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017383707 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478748283 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575116337 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388932794 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374363439 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.340106008 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.39185592 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379167283 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378889309 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62616061 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379898895 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372516886 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378993529 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079560347 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.381781102 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.371284295 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374473016 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628543769 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462305131 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.379795854 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373041011 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40670519 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371654286 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.37941263 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504937236 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014448495 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375614395 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388485636 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.379241718 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374808104 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374970807 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017101777 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.385482766 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.381411265 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38066512 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374494976 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376243977 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401652028 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375699281 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.395919374 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375518588 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131828137 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389874498 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382447727 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904726213 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385300009 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.379668581 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602329845 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376599545 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375381391 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.374535764 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375413292 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090671071 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384371915 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.341833935 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418910906 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071575098 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.581236981 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399712628 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405269604 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.59781612 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.344310201 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377094678 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.377411049 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382835147 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397977383 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.076589992 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376789893 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.382825741 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625387633 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.588196085 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388600997 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.349648336 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84137121 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391634814 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.403925506 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384320226 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.585098277 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.990091913 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645893012 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389375833 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417210508 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377219553 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149944028 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386854268 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.388859079 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378156323 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657430904 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.189232149 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379642391 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452749923 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388174171 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379110083 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377158819 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400890626 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378978953 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.56063065 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398904817 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.64136912 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.387789156 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378919347 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.380784648 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384533601 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.385089329 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.600618005 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381226885 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657134567 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379376605 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380798531 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379087691 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.597902251 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.378717415 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.392028 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721358592 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387329551 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397327647 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641014395 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417904564 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492411238 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411440608 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.384620472 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.631575587 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.38498933 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.387295313 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379134838 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388110173 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382518869 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.389012403 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378700832 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99341644 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371700892 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38801607 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380207326 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.39828234 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456495977 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389415164 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587737534 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.388631266 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383103009 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.388745774 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.382163419 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60749802 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636590078 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.39447592 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562211084 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.845539073 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989605362 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402935993 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.382304174 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.382283169 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.38204354 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383696954 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381637842 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381504426 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.587532035 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649960255 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384780643 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.014741031 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390899428 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396787169 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.395988399 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639430984 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.397664113 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382228904 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.381926042 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411915461 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398694778 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.643807995 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609908117 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.399896757 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383990046 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.902433068 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391137704 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383291788 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382780269 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410486844 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383808421 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244809182 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724689682 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37887608 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64325889 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401732258 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.406205335 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.383736437 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39632907 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400731805 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.405016776 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397787676 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.591964668 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390877163 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390620264 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025717376 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150360992 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949957219 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401537328 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.39617352 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38983527 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.089771325 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385944694 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38610432 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630411415 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087078028 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385534187 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852707337 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.384292093 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154927135 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649026773 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617197869 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394710034 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.40450298 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651237788 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603887436 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411810539 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39336826 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390435543 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.355254212 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922481172 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397009284 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569271686 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089341785 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3990716 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391559264 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.458296672 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401787632 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785275827 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39071967 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386013249 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385112369 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394213907 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227456101 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394576469 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387639018 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032491733 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399744723 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.861425362 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386953985 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594650798 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.651900643 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.626518721 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.395016364 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.38831455 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.638091474 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64803598 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395505178 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393679009 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950954257 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.252525032 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.397836719 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386841579 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170450181 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395554781 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.677212374 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.40971365 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.390946794 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401395869 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388872576 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390522182 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.38684745 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396851319 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365033103 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860336462 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.389698922 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386704512 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393725094 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411002614 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.635548952 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.403410626 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.994475367 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623931198 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401837557 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425515503 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.393492103 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387114433 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.382656707 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387375473 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388229622 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38100272 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608648021 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.403961779 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.361901359 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.473945985 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602148053 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389136096 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388641616 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612062105 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.395056058 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.402057444 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153247701 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42609501 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40331943 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397171564 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395436335 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434497728 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464162652 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59802612 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.653031915 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.65310415 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788842795 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393780875 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411100683 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.404231033 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470328215 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387033542 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.394428561 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.388872593 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991943104 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160225395 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.005756912 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654460686 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397836785 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399947887 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389303736 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629440567 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388976233 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665971523 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388638319 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.389929597 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412422403 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403807789 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409633364 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607429582 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664259091 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38893209 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389601386 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396083925 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.38995072 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652557797 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.609019364 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863063104 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919567176 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39190088 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390618949 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.101346269 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668574115 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392262382 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391260963 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390734276 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.408297252 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.404055533 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.405000577 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390656121 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619638578 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648328962 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053708253 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.651895841 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.42427574 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.390785944 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39232191 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.644041756 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227997378 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598431702 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010026512 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.102640531 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645885299 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465898303 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596403068 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.397672718 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629441989 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.397213431 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392346585 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392252697 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391143067 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.393148271 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.649164795 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00872724 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651765697 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.399981005 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.398821008 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420807054 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.597769371 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620508565 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10722015 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613454861 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6547094 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406233599 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39177426 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007837115 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65768438 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39930312 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.398643588 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607675262 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399082198 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429555201 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.269953975 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.394289656 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920588484 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.607242781 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413945152 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400910458 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.106141255 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013993639 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.397093548 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865978367 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396196924 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39453139 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67534271 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.401919775 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402113714 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682642575 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.399185641 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399464632 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607749805 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.004402786 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146886057 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.420391858 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401028647 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.418694454 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39616651 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442375205 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39600964 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405829469 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.791532637 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396426548 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396579472 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40979372 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.394157688 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41236485 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.400333107 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394864154 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.406500015 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.365698124 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.395224683 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41255623 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525720168 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934570989 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399031155 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.012154336 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.731821366 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.645420668 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395997255 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.371505087 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.403271848 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397141529 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397426862 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398248565 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395927979 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929449649 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.399769888 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.680765968 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413017539 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.609703536 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609476428 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39743389 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610528798 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407927637 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424760482 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.365195093 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39719439 seconds)
  done (took 986.916640526 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.406407882 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.40557095 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.397764431 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.464636865 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.413705996 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.406032598 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.411040657 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.46667654 seconds)
  done (took 20.643029578 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.397186649 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.394828424 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.396360236 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.394460914 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.388128998 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.868317593 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.387234797 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.392080741 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.406859679 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.389313592 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.389611166 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.010035591 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.395383416 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.388697889 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.388849555 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.391304987 seconds)
  done (took 32.647965835 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.082751757 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.408680292 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.916499007 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.420714534 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.418458469 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.396821466 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.526597707 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.398485674 seconds)
  done (took 25.837112692 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.398975439 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.396983959 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.396931963 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.398014393 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.398389817 seconds)
  done (took 8.256244594 seconds)
done (took 1253.360898275 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.398955889 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.399654511 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.400436039 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.398758545 seconds)
  done (took 6.864324515 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.361170035 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.362226991 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.361914601 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.380316314 seconds)
  done (took 9.732336066 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.055355487 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.900991895 seconds)
  done (took 5.223218903 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.901355014 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.903550122 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.900917258 seconds)
  done (took 6.973671867 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.667681854 seconds)
  done (took 2.935952744 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.329416918 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.390287594 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.395019117 seconds)
  done (took 8.384800559 seconds)
done (took 41.381469924 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.387868411 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.144981248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.541140354 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.388779263 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.545839949 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.541514535 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.637396114 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.386497614 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.394664411 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.391529137 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.389355559 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.54607616 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.623154865 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.145285752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.62459764 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.148607762 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.559690169 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.398359509 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.386325971 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.413249931 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.636728332 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.38833834 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.386428259 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.39314985 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.551768367 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.539580584 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.387766172 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.150573197 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.388612587 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.415354737 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.537922278 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.39612473 seconds)
  done (took 83.036176448 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.387291187 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.393518138 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.395750544 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.386845001 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.402174391 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.39985806 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.387640073 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.387352154 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.398930592 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.392560789 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.38854501 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.403829796 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.406982035 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.388908465 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.4057323 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.388816987 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.417312338 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.402357989 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.393201392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.387569729 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.391160452 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.388654325 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.395812817 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.394441551 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.393261534 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.419962025 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.388617195 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.389337223 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.390401783 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.3895163 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.409544768 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.389962783 seconds)
  done (took 77.927171094 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.397712389 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.391308166 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.413188203 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.395917678 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.402225132 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.398935985 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.392737644 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.389976646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.389051596 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.394502887 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.405341334 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.389093927 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.391440387 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.406435684 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.389886251 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.406279084 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.395413171 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.394744366 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.404552908 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.389285767 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.392416685 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.390813433 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.391243685 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.396394789 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.39974241 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.391770026 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.391031259 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.407427747 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.390706824 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.390602858 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.396522791 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.395495004 seconds)
  done (took 77.945518022 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.633027755 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.406587551 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.409911744 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.400251779 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.409995791 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.407373276 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.399916846 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.639934764 seconds)
  done (took 14.980456684 seconds)
done (took 255.157350173 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.401003936 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.897197432 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.428259995 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.401848736 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.423188339 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.429353004 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.603213769 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.428679799 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.592334672 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.403166076 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.432311554 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.407898129 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.187411404 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.537311241 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.196618129 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.319293354 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.265917709 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.393681336 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.953001157 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.6248744 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.434493598 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.394491343 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.224994554 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.27986 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.376250552 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.466311159 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.468577096 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.554117278 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.521188737 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.465937259 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.876086107 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.403100004 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.40492451 seconds)
  done (took 64.472266309 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.400652191 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.409389672 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.410172685 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.410740215 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.410739054 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.410009152 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.401308184 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.410935621 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.410463854 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.411711992 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.410921188 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.411351004 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.412060781 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.410745989 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.410342287 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.381179392 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.40055407 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.410730529 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.402293777 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.382539192 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.411476456 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.411068172 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.410725664 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.41121156 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.410053742 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.41106291 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.411053111 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.41199763 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.41292631 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.411210168 seconds)
  done (took 43.508023884 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.412453566 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.975918801 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.135408841 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.414873596 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.404293951 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.407989254 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.684453079 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.413824617 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.408085441 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.407479039 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.859582912 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.41556294 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.436094054 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.146444485 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.407640474 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.414682135 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.413931893 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.407148912 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.988942193 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.415247835 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.685203764 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.415083452 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.684522102 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.416207078 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.408525997 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.406731755 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.41055847 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.186960178 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.425040563 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.861060174 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.158252803 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.685213428 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.135512232 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.193741544 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.161552634 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.422285725 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.417442296 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.866728909 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.415825835 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.407048372 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.684642254 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.407423613 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.148836364 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.079393731 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.42450181 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.415751493 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.219837507 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.862385635 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.643154593 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.415089369 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.182338346 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.411252955 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.418462891 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.410786624 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.644593462 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.416032976 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.407604925 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.250613713 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.414071073 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.685293032 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.421565361 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.408182645 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.987747316 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.41228524 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.981810998 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.410716238 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.416927938 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.411073087 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.151652512 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.413209481 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.098922136 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.426320075 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.418716961 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.866256757 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.985804472 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.261850945 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.411051797 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.993235752 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.157648379 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.702232021 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.418067962 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.166470452 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.705337627 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.419280492 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.421036326 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.420202538 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.418594326 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.528949175 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.684196288 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.026321268 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.093913463 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.254824787 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.691413661 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.423496639 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.411391098 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.255063323 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.419783165 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.42008801 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.146504936 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.103724685 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.429538654 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.418128433 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.08781567 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.430787582 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.690029443 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.421807881 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.191475019 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.413340913 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.483820131 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.420690404 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.419106088 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.416551973 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.691543756 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.419908109 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.421452882 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.08401343 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.890367366 seconds)
  done (took 196.253766241 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.405832633 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.407123631 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.408092059 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.407592532 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.407576591 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.416637437 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.406270854 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.405782541 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.412554048 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.406579563 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.406938434 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.415988493 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.414387465 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.407977981 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.406741455 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.407850412 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.407550497 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.408860681 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.40759595 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.407481133 seconds)
  done (took 45.46230721 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.423518082 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.959992789 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.928970055 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.429731844 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.423386409 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.415382076 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.468483385 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.424801389 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.423437689 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.705944021 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.586971954 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.427460271 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.423233984 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.423596164 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.924778416 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.399917079 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.706719926 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.966111956 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.430724944 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.962138284 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.399003144 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.423717532 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.414433714 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.962342396 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.721664972 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.69530363 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.47584701 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.962899806 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.430270787 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.424221577 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.962528262 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.429156676 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.416525868 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.948273687 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.43017788 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.439907489 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.423874159 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.4722861 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.472764315 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.708945166 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.972079493 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.705993497 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.441021427 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.585784043 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.429822834 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.394607364 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.972852255 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.431039428 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.396447002 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.427116748 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.432405409 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.939091174 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.423138952 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.937488121 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.43237673 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.425403396 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.965201215 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.944212501 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.934324374 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.587353106 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.417453405 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.693066483 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.432872309 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.975810293 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.432646028 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.426895046 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.426341784 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.586168188 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.970219651 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.699268137 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.71557592 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.715720953 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.432172241 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.484323222 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.428768063 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.711438224 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.487821041 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.820804202 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.712482143 seconds)
  done (took 128.107051164 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.686445895 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.529782815 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.792320689 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.989970388 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.919413448 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.558952751 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.530064824 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.65786527 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.438828851 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.534119419 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.064908176 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.5096092 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.138982222 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.482312603 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.521999532 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.542555939 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.812206312 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.367354236 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.042980474 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.036432072 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.439587123 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.526750929 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.950993092 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.609449942 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.429931133 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.980668645 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.34338391 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.930409282 seconds)
  done (took 53.659613853 seconds)
done (took 532.736967786 seconds)
SAVING RESULT...
DONE!
