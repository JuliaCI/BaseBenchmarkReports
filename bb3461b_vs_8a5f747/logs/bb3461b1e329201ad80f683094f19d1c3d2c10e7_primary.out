cset: moving following pidspec: 6180
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.657734713 seconds)
loading group "string"... done (took 0.517037104 seconds)
loading group "linalg"... done (took 9.340218797 seconds)
loading group "parallel"... done (took 0.170956412 seconds)
loading group "find"... done (took 5.650381634 seconds)
loading group "tuple"... done (took 2.055389479 seconds)
loading group "dates"... done (took 1.383145142 seconds)
loading group "micro"... done (took 0.189752147 seconds)
loading group "io"... done (took 0.521509191 seconds)
loading group "scalar"... done (took 56.811314029 seconds)
loading group "sparse"... done (took 13.645031502 seconds)
loading group "broadcast"... done (took 1.724645314 seconds)
loading group "union"... done (took 10.490804767 seconds)
loading group "simd"... done (took 3.522907361 seconds)
loading group "random"... done (took 12.995070782 seconds)
loading group "problem"... done (took 2.246993733 seconds)
loading group "array"... done (took 23.464427415 seconds)
loading group "misc"... done (took 1.13314228 seconds)
loading group "sort"... done (took 3.631072588 seconds)
loading group "collection"... done (took 21.543643414 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.691860949 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144668254 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.190974928 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.202339735 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.275695256 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.163499377 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155655593 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.167799538 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.59123209 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.207237033 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.134808331 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419477264 seconds)
done (took 6.107860077 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.262213676 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.238522847 seconds)
    (2/2) benchmarking "String"...
    done (took 0.18507877 seconds)
  done (took 1.132839028 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076394296 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156358525 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107035316 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093141243 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092149636 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108208847 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092256232 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107964849 seconds)
  done (took 1.469912994 seconds)
done (took 3.652257675 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.51669498 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.878342282 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.511677651 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.180518873 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.311808886 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.304033321 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.263265932 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.221175588 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092056238 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08423112 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176237476 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.460956172 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.380767965 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.00909865 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068006046 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093300338 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.149639279 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.811239315 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080594926 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109717833 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.528900878 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.210484863 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114303336 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107615493 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186439015 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131709442 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.139414348 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104481918 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.65922036 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133145886 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.212638607 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.081532781 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.137187358 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.163243589 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.212381449 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109231165 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.696836198 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.20040681 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098497627 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09972844 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676879249 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117541029 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.20096658 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104482655 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.067494378 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.158833906 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.099049741 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.092837486 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092754129 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084399483 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166220055 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.4519711 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107773133 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.189482662 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09203426 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.724383316 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098828323 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273106791 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125253321 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095012459 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090230994 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.085573741 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153388106 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.091506101 seconds)
  done (took 20.218010391 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.164830364 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.181602579 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077817194 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156483008 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121562611 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096463492 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08219251 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077216421 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12390599 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174397118 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137001208 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.169956904 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092731327 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.087864172 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.166266372 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.228322517 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124887298 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103057425 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08753772 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105851827 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121652389 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094578788 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106768647 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090940187 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170137349 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204074196 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111287722 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122922162 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090475196 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097325456 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141531362 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145126101 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093146533 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089185192 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.16998353 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121405587 seconds)
  done (took 5.257824789 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.114224313 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.241494764 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119624727 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.248589421 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.194449204 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.153524653 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150256183 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181486054 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174781979 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.294038672 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.232971225 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162959007 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132537279 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097978048 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097393461 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07957805 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077640121 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.334554196 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145957541 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.190644617 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184246858 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112122608 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081244924 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.718163536 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100053444 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085125241 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.11186969 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063655213 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.221576078 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09262971 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.054274807 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.081746239 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.120456111 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111897159 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.219537183 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123269642 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117674492 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111330621 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083969728 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.219391409 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118832781 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077712436 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.113033142 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130742061 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112438974 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108150684 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.127150999 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.216605404 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088008021 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.109498761 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.053258158 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195732704 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.14543423 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.10175478 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.267917145 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127040961 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099283299 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.108490226 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.814375218 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126279707 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080497324 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07660399 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.1122201 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081048754 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077140791 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.819767235 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106861826 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.745010901 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081102524 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.154217688 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097129696 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.118051583 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084372799 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10028217 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.109258017 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084498764 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094629119 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085833813 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077768247 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104979667 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111745337 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082177182 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100267663 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078288492 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14532391 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113811525 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.106622849 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122243402 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09113134 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084342242 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128408194 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081673818 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104715369 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.1661204 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116553808 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110886293 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11365911 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141941058 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.090502307 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.275910402 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097132058 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122380785 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097247123 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111598536 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114377986 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080335906 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082481309 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094173211 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079723792 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146358203 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.103682475 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080382352 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086445455 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107293482 seconds)
  done (took 29.586597074 seconds)
done (took 55.774105406 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.414818547 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081061952 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07936444 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101878857 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079888819 seconds)
  done (took 1.545431006 seconds)
done (took 2.3112825 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.305069824 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.195722533 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101875261 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187336941 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085722317 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193237075 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.180540746 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099863743 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.203964991 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083312585 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.191698342 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082671554 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104205044 seconds)
  done (took 2.802970391 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103114314 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104079487 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100730085 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11983593 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084663321 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100230209 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117620836 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105984557 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099846435 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11208098 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085347045 seconds)
  done (took 1.897093799 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099686708 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102828577 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090793281 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115930843 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085632466 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097705454 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115059067 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106035569 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097690615 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110613766 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084724709 seconds)
  done (took 1.873838473 seconds)
done (took 7.336535438 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.199458262 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.857742191 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.186438268 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.238703121 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.344854896 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.289375663 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.596501778 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.195358373 seconds)
  done (took 15.803812586 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.120860715 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.188062622 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090141785 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090269296 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.108438747 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090799281 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094472404 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.112549433 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093596647 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090575298 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093621529 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.110488933 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08971865 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089354982 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.109029706 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094683892 seconds)
  done (took 2.495273891 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142845287 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121121748 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.114235534 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097258105 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.0922043 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.114653477 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099780765 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.094371679 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.110192462 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093711826 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099423378 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.113394541 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095440613 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092120495 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.112317653 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116171556 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091834238 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.11312121 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115087427 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.114401484 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09706353 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095787197 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112500658 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.096906507 seconds)
  done (took 3.397783256 seconds)
done (took 22.467202355 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.145296366 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100515988 seconds)
  done (took 1.018467619 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.160105606 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.179099895 seconds)
  done (took 1.116450223 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110504069 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089207556 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135034433 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101653424 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089462495 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106451877 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115271938 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106276716 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.089916108 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090688858 seconds)
  done (took 1.818031 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093296249 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094187779 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.120331166 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.165141749 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115904035 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093017182 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094510061 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.111182944 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096404089 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089697714 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.112851637 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.107758407 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.211568224 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126278862 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09437353 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094853557 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115010381 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093696466 seconds)
  done (took 2.813565038 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089442097 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091260018 seconds)
  done (took 0.965086473 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.090886626 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089010105 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090811048 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108961623 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089830818 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088539866 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106727465 seconds)
  done (took 1.4491738 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.519689699 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.239940395 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.366566562 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07142182 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122366411 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.332155453 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.104095218 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071161404 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090616952 seconds)
  done (took 2.735810333 seconds)
done (took 12.697596021 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09001372 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.241791973 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.629424771 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111455252 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088498532 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159817154 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.31237695 seconds)
done (took 2.421409158 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346387415 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.16277035 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08326453 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090791946 seconds)
  done (took 1.464681642 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080542355 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097651212 seconds)
  done (took 0.972014807 seconds)
done (took 3.229079084 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088207249 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088114313 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.087416452 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.104258251 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.087025096 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088905639 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087453201 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.104381466 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.08849932 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.087337109 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104946905 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08743032 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088196385 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087044229 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.119441639 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.087660566 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086054301 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.107551837 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087183445 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086711678 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.105424528 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08816846 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086687641 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.086443331 seconds)
  done (took 3.063508707 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109217265 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090551292 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109286768 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092956356 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092714719 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109316179 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092296673 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.089779533 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109660617 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089235229 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092285313 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.091079411 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.107849752 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092508422 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088817539 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.109883489 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091864571 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089272923 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107027941 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093226181 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092033209 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107724607 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092805002 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091343329 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109388234 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092179504 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090031069 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107518585 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093189043 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091863471 seconds)
  done (took 3.713954084 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096696626 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085117824 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087338743 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113885918 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085938735 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087950976 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10180865 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088664706 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09043872 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089183115 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108493872 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089012622 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087977312 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106150551 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089744505 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092564791 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09566679 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.107609129 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088973145 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089320678 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109369936 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090658225 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088233205 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088105448 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106202617 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087076651 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087996148 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106037785 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089499785 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088765611 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.090016958 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110468044 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089203818 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097438726 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.108572438 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088770867 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094205494 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.103180797 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091305418 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086294277 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084034905 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.105498378 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.088446615 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094166772 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106141959 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089674419 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089169063 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09082067 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.106433277 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09080342 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085491676 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.105741891 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091435427 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089791394 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.109737901 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.085995404 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089293043 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084796382 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.107527812 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088601156 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.08635191 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085445958 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.110836095 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08916442 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102133451 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.111705384 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088395112 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.088416886 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.107114882 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094354308 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090785913 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115969182 seconds)
  done (took 7.637451331 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.113674535 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097208375 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108108404 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.089774742 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088908289 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089106817 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110901757 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089394547 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090197841 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113078923 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089653183 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090187289 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107491903 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089826225 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089482832 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090109417 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113332376 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090283559 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08909186 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107576263 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090889646 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093953089 seconds)
  done (took 2.931606176 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235299144 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094781429 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142415152 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119627913 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106576617 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11874508 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093804761 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096296296 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110369785 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097994506 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098226798 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110833137 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107141507 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099463509 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117397359 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099409337 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110974446 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100459312 seconds)
  done (took 2.863424959 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102435069 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090047171 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.152452892 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09178124 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090047306 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.110332113 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097052037 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110043193 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.11012264 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.090838245 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096708041 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109466483 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.091408871 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090880476 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109107856 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092986566 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091984037 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09044197 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115718682 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095966717 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094892907 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117535027 seconds)
  done (took 3.047297072 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103620771 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090985677 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12732757 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095377203 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091457292 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090437575 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.114761929 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090970088 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.098333089 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111438938 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091710114 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091020726 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124056831 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091681241 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095382595 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109942882 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092693024 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092670685 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108242037 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092698284 seconds)
  done (took 2.809867992 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.192045605 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125721755 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106950747 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113359092 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126247884 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106696513 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133361467 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107386986 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107511827 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135869925 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109978916 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107535491 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133133067 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111918185 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124380589 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115547425 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114058939 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132667182 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108523192 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12517425 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118092423 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10687726 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132452857 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107639571 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108891596 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126079754 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10709165 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131115299 seconds)
  done (took 4.183571934 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091453837 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089925966 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089015291 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109107701 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.08981501 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089166004 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090262914 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108943746 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090017627 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089062312 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107678604 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090220716 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089837526 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089385486 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107267951 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090974431 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090125289 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106850663 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090875469 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090235104 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089708571 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108331206 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092031787 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089686948 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089590362 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108441919 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090381449 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088858948 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107480319 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091121623 seconds)
  done (took 3.652500695 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102898234 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101071855 seconds)
  done (took 1.014556324 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098091931 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104224429 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089510274 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109026994 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098719093 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09048293 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116820006 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09705358 seconds)
  done (took 1.615610099 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.163421616 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.187468745 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095749459 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.122356803 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.168015451 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.178400477 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129901467 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.1155502 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091188101 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083977278 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.180760758 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083065398 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.1125395 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089410144 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090670704 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116912485 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.093214193 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.099627044 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.117889801 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.093618272 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096479927 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114702404 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094308409 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102513228 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104546028 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094865133 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095041357 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.120977086 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088014052 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092451489 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107829982 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092286543 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095449768 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095334867 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.110927643 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.16786009 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118170392 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087267608 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091393689 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116922331 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124280962 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.090748194 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.113714021 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090825773 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093228208 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.116189975 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.095882963 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092212551 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.103077404 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088548005 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09238373 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104538668 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092958541 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092082732 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091338716 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116932281 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094134792 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087994417 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106858367 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088004482 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090217645 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107252832 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094468511 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.093891966 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111403444 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092642758 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090160096 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.111583116 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094545555 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092159462 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108845308 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106719467 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091945531 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.114840758 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099128011 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093170715 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10662714 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098140706 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091177697 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10932723 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096638871 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120512028 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092605347 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106925825 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087858422 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097816356 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113673811 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096118777 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085080693 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11806445 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094875423 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093540171 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.103724218 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090582441 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088647805 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.113212672 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085469502 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093126378 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091033784 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.11606221 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097179459 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089784832 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112173264 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096768133 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097563857 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108965627 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.155590791 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107997034 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087913261 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095177882 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116560837 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086827608 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09188411 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091766194 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10970042 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087728645 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096234692 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11135527 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.094481853 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096228492 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112822827 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09486228 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094024712 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.109697617 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090454031 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095931117 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118951889 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095302057 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094435849 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092411963 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.112561904 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093520585 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095403702 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10836661 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098057249 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088878024 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.109855893 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094902973 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097993244 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109859259 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089246923 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.090804376 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112543518 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092417971 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095542886 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091605814 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.107935535 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084659037 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092394254 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107697054 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093296531 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100540462 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107527086 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09433003 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088735343 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120476369 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089889006 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096540551 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113208854 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098041111 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097519868 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083745128 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108127343 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.094026636 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092592168 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.107734877 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093821581 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091869448 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.117261066 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086284856 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.095339296 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.103229036 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090618254 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107004712 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09298286 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.114783214 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088360399 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130139189 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124271334 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097880701 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091216365 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110606321 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.095632391 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091012962 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.115342549 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098547567 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.096921778 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.108369845 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091342415 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09777457 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10713218 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096802048 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091328302 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093422921 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105017708 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.093841747 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085084473 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.115907983 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095243307 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096433658 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.115353504 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096589093 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090613359 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119502232 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.100108877 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096316906 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085581423 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.116718991 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103221965 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.097047151 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118134626 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095209234 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090450522 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.113214418 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10243393 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094823942 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.111892737 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096109761 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085857276 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085659525 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.118194865 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096283229 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087527831 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.110971197 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09800511 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093796981 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.110722688 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085870746 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096887353 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114859622 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089459172 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092600511 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107365445 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091918257 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098145407 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105180457 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089986796 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094010541 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.115762677 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093026245 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092736724 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094092115 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.117714391 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096122547 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.093935959 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108998984 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101152665 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090962132 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.109821118 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090157753 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.093825357 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085472913 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.114269465 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093335524 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088543966 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.108306246 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096857163 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097966993 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.117790343 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091456219 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096673891 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.11666931 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.098473531 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090698985 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.116649764 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090774679 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085248277 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087940069 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104786186 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096551405 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088537376 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.117101743 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091875639 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09104982 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.116179204 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09516935 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089838547 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.116738598 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10397376 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08626279 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104100055 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09121208 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092545522 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108446209 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090797345 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094088429 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092897832 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.117221338 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096136762 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088600887 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.11311237 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099396334 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.0886817 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.118563401 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10055013 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098438275 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108192265 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.097416606 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088949426 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115795879 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088241388 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091857157 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090736987 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112583768 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089806844 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.089916016 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.11020266 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086996569 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08813363 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.116837981 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091755367 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.095987101 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111550929 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091007546 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.088918184 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108639428 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10019343 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090820408 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.097422623 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.11577298 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086176754 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085387101 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.11890669 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093421939 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098183358 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107802976 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097898167 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099710091 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.094919725 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.114974256 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101588213 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099641017 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.119605148 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098871545 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085241124 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.110543857 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097508876 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092706744 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.116692567 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096688619 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087071619 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114819447 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100965521 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093919397 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111086366 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088154721 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094681362 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.097882521 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.115587179 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098884484 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.094622376 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114541462 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089428519 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095728377 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.117739313 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094673399 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09912668 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09260503 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.119617995 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090148677 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.097521655 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.11410674 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087917567 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085897607 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.110236528 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10039372 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087102209 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.116414864 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100198435 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090985792 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.090696479 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.117325567 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089759781 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094655528 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117324556 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091398224 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101686931 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.113326501 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09292187 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.097123018 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.117296082 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087470601 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092351566 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092081269 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121202414 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091741819 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.097781533 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112925469 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098235287 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095137977 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.118675864 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.098341383 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099096298 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.106182651 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100956816 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096729491 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.094489528 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111498586 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092341528 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086855943 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111777704 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10002926 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090094863 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120708177 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100308214 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090769154 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110490165 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.099502977 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091757377 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119637229 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091237161 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094622295 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086290425 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116235088 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092528246 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.099637075 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.110489373 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087841641 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097417886 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.1173121 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097858596 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095068617 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.118934357 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088472041 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087262355 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.094553723 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112333182 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103766643 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095427247 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.112699631 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092208323 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095263785 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.114793729 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10021186 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087906313 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.10908034 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095666648 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09546233 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111425656 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089650567 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.09700354 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091043153 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117325535 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09168156 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087103345 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113036808 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.099441447 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089994374 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.109002141 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091341645 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100030538 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111470451 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091361119 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086532875 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.1178942 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097273428 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09966867 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109965441 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094672471 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090398635 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.094937595 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.121507506 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091631909 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091755743 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.113163805 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099004787 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096593066 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10719279 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091692098 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102789639 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118436028 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.094949815 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096362154 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.111704555 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102121218 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099271665 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095528585 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.108646023 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088398146 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091465557 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.10741781 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09705556 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097672243 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111642265 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091535153 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097613541 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118046856 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097835252 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095529566 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086836234 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120941798 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091259029 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095888535 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.107378613 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088918787 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096216406 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118061697 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094736699 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.09355395 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095372835 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.116444338 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089295682 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090558144 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11786628 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098551181 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.098197646 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112996616 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093528575 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099652097 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123429947 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096234023 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093076296 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12009557 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10037042 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09447831 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092969993 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119442214 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100953162 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095285665 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.120922826 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091794236 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093136509 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.121741937 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101040372 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102579689 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114640784 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088828528 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.097936809 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111339432 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088737587 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096528064 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120847548 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102251151 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095049966 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.0902955 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124665023 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098763844 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092684966 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.112945326 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091261756 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.097563323 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113407092 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098033492 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090159044 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.120715188 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100671648 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099963172 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.122382974 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089171658 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09905287 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115956065 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102963358 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095069309 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088624243 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.110795465 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097224415 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10004564 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.122285055 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098531858 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.097956477 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.097967897 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.117282537 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093618104 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.09037944 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.121919541 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100878447 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09475864 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.116380356 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094873125 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094182779 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.115356078 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100874178 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100294794 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113993271 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104672029 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100429026 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092136877 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.113245982 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095994466 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.095774934 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115230921 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098981263 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091072189 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.109303198 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101623726 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101112586 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113292485 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103893407 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101270383 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091278072 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118742562 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102586499 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.098526322 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.1168564 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096278041 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.096580212 seconds)
  done (took 61.182648258 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145165953 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102040466 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117958154 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096729144 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113071675 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118611297 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097857485 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097836785 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116866605 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10669802 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096179385 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115670071 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11182966 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116762266 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134300585 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105357342 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117158305 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09970928 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096458914 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09729533 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132918403 seconds)
  done (took 3.200100859 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113823981 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110052404 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127634228 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109735921 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101860445 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127859584 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107492413 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127055236 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110745602 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104433702 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130368676 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106746937 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12466807 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105542332 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103882167 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123541606 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.1116747 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102144077 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128284025 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109688739 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104059154 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.129518971 seconds)
  done (took 3.380161744 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127079116 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.098730066 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093611461 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117890774 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099642658 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096113239 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119999629 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098751439 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10517027 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.091289686 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109189805 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093167564 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094531173 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117713737 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092137063 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.09666562 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125482927 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101110561 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101538571 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096964415 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109996247 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097824466 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097031759 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.107932804 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104238028 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103301843 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.336702088 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.121430919 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088236049 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.099380298 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117418518 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092507783 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088238177 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.087412955 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110497839 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.09999772 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.098411088 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.117626542 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.097630758 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087936966 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.095688357 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.121638487 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.087694191 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096516819 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.117198924 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092069595 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.098683685 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.117487445 seconds)
  done (took 6.032963379 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.124137763 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161406882 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100129859 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.134435283 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133578171 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105455015 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.098647009 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.134296788 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.09726349 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.121301244 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112532849 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.10979731 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123738463 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104106604 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100678527 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122850286 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102464495 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098447333 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126033192 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100791692 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.103578446 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.122824452 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.109935469 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129970038 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103828924 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099387186 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120826909 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.103901533 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.108884522 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.12481466 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.104384941 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104375775 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131046722 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102763937 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099401816 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123144701 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11111578 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.100366364 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123684485 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100082577 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.099433214 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123504815 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102393134 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.130794063 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102185107 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102013611 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120169797 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099249817 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.108698289 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122362973 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107427733 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.108957749 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12366104 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102019386 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104010082 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.132753767 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102751413 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.099494096 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.124873526 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.109720167 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097624842 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.123423401 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.111424352 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.100795716 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.127489317 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.110742133 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.122936466 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103707915 seconds)
  done (took 8.664713348 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130505205 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103253168 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134092493 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112481226 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103383914 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126791509 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104434299 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103292509 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126168214 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110225302 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123447461 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.22073309 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123794712 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109682563 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103353583 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126783054 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104613747 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104143777 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127234251 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104747758 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125203173 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112501353 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10446116 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133501395 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115595979 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100748687 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127248714 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10587348 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132725669 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106191246 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115375104 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126805493 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10655255 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112115662 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139144577 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104599389 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098891865 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126390435 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105664133 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124670394 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103454038 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11196976 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125485839 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10316795 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105751375 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125438806 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114565385 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114859287 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.130090953 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110346646 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.125464141 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113018862 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10483247 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.127036035 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113986638 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.117934387 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134417634 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111888676 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126053124 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113626039 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110626764 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141325432 seconds)
  done (took 8.188748824 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099431121 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097676741 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097560261 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119111076 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098341066 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097855996 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096701752 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120737954 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09808052 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098048811 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118799037 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099371525 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097983625 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097131526 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119398966 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097865689 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098345392 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118319515 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09900806 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097875317 seconds)
  done (took 2.94579646 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108677668 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114799222 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120729591 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106264319 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10032946 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.12529731 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101831151 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100344118 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100964095 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122791551 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108137686 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106709482 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122298593 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10635362 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128513088 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106099814 seconds)
  done (took 2.660315705 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.117922119 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115938006 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.206199653 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102358845 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12338107 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108374399 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.099981197 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125562834 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100312767 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106863316 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.126429115 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.104092783 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100649157 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101261419 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12387632 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103462075 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.09921712 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126513628 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101693668 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.213315674 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104110279 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102435386 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126264921 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104499694 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102010337 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129044984 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105996323 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100705531 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124505314 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.102047817 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102376903 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.128997375 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101103024 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.10550285 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.124009566 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.103565726 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101806561 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10153134 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.12545199 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101552887 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102826434 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123603046 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103507048 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104374771 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121490125 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102783868 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100653518 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.127358218 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102959987 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102810334 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100963795 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.1283524 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105050798 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108969158 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130887327 seconds)
  done (took 7.154275951 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111983618 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101922323 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132471787 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100983252 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101850966 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10218181 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124484502 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105448356 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101745735 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121851848 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103429171 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101830378 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123131772 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103191004 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102436176 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121710104 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100790143 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102048429 seconds)
  done (took 2.846781685 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106470783 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100467333 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105166243 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123392267 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101854633 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100005286 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121717432 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100716527 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100687601 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099569999 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123526433 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101459736 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099254313 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123891296 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102988432 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099850327 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121856775 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101832758 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100665638 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098779168 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122847743 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101339143 seconds)
  done (took 3.247476216 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112866358 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.208052984 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107360874 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.216590589 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.09783558 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.119513732 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.108579033 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098363321 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.13632642 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098016575 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09601256 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.118160339 seconds)
  done (took 2.406856731 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128857202 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136767309 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124582631 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103249553 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110219491 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128702157 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107535747 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105642454 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137435681 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116805642 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127055541 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115543196 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1127134 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134770142 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110574225 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130432225 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106805384 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104951088 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123556014 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12110318 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104487702 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135854705 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106974361 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105291079 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128014404 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113355223 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134756487 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117297098 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105292748 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136164056 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111414288 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105588377 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135765694 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115777414 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124250411 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114710214 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106115936 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141332541 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109758657 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136009515 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103318099 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109616553 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136423207 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111897725 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113354794 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128144299 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111653672 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12656769 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107019816 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125795989 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132070335 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115015859 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131608615 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114075578 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113068955 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148038509 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117043395 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136261722 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110626863 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13817023 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113528668 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10955809 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135164394 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116872466 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131817169 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114093123 seconds)
  done (took 8.814839712 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140316097 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102319106 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128945153 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117387396 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113121839 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128887731 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107457466 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127713571 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108070166 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102788996 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169748936 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107507806 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113069622 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137090613 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106943672 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126923081 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106753602 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11347329 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124599851 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127391002 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105897573 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135695175 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114489062 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135787537 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118899329 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13164744 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107419131 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106012952 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127088145 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108704266 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11142045 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12959265 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114072446 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103367266 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135631966 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107154615 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105502844 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134136517 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106407036 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130791891 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114915247 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121636276 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128075327 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107037562 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139138535 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107025264 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106240898 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126390685 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107969391 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102704032 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137781901 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118925107 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116932163 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138373857 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105860585 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127874241 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107195516 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106116646 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128627916 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112427337 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115783771 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129361731 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125871726 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127984664 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107410944 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114242647 seconds)
  done (took 8.760347349 seconds)
done (took 166.813433029 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.170825012 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.2092841 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.191335382 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.156782163 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093066711 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.149947109 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.12654458 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.193426225 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094524055 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092574057 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092100639 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.118824688 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.160641576 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.092680179 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.115886697 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.096337138 seconds)
  done (took 3.046377248 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.192578451 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.327578059 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107368431 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120238391 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101019609 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.097458673 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119493491 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099597023 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097557232 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127479449 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098568424 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093581683 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126281322 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094651296 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097921718 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.118111656 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10479359 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09729394 seconds)
  done (took 3.126126516 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117278669 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142836566 seconds)
  done (took 1.16389076 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128860813 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211633531 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280852709 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168082018 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.11898458 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139778728 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147121481 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131916349 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188828426 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133197661 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111519089 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095358457 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146604452 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103744603 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113743151 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119592767 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125516949 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.133739181 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11329986 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099262764 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142327976 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102574965 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103366536 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.134007718 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179017047 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131573087 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10241042 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100631521 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122258576 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11201078 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103781826 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137754222 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109762325 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177967142 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102035539 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.172791515 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104162995 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121118353 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112281754 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098046563 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.1252916 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101920813 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.11064564 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119566878 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102752938 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.105048465 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.123826875 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101190025 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.126269078 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107339502 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105335303 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127016171 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.147358332 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127621125 seconds)
  done (took 7.814932084 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.868776686 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137642161 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09804725 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.010734469 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143194351 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113622011 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.860962332 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144898761 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248427579 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.882159454 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114360031 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105130993 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.256049316 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.253552693 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.274493232 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.352556879 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.725194859 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11147023 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.12822995 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160269901 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106831161 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141777988 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118274849 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.515639145 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09935571 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097452734 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129414436 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107805236 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17325498 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099169454 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102133611 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193192605 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.287819145 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204569683 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097964603 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120243827 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098584074 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.180589532 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269208299 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216013589 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.167441255 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118133844 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099105213 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104858628 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13913695 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096099913 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176728959 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.185505201 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.163960012 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.124639392 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106960514 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.107965382 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12798573 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.171797563 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096843029 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.352292092 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.356009963 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120025118 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106984477 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10976702 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261111269 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122149986 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231092607 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126130772 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211418878 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120583258 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842605235 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.15918651 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.12099788 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103386086 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104763825 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128016365 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105199073 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.187413329 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.476666079 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130166451 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104244889 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09785381 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229758397 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.121369245 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099159734 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.176826971 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100597359 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105032481 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132771369 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107165286 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.186333721 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.26512061 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108688667 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106095846 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126802939 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111238197 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098976589 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230669032 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222565948 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.172055388 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.225180306 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105453091 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.176098567 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18165682 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103152603 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.184436692 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105857119 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13152529 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105786634 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218845496 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15332939 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100975872 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103038981 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130655646 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.132934018 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123388498 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108960068 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.182655172 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.551867573 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.159761026 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.117291722 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104329637 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107939995 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176710258 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105070026 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259907356 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130695018 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.158630418 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129557292 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09581664 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107204913 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.175589277 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12832072 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108307154 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105083663 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129972442 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.251987076 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.237261853 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10790178 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246903894 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.194674046 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105530676 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.188100737 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109156925 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.183292088 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109467237 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104541208 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122979496 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.830086308 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112602526 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129985559 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105347848 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.2021725 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100138328 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101407959 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098163354 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119121081 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832863802 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105466464 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.095725942 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124053688 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104836737 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106166482 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129477038 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105035449 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176462814 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237171415 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108063401 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12825441 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.098199349 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.176529764 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101197903 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.098436123 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122245109 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.099652111 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107780897 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12610266 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101936857 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185272877 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.170609297 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22469877 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.630757311 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099967069 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098486377 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255781457 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100359016 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320240433 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106838616 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.250076219 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.156719959 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.118697734 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358123643 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.15756471 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20586782 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.101659366 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.18476835 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095920692 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130461675 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.150735607 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122202688 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106769767 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.172667016 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111196755 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131689918 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.274220301 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100060301 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249683969 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096459692 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.184440641 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100207657 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12661031 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321871646 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098881515 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134530475 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.152830763 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125493953 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101073733 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.671289904 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.1000697 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110130579 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127392716 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228348558 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.179745157 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108427471 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130211966 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109720622 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.175384288 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.203978165 seconds)
  done (took 47.056658209 seconds)
done (took 63.110340941 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.265097427 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174022263 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.276671533 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176231949 seconds)
  done (took 1.884031129 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.265910433 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.158212032 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.250306935 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097429645 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.255820625 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096821858 seconds)
  done (took 2.050814923 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.179444845 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166146735 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144310915 seconds)
  done (took 1.415218014 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.196926282 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214213245 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.32702083 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.23137109 seconds)
  done (took 1.9804142 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.287989749 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116954784 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123121433 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.229651248 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.247935956 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.206899922 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122870109 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175318885 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127011185 seconds)
  done (took 2.609161444 seconds)
done (took 10.869119358 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.428274317 seconds)
    (2/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.250143546 seconds)
    (3/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.32079415 seconds)
    (4/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.347578084 seconds)
    (5/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.246751377 seconds)
    (6/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132807016 seconds)
    (7/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.186703632 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.13018717 seconds)
    (9/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.361519613 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109826314 seconds)
    (11/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.318707305 seconds)
    (12/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.198925353 seconds)
    (13/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.319824814 seconds)
    (14/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.317106294 seconds)
    (15/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076679102 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.118737547 seconds)
    (17/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.301405857 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.12629067 seconds)
    (19/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.400776358 seconds)
    (20/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.195388624 seconds)
    (21/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.264394692 seconds)
    (22/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107519023 seconds)
    (23/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.238685044 seconds)
    (24/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.130109729 seconds)
    (25/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.213978944 seconds)
    (26/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.144512017 seconds)
    (27/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109861751 seconds)
    (28/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.388607384 seconds)
    (29/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.252316422 seconds)
    (30/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.085898966 seconds)
    (31/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.273263147 seconds)
    (32/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.17294436 seconds)
    (33/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.222799839 seconds)
    (34/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.104752317 seconds)
    (35/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.164063178 seconds)
    (36/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.266829188 seconds)
    (37/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.20440071 seconds)
    (38/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.155054713 seconds)
    (39/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.139224269 seconds)
    (40/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.174263233 seconds)
    (41/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.107204853 seconds)
    (42/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117323122 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.116105657 seconds)
    (44/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.104873395 seconds)
    (45/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080333765 seconds)
    (46/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.172913802 seconds)
    (47/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084275303 seconds)
    (48/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.162003189 seconds)
    (49/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.108692333 seconds)
    (50/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109192792 seconds)
    (51/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.226934306 seconds)
    (52/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.080351432 seconds)
    (53/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.14229973 seconds)
    (54/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.10998546 seconds)
    (55/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.129687898 seconds)
    (56/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.211998515 seconds)
    (57/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.138871314 seconds)
    (58/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122968086 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.126004685 seconds)
    (60/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.078284134 seconds)
    (61/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.083142163 seconds)
    (62/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.147022065 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.124721363 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.103588746 seconds)
    (65/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.173314053 seconds)
    (66/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.09123047 seconds)
    (67/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.108771246 seconds)
    (68/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.257552983 seconds)
    (69/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.148851204 seconds)
    (70/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078107882 seconds)
    (71/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.169849619 seconds)
    (72/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.103680815 seconds)
    (73/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.132750557 seconds)
    (74/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.129499245 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109425576 seconds)
    (76/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.100772938 seconds)
    (77/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102694386 seconds)
    (78/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.107005601 seconds)
    (79/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.158485592 seconds)
    (80/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.080943811 seconds)
    (81/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.178786007 seconds)
    (82/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.08375011 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.133640903 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.101354201 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.097450376 seconds)
    (86/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.131891391 seconds)
    (87/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.105555376 seconds)
    (88/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.07676826 seconds)
    (89/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.083710256 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.123486814 seconds)
    (91/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.135451642 seconds)
    (92/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.123819647 seconds)
    (93/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.107427176 seconds)
    (94/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.080923501 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10272499 seconds)
    (96/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.212858081 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119110604 seconds)
    (98/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.125831014 seconds)
    (99/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.078923215 seconds)
    (100/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.133168206 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110712374 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.09949395 seconds)
    (103/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.199034735 seconds)
    (104/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084882901 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.099873578 seconds)
    (106/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.133656831 seconds)
    (107/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.134165114 seconds)
    (108/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.082199656 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.123765707 seconds)
    (110/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079944489 seconds)
    (111/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.114813163 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.084199431 seconds)
    (113/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.077049005 seconds)
    (114/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.213164552 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.109176174 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.123970397 seconds)
    (117/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.098472188 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10099679 seconds)
    (119/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.083652919 seconds)
    (120/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.121905569 seconds)
    (121/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.132615649 seconds)
    (122/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080746472 seconds)
    (123/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.085145425 seconds)
    (124/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.106202223 seconds)
    (125/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.110744869 seconds)
    (126/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109701265 seconds)
    (127/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080291183 seconds)
    (128/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.156014587 seconds)
    (129/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.132258788 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084524806 seconds)
    (131/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.129725935 seconds)
    (132/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.145913871 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121592766 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.14472929 seconds)
    (135/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.112259585 seconds)
    (136/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.079393458 seconds)
    (137/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.108472982 seconds)
    (138/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.104015263 seconds)
    (139/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080192682 seconds)
    (140/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.080960394 seconds)
    (141/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.101614432 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.124742442 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.109989954 seconds)
    (144/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078372252 seconds)
    (145/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.079724289 seconds)
    (146/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107907802 seconds)
    (147/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.152376983 seconds)
    (148/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086027734 seconds)
    (149/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.080511064 seconds)
    (150/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.07771675 seconds)
    (151/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.132149233 seconds)
    (152/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078620963 seconds)
    (153/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.110587519 seconds)
    (154/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.079396993 seconds)
    (155/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.103709648 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104969284 seconds)
    (157/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.080512456 seconds)
    (158/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.078828853 seconds)
    (159/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080433186 seconds)
    (160/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.107794593 seconds)
    (161/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082315955 seconds)
    (162/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.139768882 seconds)
    (163/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.085012735 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.122832166 seconds)
    (165/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.08533528 seconds)
    (166/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.085088746 seconds)
    (167/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.136178988 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.131827349 seconds)
    (169/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107044788 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123371401 seconds)
    (171/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085548471 seconds)
    (172/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.109036254 seconds)
    (173/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.084347369 seconds)
    (174/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085278985 seconds)
    (175/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085488391 seconds)
    (176/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.12280046 seconds)
    (177/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.08180294 seconds)
    (178/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081568768 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.099273062 seconds)
    (180/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.0844114 seconds)
    (181/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.102733004 seconds)
    (182/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.086612764 seconds)
    (183/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.100076437 seconds)
    (184/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084674676 seconds)
    (185/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.13207658 seconds)
    (186/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.086136138 seconds)
    (187/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079040288 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103542887 seconds)
    (189/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.145092183 seconds)
    (190/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.103160598 seconds)
    (191/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101353463 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.126566387 seconds)
  done (took 26.893326668 seconds)
done (took 27.828705016 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.220242095 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128991519 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110343072 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110350215 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.227382528 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117349567 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.152100585 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111284351 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120627813 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.135662285 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100349543 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124121659 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133393835 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.200957003 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.137520972 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.102576479 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100701819 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.145216295 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.125709809 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124828536 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.22735376 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102546852 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.145738406 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101778649 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.227988743 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103747504 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.10898757 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.136271359 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124330262 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110038877 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.135034796 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102489159 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126079243 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.149547074 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102422271 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110810083 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123926418 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086153368 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110779297 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110241978 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.14680069 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111346354 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11075738 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.126626118 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112593237 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.109179837 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.124556354 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.115346001 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.099162994 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.133811221 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105444246 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.124641298 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.132922125 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101582139 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100258441 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.100910963 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.144095738 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102006124 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122747519 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125099304 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103228008 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100558542 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.134386543 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102653621 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.109897333 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.12395186 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110811838 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112891575 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108741501 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126892131 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102637847 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109509014 seconds)
done (took 9.937113361 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106237349 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14550108 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.227420933 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.228839756 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129466714 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142441362 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116059273 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125022676 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.139002926 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1217123 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137631004 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.156802667 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.23193386 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.117668037 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116382385 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.137541156 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113807239 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110173501 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.230988707 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124645793 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151313673 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.1180782 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.151334118 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.11893993 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105482997 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.152507116 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.109636576 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113028424 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129114472 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.123793115 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.125570258 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.1285226 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.109379991 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122606334 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.145468647 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117939052 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117172282 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.137580278 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107055982 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.10556697 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137544365 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123974779 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104770809 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.142140108 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.113307048 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119654868 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.136424809 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119136737 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105846362 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.137910612 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107706304 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.129869459 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.140818321 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123157955 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.11639848 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.141154088 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.11897904 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118482786 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.131883098 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118647062 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105589842 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.129371645 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108247033 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126118115 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.133087926 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118921814 seconds)
  done (took 9.621296853 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125706361 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134300214 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139326582 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117445051 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.1097172 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12352219 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100840549 seconds)
  done (took 1.834563576 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101373343 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.236122689 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210520743 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.236593996 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.235095397 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.247399484 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124021027 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100479545 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.162632871 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112423858 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.239375321 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.265338314 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111840155 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.14197479 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.216035441 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127166709 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.214439768 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126870767 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115977195 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.240984145 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118150261 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.157358683 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.114821919 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102364368 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.233749225 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102505095 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.283641995 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143760286 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111371468 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115378766 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14092621 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.181460389 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.234610219 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116465951 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136317 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210862917 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.235350013 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11455667 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.249375728 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.132452883 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.208970651 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.141621171 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116534344 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.116772261 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.143659882 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.197571589 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.148175802 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116470299 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.1141246 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.243490883 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.138151131 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.211741858 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.138520843 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116741343 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112997172 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142362311 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12422303 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116931716 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.2441808 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117828773 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.237040257 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.238344126 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.23731282 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.238591309 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127552079 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.237421386 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.20129298 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.142285753 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11160711 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117533758 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.240272153 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.140963699 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114538669 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.228740606 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119409428 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.241281546 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.240546147 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.134315597 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115025523 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.10586393 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.141572873 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102115639 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.231215095 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115360259 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113754455 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146493011 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115370394 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.142734092 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.107502941 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125078722 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.140756008 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.113861735 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121256643 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.14163617 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118873216 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.243523803 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112968711 seconds)
  done (took 16.703855925 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.10454161 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104735378 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108166125 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128021864 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104669553 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104249805 seconds)
  done (took 1.663893063 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.139069184 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117111789 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150571344 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.1180263 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165195647 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.242791741 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.250907271 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110586157 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.162463012 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128089458 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.245716796 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.247398257 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.244744344 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120682357 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.250387345 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120188799 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.253876319 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115095511 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.124388144 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141018371 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116064723 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119703247 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.14221942 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.234875209 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117824239 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.117780445 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.156834741 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126630406 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.123664021 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.137174484 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.11980469 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116180406 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.133941508 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112338327 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.251905296 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.10904896 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138320308 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120319029 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119643646 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.142216521 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.224554677 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.140657265 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124472274 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119146653 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.13784419 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109536582 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.118943169 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.136574044 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.251588623 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120358902 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119124678 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.144531769 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118098593 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118983937 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.135338396 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111457234 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119351005 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.251461723 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120055157 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.1361792 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118496332 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.143142491 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11186472 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121134786 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.143079495 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119852298 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.10860344 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142809999 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115424005 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11827237 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.143733715 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118876072 seconds)
  done (took 11.577620353 seconds)
done (took 42.375863329 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.645982879 seconds)
  done (took 2.651830262 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.934300884 seconds)
  done (took 1.941280199 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.640677044 seconds)
  done (took 18.68139781 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.430388333 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.462533533 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.111231058 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.147205301 seconds)
  done (took 3.162129969 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.826609466 seconds)
  done (took 1.857125108 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.300599669 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263031674 seconds)
  done (took 1.575729299 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.71698073 seconds)
  done (took 1.742431096 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.530830312 seconds)
  done (took 2.544725385 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.285696721 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.240853458 seconds)
  done (took 1.553751277 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.637205547 seconds)
  done (took 1.662720344 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.238503415 seconds)
  done (took 20.269858228 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258814169 seconds)
  done (took 1.288804142 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.284596378 seconds)
  done (took 1.317629356 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.525808297 seconds)
  done (took 4.557322497 seconds)
done (took 65.827077493 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113566377 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.1164096 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115184791 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138676552 seconds)
  done (took 1.506033406 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12244215 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116594725 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145171714 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119252608 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122820231 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116267262 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141543082 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119488279 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115489012 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144938537 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117839581 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11581707 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144960963 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117089868 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113845644 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145302168 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120741777 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117810142 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144186935 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.11861309 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118645293 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144461878 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120769312 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.11911542 seconds)
  done (took 4.058186794 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114054475 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108562818 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109443965 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.130977381 seconds)
  done (took 1.501444788 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.1255342 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128058866 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152396857 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124513765 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129209652 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153288886 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116120158 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113467061 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141380901 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125868678 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132298911 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154983777 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128430416 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118233375 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152755043 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110740642 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116320063 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15279995 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123860709 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125377543 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143430591 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123981237 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121199368 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152016348 seconds)
  done (took 4.20019004 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.191550426 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.127862046 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173982555 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162204008 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.176712903 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115265493 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.143149707 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149205321 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12334828 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.118760288 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146488899 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161423754 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.14796421 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11964598 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117430926 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146848669 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129522848 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121167792 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.190124229 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121236956 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149173424 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128094424 seconds)
  done (took 4.198820188 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119175515 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108381715 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103267219 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.133174139 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119568192 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109858537 seconds)
  done (took 1.735958878 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106945727 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101891765 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102974034 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126953405 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106908972 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101238462 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101088624 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130072561 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102611364 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.1009525 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126830931 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102506913 seconds)
  done (took 2.352928662 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202209804 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144253441 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251992251 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.667733509 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160986482 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187016439 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280059808 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186770989 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203292429 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135977147 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211762751 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159145085 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179691961 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184153777 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164936415 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157539378 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191292155 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205839843 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17040206 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237840612 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155026909 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205466629 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186812493 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176659847 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137958853 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187108443 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11747237 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152170608 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166432787 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190128625 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200277793 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150862582 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138911097 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216344133 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257671844 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202685342 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265139763 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130969774 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.19474898 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.188189644 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256745163 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165963318 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214649075 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150819552 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126293566 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209556395 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17850074 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.180250269 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.157441311 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142708621 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210535415 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177298645 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194574696 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134084882 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319224576 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157367132 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.140869698 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248379105 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212031484 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198691098 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203940437 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120746609 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198969848 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215344266 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211299466 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.166237699 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.188525251 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124297569 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162246816 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228684788 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20772415 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156991194 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.23442485 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15697866 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169589386 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194331746 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154071339 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229793458 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196155628 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118403841 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175216061 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133561983 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123700963 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.213021401 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120102643 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240530333 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130160361 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.337460329 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204603048 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153766845 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186071514 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157482914 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18738484 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146345194 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.12793473 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141153635 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.18437965 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158035391 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126368571 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180451898 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13704274 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.152020241 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15149409 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.146583148 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167360198 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131796301 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188118864 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194091203 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130155556 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203846374 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146399233 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.1857672 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168815563 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219213697 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128281428 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15861294 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244600753 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169245706 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.134587305 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198234099 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.220796569 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148061836 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160828735 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163898415 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221974426 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141083 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223985017 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135591836 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160364991 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138691676 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198334464 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184468777 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.158073707 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1260865 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.189784852 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216693399 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125674229 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137083429 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207104923 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1310398 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150756512 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134478811 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16029814 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.143071239 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146627627 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.164669353 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151402625 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191755644 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16291892 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185238233 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131890254 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198767267 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127704747 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.194198137 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147121442 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.143716171 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.173476733 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222635932 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126207858 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207307658 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.185514359 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180601864 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196426179 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127146504 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209295048 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125272596 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.145121384 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159795043 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19387352 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160184305 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.212795899 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201367867 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163814841 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187663608 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145621273 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196144383 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.209280231 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15471701 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.168168416 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170465378 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196733313 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119438497 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121573962 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.155834573 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136144387 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154572771 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136123765 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205812741 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162320254 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201799248 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190967308 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136085432 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215583842 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124206286 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184408018 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.172435721 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163114281 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.187331511 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216430718 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175076161 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165728585 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187459824 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119962284 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123021529 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.158465457 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158933531 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134518703 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162686673 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138279061 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216260598 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198058687 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147505611 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213691499 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189600892 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198374103 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.144423945 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.158996201 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193813213 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166657825 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181644106 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154267668 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.158373802 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217368414 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138290632 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217251732 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19377555 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176162472 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222168559 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.189271327 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129402845 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145216396 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18511313 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136063422 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188591901 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143423799 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156965979 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150799834 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.161962052 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139243959 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213349929 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141675 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204378876 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156018923 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197062174 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123304657 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167850077 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170900877 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173560252 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104933973 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194747803 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192715555 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175714872 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152288117 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198195858 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126812406 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.340700104 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211364596 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17560072 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162052667 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136879794 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195993406 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159227649 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190284571 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181503171 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168171201 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204551655 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19707638 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13980866 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157492649 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1468522 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177709191 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137962686 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.179478586 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.159402618 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.168781136 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213678374 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135967416 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167548646 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201512476 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.142077928 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.175744236 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137569515 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251446902 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191879139 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171719295 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.190203501 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162146471 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209499961 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121230531 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15133936 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.130931742 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182219002 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158129093 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174380215 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191000048 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208029509 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199477929 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160644105 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165791626 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.125811285 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164601516 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175734218 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208820906 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13411187 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13695169 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217008588 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.153669333 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129801157 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155988234 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312250242 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173521549 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172105972 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105464055 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.30729198 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127141772 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157776583 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158873448 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197015465 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.132272815 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.207863763 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172560442 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166478342 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160794957 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159345761 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176698265 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208885795 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191449687 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173575347 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.172686744 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158840162 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187543781 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172666136 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172021592 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145254698 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185412258 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191852991 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.202386268 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129317096 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194656387 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165918174 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197665396 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201527042 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136592365 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207565408 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126639187 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190539457 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138159483 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121458816 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188248144 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189726373 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129157257 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201287476 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168332609 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128170358 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15251442 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143747816 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191352628 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137804782 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.156366659 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184174827 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.155277463 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17943885 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234838642 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126910144 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196619542 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143428817 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158276266 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138174159 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168001155 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129654555 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173775153 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207791388 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128503802 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203686102 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162266864 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191062228 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182881594 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144706886 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.260471535 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.154797577 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188565714 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1773243 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221086384 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147388246 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200324082 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166511675 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175215003 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163683389 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174143554 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.216919411 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191859957 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.164047347 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157568189 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141352663 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135935467 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.160202653 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150867981 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194568821 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140189225 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.161949833 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165203847 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172004281 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.145909692 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139783576 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227039188 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177923435 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185924461 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213017129 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135851178 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20135202 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204045843 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127212883 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.189501501 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169795442 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169557626 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149805923 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.130689745 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.166735169 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240779816 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125142517 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157077168 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199660803 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165660659 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198651873 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.13270487 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206009086 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137414102 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201557968 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12490172 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178773173 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167796582 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160812428 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125284004 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196425518 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158940687 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.1893972 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140129551 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176059587 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21897088 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121593327 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160086064 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28489349 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186918809 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221003573 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135704796 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133792373 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173457235 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155950835 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.192796681 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168715304 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.157638761 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12648718 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.169992673 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156238771 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.166079699 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.659123666 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205541878 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161992402 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211602179 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133455868 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278325606 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140556948 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196013113 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117228881 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126018207 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165360179 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132914607 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139694453 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206753248 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241221406 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.1613892 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.174449257 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134223813 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.152826422 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131056608 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161617654 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178457584 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192197469 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146258897 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102088833 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166518014 seconds)
  done (took 85.21571722 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158463127 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.14880221 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167300606 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219286735 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193410599 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.288321764 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226885663 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24478143 seconds)
  done (took 2.770734692 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.116735492 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155430132 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140475422 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.140593031 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.107797019 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.47354449 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.157697953 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118022838 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.158408338 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148774728 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133369886 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.56498489 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114760535 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143606183 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119870137 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133402879 seconds)
  done (took 4.043987242 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.660053882 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.528207108 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.905469436 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.272989209 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.257734885 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.200592278 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.757202948 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.199592212 seconds)
  done (took 11.905743585 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.164765155 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.16088469 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.439566267 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.300105641 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.180988313 seconds)
  done (took 2.37915163 seconds)
done (took 126.892853704 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122114624 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122360156 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121367103 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151082018 seconds)
  done (took 1.637578926 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.192437753 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090620713 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092485759 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.118116281 seconds)
  done (took 1.62375604 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.46448504 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090325331 seconds)
  done (took 1.71403828 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.156249866 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136560656 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164347524 seconds)
  done (took 1.605152751 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.134582897 seconds)
  done (took 1.268834112 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.124907303 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.123991647 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.266692719 seconds)
  done (took 1.6547192 seconds)
done (took 10.644427602 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118453275 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.925622589 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431421018 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132344083 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710092163 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.4250827 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.452361007 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172635206 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17403548 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.135088502 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131291181 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690083975 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.463970533 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873974829 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.416787011 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.904974485 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694441923 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110688573 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.142955399 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112115923 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.4321648 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.134580385 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111658778 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110713326 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716683209 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419240879 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10864014 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.910332661 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10900549 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112666019 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.426009764 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110649488 seconds)
  done (took 21.048874481 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116861832 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.166018724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143933384 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111071383 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112861267 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138355634 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121211523 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.1211409 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201680083 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109435245 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158539117 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109798468 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114367887 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.13625968 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135022916 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109872581 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.138711875 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112581274 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117002343 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.137597725 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132574726 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109186406 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.136864761 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113102116 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110233996 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157343293 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110503447 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121712881 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136646363 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115117392 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114042112 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109032479 seconds)
  done (took 5.222632706 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.158902168 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17626876 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145787017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148865941 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185967518 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11283657 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.223416078 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149147658 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203186096 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110769687 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130193782 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136391301 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151364931 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110317671 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162351367 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110225386 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112823369 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138979488 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118600953 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110979389 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16039471 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109847825 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112150788 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.138398952 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110727564 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132708801 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136857203 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123256143 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108203304 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141779803 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11667182 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110200611 seconds)
  done (took 5.545351174 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.123531489 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124968283 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131560408 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160921979 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119124271 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121935447 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15269735 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119801851 seconds)
  done (took 2.204123725 seconds)
done (took 35.164497589 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135486421 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129548697 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129912707 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.152543918 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.248730182 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.118768873 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127430097 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116186299 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.153999488 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13112173 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109485275 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.146491979 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.129291911 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120991985 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.24888762 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124401004 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.254625102 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.254021891 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.117370514 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124153523 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.147868387 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.224309715 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.152776352 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119181294 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.244045068 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.114567409 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.244818003 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121329455 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.120018941 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.110785567 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.250554101 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.151642533 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118566116 seconds)
  done (took 6.32904615 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.233316271 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.149812479 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.119219171 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117863342 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119634522 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147736003 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.238690189 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.149822773 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117677064 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117157288 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.147384251 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.221318611 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.154904606 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116488387 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122791435 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.109729896 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.271293197 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120589518 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.142149482 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.093776997 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113437563 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.11888714 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.28182557 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.143819586 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.120255503 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.117865467 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120766502 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155117072 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.121524862 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.119928538 seconds)
  done (took 5.58393219 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125038936 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131660165 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.136770826 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.217326546 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147563868 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.15985852 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137814356 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132777308 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.169631154 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112549358 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127016453 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177159133 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12812775 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12187433 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145199258 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132025836 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13386817 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14144861 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120577881 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129189665 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162267078 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130506009 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134155241 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149653773 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111880716 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119923449 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150087627 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127205792 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121034064 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.153481201 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115946505 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11557212 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.114077717 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.176759202 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114098666 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.153065685 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.13958622 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125226625 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.153597907 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144956751 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115812734 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.141354319 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139423729 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166556991 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.141974126 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127210874 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124158091 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126390246 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140999396 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132177677 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.181092231 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114382364 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133265305 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.139411759 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11224612 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12647927 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.113171164 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.144637405 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127923487 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.115082335 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.167149037 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120161392 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124185221 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.142936377 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123799783 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111447002 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.11106677 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.145135145 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139448916 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12011443 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.17778442 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112692871 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123071175 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.153683306 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12491392 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124526663 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.140255142 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12576629 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12329562 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.146564767 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126928379 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.115189739 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.114373694 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.158907416 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132424515 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.154048621 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125457845 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125303299 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.114952267 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.143230426 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129854698 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.113638099 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.147762751 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.127071709 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.112331262 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.145398118 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126980341 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123606329 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.13909416 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139336083 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.11679969 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111218085 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.167980803 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116683833 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.117351015 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.152576349 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155101809 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.112057968 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.152986072 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126060021 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112663763 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.150034486 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.117072502 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.111819549 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.159750027 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.12931114 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119878468 seconds)
  done (took 16.87317174 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.350014078 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.336527643 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189578124 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.420229893 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126206048 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.268571277 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.333822573 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.337621744 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113511201 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.17626056 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175306336 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.30382518 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.113078889 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.173685642 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.339387639 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.393736983 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.172616366 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149045782 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.178010995 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127806472 seconds)
  done (took 5.952039141 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133222718 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.14885071 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164923572 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14066493 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123991851 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159971539 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113689446 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134647203 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.1542478 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122401841 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115782438 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157856385 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126862021 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129397424 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157027623 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.146394249 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120210036 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146953391 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.1360937 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.11693797 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130048184 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138860513 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120640268 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.1636802 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.13287762 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123600743 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141400981 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119448823 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12033648 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.1495175 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118550593 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130662592 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.149009458 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105818224 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125931713 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130404323 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.1481602 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117368569 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.11906829 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.143984675 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129207532 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12609395 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12008179 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.128599493 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132767245 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109410247 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.127369913 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.155005283 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106338787 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.132300333 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.155677303 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128478243 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.119682927 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.163111278 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122041029 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129088112 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.153045064 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128198756 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.117470063 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.139187609 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112498787 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116293163 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.121293143 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.157451632 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125741149 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.131808028 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.159868591 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113224999 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.11719598 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.145809953 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117459147 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.126062326 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.162026962 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122412804 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.118530482 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.154542168 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12184818 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094614998 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.121141978 seconds)
  done (took 11.626629138 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139203315 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123697589 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130361466 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.176902706 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127040589 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118416267 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.152194984 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133498195 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127065565 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160440376 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127978957 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125859039 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163941068 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123959708 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122703047 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158789167 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129703564 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150999801 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160889463 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140352073 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127501002 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.149862746 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127238916 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123837675 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.170965646 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126340801 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.13944619 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.157035135 seconds)
  done (took 5.101002763 seconds)
done (took 52.616123433 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.327449741 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.498284897 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.282565881 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.280656708 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.311082854 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.284397608 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.299311139 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.280341458 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.623483999 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.25035602 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.280165676 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.294019825 seconds)
done (took 29.192233169 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.353623628 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.286531444 seconds)
    (2/2) benchmarking "String"...
    done (took 1.564531734 seconds)
  done (took 5.019913368 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.269840701 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.269921264 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.51538732 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.268318241 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.284987763 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.270472321 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.278527048 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.272466969 seconds)
  done (took 16.329261146 seconds)
done (took 27.144291053 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.2910097 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.46220755 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.523667397 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.249173349 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.273604048 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.270872933 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.270784034 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.294861746 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.272202441 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.251287815 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.664664612 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.536001771 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.271948695 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.634987462 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.249163814 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.296476176 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.269933503 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.517396592 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.273414996 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.314081024 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.248348122 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.258271342 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.283469895 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.27569056 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.275438691 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.281263209 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.267075547 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.270692069 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.471423742 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.298601219 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.305435033 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.271515673 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.263977935 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.274926305 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.282558903 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.288022241 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.477755089 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.280215511 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.248892035 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.299170108 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.473565357 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.290824084 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.27159643 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.284388124 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.253069575 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.288498931 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.263351405 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.382959361 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.29093394 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.292437926 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.280927327 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.654502623 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.286912569 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.2837872 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.280197487 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.513342951 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.283609983 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.327893959 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.298900583 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.284544109 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.271453703 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.272483046 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.292546101 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.274202153 seconds)
  done (took 147.98049162 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.272585582 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.276447796 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.274743772 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.335804093 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.274828623 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.275954898 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.270859891 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.272094449 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.275571612 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.276276397 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.275323486 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.274942569 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.274819086 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.222339159 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.283419955 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.291490006 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.275516508 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.272704197 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.285802651 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.271757594 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.271500077 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.277100837 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.293650742 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.276561363 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.31627424 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.352466131 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.287216717 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.298682665 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.285684641 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.271888853 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.307182646 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.324988788 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.850920093 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.143262942 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.278298729 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.280535951 seconds)
  done (took 82.820270986 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.270647323 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.271869497 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.272368847 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.271899508 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.302553632 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.273734045 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.272212115 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.804660989 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.808134438 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.255106929 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.398307807 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.497554993 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.488527493 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.276113059 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.359423222 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.284299778 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.271773014 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.287291318 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.295180287 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.274954705 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.270965235 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79571315 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.286143236 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.398257131 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.442081845 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.285218624 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300911495 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.657781012 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.26936387 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299917058 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.593317413 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.315361566 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.272365902 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.561879996 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.598152875 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.38095234 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.270656168 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299387916 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.270028236 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.545519113 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.269746757 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.271521851 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.272380956 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.865123791 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.273553408 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.785274635 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.274065198 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.187317433 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.272880804 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.269994629 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.181882642 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.863374444 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.272313109 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.270132681 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.27208169 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.269322767 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.271097538 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.298027784 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.143062527 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.360521797 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.269769753 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.272196714 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297891278 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.270011773 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.269164008 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.438782247 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.271816809 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.467423255 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.328723211 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.373095824 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.77298422 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.270849557 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.358058779 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.381762516 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.267573646 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.269441222 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.2700108 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.268952825 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.37594021 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.268462724 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.907751098 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.269267574 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.434560093 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.283875823 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.413399718 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.367207081 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.268085531 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.54044806 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.272692725 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.269190502 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.933174072 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.360855107 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.268704846 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.269083031 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.268058759 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.906546289 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.768003347 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.443236975 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.273652834 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.734304734 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.271617834 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.084380421 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.759500447 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.851243665 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.273706819 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.376457683 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.433065828 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.284789528 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.269991815 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.414754804 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.273831586 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.329146477 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.269846363 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.665359896 seconds)
  done (took 379.041927471 seconds)
done (took 611.015211101 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.10133343 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.05800408 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.201070008 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.067005476 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.05130352 seconds)
  done (took 11.646936989 seconds)
done (took 12.818010422 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.445026676 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.444873527 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.324487507 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.448811211 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.304158031 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.460973642 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.4298479 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.291069216 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.376748286 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.343332766 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.374658527 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.317551882 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.302641189 seconds)
  done (took 19.032597679 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.54272731 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.280661875 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.336306461 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.516091639 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.314541173 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.589823032 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.568119751 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.28155279 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.426419136 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.29385886 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.293841237 seconds)
  done (took 18.615338496 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.528662035 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.281890391 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.339347182 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.525132998 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.317522876 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545341283 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.573410026 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.28234588 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.430276866 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.295318781 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.291639615 seconds)
  done (took 18.581015328 seconds)
done (took 57.399420249 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.305842963 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.361423098 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.304171428 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.292501993 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.290259047 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.288699312 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.295668853 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.288774493 seconds)
  done (took 11.597815947 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.289133714 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.289291693 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.287117253 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.28961665 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.290162239 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.290823367 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.289922099 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.288778892 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.289582934 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.287639506 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.287677975 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.288591666 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.287711309 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.288918472 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.288602327 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.289730811 seconds)
  done (took 21.794746027 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.290957752 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.289366173 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.289169676 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.290103505 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.287789753 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.289127478 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.289458602 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.290220716 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.289972866 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.28896346 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.29062027 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.290728832 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.291364428 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.291325852 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.290271896 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.291325792 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.289725084 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.290799031 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.293450316 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.291477197 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.289087029 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.28990822 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.293124984 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.289955737 seconds)
  done (took 32.141134803 seconds)
done (took 66.705418209 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.275641396 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.277180286 seconds)
  done (took 5.724723192 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.349742366 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.348383917 seconds)
  done (took 3.871008765 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.291964141 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.291537531 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.290952681 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.291659891 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.292434179 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.290870013 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.291923971 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.291556989 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.291263954 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.290643362 seconds)
  done (took 14.087903759 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.292264858 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.29233224 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.290297317 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.291011215 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.291586327 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.291544385 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.29225385 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.2905279 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.291744832 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.291132716 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.289777813 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.291971872 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.293415553 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.293441677 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.292625565 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.292290747 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.29300305 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.293373865 seconds)
  done (took 24.43005879 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.306310343 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.314864767 seconds)
  done (took 3.795607761 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.420183315 seconds)
    (2/7) benchmarking "second"...
    done (took 1.334410316 seconds)
    (3/7) benchmarking "month"...
    done (took 1.397694783 seconds)
    (4/7) benchmarking "year"...
    done (took 1.38928198 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.334685651 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.314329691 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.336884032 seconds)
  done (took 10.701871532 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.277868306 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.558567345 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.731628656 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.426740069 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.270074614 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.29099309 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.255963365 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.29116074 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.292868069 seconds)
  done (took 14.570600372 seconds)
done (took 78.355371281 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.285121287 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.300895064 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.294591694 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.294664889 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.598230344 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.311608694 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.28238624 seconds)
done (took 16.545171001 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.259970964 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.259184762 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.260003379 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.274909267 seconds)
  done (took 10.231533515 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.280020476 seconds)
    (2/2) benchmarking "read"...
    done (took 1.602798382 seconds)
  done (took 5.05916357 seconds)
done (took 16.468290014 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294974034 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.296276413 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.295453665 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.297836259 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.295328264 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.297345059 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.295399428 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.295195752 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.296735674 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.295749341 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296775215 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296570377 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296723577 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296720885 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.295432747 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.295209055 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294975481 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.296340874 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296335611 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.296275907 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.296473068 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295057567 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.29626765 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.297294572 seconds)
  done (took 32.282798865 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.295623882 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.29703887 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.294593025 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.296210589 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.295998961 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.29719178 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.297335426 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.296202051 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.296126051 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.296337838 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296675776 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.299113767 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.296391817 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.296503356 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295693446 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.296950135 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.295413502 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296367872 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298496511 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.297485614 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.296743566 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29664357 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.298209013 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297392157 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.295704122 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297688535 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.296384237 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.297696634 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297611687 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.298047688 seconds)
  done (took 40.082468551 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.300287726 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.301261528 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.295932752 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.297392805 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.297675773 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.29832016 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.296292699 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.298927267 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.297432368 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.297710652 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.297523823 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.297325759 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.298437877 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.298827783 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.290451692 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.289615469 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.289997122 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.290769156 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.288716591 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.290676531 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.28963072 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.287782796 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.280704602 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.280926192 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.282368687 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.282683013 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.2819555 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.282883959 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.282845985 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.280185103 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.280270428 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.278864307 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.277940562 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.278508836 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.2782586 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.279848574 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.283767111 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.282798708 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.277540329 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.277641805 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.276748808 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.277220653 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.278404438 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.277826278 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.278212744 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.277572153 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.277787117 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.278151958 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.27841367 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.279806258 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.280894621 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.278354957 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.278571264 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.280309813 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.278580963 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.279280607 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.279269583 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.279817134 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.278262454 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.279453325 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.278416174 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.277404077 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.278864059 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.277981797 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.28080137 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.278372327 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.279999099 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.279852378 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.27980896 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.280191425 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.27893803 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.280688797 seconds)
  done (took 93.64665294 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.280160262 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28108299 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.282122448 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.280196847 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279544747 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.279242497 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.280983578 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279760647 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279842427 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.281433284 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280713203 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281123358 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28105687 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.281816364 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281187085 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.281799058 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.281659627 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.280366147 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.281240621 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.282868339 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282182286 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.280716387 seconds)
  done (took 29.346643991 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282175723 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282681159 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.280601731 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.283127532 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.28304987 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.28333383 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.281352471 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.283052836 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281063342 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279754506 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282016911 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282296747 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.28324748 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28154396 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280963364 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.284249863 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282416453 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.282090781 seconds)
  done (took 24.24507682 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.282947508 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.282076916 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.28416221 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.283408429 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.28199563 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.282338727 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281735973 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.283433443 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.28339535 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.283973534 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.282551038 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283329438 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.282417959 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28233906 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283252413 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.283915067 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.284872701 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283540014 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282947389 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283222951 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.283721121 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283951664 seconds)
  done (took 29.395796084 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285399008 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282743191 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.284964902 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.28441234 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.285946865 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.283637927 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.284390077 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.2842533 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.287430417 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.284718125 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285119903 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.285859869 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.289197696 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284709037 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.285524494 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287280379 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286658581 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284165504 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283312728 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.285863852 seconds)
  done (took 26.875013148 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284866866 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286131936 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.285282068 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285783879 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286327769 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.285998856 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287490899 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.284798469 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286563336 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.285873237 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.283552589 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.285235362 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286820371 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285693227 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286144673 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285725804 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285057694 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285168378 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28554901 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285583356 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.285346975 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286730334 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285035158 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287744597 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287120453 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286084713 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287188938 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287441201 seconds)
  done (took 37.17538191 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286372388 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.287250376 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.286131896 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.285378196 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.288541908 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.288152218 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.287902173 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.286040334 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.288474575 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.288161589 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.288467405 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.286056216 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.287846386 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.287919656 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.287450474 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.289085726 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287840418 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.287769128 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28857347 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287518496 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.288597397 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287228133 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.288883577 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.28949426 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2887598 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.28767422 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29028182 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288822734 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289464263 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.285142218 seconds)
  done (took 39.807598848 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.303734729 seconds)
    (2/2) benchmarking "in"...
    done (took 1.304554466 seconds)
  done (took 3.777196792 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.286424059 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285797571 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.284527009 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.277040191 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.278684865 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.277188633 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.279992109 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27679341 seconds)
  done (took 11.415865698 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.268920543 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.27903727 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.273322576 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.273781603 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.274006197 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.264185639 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273176972 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.27865218 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.26503451 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.266701749 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.265693015 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.267950181 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.265818119 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263516765 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.264516561 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265649843 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.271763175 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.271269825 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.267477555 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.268613638 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267645138 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261393197 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265388578 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.270341294 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.26085386 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.265789044 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.263058929 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.266119266 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254859032 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.261157443 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.258162242 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.264575468 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.263629453 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.265043551 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.259407704 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.259559224 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260590267 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258373574 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.261302789 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264575157 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261882357 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.254929864 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.251018362 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.253758018 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254109135 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.260695753 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.255929113 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.257440159 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.248186918 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.251196589 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.259876124 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248350474 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.258993093 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253638579 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.254560491 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26089545 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.263565377 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.251716838 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.253233288 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.258975376 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.265017957 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.260839155 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255754589 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.260885044 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256427487 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.264706013 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261221756 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.264695119 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.25799972 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.258686092 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.259993483 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267626806 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.265490416 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.261886114 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258608553 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.259670381 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251089615 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261054147 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258279216 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.259577768 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.265388456 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256121912 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256514537 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262938673 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.250914231 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.26005802 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.25595574 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.254993959 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.248692543 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256012327 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.261673552 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.254474896 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.24353757 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.250078031 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.251328721 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.254551382 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.246121071 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245289786 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.254681617 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.251325089 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25040697 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245070476 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.251380076 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256920923 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252396259 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.250846502 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.25628325 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242017361 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.251830934 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.257773235 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250470326 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.242373994 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.247978929 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.252810976 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243956244 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.247996139 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.254961737 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.245494339 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.255466726 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.2499845 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250233055 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.260971837 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.256443923 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.250008877 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.245142262 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.256986083 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250613921 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.247629528 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.256824579 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.25030116 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.251499615 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.247495785 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.25781568 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.24399617 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253279192 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245534391 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.253645573 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.253141053 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.250796189 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.247584421 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.25118934 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.248852652 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.250616748 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.253542955 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.257847777 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.248677038 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.258969104 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.252087717 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.250703021 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.254410863 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.256055257 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254596964 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.247054845 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.255824694 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.245674413 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25397006 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.246502921 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.258713096 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253223646 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.253010099 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253352549 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.244938895 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248019626 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.255234015 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.251628088 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.252968993 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.255734603 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.251725527 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.253868093 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.245257639 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.255471243 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.245668236 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.247191304 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.257642434 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.253730082 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.254231392 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.249921655 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259489274 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253551728 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25419642 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.247223564 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.251928871 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.259338302 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.254457132 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.262212606 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255573251 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.254221927 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.246455535 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.249306313 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255324738 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247519502 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.260802497 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25957055 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262502754 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.249220828 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.256486584 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.24734506 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.257271264 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.253157107 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.263135635 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.256873215 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254835325 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247640562 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257703489 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.250221081 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.258859116 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.246867716 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.256764208 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.255729171 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.25646556 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254390197 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.248073263 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253065248 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.260226324 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256101805 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256015853 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.24887267 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.259474903 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.247472754 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.25139303 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.259897595 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.256269248 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.258076297 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.263902901 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25371917 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259246221 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.256736988 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.251628269 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.259888123 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254530651 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.255884709 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259167233 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.258068876 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.252883496 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263542529 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.25996902 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.249848705 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.256651375 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.263794278 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.256446199 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.249855843 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.26194858 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.257639204 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.258292709 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.257665137 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250332547 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261863431 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.260935688 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.266523002 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.25080312 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.260002359 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.253000877 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.261593341 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.253559925 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.258961576 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.256478587 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261415013 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265093821 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.256192849 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250604632 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.260640598 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.257793901 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.257669201 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251325156 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.261330106 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.257629913 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.255820629 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.253295767 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.25396135 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.259039737 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.248635192 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.258708135 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.249979763 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266691933 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.272520267 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259092502 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.260932268 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.259252373 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257759727 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.258513268 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.252001313 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251297796 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254737622 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.25307397 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.2520923 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.259636805 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24951275 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.261380493 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256273354 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.25916842 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.259570954 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.257708793 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.250425237 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.261231962 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.259470853 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.257461549 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.249272198 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.259261254 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.252522096 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259451882 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.258313612 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.252765482 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265002714 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263246304 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.25629357 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.256232573 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.255135805 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.253109239 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.254219896 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.264809755 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.25358705 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.26254059 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.252925176 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.257004978 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.255597151 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264106878 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.268336343 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.253181581 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.263745522 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.259119586 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.252075335 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.253802669 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.261168605 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262562919 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.270682923 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.25313146 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.26301936 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259713021 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.259596937 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.259199434 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.260659267 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259904559 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.26052389 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265241545 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.265720574 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.256067811 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261795596 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.269539792 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.260153884 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.260042902 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.252788156 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262605929 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.269130885 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.255245674 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.259174417 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.257605517 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.262904161 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.261862585 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.261056302 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.263411072 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.259700914 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26377541 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.266555477 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264491595 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.261420381 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.265531762 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27299103 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265237093 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.273506422 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.256677494 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.267275013 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.262139153 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.255453778 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.258620068 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.258146195 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.264901958 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.255205838 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.265468016 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.26204151 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.258711098 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.263097403 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.269571139 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.25494755 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263346717 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278053476 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.255018422 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265267596 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.263309393 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.255425218 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.265160833 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.263726689 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.254896647 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.258527456 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260913177 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267434952 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.257243954 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.266186626 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256334185 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268199463 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.264204777 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.265988369 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.263974998 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.264437058 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.257167324 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.265127786 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264486037 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.274162216 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.258225297 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264260676 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.260188024 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.271479115 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.276296081 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.259388923 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269390277 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.266491522 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.257184012 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.262065592 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.269484254 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258412496 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267449916 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.256861191 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259096927 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.260464317 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.264748094 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.267965884 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.26770528 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.258695088 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.259523059 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267243411 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.265116442 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26640101 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.261150273 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.270333693 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.258051472 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.258581692 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.26771902 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.259955131 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270998686 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257733728 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.263006848 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262533349 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.268923615 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.266503324 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26584221 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.258368085 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.260578285 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.271798929 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270336575 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.263684818 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.263034819 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.270530145 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.261323477 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264344696 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.263439277 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.262084009 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.262293638 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.270601742 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.261600573 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.262281288 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.260812261 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268558778 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.270679451 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.269764143 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.262053387 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274076529 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.275359308 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273985623 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.259655548 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.26286191 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.263832528 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.269106934 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.268752912 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.261547369 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275644926 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.273769198 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271380724 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268037385 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.269848748 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.260662348 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270793085 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268445845 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.26416482 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.274559408 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.263919156 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275262079 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269325701 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.27018815 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.262832857 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.263705645 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.263804163 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.266526746 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.27129064 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268702004 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.272834064 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.267062475 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274856172 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271448797 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.270144934 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.270413578 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.261418775 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271882426 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.262250364 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.270979725 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.273876531 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.263518559 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.272673052 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271735639 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264035657 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.267978955 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.274566071 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.271406777 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.263938268 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.267969594 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.274559194 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28126511 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.271425615 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265422224 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.266806776 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.275873705 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271755423 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.271221157 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.263350189 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279263487 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.284730584 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265601354 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.26820113 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275251508 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.282531846 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.272475346 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.271787358 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.267234083 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.269724096 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.276857625 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.27300841 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275387299 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27851653 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.268906328 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.27432568 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.265696423 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.270004498 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.274137244 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.283778643 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.273625862 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.267702626 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.282369201 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283793527 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273297147 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.291016369 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.281506963 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.274023426 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.278876079 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266896618 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.274880894 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.271145772 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.278487784 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.275458539 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273287925 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273627053 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.265848888 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274665297 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.281569363 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.282956328 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.273560725 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.267475092 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.268806387 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.276237567 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.274998392 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.276930694 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.276279567 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.27512433 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.276062113 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.270110322 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285359609 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.289418211 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.279769443 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.276573274 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.276559766 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.274070878 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.279275945 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272953996 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.279521563 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.275581031 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.275878666 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.272355333 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284362504 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.276953476 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.269259262 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.271274307 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27105639 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.280250254 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.283011197 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.294311571 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.280280263 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.279586928 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276250619 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.277307472 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.2700396 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281094589 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276842656 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.271530179 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.271686965 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278477031 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.278030405 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.277021347 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.269873946 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.282231399 seconds)
  done (took 753.311368241 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27868405 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277316155 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27693047 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276528403 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279003521 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2765078 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27681215 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276816716 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276861525 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27677006 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277802813 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278057994 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27784843 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278000542 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277455123 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277102946 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278597016 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278795066 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278269059 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279051655 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.279699328 seconds)
  done (took 27.995050147 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.279938531 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.280031785 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.278989116 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27766647 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278784069 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.2786158 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.278648282 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278984236 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278930278 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27819396 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.280427669 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2801969 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.279153334 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.279875515 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280847897 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28108741 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.279985143 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279129474 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.281037864 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.280365382 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279621524 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.280105729 seconds)
  done (took 29.314301516 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.279514487 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.279576937 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.273054338 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.282695783 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.279711269 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.279273167 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.281357392 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.281104036 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.280054051 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.273953695 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.274340104 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.27429552 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.276775308 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.285016095 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.276311753 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.286173796 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.281624751 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.283629699 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.281551204 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.280575498 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.283756975 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.293728313 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.281643449 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.27302965 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.282180452 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.282089744 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.281735189 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.281543826 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.274439408 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.283980243 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.28268738 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.275849653 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.284744181 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.283163851 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.274733128 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.284169329 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.282274585 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.282977452 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.281291632 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.283012115 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.296292234 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.282747033 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.286265511 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.294456416 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.282294646 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.275140109 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.286873826 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.283629392 seconds)
  done (took 62.676293264 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.282444402 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282833466 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.284055858 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283497813 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.284278658 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.283222523 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.285262856 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284101934 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.283631088 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.284187476 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.283301758 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.283294388 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.284310332 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.284187694 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.284826129 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.283501773 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.283642202 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.285384682 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.284257731 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.283801642 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.284957249 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.284221124 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.284469461 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.284053396 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283484018 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.285624334 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.284676182 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.283332234 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.285128307 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.28511275 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.283873943 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285070155 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.285609256 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.28483215 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.28450312 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.284444358 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.286341402 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.283904634 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.28576673 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.286787493 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.285055505 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.286817266 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.286445149 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.284862179 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.286213825 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.284637576 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285952862 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.285837408 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.286025613 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.286173543 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.286397888 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.286685311 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286572797 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.285573215 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.28749855 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.286378716 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.285879337 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.286134254 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.287304887 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.287424164 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.287766875 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288028135 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.286580429 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.287766839 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.286176217 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.287511951 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.288292325 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.287786512 seconds)
  done (took 88.567746173 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287492393 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.287522679 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288045687 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288286925 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285811834 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.287449358 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288321829 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.288893935 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.288653249 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289592736 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288552076 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288513773 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.289752664 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.288346516 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287848621 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288584907 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290345346 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289787326 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288351898 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290628146 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.289229198 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.290053213 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.291222906 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.290490951 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290447612 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.289413174 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290454865 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289515017 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289952417 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289678179 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290961486 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.290293053 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.290363924 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291142827 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.289957744 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.290212033 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291695402 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290566913 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.290693995 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.290869567 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.290489889 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292174911 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290835486 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.290842785 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290993271 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.291271875 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.290941129 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.291298059 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.290759118 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29065168 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.291773683 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290024382 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290941329 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291060196 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.29131259 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.291749583 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290603932 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291693016 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291487486 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.290575933 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291875596 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.291063658 seconds)
  done (took 81.155904236 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292198255 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291333336 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.290881233 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.292278555 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.291350771 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29156876 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.291934633 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.292084465 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.292554032 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.291870801 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292995785 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291326166 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293738704 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291992654 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.291829337 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293132396 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29450913 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.293159165 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292490576 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.29283036 seconds)
  done (took 27.020874128 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.292087694 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293533685 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.292690616 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29369324 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.291750235 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293913337 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.292730158 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294541592 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294557813 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293221122 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293165945 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294181061 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294554434 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293390594 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294158965 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.294737812 seconds)
  done (took 21.873679958 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.295028977 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.292995688 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.294914037 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.294696859 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.29462562 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.292971033 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.29442107 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.29487154 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.293234941 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.295108272 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.295226493 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.294706004 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.295813552 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.29481574 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.294417479 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.29577167 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.294254011 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.293958929 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.295263502 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.295503075 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.296894469 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.296175204 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.295184355 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.294682774 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.29409407 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.295752819 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.295373058 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.295464026 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.29580093 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.295175267 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.29478018 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.296537793 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.296284692 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.295660637 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.296298697 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.296848018 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.294900308 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.29556909 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.296920697 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.296843106 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.296063157 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.296666434 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.296804507 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.29623187 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.296456069 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.297077022 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.297588248 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.296564633 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.298148271 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.297660342 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.296505461 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.297539537 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.297212041 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.297980814 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.296951831 seconds)
  done (took 72.440794251 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297276437 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298595732 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.298062102 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297591226 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29766977 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.296441267 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297981337 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.299647897 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296425923 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.298927531 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.298015141 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.300815744 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.298438504 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297593907 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297412224 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297480515 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.297694277 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.296540896 seconds)
  done (took 24.542551646 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.298384454 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.299539167 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.299052191 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.297789629 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.297824322 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299400232 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298099697 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.298273707 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298734725 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.299297456 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298973213 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.299128346 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299592692 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.300979186 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.299891606 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298432263 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.29962168 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299474294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.299571577 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.299869011 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.299797856 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299540376 seconds)
  done (took 29.762261013 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.290095811 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.290386986 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.290297409 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.305139596 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.303994096 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.290326875 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.291568501 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.290492571 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.310486867 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.329720074 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.32307286 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.30267098 seconds)
  done (took 16.799627579 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302883899 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300833353 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300599549 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300749764 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301197058 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300076506 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300695346 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30172193 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301462102 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3012902 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302299873 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300479204 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30006748 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301419461 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301652717 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300392807 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301454924 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302713434 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30280412 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301628801 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302869364 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301025452 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301350257 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302435886 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301567378 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30290271 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302812557 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302055489 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301976495 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301654329 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302378745 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303297506 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301595789 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303903529 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303465759 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303180603 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303709102 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304541896 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303236444 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303132753 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303618753 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3032536 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303894447 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304393896 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302329915 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303065399 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304428181 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30411831 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303263462 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305716971 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306106592 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302808893 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304427824 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303872017 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30475944 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304484801 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305487957 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305005214 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305093265 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305645288 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304110855 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303765508 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303401503 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305888944 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304361463 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304913367 seconds)
  done (took 87.176692621 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303975185 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303900324 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303739043 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30509892 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305557784 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305131155 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30567057 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305237338 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306554001 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305205701 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3055815 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306331734 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306053206 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30585536 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303884806 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305589378 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305202092 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306452629 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305783019 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306923406 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306178471 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305781323 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305963078 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305683709 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305584496 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305846126 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307345207 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312868773 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306183168 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306702788 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306397772 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30784451 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306742108 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306046976 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305895403 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305788791 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306414661 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306780636 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306899421 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307640251 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308541072 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307780905 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308174292 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307825038 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308099019 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306816152 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308218634 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307938602 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30788016 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307724918 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308547403 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308521779 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308003083 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307895856 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308227239 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307786401 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309953402 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308878075 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308852055 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308746801 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307347444 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308710752 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309574911 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308431534 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308605118 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309333992 seconds)
  done (took 87.447130471 seconds)
done (took 1779.31406572 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.464804167 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.419192805 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.29902987 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.307212157 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.298469188 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.295452564 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.311242332 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.299375207 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.299880224 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.298816762 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.299310215 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.488287282 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.332016612 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.298840926 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.29989259 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.396138805 seconds)
  done (took 26.597195152 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.323251278 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.315932028 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.418426217 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.31372577 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.337171462 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.490346615 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.373735165 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.317670635 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.472359242 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.331854154 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.314849868 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.336118352 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.314441465 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.311847515 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.334179513 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.490945212 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.563812013 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.31671276 seconds)
  done (took 28.866867552 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.73075139 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.326217993 seconds)
  done (took 5.256830442 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.335386343 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.316130311 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.317629162 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.315646287 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.313950056 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.307543143 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.315175029 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.315925471 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.309285918 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.436964407 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.322929469 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.329144825 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.331889399 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.317107131 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.325602693 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.361077587 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.461315372 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.326323962 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.324955483 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.323636979 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.31638739 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.406008318 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.356240485 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.332609754 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.432544685 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.315369018 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.326235769 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.323855669 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.43631286 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.326976555 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.316829991 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.31806769 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.318515924 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.254243813 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.847271878 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.314988548 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.341505468 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.326284738 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.326177409 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.448908424 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.319230058 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.324316567 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.311952198 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.842034035 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.426757584 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.435990484 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.331305788 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.324940843 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.319260289 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.379595974 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.32245585 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.321181457 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.376110481 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.108451263 seconds)
  done (took 84.439811376 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.327892389 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.311980585 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495438694 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.336657428 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.312544363 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.315978428 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.315754644 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.582637949 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.344688469 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.313112886 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.626837576 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.91982611 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.325974583 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.382039128 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.349456922 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.366721373 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.316723897 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.327508157 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.315720161 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.315692644 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.870884372 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319563285 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.313922026 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.404778165 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.353110506 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.837028105 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.319805834 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.315339436 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.333581305 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.313997434 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.890485295 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.33030254 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.365340593 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.318013867 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.593778113 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.691286323 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.652210215 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.316542939 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.358511538 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.313391252 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.3424658 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.826290856 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.669465004 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.314175711 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.314867748 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.826510699 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.315367642 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.327364652 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.313729351 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.58269971 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.314608806 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.317695473 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.319682711 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.31505418 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.316338907 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.3678235 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.39211312 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.83838684 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317012991 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.315634301 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.326814891 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.31861791 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.324388972 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.319323463 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.3159061 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.675392872 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.583703207 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.322726976 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.67152243 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.88061512 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.315623528 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.982902202 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.317583817 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.340362354 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.36275338 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.317550415 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.320207421 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.836249693 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.337316356 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.31670817 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.651453156 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.322053886 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.62227835 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.336068996 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.319728194 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887066169 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.332541271 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.356370552 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.317387919 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.329177319 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.317351253 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.322691148 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.602238274 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.378878854 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.317654814 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.318613512 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.369723738 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.318296075 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.334149231 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.318711101 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.968622834 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.330692535 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.318232774 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.337135766 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318464946 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.324779065 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.322060738 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.321302893 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.602924436 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.318967697 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.344321652 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.321813619 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.318197712 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.325750954 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.411457097 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.319283956 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.614752502 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.321571908 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320092296 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.32154284 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.322791999 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.339806436 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32003526 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.342930516 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.292600226 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.621273791 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.337807918 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.335056034 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319854963 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.320460811 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.342781896 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.322784141 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.374761896 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.323244725 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.112134223 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.3267893 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.332418989 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.320816146 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.331567939 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.32130641 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.324103042 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.322079075 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.620824614 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.606361322 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.577447296 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.322435238 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.321956768 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.126555507 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.329493445 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.501925982 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.338325598 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.323152543 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.601226533 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.563100322 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.321775142 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.322926427 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.32272767 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.602265555 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.334882701 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.643536325 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.921967159 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.322791209 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.323085146 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.109956592 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.126416899 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.328888117 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.324857897 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.626052063 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.343703353 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.321596682 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.323791042 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.323053304 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.323700137 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.328646078 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.323673903 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.322188492 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.323202028 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.612757547 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.517583938 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.339603894 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.325195243 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.842616861 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.344451884 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324456977 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.337293492 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.327153325 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.323024709 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.386591475 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.325679614 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.324020114 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.323143806 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.324341829 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.868737823 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.325628889 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.324508345 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.518188777 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.060255985 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.32711422 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.324451591 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.32577589 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.383769084 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.875712107 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.373451328 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.619834942 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.332497861 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.364114223 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.325905029 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.331383399 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.877401174 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.337404638 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.324091486 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.063739034 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.326422147 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.807192125 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.324853198 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.326117745 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.986563282 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.325045606 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.325725494 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.33413516 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.325964458 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.648292029 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.325991092 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.324786351 seconds)
  done (took 495.765009259 seconds)
done (took 642.115351776 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.325389055 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.325472134 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.332315481 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.330263563 seconds)
  done (took 10.52980851 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.343686806 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.332935278 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.341944231 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.332105524 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.343356885 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.332047199 seconds)
  done (took 9.243039824 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.328588714 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.327736394 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.332742583 seconds)
  done (took 8.207013653 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.529542312 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.352222219 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.672899599 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.333302489 seconds)
  done (took 9.1061496 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.34390492 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.343590726 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.342208635 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.343723491 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.343156136 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.345256875 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.344137776 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.344977788 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.346339438 seconds)
  done (took 13.315866201 seconds)
done (took 51.619890654 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.304425747 seconds)
    (2/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.539403798 seconds)
    (3/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.502221971 seconds)
    (4/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.440759006 seconds)
    (5/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.337481606 seconds)
    (6/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.484350509 seconds)
    (7/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.402019781 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.399411878 seconds)
    (9/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.58726371 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.366942964 seconds)
    (11/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.440827075 seconds)
    (12/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.388471916 seconds)
    (13/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.30861275 seconds)
    (14/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.578176436 seconds)
    (15/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.306637598 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.467437025 seconds)
    (17/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.51703414 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.411620991 seconds)
    (19/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.406204932 seconds)
    (20/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.442294317 seconds)
    (21/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.358260271 seconds)
    (22/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.437276673 seconds)
    (23/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.30608459 seconds)
    (24/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.419348643 seconds)
    (25/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.305168056 seconds)
    (26/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.406191952 seconds)
    (27/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.403986175 seconds)
    (28/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.477513908 seconds)
    (29/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.529164248 seconds)
    (30/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.310711244 seconds)
    (31/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.505170952 seconds)
    (32/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.306528833 seconds)
    (33/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.343644949 seconds)
    (34/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.416031882 seconds)
    (35/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.312792019 seconds)
    (36/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.543748815 seconds)
    (37/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.310919795 seconds)
    (38/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.48394023 seconds)
    (39/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.362558976 seconds)
    (40/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.308592617 seconds)
    (41/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.531915696 seconds)
    (42/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.334370636 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.486463598 seconds)
    (44/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.425182883 seconds)
    (45/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.309004147 seconds)
    (46/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.427737332 seconds)
    (47/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.607291279 seconds)
    (48/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.406740932 seconds)
    (49/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.370259045 seconds)
    (50/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.362209435 seconds)
    (51/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.410213541 seconds)
    (52/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.333771681 seconds)
    (53/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.332384643 seconds)
    (54/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.374822528 seconds)
    (55/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.422275347 seconds)
    (56/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.311131226 seconds)
    (57/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.390923063 seconds)
    (58/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.423352003 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.331542113 seconds)
    (60/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.459641786 seconds)
    (61/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.444442823 seconds)
    (62/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.31081617 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.334919592 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.418872497 seconds)
    (65/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.476789694 seconds)
    (66/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.64484221 seconds)
    (67/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.313397968 seconds)
    (68/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.825357416 seconds)
    (69/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.419002857 seconds)
    (70/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.309237472 seconds)
    (71/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.324857323 seconds)
    (72/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.438593288 seconds)
    (73/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.376023418 seconds)
    (74/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.419500078 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.479479678 seconds)
    (76/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.30896577 seconds)
    (77/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.338965183 seconds)
    (78/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.372325026 seconds)
    (79/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.615933966 seconds)
    (80/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.512034225 seconds)
    (81/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.313496977 seconds)
    (82/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.604326722 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.45603942 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.489590601 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.444892633 seconds)
    (86/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.365313541 seconds)
    (87/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.438910359 seconds)
    (88/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.310356034 seconds)
    (89/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.63825855 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.48425712 seconds)
    (91/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.309989164 seconds)
    (92/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.461212424 seconds)
    (93/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.309600124 seconds)
    (94/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.322169001 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.443318221 seconds)
    (96/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.488833115 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.573184072 seconds)
    (98/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.422948485 seconds)
    (99/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.339445723 seconds)
    (100/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.364087874 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.438485239 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.472718687 seconds)
    (103/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.537162039 seconds)
    (104/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.678440815 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.447825711 seconds)
    (106/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.402386866 seconds)
    (107/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.566440865 seconds)
    (108/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.545107172 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.443780863 seconds)
    (110/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.312544551 seconds)
    (111/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.350439718 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.351944042 seconds)
    (113/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.317052632 seconds)
    (114/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.671294867 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.378089063 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.431684322 seconds)
    (117/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.448837027 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.445436262 seconds)
    (119/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.311160261 seconds)
    (120/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.564313429 seconds)
    (121/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.424389041 seconds)
    (122/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.412249136 seconds)
    (123/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.56870499 seconds)
    (124/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.54241263 seconds)
    (125/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.408392514 seconds)
    (126/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.369704398 seconds)
    (127/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.734637233 seconds)
    (128/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.542807349 seconds)
    (129/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.606998224 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.316998485 seconds)
    (131/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.374847716 seconds)
    (132/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.570916053 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.471793854 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.425424969 seconds)
    (135/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.505454586 seconds)
    (136/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.313097426 seconds)
    (137/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.37685224 seconds)
    (138/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.44027133 seconds)
    (139/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.315004528 seconds)
    (140/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.486049725 seconds)
    (141/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.352320181 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.459997765 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.401467922 seconds)
    (144/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.313733431 seconds)
    (145/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.312809337 seconds)
    (146/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.381175261 seconds)
    (147/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.409948087 seconds)
    (148/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.674751977 seconds)
    (149/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.606516655 seconds)
    (150/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.322623584 seconds)
    (151/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.37435721 seconds)
    (152/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.317245303 seconds)
    (153/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.422879938 seconds)
    (154/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.314768634 seconds)
    (155/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.601033426 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.587512355 seconds)
    (157/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.476685215 seconds)
    (158/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.365807637 seconds)
    (159/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.504268162 seconds)
    (160/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.500987133 seconds)
    (161/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.441631128 seconds)
    (162/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.431955826 seconds)
    (163/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.573162424 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.401887581 seconds)
    (165/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.494005276 seconds)
    (166/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.447414618 seconds)
    (167/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.414187976 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.375566634 seconds)
    (169/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.403477392 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.44885246 seconds)
    (171/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.576873416 seconds)
    (172/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.681704809 seconds)
    (173/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.543364608 seconds)
    (174/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.554522769 seconds)
    (175/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.497821808 seconds)
    (176/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.398975226 seconds)
    (177/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.509768864 seconds)
    (178/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.631093771 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.448389133 seconds)
    (180/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.673036801 seconds)
    (181/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.371653902 seconds)
    (182/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.345957056 seconds)
    (183/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.462450774 seconds)
    (184/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.82770565 seconds)
    (185/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.380861043 seconds)
    (186/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.485366751 seconds)
    (187/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.427396705 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.579914283 seconds)
    (189/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.544355864 seconds)
    (190/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.371077995 seconds)
    (191/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.359588767 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.501124923 seconds)
  done (took 325.654403994 seconds)
done (took 326.873965015 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364114701 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.435624737 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.341824432 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.342363426 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343373881 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.332978721 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.366755203 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.342691204 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.355783578 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.356344703 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.334844914 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.354598368 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.358325693 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.354707536 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.375089678 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.343782692 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.341996656 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.353638553 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.358273231 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.35909903 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.34500524 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.344222924 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.369130932 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.341973675 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350361925 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.351638859 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.349479241 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.334989043 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.349952589 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.358630979 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.333528432 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.349761893 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.359772497 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.356138836 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344479326 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.353140097 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346069733 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.439661347 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.364801193 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.355847534 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.353887625 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.361288861 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.350074882 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.348805606 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.357158266 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.3707392 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.354136675 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.360655129 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.344422988 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.352580713 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368091029 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.357408943 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.35313235 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.344217746 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.347736364 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.365583414 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.354834739 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364834049 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.353383353 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.346832357 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.380441045 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365771351 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.357175475 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353566099 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.352618654 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.361228639 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.355220237 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.361883599 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.354801431 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347574571 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347610963 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.353996308 seconds)
done (took 106.844008855 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.469125122 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.343824119 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.501109807 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.353152969 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.508914975 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.466148815 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.356962013 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.357536515 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.357842624 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.147819709 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.356533476 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.356223496 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.347431366 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.357359609 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.469174493 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.357100501 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.356070457 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.048181753 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.357911065 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.484236387 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.347512152 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.357606339 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.356731949 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.152685684 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.345927226 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.343505071 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.485620762 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.357602869 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.050999392 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.341591683 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.347127244 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.052075775 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.485644863 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.379080621 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.367244702 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.366996033 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.51343935 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.360254733 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.474147379 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.474821739 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.507017191 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.397195439 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.342330529 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.348573737 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.360197557 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.360501261 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.360149845 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.387037373 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.349555777 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.359325732 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.049942038 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.368356132 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.360689947 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.358526633 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.358449385 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.388739059 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.360885708 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.359732754 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.486760275 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.359611236 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.477369816 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.155226713 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.152015196 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.359368124 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.347304323 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.361119759 seconds)
  done (took 109.618423736 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.420958153 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.427055155 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.461130768 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.350947876 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.402371436 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.463951735 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.350710504 seconds)
  done (took 11.110294425 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.3572883 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.361526761 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.395948013 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396781995 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.358424804 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.520055114 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360116985 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.361038365 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.360205415 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.394476 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.351842696 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.353303792 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.363104136 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.341720851 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.391530474 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.355609965 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.460156007 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.343531763 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.352236856 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.495290883 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352990256 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.362334736 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.394500442 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.356142601 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.352841862 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.349547249 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.132861096 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.352399796 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352294624 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.352789214 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351521594 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.409575093 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.352877057 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.341818454 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352539194 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.460550149 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.352774202 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355552524 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.353480447 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.343302928 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.353461884 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.352720528 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.356840243 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.353704991 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.352662949 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.368613508 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.353553284 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.355328384 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.35350918 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.353944555 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.397050867 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.353368483 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.354091687 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.353785305 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.397518009 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362836169 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.352944301 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.353997868 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.354074702 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354368064 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.497284083 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.391438327 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.354551227 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.391489605 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35454957 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.357292385 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.355543035 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.353773893 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.43439508 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.355205735 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.394278434 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.355883412 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.525564488 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.369222124 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356194337 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.348141464 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.348427868 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.3543292 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.341810737 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.352117646 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.354683866 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.348016178 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.353201248 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354762238 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355441196 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.515222124 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.457129949 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.356134599 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.363022868 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.354666486 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.356070781 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.39887574 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.356307079 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.35639767 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.396715525 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.465090802 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.399596929 seconds)
  done (took 139.264946492 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.361145909 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.360889736 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.351947721 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.375298834 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.350142217 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.349095762 seconds)
  done (took 9.380277616 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.350485737 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.361331698 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.358915907 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.358776137 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.359615876 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.357632107 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.358897199 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351467687 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.361736078 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.359560068 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.360294778 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.359249057 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.360076282 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.361291697 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.359141133 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.360118844 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.359898947 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.358894581 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.360995111 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360186908 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.346443973 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.360488825 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361000834 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.352903879 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.361277292 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.360007742 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.375111396 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.359918827 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.359784363 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.358300576 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.361312689 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.360617637 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.351659482 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.356541363 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.364058439 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.352421465 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364035639 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.36241146 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.360191895 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.361037643 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.36168526 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359886859 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.360759047 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.362925434 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.352545399 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.355815287 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.364697088 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376641666 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.361728379 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.361722333 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.361373875 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.36216968 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.360374717 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.361285438 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.354561344 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356938255 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.363562783 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.362858372 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.362143357 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.354910088 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.362806432 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.361513096 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353950082 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.363334608 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.362388086 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.363148816 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.354073028 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365789884 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363599794 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.362037728 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.363220117 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.361997779 seconds)
  done (took 100.159311147 seconds)
done (took 370.760032048 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.670161348 seconds)
  done (took 3.904784492 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.357021188 seconds)
  done (took 3.602113228 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.103739942 seconds)
  done (took 22.349958004 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.384571649 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.39460974 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.383127742 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.358148052 seconds)
  done (took 10.763414888 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.623591139 seconds)
  done (took 3.868188329 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.374593338 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.381193875 seconds)
  done (took 6.001661065 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.550794247 seconds)
  done (took 3.797419798 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.578728148 seconds)
  done (took 3.824780641 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.393068659 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.385507512 seconds)
  done (took 6.032006153 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.33765834 seconds)
  done (took 3.585039919 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.697198563 seconds)
  done (took 20.943523281 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.383762613 seconds)
  done (took 3.632161808 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.407593788 seconds)
  done (took 3.653248837 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.829550421 seconds)
  done (took 6.074404413 seconds)
done (took 103.267934279 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.359746425 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.367367016 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.367795472 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.366602703 seconds)
  done (took 10.707570956 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.439596734 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.438199668 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.448691188 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.432263075 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.435460728 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.44154954 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.415594599 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.402946723 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.431224245 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.42734613 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.442307588 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.433727265 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.443526453 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.402602477 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.42602712 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.443499179 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.432759949 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.448565855 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.417241202 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.429109815 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.377795301 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.434146767 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.428805631 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.377042291 seconds)
  done (took 35.496134615 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.88371321 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.440048755 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.522028227 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.420492241 seconds)
  done (took 7.513803149 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.481241402 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.481527619 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.499998397 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.536505278 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.583275308 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.495089202 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.40291325 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.399185864 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.384585911 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.483118135 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.561231362 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.481410791 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.695378743 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.376583121 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.698840747 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.377255678 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.379064277 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.48360304 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.53080697 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.55975621 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.379514905 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.481940042 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.484344544 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.481698186 seconds)
  done (took 36.96700116 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.387888892 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.396605976 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.380533778 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.392846318 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.380276168 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.37975595 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.382534392 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.387846502 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.380180849 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.380636391 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.380012093 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.393316839 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.378740179 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.380797344 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.386718355 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.381518815 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.381216499 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.387728822 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.388455704 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.380648492 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.379856678 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.3876303 seconds)
  done (took 31.705767748 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.364668236 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.364290205 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.716207064 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.621641927 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.365408208 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.37001802 seconds)
  done (took 14.052053708 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.438194822 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.576341893 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.376037578 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.709625263 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.79355849 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.373057348 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.372753851 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.60884349 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.902483865 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.901538751 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.428270624 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.4448341 seconds)
  done (took 20.176934892 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457870697 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375975857 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.376170258 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450366646 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375062489 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376674454 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.454263575 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.060837901 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.382878833 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651348034 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37904098 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463031511 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.621973638 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384651302 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38199297 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.345031479 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603874303 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849267774 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380032048 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387217 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414609865 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381492625 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382828809 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.581487084 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383828547 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376802327 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.640451607 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378090902 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652732876 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628276141 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.627543762 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382252036 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654767567 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014622272 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483099698 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577175598 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394680266 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384400982 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.350939068 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.397280628 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385511255 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402242283 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.629889277 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383685855 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379450593 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391260511 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077040266 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.386886668 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.380481072 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381978482 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630180565 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466316521 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.385008503 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378488812 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391622794 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379153021 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.384397368 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507534587 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017076271 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378114393 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387838539 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.385530778 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375874555 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386081794 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013184535 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.389717718 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.387924395 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387145007 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380778317 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381620085 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406450199 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381892105 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.400875941 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381863816 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130281691 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387989199 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388632322 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904541872 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390544079 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.386424848 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60642859 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382820241 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382559401 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.380142417 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382029944 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09716207 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390849032 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.349291467 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438937975 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071558209 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.581896723 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410432129 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41320924 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602938171 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.351181752 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383231958 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.382855907 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389484779 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404455182 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.076558856 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38614091 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.389603815 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632188803 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.594928382 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39637807 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.35633823 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842988768 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390059959 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.41358147 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400388533 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.589307628 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.991275503 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647502893 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391629095 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422401008 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38493573 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158301951 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391425721 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.395710373 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38494565 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664676036 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.175045281 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38664159 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457807805 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38621553 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385077684 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384978081 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407903937 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386170179 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.560944749 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403459483 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640831381 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.387117258 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38672944 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.389467337 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384931427 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.392384687 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605550737 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390712147 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664325154 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385692915 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387204299 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387980648 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.603355596 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.398386151 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.393075643 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.726714838 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386304086 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422363838 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644007736 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419281476 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499173794 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420461207 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.387140359 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.653854896 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.393111296 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.392791437 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388014086 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393482048 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394597187 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.396521852 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399929616 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995215519 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366079692 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394260401 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389715337 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.404528013 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461709586 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396544349 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.589682742 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.395151064 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382251145 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.40171016 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.388376284 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629597823 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640745926 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.392147531 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568236894 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.8472376 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.995317019 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404173527 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.390262024 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.38952418 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.390607157 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390310145 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388695473 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390915976 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590488665 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65284841 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403457389 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.003176582 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393931729 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400948194 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.40298211 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641336931 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.400410186 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389431245 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.396787805 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398706516 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407759776 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646866962 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612745117 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.406339205 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392034592 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.910297178 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398727063 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393545878 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392576492 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418317436 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402560398 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224495307 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.731224986 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388079886 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649882726 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402882726 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.413129966 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.390923008 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401716711 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407545682 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.415077287 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417553838 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.594921697 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399274339 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401987212 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032529494 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147687111 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944878439 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396099481 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.404182485 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396963784 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.090685839 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394008281 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393059734 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636566496 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.094108586 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393707664 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855192394 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.401837611 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134857046 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650095827 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618646295 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394960767 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.395515549 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65290194 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606829584 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422676716 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394111319 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414337737 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.361921973 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9267536 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404338149 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577171834 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092105068 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40139331 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400353127 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.459685153 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.395853257 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784796646 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395233736 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396732735 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399150173 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400160767 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246394873 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401904091 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395075665 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047412697 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398906708 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.864479193 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395785222 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.59888495 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.654936439 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.623350697 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.398197004 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.396793937 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.640656754 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652326334 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398839805 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398803166 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950415672 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.253721014 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.403270971 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397935289 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169694129 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404939041 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680333646 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.399680556 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.404700543 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402983898 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400398232 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401082958 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.398082082 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403102609 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372444553 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868271935 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.396195186 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407163822 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405769388 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404997551 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64561955 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.41585789 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.006384194 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62510644 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395936382 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436568103 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.403220397 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41284507 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.371447313 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399192307 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400413594 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400765142 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619672604 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.403208172 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.366869449 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.45855094 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611382795 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399205197 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400682717 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616886542 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.40628179 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.402335032 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184135679 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436724989 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402406246 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405748578 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391557541 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440497928 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474588543 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601786548 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.660054377 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.655463697 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789621794 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399096919 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406852085 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.416536315 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480781023 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400239712 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.406715114 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.405253709 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005494113 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162373177 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.019722473 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658612623 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403237859 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411669989 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401462327 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642969293 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40015288 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677390001 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401847944 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.405719271 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428451551 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401784539 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416655776 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6175273 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676188976 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402305166 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40513775 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406574177 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.401742046 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662302856 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.615282171 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877376755 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928909307 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403298525 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412153829 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.107719386 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680899023 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401837777 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406608491 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4034583 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.40424417 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.404643298 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.40817907 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404067069 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632111536 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656600363 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048401238 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.655129906 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.430992672 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.325246672 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403857566 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.654842395 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235874714 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605496956 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023530815 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.11085091 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659970685 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478800422 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607244351 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.408096751 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641964444 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.407784658 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405562632 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404850543 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404672599 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.404022782 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.658844034 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018955625 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656315456 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.410665233 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.404179276 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440683785 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.608950256 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632665477 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122732802 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626146187 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.66466648 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414372361 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405007094 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022660626 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663656394 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408632174 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.412026995 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617141195 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411671783 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442520721 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.290867162 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.405385266 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933432609 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.61829517 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428036873 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416841835 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.122243237 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028281547 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.408420838 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886347255 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40861199 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415234432 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686941181 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.414250162 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421629473 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694360683 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.414039616 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.42074886 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617571831 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.01908851 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16338667 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.412181291 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409310774 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.416617342 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408724139 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460824986 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409234922 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409061663 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.79878764 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409003006 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409622373 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421923158 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.414264018 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412907526 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.414406208 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408801277 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.417828557 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.399520923 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.398237828 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415644783 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53666144 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948731252 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413731961 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.025957593 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.745959953 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.657005522 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423630375 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.382881191 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.415722712 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411744371 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410637097 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411464211 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404400428 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944276521 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.425726938 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.67055973 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420629672 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.621249208 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620859102 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417376928 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620957061 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416415488 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437076758 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.377359057 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411479835 seconds)
  done (took 990.304682684 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.421040834 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.428141228 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.410342879 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.478001606 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.428338031 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.420902862 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.42588347 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.48743897 seconds)
  done (took 20.781736503 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.413040565 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.410977296 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.412854246 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.410767037 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.406998222 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.887381169 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.410593356 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.41174828 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.424454819 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.407983615 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.408807743 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.030322512 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.417118976 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.40987308 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.409470066 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.41071858 seconds)
  done (took 32.966205005 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.107153659 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.429680946 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.952109523 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.442958462 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.43790616 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.410424415 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.55387923 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.405087971 seconds)
  done (took 26.022802053 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.417225644 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.416262486 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.417397502 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.418467035 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.417165458 seconds)
  done (took 8.369589984 seconds)
done (took 1236.311917148 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.419007143 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.419306636 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.418530238 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.418961151 seconds)
  done (took 6.958574388 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.381398218 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.381635265 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.381407073 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.398696657 seconds)
  done (took 9.826099096 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.071358365 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.920418774 seconds)
  done (took 5.276689592 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.958592219 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.945248092 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.972963582 seconds)
  done (took 7.160216602 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.699355514 seconds)
  done (took 2.982918813 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.370611785 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.411896288 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.413918552 seconds)
  done (took 8.481449418 seconds)
done (took 41.969701965 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.409512303 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.167039819 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.560634316 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.409291027 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.566837037 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.561396888 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.656403162 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.406132295 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.415481889 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.413280727 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.411714711 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.567551298 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.645914125 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.166915875 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.644406814 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.169178488 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.569241703 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.418883972 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.406027398 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.432160208 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.656903154 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.410304273 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.406930835 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.410789907 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.568670726 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.551628936 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.406227822 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.183995471 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.419299784 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.406802246 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.552660945 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.414698641 seconds)
  done (took 83.673423112 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.417855059 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.413045711 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.420077935 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.407396789 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.425566373 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.418803409 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.409283414 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.408336381 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.408360951 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.407112898 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.423359631 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.424474787 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.409173493 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.408679883 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.426369821 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.407890189 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.422986612 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.407464855 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.425276695 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.423676866 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.408965915 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.416237112 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.415602174 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.41501537 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.412058445 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.410979551 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.426762545 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.409540267 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.408605997 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.411291606 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.408800363 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.423680433 seconds)
  done (took 78.571489154 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.422297939 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.409126504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.424788175 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.420773119 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.41618744 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.416192972 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.411523555 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.426018934 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.410446695 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.414923535 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.410497649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.413840066 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.410970671 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.410349182 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.414214749 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.410764191 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.420796902 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.423715742 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.425040392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.40973026 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.409763895 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.426464763 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.409604024 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.426183152 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.425748626 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.422109839 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.411071606 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.41013118 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.410398802 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.411737884 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.4287668 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.421807989 seconds)
  done (took 78.627069594 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.649235815 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.426017233 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.429546035 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.422186261 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.430771534 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.427014483 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.420399741 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.658151717 seconds)
  done (took 15.154738701 seconds)
done (took 257.313090405 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.420738629 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.900141164 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.452211524 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.421904371 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.442977014 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.449506039 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.620948382 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.44783369 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.610249977 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.423296429 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.437115036 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.430464315 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.20871435 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.553072895 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.203303079 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.327931113 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.284997998 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.422193867 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.971479596 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.647516772 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.448971794 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.420550625 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.216997777 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.297520574 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.395886264 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.486915644 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.483017403 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.578139114 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.539270064 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.48257714 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.895290064 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.430545102 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.429212048 seconds)
  done (took 65.072683976 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.419668332 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.431151357 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.431573131 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.431262272 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.429666978 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.429491921 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.419937261 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.431134153 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.430969588 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.430672447 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.430448388 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.431053576 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.430855997 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.430483312 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.431394387 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.401958814 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.421033808 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.431758235 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.421125166 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.40189602 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.430843854 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.431881383 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.432137904 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.430524232 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.431476038 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.431795804 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.431493893 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.433046296 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.431838883 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.431428904 seconds)
  done (took 44.127724551 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.43284217 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.96537212 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.144040139 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.433604407 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.422630938 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.427744974 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.705308502 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.439604125 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.426434025 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.426991415 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.876949853 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.43591495 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.455509023 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.151503976 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.432728559 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.435196139 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.434597504 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.424037677 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.976867487 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436291794 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.704219499 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.435295181 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.703940437 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.433647807 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.427819264 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.42471462 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.428206518 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.22820302 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.443968408 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.880504531 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.180933141 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.70483511 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.163624339 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.197453196 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.180001225 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.441777657 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.434990833 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.885288202 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.42753186 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.426588133 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.703220491 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.427805316 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.156179299 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.110446345 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.44986435 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.435747972 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.26091646 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.882410335 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.662174259 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43132522 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.188944171 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.433971023 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.437177123 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.427027581 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.662095865 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.429995067 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.427597722 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.266139081 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.432730597 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.703517036 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.438079161 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.42662161 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.978106617 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.426735223 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.96857122 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.429482352 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.435850214 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.430243445 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.160838169 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.431483961 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.125702744 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.445434282 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.438241959 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.884321073 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.975914184 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.305623349 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.430623127 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.981456516 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.192471251 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.720918827 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.432627852 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.206996762 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.723899971 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.433177489 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.441973262 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.441017042 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.43776538 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.505106622 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.704625137 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.04367522 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.122673408 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.269474695 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.709955628 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.43723148 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.430220421 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.271057171 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.43938393 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.439715955 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.157868408 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.124623112 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.447640565 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.437051047 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.111855643 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.448902999 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.710391257 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.435698624 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.19235308 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.435847333 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.503440605 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.439324416 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.436994391 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.433509152 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.709941595 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.433059519 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.440944284 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.105488135 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.911212555 seconds)
  done (took 198.299949171 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.424459775 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.424799972 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.425367512 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.4247726 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.424589499 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.433075487 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.424547952 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.426170834 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.430981819 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.425260606 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.426784375 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.43435463 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.433901077 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.425787597 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.427225648 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.441092867 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.425165654 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.448402693 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.427146616 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.426358897 seconds)
  done (took 45.882930891 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.442247275 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.974300242 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.947310812 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.442956158 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.441893785 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.432097134 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.48798185 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.444815927 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.442481077 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.722140107 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.600144576 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.448129757 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.441190254 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.442395999 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.949619117 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.41642569 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.723135512 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.976469075 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.444586338 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.975142181 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.414023088 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.44282017 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.432520255 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.974582321 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.731967351 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.711276591 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.489814285 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.978542352 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.443699532 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.443127819 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.975742845 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.445052776 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.433823633 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.961006565 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.443935193 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.45658393 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.44365666 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.492515267 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.490362321 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.724971813 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.985146683 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.721002588 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.454462286 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.594177428 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.451544861 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.413445687 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.986769958 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.44543583 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.415137466 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.44732508 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.449995881 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.960665712 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.43660393 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.95866323 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.44744414 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.445544474 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.979142914 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.9623569 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.952774363 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.603548418 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.439196939 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.712663062 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.445546005 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.987831878 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.446462257 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.443805121 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.446012977 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.605122993 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.984519966 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.712737493 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.726420989 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.725837331 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.446575287 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.502610852 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.45159243 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.725130209 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.50116346 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.815463576 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.733604902 seconds)
  done (took 129.393554217 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.704970087 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.552889314 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.803782827 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.007914835 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.923019602 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.570338343 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.545902378 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.677088973 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.459937555 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.545523172 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.061599658 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.52988238 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.169326261 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.503920486 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.546814245 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.5609538 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.828355271 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.384617397 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.061127479 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.040022538 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.441483724 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.538068982 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.956156678 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.631415107 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.450870536 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.016325043 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.338431593 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.939399433 seconds)
  done (took 54.097572347 seconds)
done (took 538.165274957 seconds)
SAVING RESULT...
DONE!
