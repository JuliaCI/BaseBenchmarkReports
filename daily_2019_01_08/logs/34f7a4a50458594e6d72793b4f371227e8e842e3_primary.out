cset: moving following pidspec: 3610
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.343929449 seconds)
loading group "string"... done (took 0.551857404 seconds)
loading group "linalg"... done (took 7.770519216 seconds)
loading group "parallel"... done (took 0.17293098 seconds)
loading group "find"... done (took 1.279950696 seconds)
loading group "tuple"... done (took 1.943850641 seconds)
loading group "dates"... done (took 1.324912118 seconds)
loading group "micro"... done (took 0.243574772 seconds)
loading group "io"... done (took 0.969094932 seconds)
loading group "scalar"... done (took 41.333524895 seconds)
loading group "sparse"... done (took 12.917724865 seconds)
loading group "broadcast"... done (took 1.046034242 seconds)
loading group "union"... done (took 13.949209752 seconds)
loading group "simd"... done (took 4.683349544 seconds)
loading group "random"... done (took 9.482646907 seconds)
loading group "problem"... done (took 1.933043002 seconds)
loading group "array"... done (took 22.157697415 seconds)
loading group "misc"... done (took 1.997249039 seconds)
loading group "sort"... done (took 3.378855816 seconds)
loading group "collection"... done (took 19.298357483 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.566840345 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.155401766 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150516711 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147260145 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.193411295 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.141258744 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156610336 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.096819368 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.890114101 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.177679636 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152103175 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.514993615 seconds)
done (took 5.049574677 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.21360295 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093215851 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103438518 seconds)
  done (took 0.854951482 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077098346 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144273227 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092830306 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077741353 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09391121 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078602588 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09384915 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077031464 seconds)
  done (took 1.324264645 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085843851 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097518407 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080773394 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095200229 seconds)
  done (took 1.025695789 seconds)
done (took 4.17176315 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.719554349 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.270086076 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20264792 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.4585411 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194973008 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214644161 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672464115 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.345276298 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.249969741 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098601749 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.133411928 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391769167 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136096851 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68321017 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091331412 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125293371 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178653954 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.447634845 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084756163 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112279809 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.114795865 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.139403091 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128847023 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090676364 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183403814 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080966142 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19235661 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10630894 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.07878018 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.27416518 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199490468 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.677907486 seconds)
  done (took 10.780975665 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110984995 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134065679 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096690075 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137474072 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133737446 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098956608 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084611421 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095851599 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121014504 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174448989 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.12888657 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.119402433 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094646921 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081963467 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113132967 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243730441 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120109646 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.097889879 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099440726 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088473039 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136448021 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111530147 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108861896 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092143669 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165958358 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220137305 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111950496 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125869778 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097182818 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112974428 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141428061 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143600509 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096907138 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081522494 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17398841 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125321058 seconds)
  done (took 5.101710171 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.069717826 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187885208 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12052192 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166338543 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.15447706 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.078749902 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141859511 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094061992 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112384729 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254849594 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.103195839 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.487535688 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140353037 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09845649 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098159139 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082078112 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096360148 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.632486203 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156077094 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114744973 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113255314 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106189484 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082680566 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363348597 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.093743101 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079062786 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097600706 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064455217 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159556963 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097416637 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.128478428 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119432259 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080785053 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133678185 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.203238175 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109567511 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136562338 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095900948 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078249942 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176158531 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104442045 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079849509 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12306254 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136281108 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135254187 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096317559 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081719462 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.198837298 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098330457 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097517586 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.952036406 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079557029 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180490896 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.10487038 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07921132 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.307983455 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.120777027 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079141452 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094816778 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.263884061 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.183745097 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097186048 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078717752 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095889088 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080387069 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.398867201 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081274204 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.660772967 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084536318 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108238389 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083118102 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094668985 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102359978 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085847072 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116478281 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078635196 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098841248 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078036533 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095308259 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080005971 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107318448 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.213695014 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097898172 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078566331 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095165958 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114942857 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109094244 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096759021 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094206841 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112872605 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097132653 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097434693 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.115295709 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098312593 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.1063026 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077204548 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09748868 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140438353 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081736545 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094254625 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.128408616 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080231968 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123739169 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097285859 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111853107 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109504171 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097431931 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.168014252 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077046222 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095558274 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080440866 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097944674 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081456558 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100287002 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10988777 seconds)
  done (took 22.538668486 seconds)
done (took 40.155859508 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.321443334 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101294039 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101356462 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102519974 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09969123 seconds)
  done (took 1.476104652 seconds)
done (took 2.204065152 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.282308903 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171115136 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094905314 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.163470191 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092759812 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.161666583 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.156238241 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093133123 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215407543 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093780952 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.158574127 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076781858 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093288664 seconds)
  done (took 2.601823243 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092759138 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117337108 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081860787 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109398151 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075489802 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11137676 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093612804 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117360827 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11140677 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085415924 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095503584 seconds)
  done (took 1.81097313 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093145558 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112938721 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082649123 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111624091 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07739159 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112332836 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09415245 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117251264 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111786093 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087042016 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09589949 seconds)
  done (took 1.815341163 seconds)
done (took 6.940866349 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08937415 seconds)
  done (took 0.804443874 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.946136986 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.439077203 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111708353 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.151367483 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.32326163 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.174859622 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.474880274 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126852107 seconds)
  done (took 10.672681115 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.143227605 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082564072 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101342453 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08614031 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102116208 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085555389 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103107011 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100160957 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082711185 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099987137 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087139436 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10075192 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099893834 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082218128 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.100449953 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085950717 seconds)
  done (took 2.331758239 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118061663 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116433242 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103521533 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107178248 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085313133 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102745258 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10419329 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087710227 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100523111 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10137274 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089224348 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102541422 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102426205 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077744079 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103458475 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.105322706 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084820831 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103901085 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10553737 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088856555 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104603701 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.093520915 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085788043 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103595659 seconds)
  done (took 3.209016235 seconds)
done (took 17.738689534 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.155938426 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107126439 seconds)
  done (took 0.988221074 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093774731 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110249244 seconds)
  done (took 0.935015995 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.09536287 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093411052 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.118986909 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10678391 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08002539 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094696503 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118201554 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07862315 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094985965 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.0791092 seconds)
  done (took 1.694261117 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081548578 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.107331383 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.09926585 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093793682 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.102279559 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093039783 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087515589 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097320051 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107833052 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076340802 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100760422 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111934455 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08405091 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11343145 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103036359 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082158004 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100938265 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096897635 seconds)
  done (took 2.47435311 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078359612 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095726453 seconds)
  done (took 0.908246445 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080011207 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09261684 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080008393 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095554378 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093137819 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075403873 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092151331 seconds)
  done (took 1.342865953 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.480089709 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134766174 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.25947977 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102181924 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101516975 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.296478148 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096492718 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084085688 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100753643 seconds)
  done (took 2.445870078 seconds)
done (took 11.518287052 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092056401 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114032957 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112175859 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.451097895 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106024139 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096179536 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145905503 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.247715655 seconds)
done (took 2.105232848 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.140786135 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.592961382 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.421164719 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.227911636 seconds)
  done (took 1.983588174 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.397796216 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097243663 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083379678 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081092691 seconds)
  done (took 1.402903645 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07833468 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098266114 seconds)
  done (took 0.920126562 seconds)
done (took 5.192367975 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079560347 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.095178184 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.110545512 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.094749955 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07912206 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097130993 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077236642 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095375705 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077279404 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095372347 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09471159 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079053922 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.095624343 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.079084012 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095464735 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076956164 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09342346 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079096532 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093187183 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076853338 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093005495 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07901856 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093144327 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076975293 seconds)
  done (took 2.884639459 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098954196 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096491963 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101100732 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084721289 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100617167 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084759432 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101063332 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095161062 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084581135 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097748464 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098716486 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083465618 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097658902 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084011064 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097736935 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099993018 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084851074 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095748084 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081348422 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099129257 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101347963 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079644093 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100088143 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084632367 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10000488 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099520368 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082001621 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09585471 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101263609 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083924023 seconds)
  done (took 3.541310206 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083193589 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09317642 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077674874 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101170651 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077489494 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095929971 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076484155 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09444541 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078929344 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094515916 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079024282 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093594367 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077848948 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095539147 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.0791071 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097787648 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111270545 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077920524 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09419158 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077668557 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.0971677 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076524044 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095031116 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07681624 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093781914 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077083904 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093572333 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077378152 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094936688 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077453006 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096301489 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08119398 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094176618 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083946693 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097224879 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077111663 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096975767 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077388784 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094503518 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093219463 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077340071 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094678652 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077680411 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102566937 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078987397 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097600463 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077678301 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096512033 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078578666 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09718103 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076652343 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09395804 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078913124 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094148644 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081214526 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093059246 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094432252 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077109628 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094991424 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076837929 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093671651 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076537634 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096964651 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077274125 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109126916 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084452643 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095205917 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079338099 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09516685 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080000474 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096335919 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107604677 seconds)
  done (took 7.087894731 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.128795399 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123018764 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079244176 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096567314 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075777767 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094588997 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081121763 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093664753 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09577007 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084672848 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094056133 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079151768 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096148369 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093565488 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093969013 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095349751 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083487859 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092291019 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077834045 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098906912 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078247817 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097749243 seconds)
  done (took 2.781764855 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.204593179 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103365002 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140105736 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106014192 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082541902 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104343696 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100906822 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085681412 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100376445 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08393258 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09863094 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10095219 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082127546 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.208112289 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098319685 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08377754 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101238951 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08422795 seconds)
  done (took 2.721284759 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092126315 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096795154 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09764242 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096851625 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096972387 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082731591 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102549799 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105066241 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08282385 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097231052 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089708507 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099663824 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099694712 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079827655 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100610842 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080839409 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100110423 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080442278 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106199575 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102874918 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086082118 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106411624 seconds)
  done (took 2.838846648 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0951809 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099087369 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115662089 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083360209 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093806892 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079323845 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103165324 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080558477 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105975476 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098713341 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080006227 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096032933 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087063692 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097037859 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102664577 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081027202 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099152286 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080721248 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09871506 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076831197 seconds)
  done (took 2.610540214 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101781838 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098739778 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098572176 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091707984 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099021054 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08168714 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107033775 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099223547 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082032265 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122503081 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098855568 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08160173 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106506945 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.103278236 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098458258 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089974496 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107834155 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107214236 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081608745 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098002182 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122735977 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082032504 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106307838 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098143002 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081651306 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097702386 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098808211 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087285366 seconds)
  done (took 3.489543475 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080530496 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09742051 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077362609 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.094517859 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078445033 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.094488406 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077692447 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096606947 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080382349 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094821655 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080045194 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096994459 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080181233 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097535059 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079914662 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096759799 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080014334 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095320486 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077159078 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094634666 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080300285 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096648644 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080986787 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09453416 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078484688 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096935685 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077839261 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094049997 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080902043 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094157483 seconds)
  done (took 3.387113597 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089627087 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104556346 seconds)
  done (took 0.953995532 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077635197 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113273632 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078066956 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101046565 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084688514 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098629228 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105975339 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084303469 seconds)
  done (took 1.50397956 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095249144 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108749221 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082539959 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110478562 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.1092831 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097135129 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172007636 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100466802 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104065362 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078235825 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111165244 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079763033 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10379224 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.079950788 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103546833 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087173601 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094953564 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10340523 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083441252 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096110564 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082405926 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106323434 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08612328 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.094547879 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099464031 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089860705 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110194382 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082409933 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101128723 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.104892836 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08611711 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092430116 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081490929 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098814187 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078612483 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107683189 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11450273 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083751703 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106733186 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099036375 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092386232 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093264033 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086283384 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104743302 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107986858 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081980462 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.09927349 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076079996 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095490763 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083010807 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09343134 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08145703 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092465368 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0885966 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102591933 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109335254 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080277447 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099733378 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083821183 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102121512 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087368536 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.099857052 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100104259 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080563255 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105444902 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085003413 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108371203 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092778766 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075326673 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095757692 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091715458 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121134042 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.104948576 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.081961979 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099892015 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078766722 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101155425 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082733755 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103683652 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104548795 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.080930506 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104716466 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088962162 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099112368 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.100199378 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089037857 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096506513 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083724578 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096671111 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116065745 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079711445 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095937142 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.07911823 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110043604 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084556197 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098065223 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078239276 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106456288 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091829715 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082570285 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099392528 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081940018 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.10926013 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104138824 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087206715 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107155832 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105002922 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080924126 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.101632934 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.077514964 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099726115 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083593367 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.105713729 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076267047 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101059582 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081724808 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099805715 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.10827078 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079269785 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099097191 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089042682 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.103671328 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097060048 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077952084 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101208025 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081386284 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102773861 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089234322 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09746699 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076229904 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093896973 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.101655471 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081313939 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.101815993 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086331742 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101816565 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075864593 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097255097 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10210006 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090245947 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098912737 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082147209 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104372544 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100022757 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080621726 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.104981158 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.083712349 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.09722279 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.08759378 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.099089768 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076390685 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102946928 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101198712 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080420945 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102595843 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084920284 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10156514 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.09908423 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080642611 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104983087 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08207199 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098472554 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081404226 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097852102 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110039058 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.083382063 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094684323 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.078445041 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10660611 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079054729 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098843112 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080559136 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101328322 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099727726 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080071607 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098082888 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083004423 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110312933 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103104598 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082646008 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.104507038 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093617676 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098820589 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084661175 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099478625 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100248536 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.082918256 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.108407249 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.086662544 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105201525 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101209753 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07862397 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106175517 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089166885 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.0979756 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079682827 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097998331 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102308058 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.087166321 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.102813965 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082840277 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097369347 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082652053 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103388124 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10169136 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081588547 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097394066 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086232089 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.098762721 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106318565 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083097413 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.109187493 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08548934 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094099341 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085141719 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098072985 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.10461519 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07800584 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097016174 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.079955763 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100698036 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081166129 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103087817 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075228654 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106876242 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106514953 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.081638934 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098010969 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08198782 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106126482 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.0830592 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102461669 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08521335 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105762293 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110120607 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080701804 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.102848928 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092708576 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099592797 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093657983 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087431895 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098195543 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.080859269 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098429974 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079347369 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103240194 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108664327 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089921214 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093722467 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086117418 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098103947 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080677951 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095428537 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086205799 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102677482 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.099871796 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088618748 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101213138 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.082748434 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103443552 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081300732 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100582382 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100647737 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084852234 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102714806 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086327864 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102303592 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087637246 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101779386 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082826888 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104225282 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103367246 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084257525 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108605714 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08449119 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102810788 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087260504 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104145847 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10348892 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084840417 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.10208737 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08833721 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104123606 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084838603 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105294731 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079284237 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108511099 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083089415 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108588929 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100298067 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078289104 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105533157 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.083957098 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106335963 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099996423 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083157086 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101309922 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081420657 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.102408582 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088938159 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097089436 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110585789 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09011388 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100324517 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084185818 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.099816413 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083206799 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098996366 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082340101 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100796186 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.099285613 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081981806 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105005651 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084427443 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10010436 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08420828 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100857974 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081502171 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101629206 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09454441 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081030308 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098656373 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082689296 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110151733 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.082506974 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102382098 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098226075 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083552 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099119993 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078860863 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109273529 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109542933 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083268369 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106940138 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081458705 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102052838 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110784613 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076454297 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098404175 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080188466 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.097951699 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090013584 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10878296 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091925651 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100755301 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.099324436 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080369298 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100879401 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080514603 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094264325 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079807258 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103881121 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084284914 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098741884 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082135845 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103768945 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101110392 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092574596 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100053063 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082753011 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101483371 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079407446 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099634727 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080519681 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103405169 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101579927 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080238932 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096934333 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082034177 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101893416 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083692069 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099476944 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083271207 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10656582 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099538131 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085381991 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104673811 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077474014 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103447322 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082709571 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099961218 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.09889234 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085678308 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103704625 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083901702 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109590916 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082836141 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101589242 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099980808 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080120395 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100075312 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08174677 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100168877 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081286248 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101842111 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090399988 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098679306 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103216156 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082213006 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.100256443 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089000374 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101703075 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085435211 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108043653 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.1041624 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084047102 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109171771 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085487095 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105005922 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101653171 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084923236 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106723772 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081689428 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.106557835 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082906058 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102944759 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102064848 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081198813 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100377899 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082768571 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099897382 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089023372 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102252156 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081801388 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.10022484 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080314103 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.101044005 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104320021 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089928552 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103812751 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085185504 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095874583 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079456719 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102123688 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.097683955 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084106292 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104023105 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088429276 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103262227 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082784723 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099746663 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109516139 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089302604 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104006609 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080905542 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104519386 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083781325 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103126978 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08393407 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101056452 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102924142 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086618492 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.102163418 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08201629 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108804724 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08670799 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101947963 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.101388452 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083548569 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100587496 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078427993 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102493726 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084142893 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106242466 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08446563 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101441412 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111710326 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082293603 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100375074 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086500403 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100572867 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105254085 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078064369 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10183764 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0837575 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101720336 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078075048 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100291067 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079551726 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.103551898 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081625332 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096653059 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111187167 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091779908 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.103882656 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08114168 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100493511 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077475904 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095948812 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080908146 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102557657 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102553141 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092983773 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101358017 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082281211 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097336773 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082777476 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104858282 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104079853 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080279781 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09636611 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08113443 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104356549 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.087948232 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100502529 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082980403 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105763575 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103474426 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081048139 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104893204 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079337443 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104299248 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09564222 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102423068 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102074647 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088827551 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109593998 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083440297 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096814191 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101712698 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085959081 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101172141 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084242682 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10231001 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116520476 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086486291 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100384951 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081929961 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103724129 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082275948 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110022267 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08327278 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101633268 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106146508 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084754751 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110484925 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084565796 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11081228 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104660304 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08623166 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100259287 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082991363 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099798724 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081494256 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103729666 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102364898 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088635784 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110394693 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082211073 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112469703 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110671413 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088087918 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099115453 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082859854 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.100963338 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078706945 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102558365 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080456395 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100070174 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080532053 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100808988 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104664642 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089598512 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102771276 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.083983459 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102829788 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076989086 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103917027 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085499329 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10296832 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097802756 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083263516 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102568253 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087442136 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105784291 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08316875 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104125879 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084441673 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102723981 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097147095 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090215485 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101664725 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085228219 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101022928 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082565884 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103618186 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08657722 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107255031 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10281986 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08554938 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114598494 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085091573 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099961 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.079792125 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107733421 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099695807 seconds)
  done (took 57.063852506 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143601843 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080129075 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097755787 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078079711 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111201043 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097936782 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078579435 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098426289 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079336194 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100477496 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077870634 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097568764 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107106618 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123335005 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092074164 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102721126 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077370853 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099705798 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096661293 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07972186 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108270084 seconds)
  done (took 2.834442483 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102945887 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118555306 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113346067 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116735095 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088399183 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113430505 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113706095 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112474394 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097875199 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10960996 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116235607 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112689496 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089395689 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109287744 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108414491 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091528049 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116045086 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108234845 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.113174666 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094226745 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111041955 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113528874 seconds)
  done (took 3.179060335 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083509371 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100969673 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084078933 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.096922249 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.081916743 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097250149 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086061941 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099803126 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08637429 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.100777667 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080705236 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100568591 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102762144 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078374938 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101618537 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080229608 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150419285 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105199583 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081769279 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103330875 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077418327 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.104649636 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097436049 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.078875158 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100042449 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08675484 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102840245 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080867107 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102072816 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081723354 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10329143 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080530122 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103778111 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102113755 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082393481 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100700747 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083063916 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101439905 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078595634 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100378561 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083920963 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098892743 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083969708 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103827093 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080621438 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100755435 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08422532 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101791927 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096998854 seconds)
  done (took 5.396403053 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102501962 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159638665 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08485782 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141580905 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119919681 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111107957 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086636014 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.119374564 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101432878 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.102121658 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.101336966 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.11938138 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103087015 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088946341 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109327851 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10275118 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08440909 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102533187 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106953183 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083282777 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106687949 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.10833652 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098213701 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116476619 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107699729 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082249593 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101679411 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10770532 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097428988 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108637289 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107474793 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108193644 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.099910857 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104783906 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102322517 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086118022 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121376837 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102589248 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086409107 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101203362 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085998711 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10872276 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109837013 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121373628 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084627298 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107539869 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083622042 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.1008179 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11693221 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.085995063 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111983965 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119172824 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106249644 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08327058 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107668352 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119285336 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084668925 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100919417 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087043352 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.115789492 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100924829 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087051142 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118950262 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105178182 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110984635 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098566781 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108672995 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108327705 seconds)
  done (took 8.040904143 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.091942733 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110060488 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119015537 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118595885 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089300371 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110289833 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109148619 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089221689 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109376066 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115108544 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109793694 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132377406 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084940159 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112645437 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109664703 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090789986 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109701616 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109183956 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089767025 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1101335 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110433339 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11875353 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090471528 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118368844 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140065547 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.1050031 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089066768 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109282566 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119634528 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109561911 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12128654 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090214078 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110070924 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.118716112 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121150971 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089777856 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102289292 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109356843 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.089972513 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109529595 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105010521 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099653045 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110422401 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104466203 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090184045 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110121033 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120043152 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123059841 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113810597 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096306429 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110216327 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11953963 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108860234 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09003353 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118455237 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145053263 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119296206 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119098086 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109915333 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098743769 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118129802 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127320396 seconds)
  done (took 7.572622286 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106042731 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113491697 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.115942787 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.0990917 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08303706 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107601547 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081723396 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101965159 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112591485 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092654418 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115315443 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106967958 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091246509 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116447696 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108782809 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110394317 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088167945 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108130501 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113212187 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087425958 seconds)
  done (took 2.88392746 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092479136 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122498296 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084346463 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111137481 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107679401 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090305257 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106759956 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106498268 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086308588 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107026392 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095590777 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115119103 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104416595 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090043313 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114192436 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110596825 seconds)
  done (took 2.473190054 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096828294 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115618498 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119836924 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083683276 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103308757 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083397517 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104635271 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099667266 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08083719 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120160861 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084346102 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107597028 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103694155 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082463548 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100983411 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087260609 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100242993 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08158587 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104839991 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118292978 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09500337 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103725891 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104545472 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.085746772 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104646624 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090376112 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.104391574 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101880196 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082618398 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104137747 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.083938473 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.111728637 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100320679 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083050266 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101539462 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081159892 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104126518 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084639357 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108089609 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103923252 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083544474 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103752586 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083927831 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10517932 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080120438 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105118896 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099649931 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.089940575 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102343968 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084581824 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103887554 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085632632 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105729527 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114256662 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.0881121 seconds)
  done (took 6.182276043 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098390989 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107994269 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079973885 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10330572 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087238726 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107413842 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107578053 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087018317 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106026813 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08221483 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106309368 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088892276 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106990453 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107330922 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086634632 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10831289 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08043885 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10564958 seconds)
  done (took 2.59154585 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089797067 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103927017 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091582211 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104488648 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083761443 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10740065 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080471557 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104097362 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102492152 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084982291 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104112347 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086702653 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103017737 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086416338 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10440969 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084234519 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106771641 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102072709 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084690084 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100783545 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08618071 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103515628 seconds)
  done (took 2.938042123 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117265157 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123876079 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091913368 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.22942931 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.102784 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13166368 seconds)
  done (took 1.629575719 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108502634 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119685477 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105350392 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107510419 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114557206 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085777157 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10661684 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106803666 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116649692 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100884263 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107230509 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116407437 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116570277 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095441569 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113492093 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112394168 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106892192 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086859264 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105521026 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126106996 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087240382 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116815335 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106097301 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086269713 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107578411 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115124157 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115774781 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119289592 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086874008 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116267997 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112489581 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087063141 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117141924 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121308157 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108309641 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096785115 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107364759 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126419599 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112347676 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095952454 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10867244 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114127566 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096437978 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112276766 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116333119 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106981263 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092840895 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106974944 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107439268 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132822449 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093367464 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115715933 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113804916 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116727853 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096061972 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133322702 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121079165 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116145398 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112805497 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120802273 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115445853 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092513209 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115821747 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120997685 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114560723 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095786044 seconds)
  done (took 8.029006188 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100819626 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125041469 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107292105 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121141034 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095937444 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106694709 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10688569 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087065679 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107196099 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105914996 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150938448 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087706852 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116616437 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115588041 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086748579 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108498037 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106965396 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115373047 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085848139 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133188183 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10725414 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116876174 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115226078 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0959478 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12065361 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113548194 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106377914 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086828047 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107137882 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106866719 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092720812 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107520536 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116012481 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086304181 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116660424 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108040939 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086607649 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112590307 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106738534 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11349454 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096307744 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126271368 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107682802 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106745248 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10210945 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106664085 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106998054 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086041097 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107488258 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106302598 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099717288 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122013327 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121022516 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115772942 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106786586 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087065674 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107141077 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106916438 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087433305 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113753004 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114949912 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086357701 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133140028 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107611869 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107084599 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11716161 seconds)
  done (took 7.925805878 seconds)
done (took 153.283138669 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212300005 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.197484974 seconds)
  done (took 1.247316431 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.086863942 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134977847 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095189818 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168019124 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08510793 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139594828 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137294534 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096486533 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106671439 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08486886 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105744721 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087179126 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170198157 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084929934 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105571991 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106930287 seconds)
  done (took 2.63999072 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113036644 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253145247 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.121351204 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104375831 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088572855 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108758231 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083300003 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110924038 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088434011 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.104346688 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087632816 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.105805585 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.082873683 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106837065 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.08859197 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108219542 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.103379303 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087308575 seconds)
  done (took 2.792188956 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111576826 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145685802 seconds)
  done (took 1.107794912 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.239592716 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.159543366 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.227791764 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.464803686 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.266554691 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.36286135 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.197706498 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.209072188 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.164372429 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.207351665 seconds)
  done (took 3.342470816 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.11845946 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178663679 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.3152596 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154581279 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106163274 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125227183 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15458208 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130181595 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.121531861 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100258433 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123590767 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116307375 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137264193 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094528616 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114760563 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117315114 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120093351 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113562806 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113656623 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095503735 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136781682 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.083298198 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115054797 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.112839468 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097595408 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118604375 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104689301 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084362407 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11551295 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09344505 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11218095 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123640075 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117764249 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.153294425 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121758821 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.153651051 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117688869 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091046589 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114624663 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089526677 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119066203 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117714548 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123636 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096325926 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105683979 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096927243 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104945471 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084290145 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114001807 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117629586 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.092547021 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112645219 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.150981976 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117189633 seconds)
  done (took 7.315893212 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.777462396 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154707044 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089263479 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.869042793 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133704776 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102326226 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.763768401 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111157492 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251430761 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.74080257 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131305016 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095766126 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224118197 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.253490426 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.922694019 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.285807593 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.632409159 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124022469 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150776396 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152315146 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116155462 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114242795 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129517078 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427327484 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116282796 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088610632 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11692431 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116534387 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157428247 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.123961454 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092045716 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195746972 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.245278688 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202034448 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093385175 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109727757 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089075904 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18782525 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260668163 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192265379 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179232975 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107691289 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08858241 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120489304 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130259609 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086536829 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182363246 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172424146 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168245345 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113294219 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117670835 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097013891 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119855344 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.161686638 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.119756009 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.30688545 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.31144613 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089825174 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119857484 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124155655 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235689075 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121728124 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222405488 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138628436 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.18955924 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110754374 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776515306 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167330587 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110900976 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094392673 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118483145 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114095424 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098413167 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165351225 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.403984288 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122397544 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113135032 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088678746 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225724736 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10231425 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109549376 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160376043 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115660211 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119475235 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100749002 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120509116 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166678071 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250754041 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100076101 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118170136 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114284223 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101817199 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115516765 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208977881 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216679544 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161807372 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229042456 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099245416 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182538619 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16618692 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117929578 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.169445678 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118558783 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100706673 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12065669 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214142329 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14415407 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121066437 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092866768 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117292337 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146115984 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125793782 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09591276 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189781325 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.454382052 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165483302 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107196223 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126280377 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096723536 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181075815 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093663054 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257932439 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120631513 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165240236 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118216218 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086272448 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119129923 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160514551 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120224476 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098231764 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120341349 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117089524 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.229408516 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213575843 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120709728 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219188797 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.181770095 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116226505 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169517427 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119827048 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165947761 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119246727 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097248863 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116707638 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76821374 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122655693 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096952913 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114880017 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185147919 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089820468 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122799301 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123775341 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087698583 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789775828 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126012742 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12045478 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100681851 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116643621 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119271519 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095201365 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114314638 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159473926 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227835688 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117838914 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096299865 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123374752 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157294183 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115331814 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124312091 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123627987 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102532003 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12041724 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113733086 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101913638 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187653415 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161168605 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.216084395 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.570998508 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111234556 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12332583 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20256134 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11068931 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285192097 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118178305 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.198988801 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182436933 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09839281 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313876992 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163926569 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184884357 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12638751 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171032972 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108408186 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116225901 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.162423619 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111616233 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094697718 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161523576 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123657658 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12103954 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.970144607 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089144205 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245308028 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08549387 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.168221758 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115246781 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11880328 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.283859289 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088562369 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125776363 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161621998 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113797159 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101764597 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.86092634 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.123272272 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099065121 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114949076 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219018827 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162241233 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11831457 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118936948 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095843439 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180970455 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205029864 seconds)
  done (took 43.525989195 seconds)
done (took 62.815964842 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274186181 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213655667 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.263758693 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168288788 seconds)
  done (took 1.886676825 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17097916 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151645738 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120519586 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.105270491 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149211947 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083472952 seconds)
  done (took 1.661596231 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.357974207 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269857771 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239497931 seconds)
  done (took 1.753716567 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.286868601 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.242467495 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.467062065 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.31971676 seconds)
  done (took 2.320081338 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.203902389 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131157415 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.109703568 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102516657 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197005758 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.239718337 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141187313 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.197492855 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098001115 seconds)
  done (took 2.348730685 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.192981247 seconds)
done (took 11.050944887 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.166872377 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.243286747 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.138128494 seconds)
    (4/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.155672791 seconds)
    (5/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.151785783 seconds)
    (6/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.098227281 seconds)
    (7/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.124559192 seconds)
    (8/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.231042455 seconds)
    (9/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118904124 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.123355156 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.113722135 seconds)
    (12/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.124109531 seconds)
    (13/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.16684406 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.096615474 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.150292452 seconds)
    (16/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.240372183 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117562631 seconds)
    (18/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.190112513 seconds)
    (19/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.107369126 seconds)
    (20/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.236752033 seconds)
    (21/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.117542898 seconds)
    (22/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.124685627 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.122967607 seconds)
    (24/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.237663031 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.234480431 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.176703483 seconds)
    (27/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.211582987 seconds)
    (28/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116463199 seconds)
    (29/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093388079 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.140578451 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.117519175 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.199219427 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.25959767 seconds)
    (34/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065108761 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108160912 seconds)
    (36/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120930015 seconds)
    (37/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.190452942 seconds)
    (38/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114108278 seconds)
    (39/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118455952 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.084847913 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.139960255 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.115418224 seconds)
    (43/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.203361914 seconds)
    (44/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122928095 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093516656 seconds)
    (46/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.112489206 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.120144308 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.18800344 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.109410765 seconds)
    (50/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.203658091 seconds)
    (51/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.161029488 seconds)
    (52/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.110906831 seconds)
    (53/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.188810563 seconds)
    (54/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.165769147 seconds)
    (55/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.137269771 seconds)
    (56/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114280952 seconds)
    (57/309) benchmarking ("sort", Int8, false)...
    done (took 0.18436664 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.194404381 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092028018 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114857353 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.224251137 seconds)
    (62/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092219013 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.113871775 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134073356 seconds)
    (65/309) benchmarking ("sort", Float64, false)...
    done (took 0.145738802 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115317424 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.191992219 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.149661469 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.092868627 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.192727267 seconds)
    (71/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066352454 seconds)
    (72/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.198028328 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.147241784 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.086693459 seconds)
    (75/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.188918951 seconds)
    (76/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.16844055 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.081586919 seconds)
    (78/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109519296 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.081804275 seconds)
    (80/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115250883 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.221240158 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.113935592 seconds)
    (83/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.08975317 seconds)
    (84/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065085219 seconds)
    (85/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163086892 seconds)
    (86/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.096522549 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.201695763 seconds)
    (88/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.089891824 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.085660229 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.138893183 seconds)
    (91/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111797287 seconds)
    (92/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.215058189 seconds)
    (93/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.206883721 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108168995 seconds)
    (95/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078017745 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.12269661 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.093713093 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.115829457 seconds)
    (99/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065843515 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.088345333 seconds)
    (101/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.148432146 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.114019829 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092560137 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.158514296 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.16716448 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.151621998 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.085583817 seconds)
    (108/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116566079 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.084198836 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117207783 seconds)
    (111/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.075857337 seconds)
    (112/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.148655168 seconds)
    (113/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.095646567 seconds)
    (114/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.159406723 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.109747269 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.106879894 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.192424004 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113160556 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107884585 seconds)
    (120/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.074636435 seconds)
    (121/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065672886 seconds)
    (122/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.424404979 seconds)
    (123/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.088426486 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.107287403 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.120399082 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.09152706 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.1794671 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.116658392 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085523322 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123259468 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108030819 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.092813111 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.210780053 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114704751 seconds)
    (135/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.093829119 seconds)
    (136/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.180765457 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116051064 seconds)
    (138/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101091303 seconds)
    (139/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.127382851 seconds)
    (140/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065699892 seconds)
    (141/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.098644434 seconds)
    (142/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.100054641 seconds)
    (143/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.074736128 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.177647568 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116200672 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085890691 seconds)
    (147/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.109038064 seconds)
    (148/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.175786819 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085215073 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115747587 seconds)
    (151/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.152441323 seconds)
    (152/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.145591524 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.084804044 seconds)
    (154/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.093964601 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066289596 seconds)
    (156/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066877024 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.163854573 seconds)
    (158/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.122327658 seconds)
    (159/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.09715386 seconds)
    (160/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.130645908 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.093897448 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.132187232 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.138300163 seconds)
    (164/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.188841221 seconds)
    (165/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065011525 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.186923311 seconds)
    (167/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.120070451 seconds)
    (168/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.093414462 seconds)
    (169/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112519469 seconds)
    (170/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.083626182 seconds)
    (171/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066675045 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.087970234 seconds)
    (173/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.152889299 seconds)
    (174/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.134661137 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068134154 seconds)
    (176/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.08988834 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.140431374 seconds)
    (178/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.123812116 seconds)
    (179/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083391899 seconds)
    (180/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.090486662 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.113612206 seconds)
    (182/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.138883851 seconds)
    (183/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.138591478 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.084155849 seconds)
    (185/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.173962039 seconds)
    (186/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066900352 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.133858271 seconds)
    (188/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.151012826 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11486113 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.117042231 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.086773148 seconds)
    (192/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065997166 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.090748464 seconds)
    (194/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088631806 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.089880786 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.095719245 seconds)
    (197/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13518493 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086096817 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108222071 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.132578427 seconds)
    (201/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067197551 seconds)
    (202/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.201808184 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.130325829 seconds)
    (204/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.090042802 seconds)
    (205/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085130601 seconds)
    (206/309) benchmarking ("sort", BigInt, false)...
    done (took 0.218305022 seconds)
    (207/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110480568 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.111158814 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.128209395 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.11789873 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093633114 seconds)
    (212/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.113695685 seconds)
    (213/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.085791902 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.211151781 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.089410963 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.106873866 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.11444252 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.152501751 seconds)
    (219/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.090440384 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.224081394 seconds)
    (221/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065858812 seconds)
    (222/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066110414 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114563253 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.1301184 seconds)
    (225/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.07532436 seconds)
    (226/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066276439 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.109471578 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066588898 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13322367 seconds)
    (230/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.07695523 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.107002711 seconds)
    (232/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066139638 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.07559158 seconds)
    (234/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.089521689 seconds)
    (235/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093125868 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.089716902 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.216921681 seconds)
    (238/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.082134291 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.187470645 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.181670784 seconds)
    (241/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.093729994 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.161861327 seconds)
    (243/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111432699 seconds)
    (244/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.112752745 seconds)
    (245/309) benchmarking ("sort", Float32, false)...
    done (took 0.172834915 seconds)
    (246/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.076621479 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.17108228 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087047007 seconds)
    (249/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116831174 seconds)
    (250/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.144016684 seconds)
    (251/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066178492 seconds)
    (252/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.13421022 seconds)
    (253/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.113612398 seconds)
    (254/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.089978191 seconds)
    (255/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.086684127 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109344499 seconds)
    (257/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157347664 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.178766571 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109808485 seconds)
    (260/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066234281 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107533712 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109111609 seconds)
    (263/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111949829 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086164915 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114981623 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085702417 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.116566506 seconds)
    (268/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.087896633 seconds)
    (269/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.06600158 seconds)
    (270/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.117708255 seconds)
    (271/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.065995732 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10880928 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.086410048 seconds)
    (274/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.089606635 seconds)
    (275/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.087035056 seconds)
    (276/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.16447753 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110025958 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118922459 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.10908147 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093395856 seconds)
    (281/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116707225 seconds)
    (282/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091714679 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107325202 seconds)
    (284/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088126172 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108088552 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084465647 seconds)
    (287/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.089997737 seconds)
    (288/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067154805 seconds)
    (289/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111040341 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.093346699 seconds)
    (291/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.111670306 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.153485824 seconds)
    (293/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.090590938 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.085446302 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.132215719 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.085612028 seconds)
    (297/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114258631 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092435684 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.132304855 seconds)
    (300/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077019655 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.114452898 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100180109 seconds)
    (303/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.089877225 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066348363 seconds)
    (305/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.089651057 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.191774605 seconds)
    (307/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.214747625 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.092367124 seconds)
    (309/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.075056677 seconds)
  done (took 39.373451617 seconds)
done (took 40.262068614 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103351059 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145264688 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09436094 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.133804345 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122612206 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091218393 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.1185776 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096796393 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.121972302 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124813382 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097117601 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092565257 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.094792485 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119002144 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095656404 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137300442 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122996742 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092660313 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117820359 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08508453 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118181415 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085554542 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111376214 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069608504 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121041191 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092665856 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115301078 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118942054 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085517415 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109174568 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.088925119 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116047666 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085034321 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123993807 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09211273 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117723272 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096271159 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119684669 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087991038 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109149357 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116604936 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085942538 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115825317 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093214151 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116286834 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091538633 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118014035 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.09861688 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137931745 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114843144 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.093903651 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121755954 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095993435 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119382945 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090661885 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120360503 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091792045 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138128717 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118421127 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091188907 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117450955 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094201517 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116694768 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094796872 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117909027 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120162325 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097867852 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115474089 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09678412 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115519589 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08595062 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117955346 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089297742 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109137654 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095536663 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120846622 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085593174 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115362889 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116342106 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.090752372 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108754832 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089077046 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11151487 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09221703 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112417203 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069314998 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113541381 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092601874 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108993644 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.094494874 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115503527 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.092487529 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112430087 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097514131 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109364729 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09089118 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111168111 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086040854 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111752983 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090756811 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109541459 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08904726 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118027448 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087688049 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.115640709 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121420955 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.085617311 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116685016 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08532687 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109343364 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100883163 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12044507 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086006448 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114969994 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08472745 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117900491 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085427514 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109936423 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086390138 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.109712384 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092171294 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.109369404 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088807824 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.116976872 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12379557 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086437708 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113176267 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088981773 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109728118 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091983603 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110616495 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08580142 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112248558 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077016165 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112951712 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086220914 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117270713 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089194297 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.11850902 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.087613582 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119128715 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090490618 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115720459 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092107099 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.10906872 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07351692 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11514648 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089095557 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112681609 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.0865231 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112235677 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086309084 seconds)
done (took 16.794830993 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.092701738 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.193709132 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.159438543 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14999311 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113129098 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.118250636 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.128931255 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.122610249 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112394717 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142213586 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109422459 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131031491 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146698417 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085755342 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.1110862 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090075866 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.111713235 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101407063 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145143471 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132238811 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162310134 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086087189 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146209003 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133918733 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119790733 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104489554 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111151976 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091171157 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11375497 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.111571808 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131341839 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.113972273 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087077817 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133195361 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10428669 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119530333 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086607663 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117512208 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08657345 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110484281 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.13972418 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131412273 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091965323 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116738732 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090174316 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113179917 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088627041 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120302608 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.0974248 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114881419 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125811983 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15372549 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.089765579 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120290228 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086328526 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121793826 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120647819 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089847989 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111449093 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089870581 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111116474 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090958888 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125781199 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140248139 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090744159 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120937432 seconds)
  done (took 8.609037758 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109960949 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141769477 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104289983 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.128871443 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.126357073 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087269954 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.110987985 seconds)
  done (took 1.764934104 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092913731 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137016889 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110122619 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134296885 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130543723 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.107678052 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121678223 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087517336 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.129674969 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.08808173 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132548863 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151200388 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089004946 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119593116 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137291962 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088029683 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136537177 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088041625 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116296609 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111329923 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114929148 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132317841 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090031885 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112296639 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101618781 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113066833 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.159949694 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093022907 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113445743 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091404135 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110511325 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.164273414 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101456859 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123273229 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087514133 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126494268 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.12633255 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088680077 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128397441 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092897157 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127169533 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089064445 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11398733 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085938474 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116859475 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.122098051 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090100845 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.112973749 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090640074 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13215188 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088987626 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125215296 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088457546 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11692912 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089541781 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120699102 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122153706 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089098385 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132134172 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089963675 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129388995 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104755695 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.12626399 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129377427 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091056337 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127031855 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10198135 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114973992 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089387498 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116000347 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.128493873 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.085640249 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114110991 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.098984882 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114173911 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111152112 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.13510848 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114334315 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098726914 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112742204 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088939071 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112118438 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112067585 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11715517 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088121836 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117791531 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090479964 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111345966 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087616553 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.115709586 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086427884 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114104815 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.115336048 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089045717 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115473609 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.104561394 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114732625 seconds)
  done (took 11.709797832 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095790281 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.118554176 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.0910149 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113124155 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089315173 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114079355 seconds)
  done (took 1.590122079 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120121732 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118272069 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.1029705 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119676733 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155463335 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.12741283 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104062166 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121934893 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107474199 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126126007 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127839749 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.103596305 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.133756192 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12059117 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10263229 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119490428 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.127703744 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098692887 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126074914 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095637299 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135219762 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119770052 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095745705 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131059664 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11678344 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094615948 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123978096 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101973812 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127046846 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.120465284 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095589654 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116758647 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094584974 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121404046 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129405187 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094412082 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119585186 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117525425 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099837432 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116786318 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103928788 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120786484 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125372711 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093793855 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122879312 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119371378 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093574734 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125196581 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.126742721 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093550466 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.117884129 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094889815 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117675354 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093313662 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119987559 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122317502 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093684358 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.127650453 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120161741 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095493983 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116991003 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09251839 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121992081 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11614815 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103569426 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118047354 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095282566 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120789976 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120036975 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.094515939 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.117904385 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09189906 seconds)
  done (took 9.141076171 seconds)
done (took 33.768478373 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.694039741 seconds)
  done (took 1.663364127 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.711224171 seconds)
  done (took 1.68056215 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.731030687 seconds)
  done (took 17.697526578 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.49929752 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.576716126 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.809834809 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178332164 seconds)
  done (took 3.034135719 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.950536963 seconds)
  done (took 1.935045332 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.299228587 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.255469967 seconds)
  done (took 1.531724715 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.76642954 seconds)
  done (took 1.744543551 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.339026678 seconds)
  done (took 2.314574361 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333057286 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183379814 seconds)
  done (took 1.49669717 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.545980542 seconds)
  done (took 1.526278755 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.700879778 seconds)
  done (took 7.682471805 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260723644 seconds)
  done (took 1.252083654 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303526586 seconds)
  done (took 1.285295916 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.469073847 seconds)
  done (took 4.456455577 seconds)
done (took 50.278535439 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104355735 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125806402 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100833892 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123695767 seconds)
  done (took 1.437655873 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.104998098 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120321086 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099330788 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119535085 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124729511 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.094686643 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121924148 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099424417 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119512494 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095708967 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.11998587 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11876347 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09725055 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121679791 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092241164 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122551371 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098424523 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120395072 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122103076 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095117204 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117121157 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096653871 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124555855 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093362573 seconds)
  done (took 3.629117095 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105017318 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.122453141 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095523391 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117819673 seconds)
  done (took 1.432024708 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105165879 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.1417615 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.13709154 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.09920292 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141532097 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134730029 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091780497 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116485218 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093370329 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124796427 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089486547 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.147641794 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137077844 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099323343 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.12628364 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088486036 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116579746 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136310762 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.10000461 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125114135 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092648831 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123784064 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089565791 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.137680943 seconds)
  done (took 3.782354195 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.161616708 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.150045703 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13840172 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.093864781 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.155246959 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141163144 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087234058 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140117451 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087237785 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.128955318 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.1177303 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.131620646 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.126875855 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087762489 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113232575 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086946033 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.126390031 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127804677 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09066593 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.144089577 seconds)
  done (took 3.428686098 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104537387 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117311119 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087494573 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11627476 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098061977 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12026875 seconds)
  done (took 1.639460159 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094389409 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113859905 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089705978 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114032407 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09358937 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114361176 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088146059 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11469628 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.0889878 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113636122 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088449231 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112636716 seconds)
  done (took 2.219920227 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.456648428 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092327328 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119639051 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110612219 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.095858392 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114149284 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102663301 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.11805057 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.138679406 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088866865 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11410165 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090683672 seconds)
  done (took 2.636880005 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232707332 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124382418 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281524746 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190771155 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156259885 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170088797 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15183216 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163547533 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.22045615 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156272168 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202243241 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220408773 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125052813 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209921293 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110741215 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.142979412 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222299281 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209178281 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15168641 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224431483 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197272925 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164245735 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176316554 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147611077 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13796018 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169914826 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120795713 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102612187 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228953196 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173195242 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212698169 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159902215 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145694037 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205533523 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247956646 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215700026 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187892625 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134928688 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.14443994 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.162302511 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259323837 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136833925 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2268861 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153009018 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104144394 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213624021 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164034236 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.172427912 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149529771 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137491228 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191660036 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235497374 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.189901895 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136697501 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163091215 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15621845 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166920438 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152966247 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248576784 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194954284 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174617613 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.11926139 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145058607 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189517543 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179748612 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.16610707 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.203927744 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145157059 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190131052 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184293146 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162757416 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2144144 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183171608 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138827666 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165851574 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171011882 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170278365 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250709756 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172844404 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120861293 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167381314 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148478525 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13189729 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16759757 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123911162 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20616354 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14626603 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.133724169 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163497619 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158336805 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158562534 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197432965 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218603316 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120352528 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10931405 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152642875 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154459862 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188336427 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139147218 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156857782 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161038964 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128452352 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175766532 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097543139 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197754828 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090501335 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170385134 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178192585 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128163345 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156718287 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150465133 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.147826181 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172351589 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194665316 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140812559 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132472327 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204502173 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173449906 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.147423002 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176766215 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223766291 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.114356657 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148403936 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224599866 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238270874 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112697802 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224201577 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155594566 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107639605 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.130733965 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176908041 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152925367 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159838286 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133042376 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178539159 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229807867 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098152146 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137360617 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17997766 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133262277 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129973977 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159548106 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146266384 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111144082 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145727628 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.150894467 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179740508 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173864759 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151389898 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161616376 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149921027 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249503832 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140287202 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148961047 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147378839 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.092673515 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.215797889 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195978758 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130255254 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203352032 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.168653227 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157577944 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165383382 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134849406 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176317218 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128599448 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092857304 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218822776 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165745045 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160084957 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.193667385 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157576073 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179862356 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.178292246 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196735401 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17116519 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162576604 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154991898 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111182035 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157205952 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165014828 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122503501 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14011677 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.131875842 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12600158 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140536 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133640532 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218357418 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167558605 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120254901 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156780238 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148592149 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178809317 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127131092 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171205445 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17472683 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146339541 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220207948 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190843343 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181004843 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141771336 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22981054 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093076961 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124000205 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140498275 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168388124 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105699959 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134607006 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164097795 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179102036 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204208182 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174704295 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165163703 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170169896 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187669081 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121911941 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.139887148 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210308392 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176757376 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.158646119 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136086203 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149150943 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174074812 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156697804 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251532705 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164988697 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172639822 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23248637 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.148058329 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103537684 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150633987 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184545712 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15283757 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201382436 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119175069 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140189671 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159727011 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132487928 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157963558 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180711939 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161962649 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21234327 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148907009 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182553665 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125864145 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163337846 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157814364 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164194701 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081046271 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172107896 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229181626 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148663005 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166311232 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187755054 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129686429 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.177122897 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207384378 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215629931 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136280175 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155234115 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157899751 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160710859 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170158756 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176884546 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159158406 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183807033 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155813492 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.10861879 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139688153 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147976703 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149012915 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.130712786 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146849831 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.172713174 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.11123535 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210243174 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160020094 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15649681 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168957952 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14850919 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.115123041 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148740568 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236879993 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174229419 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234676863 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12194981 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177721588 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23071679 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124180885 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104016629 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131663255 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176739944 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134948104 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186722766 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.14645752 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159206108 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179252164 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187517681 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139248355 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092265084 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154513216 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171023029 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165415526 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151418631 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.156962507 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228887779 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114299959 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130276806 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170498997 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158802838 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145671144 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195206275 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079254547 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147337526 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127651263 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105367631 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162091294 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23086061 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135702582 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180504836 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167051463 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167446566 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163794594 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148444053 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119600627 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165468839 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225731649 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178310018 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131476478 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153463625 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174335992 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190852085 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159790289 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139375938 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200210277 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217716921 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194920869 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14127788 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165944429 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166043135 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155069481 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184893265 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135301516 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205352743 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13327388 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223436972 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151526958 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140835622 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173935388 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.146379047 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113140638 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213969111 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175145618 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13323569 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105224535 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168215753 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200709417 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15474675 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098859532 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177378674 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124196988 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187675643 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2529995 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133814822 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151408358 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118767922 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133432422 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15520637 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156194375 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140102169 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.159236697 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201907755 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133056657 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189531267 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229487656 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167278243 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172539485 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143917836 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69061827 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.1287748 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191478586 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154754604 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202278949 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149151361 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169713829 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156852833 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166845838 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220484568 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158429872 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229562197 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190980629 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.174232868 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131670382 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156649076 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161107721 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143042135 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150193898 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165377064 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158589053 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.150399446 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.174746218 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16651795 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133019525 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111415179 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223974422 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153578516 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180079346 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178015701 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138004572 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171172443 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185004223 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133005168 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.176504647 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231952954 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140316772 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14977093 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.105109433 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.153608229 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256630385 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123324363 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197830972 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173116903 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156812384 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165214488 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14546529 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214270833 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155469967 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176231636 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143786668 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158319368 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126139214 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135029233 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128416029 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152973306 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165741951 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.145590121 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157712577 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.136911782 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187467424 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122418215 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143489583 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156970669 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187921767 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238948169 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106412793 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134020201 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159823213 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14958543 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.172748304 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174725149 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134712668 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134504846 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.107891069 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.155807579 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111570015 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15528197 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155379127 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162871471 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228590537 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108358443 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276084364 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137656469 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152131268 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088359439 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129930834 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147611451 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143418761 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156239818 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121886652 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25371899 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.144326829 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.104462196 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145783391 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124168948 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132766594 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162336629 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160946105 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17322001 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141909987 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080219901 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155487846 seconds)
  done (took 79.800368659 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159795928 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130192869 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14439771 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199731233 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174164473 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266780735 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.207614937 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251443562 seconds)
  done (took 2.60251049 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09215738 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.143287043 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.150492512 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131094776 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091068647 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.117811416 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.328109646 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130452886 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.089530684 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.138577527 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.14486929 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.115906831 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.506952051 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.116686173 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.11623126 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081831279 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.114757083 seconds)
  done (took 3.673626974 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.455576357 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.704926826 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.48074807 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124204998 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.070940832 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.133146002 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.673565705 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.207924524 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093887936 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.483943195 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.76577698 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.184177911 seconds)
  done (took 18.455345666 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.097721373 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.1196569 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107300302 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.134056423 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095267409 seconds)
  done (took 1.63015779 seconds)
done (took 127.353771818 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103585025 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.398271107 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071569443 seconds)
  done (took 1.582486946 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10622793 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135547282 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108082698 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134370187 seconds)
  done (took 1.568816846 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.09674308 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125487242 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108216494 seconds)
  done (took 1.409526513 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.31851458 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.187787058 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.139972506 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.104933468 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128444961 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.100955161 seconds)
  done (took 1.413073535 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.095648482 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.1258823 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097309027 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129067974 seconds)
  done (took 1.531119339 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093303427 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071286864 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099419935 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073685525 seconds)
  done (took 1.416296002 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11248649 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130541402 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102808246 seconds)
  done (took 1.430829897 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.12832682 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.136484123 seconds)
  done (took 1.349314654 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104643943 seconds)
  done (took 1.185499915 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.116188282 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.167591858 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.185632953 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.162112454 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.2246965 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.163100049 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.13917288 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113013619 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.12940241 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.142630539 seconds)
  done (took 2.628148038 seconds)
done (took 17.347515299 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102585303 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.417128882 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411098095 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115838702 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.725087526 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379813343 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.035997347 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144726996 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164315448 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09248936 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137230554 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674047332 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026438667 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.372869229 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.987101524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.465058933 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.764315625 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09201465 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11886378 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093120442 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.021950352 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091367872 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120238397 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090838079 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703309278 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424729051 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094103156 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.468188817 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091278808 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125450878 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381628426 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120687087 seconds)
  done (took 17.127864971 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094326251 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172993176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097537539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137590438 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122531943 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093509587 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123789577 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092408276 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177495726 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12195282 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11015747 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120299157 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125353655 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094047142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140678371 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092157288 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124305699 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091958103 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120205915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121594213 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111367231 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119138787 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.092883262 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120160121 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092694507 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134430522 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123181349 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09170339 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120342608 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097486721 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126270042 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093323006 seconds)
  done (took 4.782822663 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139238667 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181868788 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127387143 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125710772 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166220108 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12325257 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197603507 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117443841 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180751187 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121790329 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138802661 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092285157 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155429968 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121577148 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.1130645 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120976508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096350435 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120529252 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091958729 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121251519 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138314565 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092077171 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120824392 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092080707 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121750698 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106630265 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122218764 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120291118 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092712947 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125604808 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098950627 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122282763 seconds)
  done (took 5.100245223 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096077084 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125529129 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108314123 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137384303 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09419444 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124774578 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09664602 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123185265 seconds)
  done (took 1.995892824 seconds)
done (took 30.088556967 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110494766 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.1267419 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106741243 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133751078 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101888964 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130981503 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091122317 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132388035 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134536187 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101511352 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136955027 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.090402048 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122392426 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.0919189 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134731994 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096603808 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132376074 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102505535 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132601001 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131474629 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094413959 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133051433 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102451526 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13277752 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103504814 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13268652 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136899628 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098714294 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121780953 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095322157 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125098991 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103468024 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123686575 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104863509 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126337379 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.095955512 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122704794 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093703846 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131484077 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132326158 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099204059 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133002449 seconds)
  done (took 5.968892738 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106729761 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140158481 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104198935 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081206856 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116139487 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08023121 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137287387 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07860562 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109948569 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107079488 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074175382 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105041657 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078626203 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101014589 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076179239 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075020679 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107843037 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075190477 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076756188 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106409497 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079420773 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073041817 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107640555 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078352858 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07483636 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109177935 seconds)
  done (took 3.557702588 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099454098 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134976023 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111955269 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183305428 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160047211 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098750563 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131672358 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139881901 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108149795 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119565882 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095466063 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147952828 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109439307 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127356257 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091403486 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135185437 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13532077 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.092829468 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126764758 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112069177 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137640238 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102500311 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141508847 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131621629 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.090977398 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121602219 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095585365 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133782035 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096435795 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130557847 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096906116 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123927284 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121776545 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103358531 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124482166 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093333098 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141134258 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102153175 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129596895 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092619421 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.123399955 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120820486 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112719556 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16546709 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090673242 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127814648 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127521855 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.101789021 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121434352 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109705291 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131710063 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091458775 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124178663 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091292175 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121394436 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106456158 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122054094 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095097882 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129414485 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123580923 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10483909 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125085397 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107347134 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12081328 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099536081 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120470116 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092215084 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119274864 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142549911 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09273709 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162109427 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092849487 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122433434 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100661822 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127856869 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12681208 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092139829 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137092649 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102166407 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124248347 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10031253 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125393093 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095294821 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.13904765 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094600195 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.122558433 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121542199 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.098691965 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123423102 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093168455 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135571999 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091895584 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124437071 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110065615 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120895776 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093112095 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127146244 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125238438 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091599778 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13450477 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097865572 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121412167 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102434761 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120444549 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095544486 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.130496549 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125655246 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090875482 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126434065 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098192775 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12187019 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093073125 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125514674 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094129942 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131676769 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099031416 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125933274 seconds)
  done (took 14.699463886 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227974049 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21321483 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.247009907 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.260202149 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134338283 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.144406759 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210426731 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124455423 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122598007 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159562716 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.160734389 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179852041 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168999386 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181518058 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110604622 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121464283 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.109987967 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.162945857 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212774886 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.28748449 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.141653442 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.10020089 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159544468 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158239559 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136174395 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102264707 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.138719725 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104210705 seconds)
  done (took 5.696801434 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106972077 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.1547238 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098128703 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143376848 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14709651 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092530338 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126485255 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093791215 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134301615 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134778617 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092086188 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128912382 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099767666 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130049381 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123110596 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102691037 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131855655 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094627077 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124980906 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097131704 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.128521419 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101600454 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125938175 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120861185 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101750052 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121318305 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085411075 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140836923 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121808468 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114539194 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120380734 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.09910816 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132544401 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092454261 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122185297 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095078288 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124023524 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094581173 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123682607 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090661977 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121208253 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077987961 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121185637 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134134556 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098220173 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079199272 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127213007 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126760547 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.093370648 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119390792 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09507931 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124352028 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096166082 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128761195 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097578284 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123394531 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095939795 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115367968 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098074796 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124108954 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.083429061 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120258541 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.09732605 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117404855 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10071925 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127012779 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091408203 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124153946 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096496156 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128655974 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094743692 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125991642 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090083918 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124882461 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095428256 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126633647 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095629238 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121111789 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122143875 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093350353 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075719645 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122383331 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074162086 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125318391 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.090902895 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121170372 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094445316 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127828543 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136595205 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095124466 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131156971 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093988928 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121537618 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095767089 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112652234 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095110351 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137628203 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13993853 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.092840428 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121067131 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105613622 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12513466 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093055051 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105131683 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.099519677 seconds)
  done (took 12.847547702 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.125530027 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152929233 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094471535 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141322079 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154587401 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155530069 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099235143 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129928475 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.093708929 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140805162 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092560593 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131110944 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096555362 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135715038 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156315034 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.101811478 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124355751 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106470961 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129915254 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168969912 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110154356 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.140713263 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.10761645 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.1230527 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127876627 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.108910331 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160741144 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107593824 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135728344 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140942364 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.106706703 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159867726 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142332529 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097181975 seconds)
  done (took 5.434951974 seconds)
done (took 49.296003027 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.224262121 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.415597776 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.195257386 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.116333916 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.241297664 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.213245462 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.202297016 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.191602122 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.643438161 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.194315337 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.436619121 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.791184817 seconds)
done (took 59.988225266 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.239945938 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.326540894 seconds)
    (2/2) benchmarking "String"...
    done (took 1.454719372 seconds)
  done (took 3.900963204 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.548912981 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.12748162 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.454306193 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.190058005 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.190653371 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.486254069 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.815387774 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.518961934 seconds)
  done (took 27.904122862 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.190611537 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.58633805 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.839035081 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.844110622 seconds)
  done (took 18.582891187 seconds)
done (took 60.295221055 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.183203753 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.262906246 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.201958698 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.17153358 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.30221675 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.222781699 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.574985527 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.430114317 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.191879706 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.176061972 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.211949107 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.213220021 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.19524256 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.543913396 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.200510882 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.200088699 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.233984026 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.643383635 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.593292999 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.203327244 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.217551615 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.23389867 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.236310754 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.19529171 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.279065257 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.193063307 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.197922473 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.204762612 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.768741509 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.197811596 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.201415177 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.692702735 seconds)
  done (took 191.69648539 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.194483574 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.223147939 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.37796526 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.237849295 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.530807875 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.394041366 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.326262178 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.764460835 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.218104155 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.210520352 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.458634803 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.193350082 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.534273385 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.176533311 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.203136067 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.30363167 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.370118198 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.547964539 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.212345554 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.465087978 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.192582416 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.350275382 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.274311921 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.442629114 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.245612068 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.262300422 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.228145027 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.25566222 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.388365951 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.296832348 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.223204035 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.235532958 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.821101458 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.055347221 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.205201018 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.23804421 seconds)
  done (took 149.784871701 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.471708299 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.194215227 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.195542389 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195127787 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.19444727 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.227556959 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194372366 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.774864527 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.779810118 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.706575376 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.347003533 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.258839446 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.491609775 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.199750855 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289636261 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.208201056 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.197313936 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.209359959 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.240465105 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195726643 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196194312 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.778613737 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.214579938 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.225919836 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202199009 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.19755478 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228077252 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.587782177 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195628729 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228143804 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.519369022 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.245706586 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196846907 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.546258422 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.716242521 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311387911 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198654031 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229336016 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.197019041 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.468819455 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197961628 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.19810468 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.200394515 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.837658442 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.202282559 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.778104119 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202059586 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.152550067 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.20256205 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.197279521 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.603866471 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.202924247 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.764840009 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.218350193 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.198293923 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.200464555 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.198439257 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198677569 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.229810659 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.563720958 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.301064745 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.213704091 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.201581388 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230322615 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.1986012 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.358437982 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.214077589 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.769627059 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.273999958 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.31246636 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.781517683 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202524617 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29418808 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318947923 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.199452233 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198933746 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.1990899 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.198726783 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.306437062 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.2004273 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.620453396 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20520512 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.199838835 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.259696927 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.294967249 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.199377475 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.54062246 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.203545628 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.199690213 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.976017088 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299425059 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.200024748 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.200130145 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199518799 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.621466185 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.199995489 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782421682 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.439153586 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.205115483 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.199604171 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.643736581 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.205024211 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.640630946 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.756075776 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.850528891 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.205582565 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310213416 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20461359 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.202520086 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.199738509 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.230041164 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.218757769 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.259126716 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200803767 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.59981391 seconds)
  done (took 346.210485506 seconds)
done (took 690.286479165 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.885562471 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.839766439 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.973787164 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.853534683 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.838320259 seconds)
  done (took 10.521316087 seconds)
done (took 11.650408836 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.390325743 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.388229428 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263790707 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.391105982 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23095731 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.40709301 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.372240367 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.225098758 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.305544279 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.283628893 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.302480001 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.257017428 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22965313 seconds)
  done (took 18.177858939 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.528871686 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.52568528 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270655049 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.521281746 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245458337 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519819957 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407806321 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.420875874 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.421433827 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.239065469 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216438715 seconds)
  done (took 16.449084173 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.525734942 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.527480802 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.2738997 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.527063741 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246745966 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524465685 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.400809111 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.423239134 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.426574944 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.240055336 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216233337 seconds)
  done (took 16.464070539 seconds)
done (took 52.219878546 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.211908389 seconds)
  done (took 2.344832423 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246786718 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.413128649 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.228042342 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.218583795 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212349651 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.213889996 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.217639632 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.212899299 seconds)
  done (took 11.096847079 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.212702182 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.209033888 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.209671595 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.21209868 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.210541286 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211795919 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.213574478 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.210866819 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.210124877 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.209794965 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.212414198 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.209591929 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.213404605 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210092446 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.21319574 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.213539663 seconds)
  done (took 20.515995988 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.213485508 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209499159 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.209979246 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.211519983 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.210695823 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.211347932 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.212092188 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.210439484 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.211557187 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.211145094 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.212579395 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210842878 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.211492504 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.211513818 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.211116271 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.212079415 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.210593524 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.212442679 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215773113 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.211257743 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.211777249 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.211940589 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.212628663 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.212355267 seconds)
  done (took 30.216758769 seconds)
done (took 65.304494675 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.336613127 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.92726488 seconds)
  done (took 9.398374424 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.214965024 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.214313236 seconds)
  done (took 3.569061049 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.214631113 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.213423381 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.214213213 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.213838078 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.215115795 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.214817235 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.214375087 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.214540453 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.214546748 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.214302972 seconds)
  done (took 13.27976741 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.214190981 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.215718128 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.212651542 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.214080128 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.214803101 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.212076767 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.215663881 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.215944249 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.214826426 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.212692458 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.215074294 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.211988274 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.215071967 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.212999743 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.214535557 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.213438787 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.213834813 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.213284484 seconds)
  done (took 22.989611964 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.216259132 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.215896939 seconds)
  done (took 3.56907149 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.21363074 seconds)
    (2/7) benchmarking "second"...
    done (took 1.213351697 seconds)
    (3/7) benchmarking "month"...
    done (took 1.213584908 seconds)
    (4/7) benchmarking "year"...
    done (took 1.214206152 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.213611442 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.214174728 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.213658463 seconds)
  done (took 9.633189567 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.217677891 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.388186334 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.465011758 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.840005284 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.217091651 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.220085033 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.086013358 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.220341248 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.222603283 seconds)
  done (took 14.014989755 seconds)
done (took 77.587882804 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.222648119 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.228380726 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.402774159 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.219936499 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.244926618 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.512201822 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.244700199 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.341086031 seconds)
done (took 37.554566187 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.212229571 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.961509022 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.97030154 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.211078543 seconds)
  done (took 11.28102989 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.190178449 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.173941743 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.206722227 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.249736017 seconds)
  done (took 17.960046381 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.25032217 seconds)
    (2/2) benchmarking "read"...
    done (took 1.547652111 seconds)
  done (took 4.939538796 seconds)
done (took 41.529980438 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219598091 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.218060012 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.216392889 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.216923402 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.220079228 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.219995118 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.216025947 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.21704121 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.216747614 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22027565 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.2188381 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.218915372 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.218809635 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.21845533 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220048554 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21760588 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21634867 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218229735 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.216759864 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215881413 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216348372 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219487088 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.217355587 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.216519953 seconds)
  done (took 30.370117701 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.220493514 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.218046971 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.219361449 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.219579467 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.217993822 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.220399682 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.219902136 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.216620651 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.22036042 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.219780702 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217092679 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.217088025 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.219683174 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.217960401 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221309872 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.218582552 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.219998992 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217821662 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220917529 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.219051878 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.220440018 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217993878 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.218558962 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22041438 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.219075337 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217718927 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.2217627 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.218535959 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221701056 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.219666845 seconds)
  done (took 37.719251181 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.226000457 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.228074019 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.221252569 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.221157995 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.220709351 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.221996054 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.222227578 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.221702914 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.221600159 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.221989842 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.220841536 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.22154313 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.221760014 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.222378879 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.222188366 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.223084191 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.222404022 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.220697111 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.223198527 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.222443607 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.221300114 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.222818171 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.222844302 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.222307874 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.22206858 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.222368792 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.221733362 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.223294304 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.223277156 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.223368964 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.223621636 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.22361092 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.223688918 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.223490897 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.222563692 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22230846 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.22834536 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.230192661 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.223842747 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.222978583 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.224557503 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.223891486 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.223788442 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.224584634 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.223191582 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.222439584 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.224043848 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.225233275 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.224018667 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.224075666 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.224450612 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.225251416 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.223306463 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.224210072 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.224239194 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.224025481 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.225216668 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.225454215 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.223503576 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.224986038 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.225149697 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.225420879 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.224651076 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.225350321 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.225261467 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.224606812 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.22662019 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.225336144 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.224703983 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.22535456 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.224023864 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.225810642 seconds)
  done (took 89.247712004 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.225595216 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.223707055 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.222648592 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222648074 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223468761 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.225756132 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222948449 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225352146 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222494256 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.225892788 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225535384 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224404223 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223994641 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.226409469 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226180477 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223914837 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.226606175 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223200604 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.227810184 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.228148829 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227221378 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.223869404 seconds)
  done (took 28.094776269 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227163875 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228437593 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.223794018 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226637938 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224609644 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227383919 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.227040582 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229124126 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228655515 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226079201 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225230052 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227661843 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.225542329 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224784793 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225523311 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225866245 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226650062 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.226144112 seconds)
  done (took 23.225332397 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.225274211 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.225925537 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.227682743 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226306445 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.226956931 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.228947814 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226787752 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227885853 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.233155062 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.227211048 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.228956674 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228954903 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.229464268 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226143395 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228767303 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.226503087 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.229190707 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226510015 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230048366 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226603323 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.226317715 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229318542 seconds)
  done (took 28.161668517 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230424898 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.229540352 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.226745657 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.227168998 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.227503474 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229367639 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.230035224 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.227555728 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.230894389 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.230038014 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227561688 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.229071286 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.229832841 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227995151 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.228562948 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227337384 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.229602197 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.228781051 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230582702 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.228072644 seconds)
  done (took 25.726913203 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230726844 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232482467 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.231978954 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232012825 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231263957 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.23132542 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233182021 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.232637631 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.232255315 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.232638924 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.23274125 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.231941067 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232252461 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.232448034 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232409716 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232235688 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232208687 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233392896 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.232010714 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233260496 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.23242987 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231825464 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.232565922 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231776399 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.232442411 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233565861 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233106116 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.23388037 seconds)
  done (took 35.65771633 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233252734 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232327474 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.230322503 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.230613648 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.230935347 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.231186057 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.231955464 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.230433905 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233006946 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229932512 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.234759606 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.232742095 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.234275754 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.233463727 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234378723 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.234352425 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233675468 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.231346441 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231663152 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23316187 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.234337209 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23485981 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.234294935 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231365988 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232336855 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.234460215 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232155629 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232456388 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23506809 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232341816 seconds)
  done (took 38.135205715 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.254349308 seconds)
    (2/2) benchmarking "in"...
    done (took 1.252808769 seconds)
  done (took 3.660883254 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.232607438 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234281169 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.235255163 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232403413 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232299527 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234647422 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234254212 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232885654 seconds)
  done (took 11.023219282 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.23531993 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.235827792 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.235032801 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.234940624 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.236521381 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.235172955 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241006296 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.254309507 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.236874405 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.237087081 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.242905238 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.243451248 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.238359129 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236345196 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.236035111 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239344822 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.235832663 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.236317909 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.236337248 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.23693829 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237195432 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238838183 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238230209 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.233755742 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.237867257 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.246635727 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.260194749 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.236170716 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236638403 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.240235802 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.237429913 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.234504831 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.236884899 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.236778915 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.237514189 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.237417081 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24527666 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256861318 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.243620661 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25710385 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239464146 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.234301639 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.23874849 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.238726057 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239306083 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.23808064 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.239028459 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.236019215 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.23750906 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.24164191 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.242745371 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237581145 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.236347623 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241958408 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.239572665 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24561619 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.258051276 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.242317759 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.247772037 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.250029146 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.270876692 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.262616762 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239747742 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.238765375 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248877823 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.262247203 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246877706 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.257463172 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.237851275 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.239523658 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.246503926 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272272888 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.265121246 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.239897825 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240602753 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.240678968 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240539461 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241659278 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247193905 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.262249622 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.241367585 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240851255 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251214548 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262556374 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.24022581 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.239456496 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.241552643 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.240542841 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.242689729 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252602557 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.261104204 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.241785791 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.241083016 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.241773696 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.24297618 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.241673102 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.241467155 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243635636 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.240448686 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.241740633 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241686806 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245631512 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.251472306 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241162227 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242688024 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.249054356 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.262477137 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241386089 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.249040644 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.242199217 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240836944 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.243674677 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.248559595 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.240649877 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246033234 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.250739775 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.241224712 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.244993549 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.242740756 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.243896345 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251703626 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.268841568 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.243290573 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.243383052 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.247758249 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.254511479 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242854579 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.246056019 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.243128305 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.242098479 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.241348195 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.247178925 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.243606696 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.244798417 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243702335 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24557286 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.242154298 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.244137243 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.244964849 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.245778043 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.245357284 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.245287955 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.24633176 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.246595345 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.245056701 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.246899587 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.252652709 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.264355019 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.246367594 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.247482349 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.242596219 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24454609 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.244947351 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.244917176 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.245981919 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245684546 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.246552624 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.245611345 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247347722 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.245529039 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24602104 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.246616421 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249406354 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.244723908 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.249464166 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.245695931 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.24249087 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.245765193 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.246986735 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.246036614 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.246318503 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.245400396 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.249099899 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.25384981 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.246889773 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.246074742 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.249549976 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245687004 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247181335 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24679228 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.250856239 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.25462349 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.246738441 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.253762496 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.266484158 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245978935 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.248443288 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.248831086 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.248146066 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247747733 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.252861681 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.254916923 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260491083 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271601585 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.249338555 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.251722837 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.248798138 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.251906829 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.252022053 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.248499517 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.249241691 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247745422 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249746958 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247991122 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.25000225 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.247950884 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.247914035 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.249171288 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.248600732 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.248139318 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249324298 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.249021751 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248977976 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.248099408 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248948034 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248821643 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.249608673 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.247377545 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.249142817 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.249431147 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.249950374 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.251170176 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.256837762 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.247165312 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250978839 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251339127 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.249791357 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.250094784 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.251170521 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252587284 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.250561287 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2566185 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.270008096 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.251665818 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2574173 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.269529653 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.250083609 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.252070171 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.251506569 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.248351933 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.253170281 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.258459987 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.250718785 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.250867981 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.251404618 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251358669 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251257807 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.257296494 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.267622986 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.250413318 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.252792135 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.252282209 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.250036438 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.252231997 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.252115055 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.252019514 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254154004 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253114785 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.252209736 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253373205 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.251839943 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.252364413 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.252179836 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255442137 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.259583739 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.257679602 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.252847702 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.255589259 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.253609574 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.256663649 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.253437992 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.252840149 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.252675697 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265878014 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.277140152 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260435781 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.274156061 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.253632554 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258561368 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.273926081 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.257012826 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252851638 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253856215 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.2543864 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.253879283 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.250512304 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254088954 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.254192898 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254137405 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.254443586 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.258033424 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.254912844 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.253318981 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.252946261 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.256008568 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.254734481 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.254964932 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.254479252 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.256169351 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257167882 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.254384598 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.255070598 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260661619 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273958512 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.256125706 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.255669298 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.253955177 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.254703089 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.256992628 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.254005274 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.259033193 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.262185995 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.258804933 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.264854256 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.256683949 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265377581 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.25586812 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.258946036 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.26358091 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.254246105 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.256111659 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.256197983 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.255186627 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26311178 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.275938762 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.258521886 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.259892053 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257689852 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.25734104 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.256336757 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.256831474 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256597635 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.256403856 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264562691 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.277315796 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.260411376 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257841302 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.256012697 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.256892994 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.257647618 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.257099416 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261350932 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.257624588 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.258503342 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.257379348 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.258758457 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.257783144 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.257319011 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.25781092 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.254539367 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.258468338 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264985614 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.277888508 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262242744 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.258901284 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.266574513 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278167992 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265276189 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.277842126 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.259196144 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.258072643 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.25846728 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.261022828 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.258164236 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.260225191 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.258323266 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.260406586 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.262731333 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.258221191 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.261648711 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.260015197 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.259171672 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.259948574 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268372239 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282011987 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.261564237 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263593466 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.256545447 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.261137654 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.264897584 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.259997008 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.259576628 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.261929602 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270908361 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268875246 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.260887848 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.261093946 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26032148 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261256453 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.26147083 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.260769975 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.261238431 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.260893496 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.261959543 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.260087234 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264891152 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.261885628 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.261627183 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262847549 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.262673903 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.27371254 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.280491254 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.262854443 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262140356 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.263333519 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.260553336 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.262242677 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.260660557 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261930398 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262089333 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.26313342 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26883133 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.269007824 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.264290727 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.261988235 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.262396072 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.261693904 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.262644792 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263563711 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.261766706 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262714536 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.264029725 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.262968388 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.262699299 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.261450172 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.262822225 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.263521086 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264354878 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265992973 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.269833483 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262574067 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.261299976 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.263969399 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263478792 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.26257822 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.264109432 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.270360479 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286126267 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.273320827 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.270811029 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.267970505 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.263652288 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267241863 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.271974502 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.262954899 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.265426491 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.264753356 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.265548054 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.265030373 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.266863203 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264952129 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.271575694 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.28466721 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.26385137 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273609525 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.285233572 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263737897 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.265136576 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.268399128 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.264847131 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.262386692 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.26598397 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.264496641 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271715136 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.28592753 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265013443 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267731909 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.264736187 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.267256599 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270736604 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265674613 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.267759925 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.264346716 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.266029272 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266873036 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266272174 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.26360286 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.266022489 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.268451014 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.269431495 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.273186184 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.264922731 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269126155 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.266273019 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.268642596 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266994628 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268246905 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.264316813 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.265632151 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.265854673 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267015837 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.268065681 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.269278844 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.267514554 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.268790592 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.268825921 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267995817 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270395478 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277959538 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.275285842 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.265953673 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.266970168 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.267998161 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.270553387 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26787239 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.268130324 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268674478 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.26978055 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.269347712 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268794185 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.2686146 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.270688457 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283178133 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.287705138 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269361703 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.268918549 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271493166 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.269329216 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.267315201 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.270434335 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.270959748 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.271654176 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.275702151 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.269343338 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276137568 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288967329 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.270759597 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.273584571 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.27296186 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.277436201 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.273195198 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270323315 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.269339532 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.274864495 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.285907975 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270692648 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279367408 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.299941892 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.29237123 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.270856895 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.269266202 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270117042 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.270646309 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.271220945 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.271616851 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.271201689 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270777135 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.271179617 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.271845952 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276548111 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.272967585 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.273315355 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.270570924 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.271858856 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.27254565 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.26954462 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.27161316 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.271225909 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.271566641 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.272223417 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.272427245 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.272595598 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283993854 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.298113835 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.272845493 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.271347261 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.269105395 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.274689394 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.274915895 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282475798 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.279109672 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.27227164 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.271957325 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.273604369 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272574678 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.271640074 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.272470148 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.273449595 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273958277 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.270556665 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.285158073 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298478724 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.277847338 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.273144573 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273935937 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.27417383 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273941189 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272446285 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272994209 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.275703025 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.276265127 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276746611 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.273985285 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.274325171 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.275777683 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.281778701 seconds)
  done (took 750.748993937 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271708397 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270800805 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271263697 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.271105854 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271155319 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271534932 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272006197 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.271334181 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.271809164 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272346488 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.273241405 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271760262 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272589851 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.272995264 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271565527 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.272157961 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272336785 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.272897099 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272300813 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272611078 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.272718724 seconds)
  done (took 27.902651362 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.27466902 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.273391552 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272914727 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275333626 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273619216 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.277494938 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.273179403 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276757504 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.275560677 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273065028 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.2750234 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275935327 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.273293692 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.274207978 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273469257 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276322036 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.276333641 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274227198 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.276556356 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273923507 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277886352 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.275000298 seconds)
  done (took 29.240694285 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.276453402 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.276161284 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.276436307 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.2740439 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.276841464 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.274710661 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.275955452 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.277320331 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.277174284 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.276549424 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.276905382 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.277156302 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.284859792 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.282476425 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.278532046 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.277825699 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.421659342 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.27809027 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.277674038 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.277219766 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.274925265 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.283512711 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.297228698 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.275179101 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.276708572 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.27726011 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.278242919 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.278829157 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.277472652 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.279647642 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.282317955 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.279590535 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.277793335 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.279901511 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.277681725 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.279538078 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.28187404 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.278962802 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.27548395 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.278679274 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.288013193 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.299095444 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.279673173 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.285056613 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.301164896 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.280093595 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.28216095 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.286001182 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.277204559 seconds)
  done (took 64.057610858 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.280620467 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.280126507 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.277678161 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279445559 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.279901715 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.279404277 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.279702277 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.279812045 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.277044405 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.278259011 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.281874847 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.27758483 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27906376 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.281493463 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.280785752 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.278241944 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.279222096 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.278359575 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.277033493 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.27809602 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.278552021 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.281045031 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.28111199 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.278147063 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.28130556 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279080336 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.278920773 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.28120062 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.279584601 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.278682089 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.280974338 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282076325 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.282493686 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.280451514 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279303189 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.281745442 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.28245221 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.27928052 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282528039 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.27845261 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.283776851 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281616375 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.282549075 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.282927464 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280818615 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.281742446 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280786923 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.280560863 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.280227229 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.284143703 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.283687022 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.281693152 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283786471 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.280073504 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283612892 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.284336997 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.280533897 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.280946427 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.282541819 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.281399375 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.281467755 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.282583959 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.281237422 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.283809414 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.283531404 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.282016414 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.281465555 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.284169798 seconds)
  done (took 88.291750823 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28391572 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.283859667 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283793717 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283040964 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283341365 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.284690544 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.283756245 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.284418088 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.28490211 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284755545 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283636592 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.283590201 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.283339919 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.284402699 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283470824 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283365331 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284087135 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.284636752 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285594057 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284150726 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.284815325 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.285832992 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.284318253 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.284282028 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.285127394 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.284235752 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.284331095 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.285345294 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28484608 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286333898 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286388846 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.284563031 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.284892557 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.284971438 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.28567581 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.285785 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285127834 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284594605 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.284821649 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.285110857 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.28518646 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28435732 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.285326627 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.284765984 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285379965 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284988454 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.286443629 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.28686462 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286199263 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.286434768 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.287371779 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285796693 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285680883 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286127417 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.285771537 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.287252932 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285429264 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286400026 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286492058 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.286040804 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287218006 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.287992116 seconds)
  done (took 80.878280432 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287714417 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.286182886 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.284490993 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.28477012 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.287551564 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.285014883 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.287004327 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.287701797 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.287844346 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.287571131 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287327166 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286292815 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28641094 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288173611 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.28535042 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286908346 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286104884 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.286123846 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288149535 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.286043369 seconds)
  done (took 26.935332009 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.286505939 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.28947676 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.287177428 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286819609 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.289210313 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.286847104 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.289528652 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288922077 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286975079 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288964084 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.290086841 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289347072 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287252194 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288029975 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288963969 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.287513847 seconds)
  done (took 21.815726388 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.287657189 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.290172964 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.289657348 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.289921014 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.28776237 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.287598 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.291187182 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.287725827 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.288327771 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.292039336 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.290238884 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.29007426 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.291193016 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.290682392 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.288699635 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.28999897 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.288529536 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.289009205 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.291831319 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.290446716 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.289160771 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.288686596 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.29016155 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.290657746 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.28898348 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.289225485 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.28897411 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.287712379 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.289230137 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.292265563 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.288917434 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.289586344 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.288426113 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.289200148 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.29127376 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.289531046 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.291393303 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.292728761 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.291210704 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.291667689 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.292018874 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.290315966 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.292448111 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.293231517 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.289982848 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.292059617 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.290067795 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.290414711 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.290374063 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.290170991 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.292188609 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.292722328 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.294028034 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.293632843 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.293531069 seconds)
  done (took 72.176197804 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293531621 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293911897 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.290312203 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.293622284 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294231061 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.291483606 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.292843039 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293615025 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290875116 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.29391952 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291935225 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295709544 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291249004 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294911677 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29188536 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295245796 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.291953666 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292285255 seconds)
  done (took 24.481725284 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.292582289 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293764699 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.29466366 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.292624623 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.29177297 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295870282 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292377627 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.295692605 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294962954 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.293315552 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292373813 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.297113434 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294889941 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.296281137 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.295285928 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292826247 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.294980268 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29585236 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.292815791 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293494004 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296397838 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296351479 seconds)
  done (took 29.685952206 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.293428875 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.293089754 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.294747571 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.311010715 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.313725332 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.318074074 seconds)
  done (took 9.034362173 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302259766 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296713611 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294615174 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297523175 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296616493 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293731695 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294902543 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29400215 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296148324 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293298486 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294032625 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297075311 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296131112 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294471253 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297035997 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297894856 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294945411 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293310413 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296131904 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297197605 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29462064 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296954229 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294241986 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295602307 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294361169 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29594798 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297365919 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295329502 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296484207 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297748404 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297934823 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296046817 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298018926 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295551498 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299710602 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298585518 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295103385 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299148068 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298545642 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296177076 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29853773 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298576849 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299263918 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296641479 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2990673 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297015214 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296977402 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297106844 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297088878 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299661279 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298962846 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295995355 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299326528 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298308964 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300950864 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299433784 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297705453 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295689242 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299281368 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298277283 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296847756 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299811405 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297072838 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297190563 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299841791 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298677682 seconds)
  done (took 86.839356865 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297566222 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29710679 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297644044 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298834781 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297873352 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298077357 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299141147 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297798345 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2981689 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297865721 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301793165 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296888573 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298385398 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299014733 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298103945 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29828021 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298694096 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298281995 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29906002 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301888106 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298090379 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298512559 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29834107 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298147088 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298723941 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300950566 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298470565 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298569953 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300849024 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2984289 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298915146 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300083221 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300103387 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299643094 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30015823 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30040268 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299560219 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299262688 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299167678 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303446287 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300909528 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30260824 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29972528 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299912596 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300094427 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299609091 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299932881 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300746426 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301814979 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300593105 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301551505 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301586882 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301555269 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300805739 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302301814 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302388644 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3013529 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300003931 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301953543 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304984783 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300838534 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301925673 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305564179 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302262989 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302487848 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302116097 seconds)
  done (took 87.016864593 seconds)
done (took 1751.266162545 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.373286442 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.39781449 seconds)
  done (took 13.990291114 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.466114337 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.418679835 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.302793423 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.353274571 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.302378688 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.320164966 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.313006036 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.301414985 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.304038223 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.303673994 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.303668772 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.489927502 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.305873713 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.303442557 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.303922612 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.398319973 seconds)
  done (took 42.711962399 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.330921197 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.309524821 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.427978351 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.326903053 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.328891577 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.505294747 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.361224375 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.308254628 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.49169808 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.351309876 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.96850639 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.332715046 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.309309044 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.487082722 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.326776082 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.502989653 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.567836216 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.973964664 seconds)
  done (took 30.432043 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.795700569 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.324081812 seconds)
  done (took 9.341628593 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.343134392 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.345355955 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.30864298 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.350592485 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.366099509 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.341301945 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.369681878 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.3780867 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.351203408 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.329406708 seconds)
  done (took 64.711692672 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.328287804 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.309104113 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.310699471 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.308026929 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.301672812 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.300467537 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.308368213 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.303317939 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.270315986 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.447641346 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.329891091 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.317440679 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.330091049 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.309552399 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.308964124 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.346108679 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.442748724 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.328837804 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.30745475 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.315161885 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.310117344 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.395578373 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.351494894 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.307782237 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.442236077 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.274578249 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.317755157 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.316466448 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.423154472 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.328192952 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.308399785 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.310533766 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.311220416 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.899677806 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.82790455 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.32029831 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.334582062 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.317599612 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.307728944 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.434455486 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.330972362 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.317692032 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.30467274 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.795680339 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.459309159 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.425750788 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.697936222 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.316815251 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.311401438 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.372900327 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.310200042 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.311190458 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.340785885 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.080612244 seconds)
  done (took 110.968894048 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.33656717 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.79087634 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.475360024 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.328616303 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.11521332 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.042182217 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.326624002 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.612371669 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.369955686 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.30281446 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.586994677 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.826689246 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.330529992 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.324687508 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.975089611 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.37548843 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304748455 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.116727906 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.325522444 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.304105131 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.731769398 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321692915 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.30901413 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.451440194 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.342437118 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.783372827 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.894813473 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.785398152 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.32693668 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.302831702 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.787813409 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.327027687 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.321900886 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.303431815 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.584127075 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.677989318 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.672098618 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.324680433 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.34629087 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305880115 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.328361341 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.778660029 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.68066205 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.323148761 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.304631037 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.801265679 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.323292663 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.30659091 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.307454388 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.50616186 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.033546418 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.304368896 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.874883068 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.312020466 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.669827531 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.346328813 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.354465315 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.811886897 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323252762 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.427423411 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.344322429 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.304677746 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.309739572 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304930783 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.310431468 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.669672471 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.444176413 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.310710139 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.672106425 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.803352299 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.328709451 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.847729617 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.290985673 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.324840039 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.384721866 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.316436442 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.894376852 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.828975446 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.325416414 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.306663058 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.656065146 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.328172549 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.592280204 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.324039665 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.324895601 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.743732167 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.327226505 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.30904339 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.307922606 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.30697873 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.936996968 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307591131 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.599465369 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.380694516 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.307736449 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.308551558 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.345899179 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.31281602 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.308337598 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.310209186 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.848247908 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.330361994 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.448297362 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327557616 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309062825 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.308232031 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.310068885 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.309088958 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527540932 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.852166999 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.310316294 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.308592977 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.308231011 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.316183781 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.452538532 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.316170732 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.631237002 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.326412035 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308990761 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.328694091 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.057897876 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.340516993 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309650378 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.313507964 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.147300483 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.538255798 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.327881991 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.326627078 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.311008151 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.326582049 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.739755982 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.309503525 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.340453933 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.314165003 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.032568357 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.369006004 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.323409814 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.698246247 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.311679528 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.311008097 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.331980038 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313012385 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.640072462 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.592238742 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.352330934 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.313968381 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.330367438 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.028896962 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.372820377 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46066344 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.330777934 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.338171549 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.51090328 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.720026841 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.310770124 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.884291526 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.31490841 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52386473 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.311745127 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.651919826 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.811839119 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.330763623 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.319736506 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.023872644 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.984299244 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.913301163 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.318791954 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.598499894 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.330062053 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.77058416 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.313012841 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.313716057 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.758646663 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.315541851 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.323678232 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.313799245 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.312980789 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.454196897 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.489905821 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.495330113 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.318861411 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.787725387 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.350186567 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314297253 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.315834437 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.313947379 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.667374824 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.373472682 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.312849182 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.315730043 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.316691541 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.313837317 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.803561105 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.327001549 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.320137222 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.469538805 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960608809 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.33132739 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.329763324 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.017884782 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.559346822 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.842482875 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.395116608 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.639244781 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.336305403 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.355416853 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.050374273 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.367518362 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.801913447 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.333415423 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.317567808 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.916700584 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.33450118 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.667674775 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.315022731 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.317028103 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.877878706 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.33809867 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.32014261 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.737564434 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.331401196 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.563450206 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.316687521 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.316024597 seconds)
  done (took 1107.750202537 seconds)
done (took 1381.123509921 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.317052273 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.317531984 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.306258124 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.325324139 seconds)
  done (took 26.504887925 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.327929013 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.329846335 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.326389725 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.324158899 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.327381001 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.325542159 seconds)
  done (took 9.208348088 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.537935807 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.319679883 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.325620523 seconds)
  done (took 19.422223205 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.553524654 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.647186112 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.716967058 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.669097204 seconds)
  done (took 10.83162721 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.325949627 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.326937346 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.326420627 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.328744082 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.330075707 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.330421984 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.329432628 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.329802203 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.331763779 seconds)
  done (took 13.202400396 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.481388935 seconds)
done (took 85.887382408 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.874381488 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.733232732 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.888458097 seconds)
    (4/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.753624539 seconds)
    (5/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.352495936 seconds)
    (6/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.416030914 seconds)
    (7/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.413643946 seconds)
    (8/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.975886956 seconds)
    (9/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.353387217 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.284162308 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.574518465 seconds)
    (12/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.337618904 seconds)
    (13/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.363961634 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.365930845 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.321494597 seconds)
    (16/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.898031016 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.348285753 seconds)
    (18/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.980092829 seconds)
    (19/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.378390626 seconds)
    (20/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.625298483 seconds)
    (21/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.341034259 seconds)
    (22/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.605751157 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.023250631 seconds)
    (24/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.658653268 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.606087652 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.739673019 seconds)
    (27/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.973841978 seconds)
    (28/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.365749964 seconds)
    (29/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.375250973 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.940657435 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.428675073 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.304051047 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.316579516 seconds)
    (34/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.776606984 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.230845454 seconds)
    (36/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.321954644 seconds)
    (37/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.325716619 seconds)
    (38/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.40124948 seconds)
    (39/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.334878028 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.009016834 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.373747503 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.179822559 seconds)
    (43/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.664204657 seconds)
    (44/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.781567644 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.460280085 seconds)
    (46/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.339430437 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.349280376 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.54988545 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.401590721 seconds)
    (50/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.751732 seconds)
    (51/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.969428434 seconds)
    (52/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.365135795 seconds)
    (53/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.660438941 seconds)
    (54/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.934886899 seconds)
    (55/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.558187817 seconds)
    (56/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.466382334 seconds)
    (57/309) benchmarking ("sort", Int8, false)...
    done (took 4.388050905 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.342290158 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.35077615 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.436256885 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.324639952 seconds)
    (62/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.355676901 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.132924226 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.584406424 seconds)
    (65/309) benchmarking ("sort", Float64, false)...
    done (took 5.677486711 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.168014854 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.305221487 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.83646055 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.335375936 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.327250679 seconds)
    (71/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.921209733 seconds)
    (72/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.890044181 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.261713874 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.383025769 seconds)
    (75/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.334573064 seconds)
    (76/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.326875097 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.272105074 seconds)
    (78/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.343669331 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.829875741 seconds)
    (80/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.352815013 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.325300019 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.311505074 seconds)
    (83/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.209293976 seconds)
    (84/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.959358681 seconds)
    (85/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.290184617 seconds)
    (86/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.330038978 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.377894754 seconds)
    (88/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.328053798 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.565577924 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.239657189 seconds)
    (91/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.354773732 seconds)
    (92/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.970892782 seconds)
    (93/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.020833532 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.30136012 seconds)
    (95/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.315770054 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.456356334 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.446573607 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.409913238 seconds)
    (99/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.623039169 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.270242459 seconds)
    (101/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.327673516 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.197909683 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.354353961 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.445439134 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.31708708 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.326314025 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.332848702 seconds)
    (108/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.337427174 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.479156746 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.541568205 seconds)
    (111/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.710287267 seconds)
    (112/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.19755912 seconds)
    (113/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.419249833 seconds)
    (114/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.513958143 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.979949712 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.418706052 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.351472133 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.377810499 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.301362663 seconds)
    (120/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.715423973 seconds)
    (121/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.248791125 seconds)
    (122/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.836408354 seconds)
    (123/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.760986358 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.765327817 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.363320317 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.836815356 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.848271683 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.369401768 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.114083506 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.070689071 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.156715056 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.613298087 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.498498514 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.1573385 seconds)
    (135/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.35533055 seconds)
    (136/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.239950383 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.589011471 seconds)
    (138/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.940384727 seconds)
    (139/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.698558493 seconds)
    (140/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.522112472 seconds)
    (141/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.726068362 seconds)
    (142/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.459716048 seconds)
    (143/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.701854631 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.330941237 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.484721492 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.966691939 seconds)
    (147/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.335851102 seconds)
    (148/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.019248908 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.152034865 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.359067624 seconds)
    (151/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.490868721 seconds)
    (152/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.916850369 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.771952426 seconds)
    (154/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.804765871 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.328079078 seconds)
    (156/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.022202959 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.404444154 seconds)
    (158/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.054738049 seconds)
    (159/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.35948072 seconds)
    (160/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.347746001 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.354209653 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.035770524 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.127690797 seconds)
    (164/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.339099153 seconds)
    (165/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.743124641 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.338271038 seconds)
    (167/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.420661541 seconds)
    (168/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.341482541 seconds)
    (169/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.397039121 seconds)
    (170/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.468325354 seconds)
    (171/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.320543471 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.357683145 seconds)
    (173/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.663076313 seconds)
    (174/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.526609677 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.31453358 seconds)
    (176/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.626827011 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.356975969 seconds)
    (178/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.79695981 seconds)
    (179/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.036799448 seconds)
    (180/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.321933377 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.31672837 seconds)
    (182/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.738535268 seconds)
    (183/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.001566101 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.420747541 seconds)
    (185/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.948098996 seconds)
    (186/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.496728966 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.197720619 seconds)
    (188/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.488691781 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.378784955 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.374882317 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.444028814 seconds)
    (192/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.744756738 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.316332662 seconds)
    (194/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.409566378 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.315383831 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.831589466 seconds)
    (197/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.435219028 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.334410615 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.43206003 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.487285775 seconds)
    (201/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.077722095 seconds)
    (202/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.833032187 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.403013098 seconds)
    (204/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.19907633 seconds)
    (205/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.845700067 seconds)
    (206/309) benchmarking ("sort", BigInt, false)...
    done (took 6.334266123 seconds)
    (207/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.457675691 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.863149795 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.99722228 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.997217038 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.546797516 seconds)
    (212/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.442475576 seconds)
    (213/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.335094126 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.357244698 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.063710342 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.799600465 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.856818093 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.098471253 seconds)
    (219/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.332844424 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.374924586 seconds)
    (221/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.868621497 seconds)
    (222/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.742700227 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.362331633 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.992973319 seconds)
    (225/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.706796238 seconds)
    (226/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.833380434 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.335745707 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.331972723 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.345000228 seconds)
    (230/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.182982196 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.383022504 seconds)
    (232/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.194390587 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.932685141 seconds)
    (234/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.044451741 seconds)
    (235/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.368728711 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.316785117 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.349513807 seconds)
    (238/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.907758423 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.35215578 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.427557028 seconds)
    (241/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.361565776 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.356854709 seconds)
    (243/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.353313292 seconds)
    (244/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.354501166 seconds)
    (245/309) benchmarking ("sort", Float32, false)...
    done (took 5.368972618 seconds)
    (246/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.739386791 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.439874959 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.338622308 seconds)
    (249/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.493052334 seconds)
    (250/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.62798927 seconds)
    (251/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.242374342 seconds)
    (252/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.341561584 seconds)
    (253/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.530675103 seconds)
    (254/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.530788827 seconds)
    (255/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.362029272 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.87160208 seconds)
    (257/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.783600464 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.344022585 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.574612123 seconds)
    (260/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.604271374 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.397398715 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.2144758 seconds)
    (263/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.401470403 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.701022725 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.38107358 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.750608325 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.732707351 seconds)
    (268/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.421518321 seconds)
    (269/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.306307233 seconds)
    (270/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.424401861 seconds)
    (271/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.827148724 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.702030243 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.355507365 seconds)
    (274/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.613657709 seconds)
    (275/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.487864369 seconds)
    (276/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.338710847 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.363683584 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.409272236 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.558742196 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.448315427 seconds)
    (281/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.447954962 seconds)
    (282/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.365582204 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.422654644 seconds)
    (284/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.427385603 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.119839094 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.455563494 seconds)
    (287/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.877823556 seconds)
    (288/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.364267912 seconds)
    (289/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.35655163 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.200870664 seconds)
    (291/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.493728628 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.4401783 seconds)
    (293/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.74248304 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.075590632 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.612775772 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.368866063 seconds)
    (297/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.431330981 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.383209382 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.593248653 seconds)
    (300/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.332312363 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.369220181 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.795114727 seconds)
    (303/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.051016488 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.878739358 seconds)
    (305/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.987865509 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.347394068 seconds)
    (307/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.366578365 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.354112348 seconds)
    (309/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.717532358 seconds)
  done (took 935.678466658 seconds)
done (took 936.920279178 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.374930068 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372069484 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.354638867 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.376355298 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.465921136 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.379059332 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.364916599 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.358335566 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.402848589 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.404418377 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.352684192 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.378229281 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.355422936 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.355437051 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.355331832 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368980916 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.446009605 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.355252608 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.372033769 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.365120578 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.37148954 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.35453251 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.405153029 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.37824673 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.358165226 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.358192194 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.357850875 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.375777119 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.467136386 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.35865581 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.359792794 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.367600017 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.445781296 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.355013442 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.350492938 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.374995 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.367254721 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.366209355 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.359893382 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.387100988 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.878954454 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.373680022 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.359077916 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.357494673 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.356951197 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.36232189 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.356983461 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.364526345 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370379486 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371809318 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.86773744 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.388840996 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.360225275 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.358573663 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.367685077 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.357862464 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.362542789 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375550548 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.377953886 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375988146 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.435761637 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.362939713 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.360149527 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.373802823 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.365819954 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.906994977 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.371646203 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.364208528 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.881431922 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.381786323 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.907539807 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.385516418 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.360239505 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.372396301 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.391467287 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.451257363 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.35377724 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.359601236 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.36626709 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.357145409 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.369970357 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37306405 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.366055572 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.35957694 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373824917 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.383831742 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.370542401 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.359780891 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.3702062 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.379086882 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.366997754 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.37065256 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.363454923 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.35492786 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.371754117 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.365063665 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.363558369 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.362803452 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.365089894 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.372425905 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.883338097 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396398615 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.357718005 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.357183695 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.359148332 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.374231781 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.884831492 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.378638841 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.38324609 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.407393634 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.363829175 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.439861515 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.363921521 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37907506 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.370691062 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.365628571 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.356092217 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.440047285 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.877905811 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.393558016 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.36315954 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.359551625 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380710937 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.364202142 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.359223437 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.455410557 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.363076009 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376915576 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.483715478 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.37291815 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.394624754 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.360804606 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.366129094 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.388293327 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380257079 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.394155667 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.367288935 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379693372 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.379243598 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.36049119 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.374510276 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.374457911 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.365018505 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.369657561 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.358344967 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.388427412 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376501838 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378077053 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.386874998 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.482766875 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.361151187 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.442860624 seconds)
done (took 230.601690754 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.419945987 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.352971143 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.444534927 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.358814608 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.466947907 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.460190068 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.356262846 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.356256141 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.356175685 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.736407992 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.357103471 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.355941274 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.358726429 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.355904295 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.442815248 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.359558714 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.357074979 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.700957977 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.358352821 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.428470455 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.360041299 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.357907616 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.358730067 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.743815893 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.358270516 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.355371485 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.429857787 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.360296054 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.70752068 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.362030412 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.35882102 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.707680542 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.449850028 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.376662982 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.369143215 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.36594858 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.46816528 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.379493961 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.441897514 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.443057817 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.44729305 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.398352311 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.354827231 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.355179394 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.362336628 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.361267481 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.358913528 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.387524505 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.357360418 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.358409763 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.703080764 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.370288652 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.36855011 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.35882715 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.359342676 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.380368267 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.360202467 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.361117231 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.450762411 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.361658338 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.422776979 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.745119151 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.742216099 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.362184952 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.355680881 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.360017062 seconds)
  done (took 150.211950874 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.427330396 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.434772595 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.477782984 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.378828149 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.411836082 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.483709668 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.379746349 seconds)
  done (took 11.265555647 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.366737232 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.363069383 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.410561979 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.411230671 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.362961464 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.511603881 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364981346 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.373986515 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.36187037 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.417653701 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.363996994 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364155846 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.369184767 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.356850599 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.410601062 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.375159506 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.478350868 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.364853094 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.365701935 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.519583738 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361617678 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.370487664 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.41543435 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.374665513 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.365672449 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.369667115 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.934732014 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.364996739 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360757188 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.363425216 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.362143549 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.403192869 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.364575149 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.362050473 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.36230807 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.479675256 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.364952957 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362825907 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.364931324 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.360801449 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.365182661 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.365697831 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.364781822 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.363489161 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.365514954 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.387319762 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.364759413 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.366772319 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.365038774 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.366394262 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.415584773 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.366840404 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.363494717 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.363366662 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.422198983 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373384585 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.366624471 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.36390425 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.366026711 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364045502 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.522572057 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.41421178 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.367246339 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.414559718 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366621457 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.366701778 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.367740654 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.367560697 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.42071138 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.367169094 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.414863351 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.365442186 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.520700203 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.390243489 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.369914727 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.368942524 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.369746736 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366363768 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.363354366 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.372965059 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.36497814 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.368064844 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.373354689 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36487406 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365245105 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.469751364 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.476956979 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.366242104 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.380634485 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.37509912 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.365871316 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.420403097 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.369084723 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.365138165 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.420171901 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.482552756 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.421697147 seconds)
  done (took 156.326795196 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.373033713 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.376386864 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.370747889 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.384885637 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.368231178 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.368755983 seconds)
  done (took 9.519850511 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.369932849 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.370583496 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.369789837 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.369479274 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.368647361 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.369086484 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.36967678 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370585486 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.373028804 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.370166415 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.369387645 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.37090004 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.371747824 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.370145444 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.369954566 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.37002121 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.370494842 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.368116128 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.370555524 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369273035 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.476718639 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.371230639 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370713523 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.371863625 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.375602689 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.370555459 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.377190423 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.37110954 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.371066964 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.379493215 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.39238827 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.372700449 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.373011859 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.378351862 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.374660327 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.37399924 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37687054 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.37340089 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.369654646 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.372401347 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.372132717 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372662092 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.372364545 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.374131705 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.372921314 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.377705717 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.37712382 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.380281732 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.373022982 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.373798311 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.373273276 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.372813408 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.372693252 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.375012756 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.374460129 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39478407 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.378600223 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.372971052 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.373153773 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.375819355 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.375044342 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.374202892 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.37440189 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.376535406 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.371434661 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.374635943 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.374576105 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378191938 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373987396 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.372853677 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.376089961 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.372522513 seconds)
  done (took 101.279473167 seconds)
done (took 429.869807565 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.517383788 seconds)
  done (took 7.799922916 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.515930979 seconds)
  done (took 7.804009109 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.049752009 seconds)
  done (took 23.339067482 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.370609504 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.421958933 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.402718628 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.391393438 seconds)
  done (took 26.871388892 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.460382282 seconds)
  done (took 7.744508788 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.366592036 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.852322656 seconds)
  done (took 14.503812569 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.486136034 seconds)
  done (took 7.770600122 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.855295093 seconds)
  done (took 8.143841758 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.390690135 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.403997343 seconds)
  done (took 14.346752789 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.348101011 seconds)
  done (took 7.6320174 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.493236878 seconds)
  done (took 8.781920253 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.369300464 seconds)
  done (took 7.655926447 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.447237901 seconds)
  done (took 7.73154725 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.862251999 seconds)
  done (took 10.146261585 seconds)
done (took 161.553632914 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.368718198 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.368191826 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.37009022 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.368456066 seconds)
  done (took 26.760093661 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.409468189 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.409490151 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.411686636 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.420569408 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.41202331 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.409210199 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.401399914 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.402283232 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.419924601 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.41333515 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.410949026 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.412426699 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.410234016 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.401966107 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.412343153 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.413178789 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.42119581 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.412556515 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.401687479 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.413619436 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.376904052 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.42228933 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.41434545 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.378179042 seconds)
  done (took 35.096084831 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.908531379 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.454366646 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.533802909 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.43293566 seconds)
  done (took 7.615755987 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.429340064 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.430870026 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.444066213 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.482792807 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.526800855 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.441503219 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.401709761 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.40055794 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.385491266 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.432774468 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.506609816 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.447897386 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.535796636 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.378568516 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.582135146 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.378188862 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.378552052 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.430752777 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.482824519 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.497189852 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.378414826 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.431125819 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.435053318 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.447668942 seconds)
  done (took 35.973126088 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.390522752 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.386251136 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.378195586 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.377109489 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.398584351 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.377605111 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.378327847 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.378908759 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.379096699 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.384599656 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.377766536 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.391623557 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.378594525 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.378737817 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.384585668 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.380528984 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.384244166 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.378467242 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.378471792 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.381958746 seconds)
  done (took 28.933902147 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.371367625 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.225823563 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.724263437 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.630724335 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.374565319 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.372944042 seconds)
  done (took 27.988547853 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.456037886 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.610793871 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.379201726 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.77473537 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.866414827 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.398460095 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.380763223 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.636314604 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.989105702 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.994689213 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.448066991 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.451609502 seconds)
  done (took 20.67630869 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.374348595 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.400219585 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.390725351 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.39677583 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.438647852 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.401394834 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.388312438 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.37510934 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.446992988 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.462295929 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.403200206 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.44216992 seconds)
  done (took 38.211993151 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462843168 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.426283229 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.460519098 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222355009 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.100729602 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58790064 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.282867948 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.816195905 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.381714535 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650655938 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375963338 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484227231 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.63406141 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377403949 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.399396881 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.370877448 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623090525 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90190185 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377303714 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.597287946 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409683738 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385360479 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.78120961 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.414879461 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58963085 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.524333796 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.638538563 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.155703368 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699565489 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39073491 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388096956 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377841098 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651844434 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078970398 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495448611 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389246954 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.260478713 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.927559019 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.370780277 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.675977108 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397710193 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380183959 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389915663 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378475682 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.31269275 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383399552 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825563721 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.384362072 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.09113349 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.378481124 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390987213 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474118231 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.383448634 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.952575258 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.482013312 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.386699154 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.37715268 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387079538 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946814556 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.16975177 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402434171 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.321493247 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.875349559 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.688934262 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060247841 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.499746935 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.384565037 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384492927 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315421793 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.660863815 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403656018 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518780473 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.402830573 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.040937216 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142143188 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.41027046 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.311130931 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969302709 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39802835 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.322501055 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610057369 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.15604728 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321610529 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.32704941 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315304563 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139954157 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388986611 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.8378873 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388130663 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.82698571 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.393894647 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39805478 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40535942 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606940842 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.263643 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382300396 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.389658901 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497868889 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403096493 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.820064054 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317974386 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.386508551 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640813052 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.593708773 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38276337 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.387871932 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614231355 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395205531 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.40310778 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.39837505 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.400000022 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.006531325 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414206695 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.151102532 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40685664 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.162318207 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163299436 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393446988 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.491516099 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.388945329 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643549789 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.184206345 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.544815516 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452088275 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388573533 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383202934 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.720283025 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.986513332 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.543130284 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.380472508 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384907625 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.40158385 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.385103131 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344194363 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.394897844 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396115112 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.162088408 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610821084 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384569991 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668693514 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321244626 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523470925 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.402414688 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.609901072 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.708113303 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.409855867 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647053084 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396990297 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401412787 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405326591 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404436198 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486938447 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408350491 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.401527605 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650144814 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.389785755 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.390295109 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.729564399 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.172446242 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394476357 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.392657194 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.29490172 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015684816 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376936192 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391628523 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.279270162 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.40075858 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454525128 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392319061 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.397866651 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.392134276 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.379669846 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.391708864 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.386413133 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612097503 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399835719 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.657961075 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472729564 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.593558885 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03032368 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426932618 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.322133951 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.098272391 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.081244929 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389144161 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.589973873 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388240026 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399231312 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399168027 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.06850323 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.025561413 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415139051 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.654378719 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.401928507 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399777827 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.394162428 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388514759 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.365522321 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.215263707 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397521257 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.424666452 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534860158 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.402779797 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.324344951 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.906852332 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39520339 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389467247 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.167280093 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424250818 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.62718119 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906007415 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651949812 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.237072157 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401854943 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.824792954 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.430203199 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.398337873 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390865085 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409014359 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.402656137 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425969873 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.400549542 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.718834802 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.770662755 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956027148 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170304287 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996600278 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385177611 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.392089081 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.311734006 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.836088535 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327477414 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.051616952 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594541383 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.85339394 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349513571 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601516738 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.713241438 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249538657 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402740104 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621407078 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36635494 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.403280543 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41155345 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604635014 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427013472 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.391414674 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.348413741 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.691067863 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634800867 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405512388 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477103075 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839155436 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408495407 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.179295799 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.392377602 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.821064889 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.594316526 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.94225087 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.787643536 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39871547 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.408174443 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88954802 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398234768 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922554706 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057480795 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413059213 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.609051804 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335549732 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.405068009 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.405741604 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.390590646 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.869007864 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.397393365 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.650137053 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40560369 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328402993 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403940883 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972994456 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.281807017 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.401304864 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394769048 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189350481 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413104207 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726703354 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.412777093 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.359462853 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416530692 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.330168817 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3293726 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.089349793 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404791686 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36419572 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941009882 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.831391976 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.476971519 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42114966 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251200858 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.653527126 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.409499223 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.038389758 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64747321 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.356813503 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418703275 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.495860405 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3983945 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.38515964 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.277970823 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.631654202 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294608433 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621402674 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.48122278 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.296984853 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.396107588 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608675363 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.279532746 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402707988 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684717311 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.13527646 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.409850454 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191896856 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440965752 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40708092 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.423317745 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.892832778 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402429445 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468934413 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408440087 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.407748068 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.40859877 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578802066 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408067786 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407058357 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.413188732 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492495388 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.213305152 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.369479077 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.170998415 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048741837 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209790884 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.060445297 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432669331 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399082754 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399572842 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333528097 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550263087 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928570148 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67321933 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5169285 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.97693172 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42140925 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401017918 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421017884 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61806038 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675498349 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.375359219 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399009573 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.213467814 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.560043238 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41011374 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.611598232 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948935294 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01200367 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531652873 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40736605 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.84731181 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67500008 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.49294667 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401237902 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.996344263 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.426629028 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.858972107 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.428283756 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400464214 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573861163 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41076061 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116860225 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.432666298 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.556197461 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.1744719 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.690746798 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666855805 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.938895867 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.412458409 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046231502 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.205435931 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673647313 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471741088 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412488834 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.521154237 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549237942 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.403437231 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.299514918 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401483445 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251081984 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.112414116 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.41310789 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054257074 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692857327 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.399849071 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.405683518 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42500824 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.412833663 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.626240337 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160662455 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628337773 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414398333 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.412191454 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.395761128 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056503985 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438967097 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337621511 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.407966011 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68347419 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.668147486 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427167875 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.857083862 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.114360574 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001723441 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.379692279 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426413702 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420704348 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.193046448 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059808401 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.401605768 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957357254 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.065627784 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403934959 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683249317 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.40882589 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406398895 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686888508 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.408171185 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.41574494 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423514766 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.056095009 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270504771 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.405537358 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.721794071 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.350408446 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.633968725 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.116342818 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342506918 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405843144 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.592954191 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405869841 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528058279 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418690472 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.413728204 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412102114 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.143681231 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.694014119 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.411470748 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.387049797 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.411106087 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430459709 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418944435 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652736106 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412833883 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.081429697 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.757065228 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.664605442 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.423233649 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.393822171 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.411214649 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407540773 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131278688 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.425130466 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.07629933 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021543627 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.409136769 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.44291797 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411877469 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.625332267 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619870269 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413690758 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.427059275 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421784469 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429278534 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.308689324 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.180111328 seconds)
  done (took 1626.86441116 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.441310534 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.45214199 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.43017149 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.477990806 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.41530229 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.443307676 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.522320547 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.478317189 seconds)
  done (took 52.982202764 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.420570499 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.576358475 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.44139598 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.409048142 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.435496026 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.412386215 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.911206796 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.431317502 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.416833158 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.419151687 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.410490269 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.409743354 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.104188437 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.425356852 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.426716752 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.398436504 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.41694809 seconds)
  done (took 66.795118919 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.423092185 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.868594878 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.433115211 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.41000506 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.899908387 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.444985744 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.76366931 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.463164928 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.410342817 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.787976843 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.086051114 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.418891516 seconds)
  done (took 81.733758823 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.417644755 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.419010505 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.418472578 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.418540383 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.417684727 seconds)
  done (took 8.41568957 seconds)
done (took 2059.333568811 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.768628725 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.174828988 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.132598777 seconds)
  done (took 5.630231662 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.559436433 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.608484582 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.767500521 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.744942698 seconds)
  done (took 8.00753386 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.706163207 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.789240864 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.606219397 seconds)
  done (took 6.426221758 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.982364292 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.425925766 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.565245604 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.411086988 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.420832624 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.417302025 seconds)
  done (took 20.575225787 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.415639162 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.418971672 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.415833911 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.41949123 seconds)
  done (took 6.999650482 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.393736817 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.083348323 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.394631884 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.416536921 seconds)
  done (took 18.613265656 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.163018916 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.175581683 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.159178576 seconds)
  done (took 7.823117417 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.430353165 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.261289208 seconds)
  done (took 10.018028575 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.709144325 seconds)
  done (took 3.03593674 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.548260218 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.74531416 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.57943184 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.490317657 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.614906123 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.696069241 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.241879409 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.774806557 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.447201376 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.843366765 seconds)
  done (took 30.308626967 seconds)
done (took 131.501816738 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.582777915 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.438301855 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.615471383 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.596731306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.665517429 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.614404303 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.734958999 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.564391976 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.060136233 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.052411996 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.556795802 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.65717159 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.677737707 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.437954795 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.679515195 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.817900082 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.646022361 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.622250153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.242605992 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.418001459 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.740210272 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.194941073 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.386375205 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.209814099 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.648618689 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.562630281 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.772304997 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.817917233 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.415881291 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.788242558 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.562806043 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.416368159 seconds)
  done (took 198.524935812 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.415653458 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.43755452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.416825505 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.435777512 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.415953932 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.416816419 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.43701896 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.433538012 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.414917753 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.429326175 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.415520339 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.426598014 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.416443388 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.433578594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.416317288 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.444957525 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.417296966 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.418407602 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.416952158 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.437225232 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.418841318 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.4340141 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.421776231 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.42409361 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.416719878 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.435957788 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.435914805 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.436986809 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.417071678 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.417378006 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.434756653 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.452654217 seconds)
  done (took 206.973240122 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.423959153 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.422610377 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.418701761 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.436219225 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.419621572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.418348507 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.436982185 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.435684389 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.435708801 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.418745032 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.43586813 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.418693966 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.41968485 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.437031643 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.439865835 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.428951138 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.418866452 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.436977232 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.435036167 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.418422193 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.420638241 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.429216842 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.419634701 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.419363982 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.452521514 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.421310301 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.419480467 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.43725309 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.419339294 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.418690617 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.426699102 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.420599679 seconds)
  done (took 206.992362373 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.623113927 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.427800666 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.427862498 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.386042283 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.428561194 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.4291424 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.42614315 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.620210921 seconds)
  done (took 15.102623709 seconds)
done (took 628.919108637 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.833096174 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.53489694 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.634892937 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.449022577 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.286781378 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.468006155 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.449143687 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.628692344 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.374531951 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.639601875 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.765613303 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.463863616 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.918424119 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.445341034 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.715664654 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.551068432 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.380834506 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.508878453 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.780778164 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.049600472 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.722506967 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.994477185 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.650558562 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.367585473 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.945181718 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.000904211 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.246995141 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.364191969 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.465667356 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.787978061 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.196324514 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.498474984 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.516499024 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.513789398 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.572513569 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.550841368 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.483660311 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.512613642 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.657633348 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.757972911 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.05830953 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.187744555 seconds)
  done (took 97.264979064 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.412944852 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.412904949 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.414054577 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.413433457 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.41539812 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.412823154 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.411441436 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.41237423 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.413372797 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.412584381 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.415999509 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.414421031 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.413173449 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.415278775 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.412418091 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.413194924 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.414707411 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.414968631 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.413274965 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.413732845 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.414353644 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.413444776 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.414416812 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.41193567 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.414443093 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.414270949 seconds)
  done (took 38.092775666 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.432984563 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.697642402 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.864345052 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.438131352 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.432428324 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.436890794 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.518025118 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.433279074 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.435840752 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.436266666 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.612061603 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.435554691 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.471677795 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.896625396 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.435762656 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.434546667 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.434460698 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.433440595 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.707370172 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.442690861 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.542405305 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.43467941 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.519148015 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.443862681 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.45962829 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43370075 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.439129345 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.965946531 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.455642291 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.613771293 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.335319807 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.523926476 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.916206873 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.899448914 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.337126305 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.441472662 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.435448812 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.617955402 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.437084068 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.436629254 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.519302996 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.436152305 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.879387889 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.066976488 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.454841021 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.436359099 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.987364774 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.637453683 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.707906364 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.444486336 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.902573139 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.439737264 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.438703739 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.437105904 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.708240269 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.442379949 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.435143287 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.989020833 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.459658852 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.520214639 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.437549715 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.437177229 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.712341501 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.437346386 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.702928582 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.437568807 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.444900679 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.459116055 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.880056638 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.439401607 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.090827379 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.456456976 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.438264556 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.614830804 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.705612246 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.024768995 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.462857114 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.716962272 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.931050802 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.539800276 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.4408748 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.957995736 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.543921968 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.442111898 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.441550338 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.441246275 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.4390446 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.483918935 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.52087321 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.0205645 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.099987655 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.00984979 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.545784857 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.450695477 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.440055573 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.993691144 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.460318152 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.439988116 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.885211519 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.097667645 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.460734247 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.448625614 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.093215986 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.460425191 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.525394909 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.446096242 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.900468341 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.446342448 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.487753833 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.439756569 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.445648209 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.464730611 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.526127717 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.442677758 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.441482737 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.065515464 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.64487371 seconds)
  done (took 189.0676733 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.433326564 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.433472497 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.447995061 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.432046198 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.434052725 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.440180198 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.433988193 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.43499151 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.440126306 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.435710901 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.434685122 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.433629196 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.437340543 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.443240446 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.445394873 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.442446175 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.0471713 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.43839692 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.435350256 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.434012969 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.254024445 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.443088716 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.433524339 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.434197114 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.434748457 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.438127965 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.44299914 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.436901736 seconds)
  done (took 155.0208342 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.443532984 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.065048543 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.461979813 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.586897769 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.465663661 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.440426995 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.58573874 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.504608288 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.462839121 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.441479777 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.4403071 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.776142494 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.444521399 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.010329428 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.655142512 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.606973632 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.035940078 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.469302703 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.441525246 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.440326764 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.59007089 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.447269737 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.793358804 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.104714273 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.471360973 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.09977693 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.43258012 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.445334246 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.443555745 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.098955248 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.465415168 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.777587127 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.529294533 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.508687731 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.119176612 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.038423127 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.031189351 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.606361814 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.444419665 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.442262202 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.443184393 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.427176529 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.102872575 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.469809299 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.445489154 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.092630402 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.470044651 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.446977538 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.44986277 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.442654879 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.509097359 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.528706102 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.818606971 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.114628104 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.551565165 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.456905411 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.589121571 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.843554364 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.447821512 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.015956848 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.428326222 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.107472794 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.471430849 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.430461057 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.445804136 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.450630569 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.610019855 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.589367896 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.015463956 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.465572824 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.016177795 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.627983886 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.445264791 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.446498466 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.448484566 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.108619226 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.041485052 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.627502006 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.593385243 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.663235553 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.43316188 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.445255895 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.431582122 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.53142844 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.445625334 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.109299858 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.040259635 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.466423644 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.448082725 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.447827605 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.448532548 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.644173715 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.128976188 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.557300754 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.005493834 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.821590651 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.808506291 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.457156183 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.512063727 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.464697718 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.804967002 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.455602842 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.510318174 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.913246759 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.805651858 seconds)
  done (took 173.85669849 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.710492246 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.716674065 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.545411796 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.588229443 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.098922831 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.039170996 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.823798558 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.599286177 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.566328255 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.725234614 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.753672476 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.545511557 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.632380784 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.529833657 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.202964147 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.542903649 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.563496615 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.593809656 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.570941718 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.514761397 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.151127132 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.758061246 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.63031605 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.466856847 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.550245335 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.255576069 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.035637599 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.989468125 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.628360333 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.880086332 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.017724545 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.61986329 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.498920778 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.210944413 seconds)
  done (took 69.915025108 seconds)
done (took 724.551675055 seconds)
SAVING RESULT...
DONE!
