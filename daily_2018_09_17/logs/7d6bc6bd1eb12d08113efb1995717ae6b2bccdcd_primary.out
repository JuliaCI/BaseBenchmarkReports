cset: moving following pidspec: 1050
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.369978374 seconds)
loading group "string"... done (took 0.51440858 seconds)
loading group "linalg"... done (took 8.23579625 seconds)
loading group "parallel"... done (took 0.179291549 seconds)
loading group "find"... done (took 1.336527801 seconds)
loading group "tuple"... done (took 2.045036384 seconds)
loading group "dates"... done (took 1.376287956 seconds)
loading group "micro"... done (took 0.252069616 seconds)
loading group "io"... done (took 0.692088264 seconds)
loading group "scalar"... done (took 43.498143161 seconds)
loading group "sparse"... done (took 13.309307708 seconds)
loading group "broadcast"... done (took 1.096787153 seconds)
loading group "union"... done (took 15.106000789 seconds)
loading group "simd"... done (took 4.990910558 seconds)
loading group "random"... done (took 10.127951179 seconds)
loading group "problem"... done (took 1.99656047 seconds)
loading group "array"... done (took 23.156907968 seconds)
loading group "misc"... done (took 1.473823506 seconds)
loading group "sort"... done (took 3.684698249 seconds)
loading group "collection"... done (took 19.931128681 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.548967847 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127023349 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150315151 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.155059037 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203956767 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.140626669 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162148788 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.095774496 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.967291711 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.188414372 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.145406 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.494010826 seconds)
done (took 5.109262067 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224592047 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082302595 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097600234 seconds)
  done (took 0.852700592 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.0916922 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145022865 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091828369 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.076690991 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091958391 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076756156 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.07617747 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.091634243 seconds)
  done (took 1.326143557 seconds)
done (took 3.177556263 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.736877431 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.288402201 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205233022 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.513274757 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.180635517 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.21431231 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674202661 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.332413733 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.247370383 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10519769 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.152464501 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387600487 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133638437 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.658682271 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088085187 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126402434 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.17046002 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.431352006 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.089715617 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.092308371 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115707162 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152645311 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.113955227 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.086598307 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.182970847 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07805998 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193462663 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108183392 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.076334014 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.290200483 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201031471 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.676311048 seconds)
  done (took 10.815042534 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11495944 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139315785 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098135125 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139149951 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139809343 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081994747 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099488405 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079482576 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124561847 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181334235 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134814878 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.144363794 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076508511 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081291979 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118132845 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249065904 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104651229 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120958422 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.082580536 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105403272 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13778278 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097866837 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10843469 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091550828 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168687107 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.21551302 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109256291 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122714935 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093586358 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095893779 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14301288 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156138374 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077088889 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094858 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177586287 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107095211 seconds)
  done (took 5.1026714 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192408224 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102759632 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.19122131 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.14694825 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143875439 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16996721 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096436619 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.264424363 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.144825943 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178960977 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127053841 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113309702 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079704787 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099547069 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077381219 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.747114227 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.167111615 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11534845 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11675113 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098767457 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085108037 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.3737352 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083983523 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.091102625 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082252752 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088225699 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160597236 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08145938 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.212393118 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101229696 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100039299 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115352319 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210684023 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12633817 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120338177 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097997596 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07543383 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.180933351 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102098247 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077859692 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125366057 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116773481 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134480645 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.093542519 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078655099 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226919393 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.076847264 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.093087938 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.035579782 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.176076341 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.124090973 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096110147 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.348678159 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097959198 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097733873 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076788574 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.301329302 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113131091 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093469113 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.078614832 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095492617 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079542379 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097770058 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.389926472 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.078444808 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.743650347 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079438403 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.087370624 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096508824 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094018849 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085909979 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10290466 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097739708 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095742628 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079690551 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077548317 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094766596 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079794147 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117505868 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.125009609 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.074722062 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100612205 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078697514 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159607479 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077488196 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09753768 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127220151 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096323583 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076911064 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130795539 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080913937 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.093329794 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136207657 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07967101 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115745752 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.076530213 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095168414 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.138702754 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.078729572 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.199669785 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07865075 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12424398 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.08292472 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127920138 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109043111 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080043984 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101228362 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076535655 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093302857 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145315408 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09105557 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078658474 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.097049697 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.0920475 seconds)
  done (took 22.673808285 seconds)
done (took 39.268395392 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.360039281 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.110392296 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110506385 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109866726 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.107901332 seconds)
  done (took 1.554599378 seconds)
done (took 2.287891265 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.290297743 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.174132171 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091288778 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170292107 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074038952 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.180287733 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.180631508 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093513597 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206923758 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.074092196 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.168544572 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091175806 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074535449 seconds)
  done (took 2.62504839 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091616379 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11522242 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081286357 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09288208 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091478849 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092841702 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108785094 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099121983 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108615042 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082078744 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092487502 seconds)
  done (took 1.786826701 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091202871 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112607412 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079883019 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091872929 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091919961 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09179504 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108674426 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098671719 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109085902 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083544611 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092205289 seconds)
  done (took 1.780575782 seconds)
done (took 6.914032208 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092010639 seconds)
  done (took 0.814980466 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.039591565 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.149081186 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118060026 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.169104914 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.342221059 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.218952227 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.612665538 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.135366358 seconds)
  done (took 15.716752291 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.129793051 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098220265 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.080694947 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098144307 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.082376178 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100672876 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081521536 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097846067 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.080836426 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09609882 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.078919451 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095611062 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.079037637 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.097879519 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.080057431 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083353052 seconds)
  done (took 2.24785221 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117841224 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116647437 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102799153 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088067915 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.102587587 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.083373517 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104510229 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.10097392 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083131439 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099240295 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088462151 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.1032148 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086579329 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098236092 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.086301387 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10555552 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.083676581 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102842672 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.086869252 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.103372602 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103972873 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.084816071 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.102660904 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.087547765 seconds)
  done (took 3.159426019 seconds)
done (took 22.666853904 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.153232794 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085010456 seconds)
  done (took 0.965651525 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.099618796 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117685528 seconds)
  done (took 0.954575099 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105861753 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096444721 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135856371 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09875804 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.097434599 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080458405 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.130125141 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097578231 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081019036 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097206529 seconds)
  done (took 1.758212071 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083699595 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101151675 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090720633 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.118026147 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.092611821 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.099448776 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085465485 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100846552 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.087949028 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09524431 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.089065798 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114471601 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.103678895 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099479498 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102264404 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.103615615 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.09082853 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101735419 seconds)
  done (took 2.498327831 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079237574 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082175597 seconds)
  done (took 0.897436728 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082315227 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095141963 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083783271 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099008523 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079184488 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094380742 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079506695 seconds)
  done (took 1.352381431 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.494578538 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.143142017 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.272211059 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08442997 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122367517 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.317936114 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096326416 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083796552 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102174143 seconds)
  done (took 2.513885656 seconds)
done (took 11.67677688 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.090232192 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116877118 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11328476 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.474327454 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.116686044 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.07735948 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158783944 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.260919943 seconds)
done (took 2.150237164 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.14662376 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339613246 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.123326393 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086995338 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079268866 seconds)
  done (took 1.374138395 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075869675 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081081441 seconds)
  done (took 0.903930268 seconds)
done (took 3.170184168 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077253911 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077837738 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.111499975 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.093987296 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078115158 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.075057437 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094545757 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.077843196 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095934405 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.075488137 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.077956843 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.0942987 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078227159 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.094003546 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075573493 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091637702 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07860929 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.077838823 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092118203 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075486566 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091778363 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078194235 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.075458116 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.092384038 seconds)
  done (took 2.827352168 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106080765 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09668746 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084435776 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101013802 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082914928 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.101549281 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083599017 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095380643 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.10026905 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081432051 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098873839 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082753948 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09697355 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08337989 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097364642 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.083200272 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.100799304 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07906923 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097611113 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08361686 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.100711767 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079618337 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099478608 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0841851 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.09912212 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082805928 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097829271 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079044936 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10146032 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100027463 seconds)
  done (took 3.511086498 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.082451743 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.075125723 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093375727 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083222945 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09205086 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080436535 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092470525 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076599583 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077245648 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092909697 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078410389 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092733104 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07626782 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094299908 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077658996 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.079113484 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106560871 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076455783 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09290306 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.07673912 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09601211 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076267421 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078697489 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.093118745 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076431615 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.092240261 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.076533067 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.092107192 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.076849977 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.074926358 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.095756812 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.079197101 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092389528 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.082414868 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095953181 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.186741548 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080015846 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09194772 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.076271491 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091655289 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.075344936 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.075310049 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092673677 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.082593153 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095621738 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.07797949 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093084429 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078276049 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076540786 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097227658 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07559707 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092199875 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.077765625 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094248562 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080122848 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.092118077 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077567005 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.075422319 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093897362 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.075664672 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.092121778 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076024667 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094131257 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077219936 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.092090822 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.099756222 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075369355 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095207344 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.080123189 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095136202 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078649883 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106642336 seconds)
  done (took 6.995602121 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080686143 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103892022 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078867368 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07823504 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092246018 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077358548 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097484864 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077199601 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095081236 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095738763 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09417766 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078173456 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094771153 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081047276 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09428642 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079370294 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104124444 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074758935 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093613163 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080999138 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093157297 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080803874 seconds)
  done (took 2.677795409 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214377016 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103761165 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140591295 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094968366 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114369374 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11108518 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083723927 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101842264 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084348733 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105166614 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087388461 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100467326 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112875917 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087156173 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104501139 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088555716 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100492756 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088290442 seconds)
  done (took 2.680448988 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090715729 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096575496 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102537732 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096932936 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080182767 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099132244 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086351587 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112646837 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082228006 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097703475 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089810632 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099288988 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.081888692 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096397083 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081425259 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096611842 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.082540862 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096187816 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09002311 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103860592 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103079727 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089917966 seconds)
  done (took 2.81467463 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094350297 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097719628 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100922797 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100315211 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077706907 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097867868 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086494363 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096734406 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088303767 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098365532 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079893727 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097630021 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086969632 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096337686 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.085739192 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09720959 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082345599 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096198575 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08172612 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094920635 seconds)
  done (took 2.597419078 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117733917 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111127865 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095042192 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123085398 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094513216 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112127666 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122875154 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094885096 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11163776 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.108221168 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111662385 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110974901 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105928976 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118280527 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093831058 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122669223 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122153395 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10499804 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111211667 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094300001 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126113412 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111405368 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105551804 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111894152 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094063014 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112850698 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095363575 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118955429 seconds)
  done (took 3.822406251 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077531806 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078995476 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094049707 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077077001 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095017212 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.076748597 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.076590185 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094046121 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078927382 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093349668 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079062769 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.095894766 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079836602 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078687166 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095585276 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.07896101 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096110179 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077474804 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079228699 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094232853 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.07951178 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096308735 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.079667183 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093738126 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077125771 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.078748254 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094142595 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07725695 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096225457 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076954467 seconds)
  done (took 3.313176747 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088486984 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104735053 seconds)
  done (took 0.95878136 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.075331724 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112792403 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076796365 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082812128 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104192996 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.079174261 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107973832 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10201577 seconds)
  done (took 1.504951197 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096666175 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.116074714 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085516683 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109388923 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.098814844 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113826039 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159851715 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086222541 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086251485 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.095989669 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.096640234 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.096162724 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.085915376 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097314594 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.085888111 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103533348 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.08071853 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108297441 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08810149 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099258708 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086186467 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109635225 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082752225 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09378011 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.081992385 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108401599 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.090460172 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.098854061 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08349093 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106551771 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086093519 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.073178414 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.102948092 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085230444 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.098156001 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.098092925 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111043031 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083321323 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106640476 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086299707 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107404185 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.077910188 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.103408375 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.08613269 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109061558 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.089480119 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104147697 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078815434 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095133887 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083365878 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095464346 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080377314 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.074838193 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105340892 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085259849 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11172864 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082798512 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100006636 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083901006 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.100379275 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086883758 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100119889 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082173351 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101523116 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088456165 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.101831376 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088276457 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.09582729 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.074457587 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081841768 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10740399 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121086191 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090233841 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103001954 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086831734 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098816075 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084817568 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10365163 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088457637 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106201452 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086099659 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106107882 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08854359 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097143332 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083699057 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.087425065 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101093095 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084004289 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.095383442 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096785277 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100685206 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081453523 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096005447 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090413647 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.100800782 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.083975295 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.09529425 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088504426 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074314233 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103078241 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085679959 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098585919 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.090127754 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103275976 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087084998 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106182974 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090893346 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097797786 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083976989 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095182526 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086112052 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100424834 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088390364 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09129593 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083574115 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081707404 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103795111 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105799411 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083453888 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084600062 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10622518 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088302204 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100696487 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077102855 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101457985 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084956054 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10816866 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.088045574 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100713875 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07882466 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096792304 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085322493 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102640864 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086710573 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104107903 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084003242 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074732634 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100299682 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.08554386 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10630594 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080894881 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.09908688 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.085858372 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.099301388 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083590564 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.104862372 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.082600567 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097325774 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086573969 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.099973064 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079493758 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107257553 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084048362 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082985045 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102419461 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089820482 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101383693 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086467971 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100755143 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086316891 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104103278 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.079324669 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097956643 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084039998 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107973085 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.082572334 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097007112 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.078846461 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.08706029 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.095933776 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085128705 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.09763706 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.083433839 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104016757 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082696758 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102259812 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.082280211 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114569248 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094510767 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104718683 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087367991 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.108670258 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08496841 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.100379936 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085345023 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086431689 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104254278 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088602423 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104414696 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085957989 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101075213 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077155764 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104962475 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089199739 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097917892 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08197628 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097605047 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086047248 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106375405 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085740077 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10348834 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083682127 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081298796 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10833312 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.083728877 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102475142 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.079989887 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104228124 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08047081 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105467412 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087424618 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.109273536 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084968406 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09742591 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090987537 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100699389 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089211259 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097417069 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.078533505 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.079483867 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105528752 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083760702 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102078898 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.074839018 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106638107 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08971931 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099110023 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080919169 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104052248 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091366544 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100390736 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08520247 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084718009 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105672721 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113044337 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080470445 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.083577908 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111047824 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085778519 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09319247 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087385252 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102294057 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.080632487 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102598964 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083073869 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10231846 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0880833 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.103952953 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075130427 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.101846474 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084296964 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079685505 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098434528 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089435113 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103749605 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084187754 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109122472 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087804153 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104740504 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086218041 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.10311582 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087067149 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104786656 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08536277 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104375585 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084634213 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.098772926 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.083601683 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080256527 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101476785 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.083308181 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.104541929 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081453682 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1064839 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08596376 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099923291 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086594706 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105169712 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083256921 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100557719 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081852684 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084379678 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100819927 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082152682 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102879573 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.0800883 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107179625 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085852773 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107772225 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.081681705 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096818275 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.086644817 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102274169 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088730162 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08724106 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105976383 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083369118 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104147378 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08437134 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108991787 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.079202899 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110331325 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087914309 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100623606 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08433931 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.099588414 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083369711 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098732825 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084366113 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104676635 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.081858275 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084828086 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105096838 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.083926867 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100494442 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083206631 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105604418 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081941286 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10616516 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.075956286 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.098521329 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081531526 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086648648 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10842721 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086628792 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103741732 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084846036 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10694093 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085231532 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096695101 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09064717 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10735052 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087718806 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10903292 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081184373 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101431921 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092359114 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094585348 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084331897 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082235298 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098340409 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099389837 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10566269 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.0904296 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100813278 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082078877 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097449275 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088024374 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102092048 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077475779 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082205419 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104261552 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083721632 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103203491 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086480699 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.102730909 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088305876 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108215995 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084846409 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.101523743 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08790349 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097021788 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080741554 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080762681 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102918585 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08668616 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.097716285 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.07968042 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104176146 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084013329 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.100804506 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085970306 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.082933883 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10883127 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085915545 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103528525 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091701533 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095982484 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08498131 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104404898 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085742939 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099929051 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085853521 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104527801 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088248146 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108138046 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086862431 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100556534 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086814027 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101158903 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086211443 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086001485 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105715469 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081040672 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107171568 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091041311 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101754362 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.084725219 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100269933 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083090097 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105909666 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08802871 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103085429 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09054592 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103885522 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084036313 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.088287765 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105641173 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085751965 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107564767 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084278521 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107171627 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081232271 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109470341 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.081947697 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107027649 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.084016993 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.098384151 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086949452 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104893604 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085402434 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.086864973 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107013744 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081311006 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100465148 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083542458 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.1023926 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091834412 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109204507 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085042169 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104458328 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080896026 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097960491 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088194667 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.097827486 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08459548 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.084745214 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10777948 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.084079339 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101531519 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085200099 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109981331 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089333676 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105904459 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080260398 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106411983 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088525007 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10343659 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083708552 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100817955 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089183213 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106654195 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084518103 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.080992624 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110634015 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086472909 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107356978 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.083478064 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101094802 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082596184 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099679162 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08819878 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103159047 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089758566 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103612173 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087140455 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111424286 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082192901 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100407445 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092050369 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104509576 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090286475 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099502016 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084463542 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088618517 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106663834 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080840569 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100573895 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079969636 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.103719996 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081404337 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099492818 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093003101 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109124149 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084910207 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103812755 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086048311 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080893094 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099648441 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08136461 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108297176 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084670688 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11129082 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081716746 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099984713 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081287895 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105450853 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087482781 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085843605 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099333395 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080676723 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10006751 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085768616 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108592774 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085898775 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.1057257 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086471214 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103841697 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084058638 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11173681 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080076885 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086267245 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112986176 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106137834 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083898073 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088183431 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110409525 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087230303 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100084422 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087620014 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104114516 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083408821 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.108046268 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089474139 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117173235 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086065368 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101405719 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08648204 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104692473 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082669759 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109066446 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088687869 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107057814 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.087841992 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103040003 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090508588 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085565617 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10826847 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085257756 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104866491 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085354887 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102310466 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085001222 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099970903 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089569541 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107031853 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087545569 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109130916 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082753305 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112346932 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091436437 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106633911 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079822968 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081945141 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101657981 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081369825 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108313474 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081247585 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103995086 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085140048 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085749483 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102669723 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088960701 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104902942 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088584102 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106680317 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076659279 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104024243 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085694411 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102652893 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079911278 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086823971 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108960649 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088898549 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111804281 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08316541 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106123007 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084521844 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103482571 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082117253 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108914284 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086501472 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105055956 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082267296 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105856954 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089698952 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086171778 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109001675 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089923128 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106001335 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.091524496 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109534476 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080310246 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100173297 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.08929379 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10380429 seconds)
  done (took 56.719297969 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146412932 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087829407 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078001774 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098419672 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124784333 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0833772 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097996396 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083278328 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102536426 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093229525 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098020779 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07857299 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120820998 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128106595 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123396687 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094640276 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098223936 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082830075 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097528273 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084430617 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119443752 seconds)
  done (took 2.935177097 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102619016 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117046523 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115601722 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101281326 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109836628 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116088911 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096233217 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117611141 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120810574 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092281668 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121080028 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117530676 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091811366 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11127991 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091091254 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113495879 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121004916 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090315944 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11824722 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115476089 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093635253 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115799978 seconds)
  done (took 3.203295815 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089243239 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086305481 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.107325894 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.078178032 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.106706058 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.077921015 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111262994 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081013105 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111126082 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.081841272 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080861232 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101027021 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087041821 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.097865865 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.082156116 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.100303098 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.156727949 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091837814 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.107345232 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088468472 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.100895556 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085427519 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.081315566 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.101699525 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.082061593 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.11566867 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08921584 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.107487832 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087130232 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.101737719 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086542469 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080808696 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103843593 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.083399338 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.102411769 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.081721499 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106637864 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087484332 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081526451 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.104605789 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.082948813 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.102247847 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088296183 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104837084 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084752382 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100653414 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085112818 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086715792 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098636776 seconds)
  done (took 5.446918012 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.113510874 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.13743652 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.107438984 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.148520114 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122405662 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095993372 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.109026382 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148165256 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.080957248 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.106814552 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.10409549 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122521979 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109044831 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093795698 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111295269 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087921452 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109332865 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082831662 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.112922821 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103516231 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.093486102 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111842631 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102159398 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119914228 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112158786 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086606606 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104382442 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.093761201 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.120179518 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114528706 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.093419438 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114788511 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123914461 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.085933345 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103659138 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090911355 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125642102 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088874712 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111394731 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.081359424 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.111164559 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114098906 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092183224 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125535139 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08804872 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110234893 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088418332 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101616482 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.121139856 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091421596 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.119083953 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122451268 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093017035 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108510536 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093766089 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123556301 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108435781 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086490824 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111772946 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100212722 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102989921 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092337112 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121407388 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110678225 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.098156967 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121945747 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110739314 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092872052 seconds)
  done (took 8.214748678 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113353827 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112853523 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104467662 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124790063 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114798958 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.093153824 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113544943 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093137173 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113391984 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.1198938 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093976414 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.161677016 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.110407118 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099355179 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114197745 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092980073 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113665542 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092654992 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113751072 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093092155 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114373648 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125108165 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093626845 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124371719 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127823692 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090135666 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113615981 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093499628 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125026593 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113575887 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127037885 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093105026 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113028192 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104310828 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127411841 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113506595 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087642619 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114504053 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093302265 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113825195 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090392546 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125228126 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113913675 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.091192443 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114681054 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093387893 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125253341 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127749824 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099007341 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120753894 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114537446 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1045139 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114074037 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113758577 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104263831 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.132117982 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125139408 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124454093 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09353525 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125101892 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125164962 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.112029583 seconds)
  done (took 7.718290989 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114279464 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.120571841 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.127328512 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.079600693 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103761575 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093829984 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103477446 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083474284 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119857377 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098268262 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122056946 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114397324 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097172563 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123435911 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11415973 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097765189 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114146406 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113917868 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099712654 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.114799198 seconds)
  done (took 2.987307189 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090828013 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126433541 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085746023 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114652253 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087496091 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.114404941 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087318343 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109848229 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085665276 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109434643 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097991681 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119908797 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106536803 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09285472 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118755441 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.092407681 seconds)
  done (took 2.472426531 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095050547 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.128549892 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.127471865 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085711948 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103852992 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081718202 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086905853 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101709057 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080702558 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123127373 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084610001 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112683127 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087865748 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.105621608 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.081692987 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.112182664 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.081411188 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104742394 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087447408 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.126264872 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097017874 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108661888 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088459025 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108821398 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105378901 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091648579 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106390779 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.083694615 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.105045922 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.089286568 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106695157 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.093916703 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102061128 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084524099 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10379006 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083552331 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087994689 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.110000899 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112024117 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088332211 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083460949 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105659772 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088308871 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108205214 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081287943 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109787509 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081735917 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112768615 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.083780092 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10713469 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.087283707 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109838713 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086260633 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118313474 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.08973611 seconds)
  done (took 6.247485952 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097558528 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109351777 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080435442 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082399739 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.110378886 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.087428406 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.111009285 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088612378 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10973403 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082409189 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108902495 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089975181 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108702121 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089740707 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108907252 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090139649 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101773686 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.08739457 seconds)
  done (took 2.586482782 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088649279 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.085744738 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.115420099 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085760595 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.106261117 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088603161 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102982182 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084618995 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10501152 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086199355 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106634238 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088003702 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104559718 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089181837 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085793203 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108299821 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.088272586 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105700202 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086189923 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102418714 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087812202 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105485772 seconds)
  done (took 2.951306047 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119662728 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127126885 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093201651 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.218950802 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.12687257 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.111705584 seconds)
  done (took 1.638247283 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107134081 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144411846 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086595481 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11051714 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098821198 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112323005 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090967694 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112872756 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123971195 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125061344 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09187406 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12417422 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10307463 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12254614 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119588164 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098493535 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111840499 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111693687 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087410317 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133374895 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091104342 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124862852 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111956214 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091334029 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112694131 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10144722 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124267879 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126837367 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090692021 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124971436 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11946056 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090621643 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124024109 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126043255 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088670137 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125188613 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111106327 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113420921 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120426868 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123348934 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088611876 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119361699 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102957631 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119390886 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123961636 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090811173 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118758121 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112879234 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091133587 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141368808 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119920039 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101967491 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120052322 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124212186 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102711726 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141324791 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126149234 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123463769 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119557642 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105115938 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123012879 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120249761 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10172025 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125349854 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120292212 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12329016 seconds)
  done (took 8.316802616 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122162104 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109441543 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090477554 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127780409 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123547171 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09061898 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112192237 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111421916 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09126099 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109551982 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157068794 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092097737 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123613069 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123626732 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092836126 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1130317 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090975733 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123055985 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087592908 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141440843 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112101 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123401122 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102254024 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123841151 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126144747 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119213652 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092440108 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112347569 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091457852 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112642877 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098729311 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112468828 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124826646 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087765451 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123608714 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090428095 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113345026 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120069613 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09193619 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120301685 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123331792 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112664892 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113002294 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091568676 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127619268 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112882722 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090991525 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110184869 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090606093 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109535441 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12622385 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105819064 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126213662 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123783424 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112473749 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092054618 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112670133 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091334845 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112857005 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09908227 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123382009 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113084718 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141892179 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091619795 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113111867 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102344589 seconds)
  done (took 8.154046286 seconds)
done (took 154.042614919 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099131267 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.142390179 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100477565 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172226219 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083454311 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142578244 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.115913053 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.119515699 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087423638 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086707408 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108866797 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088323206 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.175518167 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082894501 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10862589 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.088975558 seconds)
  done (took 2.650448513 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.180371953 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.301505301 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104653902 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107501465 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091960813 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109348594 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085438634 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.094978628 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.111825853 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085576809 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108980603 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087888765 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.107309955 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087354057 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109396121 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087407214 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.085251617 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.108193652 seconds)
  done (took 2.910621774 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110933255 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147963261 seconds)
  done (took 1.113004264 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118331068 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182918944 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280680565 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157844735 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.14031189 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.101645594 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160251802 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129616903 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.21024315 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133896327 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.132579084 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094489708 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143907789 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096866033 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117361362 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.094084847 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144948518 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117005228 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095422056 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117371029 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120234065 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108422752 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096746375 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116786606 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.193456423 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.130680071 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086052854 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086198514 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117932797 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.117664477 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094131925 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124051038 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.107971254 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175960103 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101200981 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156820463 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.116957263 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093193376 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117515344 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092759283 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120893101 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119406872 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102910391 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.115294054 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085914817 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.116038928 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08870655 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086131686 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.118216537 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.09629409 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116775585 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115332785 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15487125 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.096779209 seconds)
  done (took 7.506240611 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.821316341 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157039548 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093063972 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.925460718 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141954068 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105698732 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.81995866 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.139848412 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.238483137 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.811949616 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131641657 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12562563 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.215528089 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257710537 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.904226026 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316530173 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.711540638 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.346969237 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.140428413 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153981993 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09871228 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141731604 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134780153 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.412440049 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116171766 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092814427 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119674083 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123887424 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164899984 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093390072 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11698831 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182204479 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247705102 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209587194 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092959363 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115326836 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091829428 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169641698 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280126734 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.226767549 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157488801 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110776339 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091169914 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12447701 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135728318 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088449447 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166564558 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.177496022 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.196447436 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094284515 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124544985 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100417132 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124211679 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167693276 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.089577556 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.324640103 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320096271 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115323921 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100222303 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.13013184 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.250514588 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114881425 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232935767 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118579463 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.22092925 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091104328 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808833271 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169733303 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115778622 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098015277 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121729591 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095703979 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124151896 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168344108 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393400148 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105026721 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117660835 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090965023 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.245063246 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091869871 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114028194 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167291797 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092316558 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122156998 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103776497 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124369935 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.174055818 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.226406773 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125767328 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122471911 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094603309 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126697248 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.092594833 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215719532 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227797931 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162316828 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.217242949 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122496473 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.166918976 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16793152 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122621949 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172479257 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121830209 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104788807 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125619448 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225218911 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144023217 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090600334 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118428422 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097665849 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14786944 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094653265 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121345846 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170222376 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.48772671 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.16717619 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087725487 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118119183 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10037634 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.166545518 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121420584 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.245307557 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122554716 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169232879 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121021357 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087553154 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122247619 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.168156836 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125358968 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099528749 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125527739 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098075565 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.255400014 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203249517 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127032809 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227270536 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183926342 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121989476 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175935815 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123182818 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171543907 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100211329 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123990495 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093373085 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794417439 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124462209 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098391666 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11886869 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188736179 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091547049 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091861409 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.114559057 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088732158 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784493286 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094476527 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112802487 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.091584889 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121362176 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098601561 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120052473 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096029221 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.187653498 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214861946 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123486979 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121511625 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.092074668 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.165493147 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116972802 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.092165232 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.116157602 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.093059064 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123515326 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094673951 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.116192561 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.175925193 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164227807 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229446456 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.581348622 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115729555 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.091928971 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23789862 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091655872 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294846127 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121358734 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.211476122 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.192174137 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088740031 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317646083 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.172382942 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18862774 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095466214 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175684347 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112397514 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098680217 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.188173273 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09197732 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121929398 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163798413 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105313428 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126938642 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.950196147 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087218014 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231285448 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.113488656 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172600241 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093631306 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124029088 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.303890793 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091212167 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134096653 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.167254505 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118899112 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.093370046 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.734721738 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.117197747 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102278371 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12175146 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232102909 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.170461099 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123699909 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099429087 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125463528 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.166743939 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213906797 seconds)
  done (took 44.175386687 seconds)
done (took 59.212017344 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.281964506 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215603883 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.267947767 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.164457451 seconds)
  done (took 1.890126479 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17759907 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.12842071 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.149116185 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108817824 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.135073378 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.108180739 seconds)
  done (took 1.689952654 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.365265383 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27239023 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243691009 seconds)
  done (took 1.76869522 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.250815114 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.276780367 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.331250548 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.403849512 seconds)
  done (took 2.247822958 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210051828 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129113177 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.102296064 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.143154065 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.150071522 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.214223675 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.146145013 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.156789023 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.110785981 seconds)
  done (took 2.293797596 seconds)
done (took 10.780885695 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.272710783 seconds)
    (2/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.16888116 seconds)
    (3/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.127216269 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.253431538 seconds)
    (5/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.19576752 seconds)
    (6/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.282439572 seconds)
    (7/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.261188684 seconds)
    (8/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.194055724 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.115622412 seconds)
    (10/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.255809933 seconds)
    (11/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.261048562 seconds)
    (12/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.229549385 seconds)
    (13/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.098488753 seconds)
    (14/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.099265264 seconds)
    (15/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.217783016 seconds)
    (16/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107454811 seconds)
    (17/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.141770736 seconds)
    (18/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115056914 seconds)
    (19/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.185635558 seconds)
    (20/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126376886 seconds)
    (21/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.242847641 seconds)
    (22/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094780288 seconds)
    (23/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.189480451 seconds)
    (24/286) benchmarking ("sort", Float64, false)...
    done (took 0.182937524 seconds)
    (25/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.185321222 seconds)
    (26/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.166990951 seconds)
    (27/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.111415613 seconds)
    (28/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.146930922 seconds)
    (29/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.09959855 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086850109 seconds)
    (31/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.112895875 seconds)
    (32/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.172567942 seconds)
    (33/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113676748 seconds)
    (34/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.191595236 seconds)
    (35/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.148556606 seconds)
    (36/286) benchmarking ("sort", BigInt, true)...
    done (took 0.248398377 seconds)
    (37/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.120474788 seconds)
    (38/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.113509873 seconds)
    (39/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.113559134 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114438229 seconds)
    (41/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.143411872 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.137888528 seconds)
    (43/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.134170956 seconds)
    (44/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125329604 seconds)
    (45/286) benchmarking ("sort", Int64, true)...
    done (took 0.238817251 seconds)
    (46/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.186930956 seconds)
    (47/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.118979263 seconds)
    (48/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.115127572 seconds)
    (49/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.123640107 seconds)
    (50/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.169670607 seconds)
    (51/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095717314 seconds)
    (52/286) benchmarking ("sort", BigInt, false)...
    done (took 0.233121592 seconds)
    (53/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.127165369 seconds)
    (54/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.08404122 seconds)
    (55/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.216612985 seconds)
    (56/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.169428052 seconds)
    (57/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.248921317 seconds)
    (58/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.207712317 seconds)
    (59/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.074858653 seconds)
    (60/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.09838598 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.157000327 seconds)
    (62/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.193190307 seconds)
    (63/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094102409 seconds)
    (64/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.117853319 seconds)
    (65/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095141444 seconds)
    (66/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.125358982 seconds)
    (67/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.074824388 seconds)
    (68/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.123891064 seconds)
    (69/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090778804 seconds)
    (70/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.181360438 seconds)
    (71/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.18394523 seconds)
    (72/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085563667 seconds)
    (73/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.085999994 seconds)
    (74/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.234781792 seconds)
    (75/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.155806038 seconds)
    (76/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.194901077 seconds)
    (77/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103690473 seconds)
    (78/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.127875623 seconds)
    (79/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099633571 seconds)
    (80/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.204670402 seconds)
    (81/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.081302112 seconds)
    (82/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.183107123 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.140613247 seconds)
    (84/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.099537341 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.142847487 seconds)
    (86/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.172196838 seconds)
    (87/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.097667123 seconds)
    (88/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.195898794 seconds)
    (89/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.098955957 seconds)
    (90/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.195894579 seconds)
    (91/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.100118002 seconds)
    (92/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.09776015 seconds)
    (93/286) benchmarking ("sort", Int64, false)...
    done (took 0.08732572 seconds)
    (94/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.115870615 seconds)
    (95/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.196796693 seconds)
    (96/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.090513456 seconds)
    (97/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.158099363 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.195660616 seconds)
    (99/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.097049746 seconds)
    (100/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120025326 seconds)
    (101/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104503782 seconds)
    (102/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.17862362 seconds)
    (103/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09463963 seconds)
    (104/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.143458774 seconds)
    (105/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095867438 seconds)
    (106/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.108869695 seconds)
    (107/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091881768 seconds)
    (108/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.177172734 seconds)
    (109/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.078129372 seconds)
    (110/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.118747724 seconds)
    (111/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.100129062 seconds)
    (112/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.100017392 seconds)
    (113/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.089476359 seconds)
    (114/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.103706788 seconds)
    (115/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094040105 seconds)
    (116/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087866479 seconds)
    (117/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.181005236 seconds)
    (118/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114177106 seconds)
    (119/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.084662789 seconds)
    (120/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.184456906 seconds)
    (121/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095998522 seconds)
    (122/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120868069 seconds)
    (123/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.096298256 seconds)
    (124/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.140885103 seconds)
    (125/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.176194219 seconds)
    (126/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125011433 seconds)
    (127/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094301226 seconds)
    (128/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.120046449 seconds)
    (129/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.076921433 seconds)
    (130/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.156022992 seconds)
    (131/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.179994335 seconds)
    (132/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.182426056 seconds)
    (133/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.134814519 seconds)
    (134/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.077590018 seconds)
    (135/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.144575989 seconds)
    (136/286) benchmarking ("sort", Bool, false)...
    done (took 0.194937546 seconds)
    (137/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098234164 seconds)
    (138/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.183058941 seconds)
    (139/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.079243202 seconds)
    (140/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.120662222 seconds)
    (141/286) benchmarking ("sort", Int8, true)...
    done (took 0.236831798 seconds)
    (142/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.132765206 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.114718092 seconds)
    (144/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.079870864 seconds)
    (145/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.111132188 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094159266 seconds)
    (147/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.120017526 seconds)
    (148/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084932336 seconds)
    (149/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.086910662 seconds)
    (150/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.121681705 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088168483 seconds)
    (152/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.123987245 seconds)
    (153/286) benchmarking ("sort", Float64, true)...
    done (took 0.247678044 seconds)
    (154/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.162014449 seconds)
    (155/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.113597454 seconds)
    (156/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09634909 seconds)
    (157/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.113513568 seconds)
    (158/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.076089696 seconds)
    (159/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.076264542 seconds)
    (160/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.115044196 seconds)
    (161/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094740434 seconds)
    (162/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.143832193 seconds)
    (163/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.076755605 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.113704615 seconds)
    (165/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.098586761 seconds)
    (166/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.126068469 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.088173725 seconds)
    (168/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.113705255 seconds)
    (169/286) benchmarking ("sort", Float32, false)...
    done (took 0.161677179 seconds)
    (170/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111625963 seconds)
    (171/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104737402 seconds)
    (172/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.121833585 seconds)
    (173/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.112881391 seconds)
    (174/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.102709502 seconds)
    (175/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.087294783 seconds)
    (176/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.077055386 seconds)
    (177/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.174135602 seconds)
    (178/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.146068111 seconds)
    (179/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.092450057 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.120449797 seconds)
    (181/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097992182 seconds)
    (182/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.076387787 seconds)
    (183/286) benchmarking ("sort", Int8, false)...
    done (took 0.228104853 seconds)
    (184/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.086375986 seconds)
    (185/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.07627813 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.12446562 seconds)
    (187/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.076072132 seconds)
    (188/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.140096953 seconds)
    (189/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.090671135 seconds)
    (190/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.115614003 seconds)
    (191/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.079557176 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.08888666 seconds)
    (193/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.111855973 seconds)
    (194/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.076685585 seconds)
    (195/286) benchmarking ("sort", Bool, true)...
    done (took 0.237224907 seconds)
    (196/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.140773683 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087383796 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.140196252 seconds)
    (199/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.102139481 seconds)
    (200/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.142264814 seconds)
    (201/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.149579101 seconds)
    (202/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.116363647 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099282438 seconds)
    (204/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.103678345 seconds)
    (205/286) benchmarking ("sort", Float32, true)...
    done (took 0.247941363 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096978605 seconds)
    (207/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.09017494 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.113205 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088759266 seconds)
    (210/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128773185 seconds)
    (211/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.095614064 seconds)
    (212/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.115259861 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.087203389 seconds)
    (214/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076270237 seconds)
    (215/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.167565555 seconds)
    (216/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.190533299 seconds)
    (217/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103041483 seconds)
    (218/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.103972871 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.087443127 seconds)
    (220/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076912655 seconds)
    (221/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.108882966 seconds)
    (222/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.087602357 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.112722533 seconds)
    (224/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087541723 seconds)
    (225/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.09110106 seconds)
    (226/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.114046581 seconds)
    (227/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.076140773 seconds)
    (228/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.100087819 seconds)
    (229/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.089859647 seconds)
    (230/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.082328042 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.114506407 seconds)
    (232/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088191303 seconds)
    (233/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.101115049 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.08955157 seconds)
    (235/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.115082826 seconds)
    (236/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.089849728 seconds)
    (237/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.099165751 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.112008787 seconds)
    (239/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.087082998 seconds)
    (240/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.166656929 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094984748 seconds)
    (242/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.110880004 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097763776 seconds)
    (244/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.195725509 seconds)
    (245/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.088969639 seconds)
    (246/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.101972328 seconds)
    (247/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095476805 seconds)
    (248/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132600757 seconds)
    (249/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.090817567 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.113228595 seconds)
    (251/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.0866218 seconds)
    (252/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.201180958 seconds)
    (253/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077079025 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.113409867 seconds)
    (255/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.079745758 seconds)
    (256/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.088280659 seconds)
    (257/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.140771747 seconds)
    (258/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.079478376 seconds)
    (259/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.114176293 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096442742 seconds)
    (261/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.101703575 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087702289 seconds)
    (263/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.09043932 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.11233579 seconds)
    (265/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076719836 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122440903 seconds)
    (267/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.078471661 seconds)
    (268/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076443201 seconds)
    (269/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100940917 seconds)
    (270/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.088269039 seconds)
    (271/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.101698421 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.087149863 seconds)
    (273/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.180954686 seconds)
    (274/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.089665771 seconds)
    (275/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.11271563 seconds)
    (276/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.147080131 seconds)
    (277/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.077858596 seconds)
    (278/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.104104398 seconds)
    (279/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.078203417 seconds)
    (280/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.107021461 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.087224569 seconds)
    (282/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.142186381 seconds)
    (283/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.076236056 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08877026 seconds)
    (285/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.101424977 seconds)
    (286/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.089274458 seconds)
  done (took 37.485571668 seconds)
done (took 38.379896228 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097701018 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.158638399 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.099068111 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.143355278 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.101588267 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128999915 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.097615793 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.126706093 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102467638 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.129486806 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100979134 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.103704335 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100876628 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.125340271 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100220732 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.147798524 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102302505 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.120439783 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.092673058 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.088220705 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117009509 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088696248 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.115450589 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.078738511 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100763857 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121417653 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095371968 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.125409214 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088814745 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.114727533 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.087525253 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.121599443 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089185057 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.104064764 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.119890286 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.092976178 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.125147083 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.09968251 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11595127 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08906998 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.122211681 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091302152 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096468349 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.121183003 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.090717477 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.113278786 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.0927106 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129104021 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122698899 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120162354 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097144615 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124859781 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.099000533 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.121922443 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.088351247 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.092834914 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.113010551 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.123075163 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117928713 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095360129 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.122252432 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096718094 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.113104521 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093328521 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.11740753 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100241697 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101789026 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113205161 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099559964 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.120252103 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.088398197 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118270135 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.0881521 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089622858 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.123448297 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.101099975 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.112531253 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.090624271 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.122261271 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094228935 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.113480248 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093145243 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.091400057 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.115569352 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093785483 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103616565 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.088620602 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095462379 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113948591 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.092605082 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.120660699 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.096397919 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.116192887 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101414896 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.088959698 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.113360882 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088987452 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.115160263 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091121504 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112481792 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.090559389 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092564327 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.123355241 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091318576 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.115010375 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.101951895 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.11449128 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.095851954 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087815353 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.114171107 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.105762455 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123747264 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.089461215 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120561457 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088393712 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.09117337 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112764186 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.08877671 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.114347168 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089563274 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.115531764 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.089506621 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093044178 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.116315676 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104019201 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.114402003 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.089033245 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093160588 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.113939918 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09544206 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11557682 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.089776946 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.116570278 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087199803 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093703149 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.11476658 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.091058695 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117893894 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.092844164 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.116033815 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094322913 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.094589925 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115700505 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.08904416 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.113468795 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.083671954 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096190504 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118193247 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.091283266 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.115128458 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.091303496 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.11451421 seconds)
done (took 16.955314941 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.084355032 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183841221 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.143042484 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.124461923 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.137670749 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.089619534 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.126947284 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.147218774 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091432492 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.149673209 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.115008562 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135452016 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.156213719 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089099996 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.089699688 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.119609182 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.091837388 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.133730664 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.128876295 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.137203959 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.147352234 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.088349813 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.139936394 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.11558334 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.125541411 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.117569374 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.116675078 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094788978 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.118711669 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.106844039 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.136653296 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.093953582 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.115613935 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.11340062 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.132086179 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.098827901 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115543033 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09739409 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090302957 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.116290925 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.131686983 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.114407211 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.120823628 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.097397277 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094341723 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123824726 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091437007 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125557927 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.101928015 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120073979 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.106589712 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.141939523 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.11931785 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107798562 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.113698009 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.10197566 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.132383038 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09831163 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.090564553 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.123838477 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.090045012 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.118751746 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.106458629 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.133504816 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.095104173 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.131379013 seconds)
  done (took 8.62183194 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.102567533 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141895494 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.108592146 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.135183769 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.089945921 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.116443399 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091098379 seconds)
  done (took 1.733768854 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101906707 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111704827 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.144395874 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.143364229 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.114506835 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.142676621 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096016507 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.117011376 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.111705069 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.117720483 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.116674156 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.158975512 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091989762 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.126040035 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.120238623 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.115579589 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11981422 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.116237905 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095196459 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.145106102 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094698015 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136461777 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.093899845 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.116907149 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110082845 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.091171413 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16692509 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12206503 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088729495 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.120503067 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089381794 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.158663874 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110396938 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127021249 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091157057 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136894223 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.110356001 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114189484 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.108473098 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.123474292 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.109277235 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091735105 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117970681 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08919208 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.122472659 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106082301 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121895141 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092504492 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093979441 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142450117 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092374797 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135485828 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092123547 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.121877464 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.093636603 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122269013 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10189862 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.11806348 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.117460296 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089405735 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.138778438 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13799424 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10981405 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.138643172 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094280333 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136073468 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.109583224 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.094457077 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119810155 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095319426 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139166151 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090006112 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.120631241 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106158964 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118812682 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120325085 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.144959229 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093367619 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.131820313 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.091896814 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.120390991 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092527587 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.147727679 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095793626 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091529804 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122381305 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095348405 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116208806 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.0908432 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.121356056 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090614003 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.093508782 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121313046 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.092913307 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121282209 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.11328513 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.118827267 seconds)
  done (took 12.022843501 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087203377 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.088446193 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.120248441 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.093402748 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.119040193 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093429845 seconds)
  done (took 1.562012109 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116668118 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11386627 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.107329027 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123153327 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.135956138 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.143973875 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.118315078 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.127587333 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.136392334 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104490678 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.146320135 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.1191365 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.149581098 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.097679935 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.144100697 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.096624675 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.144531974 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098406714 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129814927 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097763686 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137364745 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098472016 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124465698 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.112682104 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.128501189 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098013004 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125517803 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105078851 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130293617 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.102042406 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123944989 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.102765661 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.125418009 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.102962878 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.144285743 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124227779 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097778875 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.13016312 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100423233 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.128462995 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.120483095 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124027157 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.103860976 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.130169421 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.103148529 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124853212 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.104313169 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12503136 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.118457528 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.130029076 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.104426426 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123851934 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.102427456 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.130106606 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.099392861 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128824943 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.10506365 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.145200815 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.098424829 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.126060758 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094797475 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.129496496 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10274375 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.128842494 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103776263 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.130212556 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.099171848 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124393435 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098487812 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.124606083 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.104310911 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121054392 seconds)
  done (took 9.470868437 seconds)
done (took 34.349218138 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.683925078 seconds)
  done (took 1.6399382 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.809067451 seconds)
  done (took 1.767831939 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.544693277 seconds)
  done (took 17.530481983 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.459714302 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.538102374 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.977344328 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161283669 seconds)
  done (took 3.094870636 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.954614292 seconds)
  done (took 1.932768452 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.282704311 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.237143826 seconds)
  done (took 1.484381929 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.755231602 seconds)
  done (took 1.731604907 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.453312393 seconds)
  done (took 2.421788509 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326622443 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164258556 seconds)
  done (took 1.470783291 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.577436894 seconds)
  done (took 1.55603374 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.021937177 seconds)
  done (took 12.001740626 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240775553 seconds)
  done (took 1.229230307 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290004022 seconds)
  done (took 1.274230591 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.466070605 seconds)
  done (took 4.444805668 seconds)
done (took 54.546195793 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.095847682 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.100229534 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.129718787 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.102423915 seconds)
  done (took 1.399979016 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101606149 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125373681 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107962864 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.125634115 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.108895512 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.125464495 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101932548 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.137745143 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098677423 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.126661553 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.099063317 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098195068 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128931702 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.127381061 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.096908589 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.102450246 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.132814305 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.098922967 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128829494 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.099705228 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116893574 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097471161 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123737204 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093807327 seconds)
  done (took 3.69087878 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09705901 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090950062 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.120078161 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.091297094 seconds)
  done (took 1.386022214 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.096721961 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.127250567 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.102531053 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124092795 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.10702801 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13407848 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.094963436 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094587096 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.123260697 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.103865001 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.120155739 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.117070173 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13614 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.102887263 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.131520282 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.091554267 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.121008544 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110370966 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.129926373 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104750292 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.122839744 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103179347 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093593131 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.135281922 seconds)
  done (took 3.716402038 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17053179 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.131097154 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.110352426 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.118369975 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.13490772 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139400555 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.084209218 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.137879573 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.084854879 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126943384 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.089317263 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.157832424 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.125101733 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.085518637 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.085416359 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.110184635 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.097699199 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.123060273 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.088334712 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125419188 seconds)
  done (took 3.315209739 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.095467726 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.088821898 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.109811478 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088156 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121455114 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092878351 seconds)
  done (took 1.583558196 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094029834 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085972072 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.115980853 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.087716252 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.117343624 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085611741 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.110562517 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.087209187 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.086572269 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11074784 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.087690812 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.110174594 seconds)
  done (took 2.171447626 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.511648202 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120902098 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.088682052 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110474404 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096882464 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117253117 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.108102722 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.11777832 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114204379 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.112009578 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.086959956 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.087970401 seconds)
  done (took 2.658649013 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199110655 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096470394 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256589487 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.353786069 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159007093 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163764672 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274060063 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163041915 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.175095996 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139224801 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191588034 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154031202 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125401873 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170486342 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136294124 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.151500637 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168643748 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185864052 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119404434 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22154125 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159115591 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136916624 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176362051 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149714076 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137498196 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154263503 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.092395299 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126742386 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166456373 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164577976 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169072497 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118847148 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137296977 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.457804483 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21041603 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176576654 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279533711 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132311246 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.175368193 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.139072437 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246898569 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116626716 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214646158 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126292527 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129258981 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174355489 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.318092802 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175891178 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131926352 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139565623 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174033464 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175041065 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172245248 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11040213 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318168963 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121104883 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.139359532 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180091883 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177065938 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184884873 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161945656 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.115659461 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182645258 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179343275 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175681869 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139786149 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.133988808 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122236677 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16706348 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189890463 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177533876 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164993065 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183645891 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141294359 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163741252 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16808276 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157333508 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146188703 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153527277 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118154895 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12082591 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135053874 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127954113 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168750569 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124662567 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193656025 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136771159 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.145522103 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225092191 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128255661 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156920651 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158598681 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158317631 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143447128 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.088202608 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143680481 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148420148 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129306696 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128196874 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154136649 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140399216 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.099107453 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149884031 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.093633475 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154025001 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.124998483 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.33015377 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16581059 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.122314178 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133966336 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145294939 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.147375621 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165123335 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181331389 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131858132 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104756119 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189816226 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156066027 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131466231 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170132461 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177721857 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.127285288 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139262335 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163276867 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184490433 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137941405 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183891346 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118583588 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131605055 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138614182 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131817068 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154219864 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155963166 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129659501 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.123157435 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212877748 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.095916022 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134841829 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172032676 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099284332 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128587897 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113693606 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134238042 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.132625994 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.110744492 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134233878 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15134935 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159519498 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125209675 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149491844 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138486237 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184981886 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131624479 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.11947939 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144674393 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09108269 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168172754 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180006661 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132214883 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190772141 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159791162 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195602569 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158936359 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129312722 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173396779 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100124416 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117130741 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159802563 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154793297 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132985636 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176102992 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216399307 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160480655 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121754956 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145855478 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161933662 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162221542 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147427906 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107336113 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15899453 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153754236 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.092618579 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122747218 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.098731501 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137568284 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129200137 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106578756 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174066672 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16138707 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211540063 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136388379 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140311045 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179306827 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127167899 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165090434 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.372183965 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144845138 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182491017 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177476538 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164499493 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137301347 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168916372 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.092950919 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094411027 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134302531 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159362171 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132847382 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106151758 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138830299 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178624873 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.328674339 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151554917 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224161822 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162098027 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192981596 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098979043 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170815712 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165724167 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129539944 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.171377462 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12976556 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.120350394 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175708416 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143339931 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178580229 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158120368 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163526834 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186613497 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.146581811 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102571169 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145492192 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160584856 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135683537 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136422248 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144148629 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134804841 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313079945 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.129255354 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097084514 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169557996 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142994586 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169326412 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144275124 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160514942 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097956158 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138044143 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155257932 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117201558 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112535282 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.329734022 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1839101 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142708097 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.314845231 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173843754 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12790157 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308521777 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190784538 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.361213524 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113436072 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142757287 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157612615 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157220012 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.322053127 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181577377 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143659015 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173786743 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126663365 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.131711077 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13447625 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11783849 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148352543 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.138964868 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10278929 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149691722 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.132252078 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171870654 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11257596 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154905674 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161426496 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148357486 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.114607407 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142834993 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196577055 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155413925 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172021096 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.144934347 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.133441545 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218263209 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097061537 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126057542 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.098563607 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175424273 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130103641 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129053619 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.209250429 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195636399 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157373352 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16082462 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109457379 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.116883926 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129080013 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14602576 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221032167 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11358257 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133438715 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183148482 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140824839 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102922013 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158663326 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284056169 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146672956 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170655325 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.084010313 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278355064 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123210685 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103556783 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15845322 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167255785 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133725707 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.14414256 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158944956 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140911588 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157551387 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109097662 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186491989 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226649151 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13715191 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166173264 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.13049751 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156537626 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.31723219 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178508685 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142304078 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104741665 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159999215 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17972419 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.181523169 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131079697 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159647612 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158408494 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12910352 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162569384 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134272893 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193464935 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128788433 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161055719 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109652166 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122104629 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155225858 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.181802121 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10379189 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168618042 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155053813 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130099844 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097142699 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147498512 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155623504 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139959573 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.096906699 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168906574 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.093536762 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158774396 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174232862 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130238894 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124787312 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143235307 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133335188 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111519801 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140786567 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13469537 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.135847166 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175852615 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127670399 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173843216 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168931333 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161524225 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314197035 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145362224 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636205201 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126538157 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179618747 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145804348 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176301406 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118831398 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163199701 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159878983 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146806411 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160884466 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119345788 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230184093 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166794169 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15361777 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10153367 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141775232 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140525561 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.101638305 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150237622 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159031005 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138189272 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.107422235 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154696449 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141554747 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.103917735 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137064511 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17987543 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118138719 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196368337 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147795904 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137012689 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162706931 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163496479 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127788083 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.129104676 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168860738 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139562932 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147444795 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.104891296 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13338498 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175505704 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.094492101 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156985147 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157226796 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157423513 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133638543 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132038644 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156395417 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138293216 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13207114 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128814998 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150367357 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153477793 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104199082 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126108913 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124885603 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150690189 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148133473 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096355884 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.162270377 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180160768 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.093480831 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131478487 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280605328 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156867591 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183894756 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.112607446 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133243013 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141299138 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116235406 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150385345 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157971361 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098953062 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130538325 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.128352662 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.136581303 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140413914 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154684149 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189273917 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323969554 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200551612 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135156155 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279095237 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115759387 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152219828 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.092797113 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127401575 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139717944 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104511421 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142475812 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188976385 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176803627 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.143708774 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107288135 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124570703 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.096674915 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130499589 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132071516 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149533496 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155797129 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140100132 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.084665094 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141271772 seconds)
  done (took 76.046879425 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145202103 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131287084 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145375803 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199251178 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165413976 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250741096 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208144696 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23468849 seconds)
  done (took 2.553895788 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.091285338 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.142644184 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.130537748 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132588285 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.114017162 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.11489313 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.302862219 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.136884918 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11358056 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.117965617 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.131128065 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.115374177 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.529673776 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.121744541 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.088230157 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.110038399 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.114353012 seconds)
  done (took 3.676598893 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.185947273 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.471751812 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.010673614 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.190216395 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.175173646 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.092226742 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.702890447 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092004789 seconds)
  done (took 11.994952263 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.120751112 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.142860815 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.132851077 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.16183477 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.119557606 seconds)
  done (took 1.765797624 seconds)
done (took 116.933244267 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.095362886 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123798925 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096364223 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.126660433 seconds)
  done (took 1.511341717 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101517946 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.079624206 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.106311853 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078521162 seconds)
  done (took 1.44296315 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.190334204 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.173067436 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.400916008 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.075298127 seconds)
  done (took 1.589104476 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11169298 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129195575 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10198608 seconds)
  done (took 1.431645543 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.103761689 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.09783835 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.12760643 seconds)
  done (took 1.415246667 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.101055744 seconds)
  done (took 1.182102207 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107812088 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136829933 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109968891 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134859996 seconds)
  done (took 1.576811208 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094799715 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096188413 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.137154484 seconds)
  done (took 1.413153023 seconds)
done (took 13.008820946 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103215974 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.513589653 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.388015998 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1348438 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.698627241 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.412203858 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.03977574 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149189917 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166874391 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096776479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14110938 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.668899048 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.020979718 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.435421258 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.006893063 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.34018582 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696903964 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089159652 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116283831 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089627467 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.05078885 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08944719 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088884584 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116500283 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.66933324 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422016886 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089554446 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.367901461 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089866641 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124326354 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.376401601 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115743936 seconds)
  done (took 16.982555646 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095633572 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176623961 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.103254038 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119675489 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096801387 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118966443 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.093909393 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089951572 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180181227 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123882387 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.107490239 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122932947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.093206201 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11810232 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109620058 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116519319 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090116802 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116037843 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090534847 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089688613 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136359625 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08842788 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117922055 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088674792 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117432881 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102033352 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117908868 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.090066653 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116226074 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098458501 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091341139 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118135339 seconds)
  done (took 4.617458513 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141507245 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18646196 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135346963 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1242896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.17788329 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.092358753 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197952546 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145217202 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183302841 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089558276 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134981363 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.090148462 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152587589 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.090472774 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137544637 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.089910039 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117582007 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089999745 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115200557 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090582875 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108458001 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116894921 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089415745 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117214635 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.08925077 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132017579 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090268174 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.117605277 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089435253 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125021651 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092448656 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117490201 seconds)
  done (took 4.958573228 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.094774731 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.095294712 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133331617 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.106388958 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122341739 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.092792567 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.12212444 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090590669 seconds)
  done (took 1.945144685 seconds)
done (took 29.587124927 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.108645275 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.10321045 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.139154095 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.108697253 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127979996 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102654088 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120534234 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101532073 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132718874 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102792529 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139873412 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093688567 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.090528844 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116911571 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.102914662 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.124543802 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.102843872 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.133879594 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.110806655 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.139279934 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09137909 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.13235301 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106712203 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.140787976 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108256063 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.139410512 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.10582582 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.130067313 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.090748555 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.090855411 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.132316003 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.117584546 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124429806 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105415334 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128278767 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.099415585 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.126169299 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093686387 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.130804301 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10238588 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.130100102 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101630488 seconds)
  done (took 5.913703025 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.115663026 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.155211181 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.119090594 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.119801843 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091646999 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.111934871 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115762639 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.091130187 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.114201501 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114880397 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.111605477 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080149425 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.110607869 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076636232 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079808792 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.107762469 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083420876 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.106552069 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080032905 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.081114023 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.111931786 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076193983 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082454931 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.110403283 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078042793 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.11301322 seconds)
  done (took 3.743738917 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.097085616 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.104718297 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139115743 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.172943436 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.129987036 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.129886546 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.099375876 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13662495 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.106281737 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117071261 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.092144829 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.146963521 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106855655 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12534343 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092865887 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.104151177 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131520229 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090484585 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123689486 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109568809 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.134532959 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.099774579 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137805923 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.100104637 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.11707555 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091255797 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122105357 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.099978292 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.10255261 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129569529 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095180618 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.121680349 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.09060153 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.13072669 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.096902021 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.119762324 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.108798092 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127904793 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.098088951 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118852025 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097745931 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.09426487 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140327131 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.157927501 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096666488 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.1248548 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.093341228 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.098424204 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120058077 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107636989 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128239791 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089884743 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.121281151 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090866403 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.090795639 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134165784 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096409245 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.121768912 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102035223 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12509571 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.102364896 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123559801 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.104691395 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122284108 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.097065591 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.090632815 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.119233308 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.08803048 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141204184 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0949899 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160858283 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.091001699 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.119987405 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.097707772 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12520126 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095965344 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.118103876 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10485966 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127814081 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093682413 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129165698 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092526722 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.091744356 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.136931886 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.091407945 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.119843449 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.090195964 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124266813 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.092156052 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090615326 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134104106 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.088340615 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120820882 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.10338994 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118264061 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091255464 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124575913 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.094630751 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117340463 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104473936 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.123519948 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.089873074 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128933058 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.090598179 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.092559301 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.128582599 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.094970694 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.118670918 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.095097647 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125194273 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.090319632 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122158529 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.093627866 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092234531 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.128945577 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.096782345 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122538665 seconds)
  done (took 14.147048268 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229359037 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215171769 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.194793999 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.296597295 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.10361735 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.145240276 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211979526 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124886969 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.120451416 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159969323 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.168666738 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182366589 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139480836 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.191015451 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170185359 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.119194399 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.109409747 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165605535 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.218235479 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.294656099 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118805417 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131094141 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.13112317 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158592966 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.134448088 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.09893198 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.13703176 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.131155444 seconds)
  done (took 5.711858152 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108574153 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152717228 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.095624896 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.141617209 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.119420589 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119701679 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.094852745 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.121428397 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.103645194 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134676677 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.089999578 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126213755 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.098010216 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.129311572 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.090614988 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.128894761 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.099628306 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.120788771 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.093667425 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.094053866 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129424516 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.137527367 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.094566411 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.08918031 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.12867508 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.089400798 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.121969471 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141819399 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.089938552 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.140936205 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.088374642 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098278911 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132678804 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.091003628 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119236566 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.092441714 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.121751775 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.093102672 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.092059885 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117253423 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.089034837 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.1113761 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.089318805 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135511032 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096545571 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.113190982 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.096689877 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.124988229 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.091243172 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.087585037 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.122295124 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.093344282 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.121952054 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.098863011 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.121451944 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.091590771 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093447352 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118884084 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.096683273 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12258894 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.088815346 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091501654 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.123720289 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.122663751 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.099486858 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.095411037 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.117643678 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091998126 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.123379468 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097693904 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.120251724 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.0973985 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.08766361 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.121638953 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.092381019 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125514591 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093118357 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.118192631 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091062403 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.090689184 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.108479315 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.089948903 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.106788662 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.093877226 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088258788 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.11747717 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.092154183 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126357174 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.107912485 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.1211264 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.099377378 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121223317 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.088812842 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.12195492 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087884839 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.093088032 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.135461126 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140004204 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09015855 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.11669375 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105472394 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.092445861 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118429071 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.080343266 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129123502 seconds)
  done (took 12.470392317 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129187962 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151503133 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.092735742 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137988906 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125524831 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155909883 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102518599 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.127791902 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094948765 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.138734157 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.091072261 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.129376774 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09076175 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134737387 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.132168514 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.137677764 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.092679596 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.134988481 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.101433424 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168780626 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112649369 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144429185 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.11515694 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126575947 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.096496052 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.138758749 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.129641333 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.138652973 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103997229 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139854133 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.105505112 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.158705501 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143127906 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098727482 seconds)
  done (took 5.346069893 seconds)
done (took 48.426501171 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.201332643 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.410912996 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.182736853 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.036047662 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.221377953 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.211009344 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.198956938 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.18262989 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.305536115 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.190072716 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.453523232 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.73021023 seconds)
done (took 58.440282723 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.214440678 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.343668324 seconds)
    (2/2) benchmarking "String"...
    done (took 1.48338595 seconds)
  done (took 3.940549742 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.766689796 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.136611682 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.448884178 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.182862407 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.188791567 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.481238244 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.876206692 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.562544141 seconds)
  done (took 27.989958403 seconds)
done (took 42.027260273 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.180877761 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.199018483 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.214046761 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.169849567 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.29701761 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.217352066 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.546550105 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.193346988 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.204239892 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.178178029 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.183618163 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.18991632 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.202097335 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.523570356 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.200393777 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.197296634 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.257640077 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.658001478 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.59583235 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.194864576 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.186897872 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.273380495 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.183986085 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.195477208 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.19093051 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.187937325 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.185170925 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.192511847 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.688478172 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.185388228 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.194852298 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.683887201 seconds)
  done (took 190.066838297 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.186975208 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.984283364 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.07941645 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.244771315 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.628749107 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.382041349 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.330057236 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.706459854 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.202848804 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.186507909 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.388778505 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.185754384 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.47952627 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.156737555 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.215607865 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.25093111 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.373941727 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.495634361 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.222183077 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.308896818 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.190406826 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.202739465 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.126483736 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.377881029 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.190910314 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.196396104 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.198195563 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.230098729 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.37599805 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.304074925 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.230984332 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.197776933 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.806502688 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.04406672 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.187434494 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.217291001 seconds)
  done (took 148.203478462 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.187424122 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.186547619 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.186633113 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.219272601 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.186819269 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.761287625 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.768216682 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.714946791 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.499891257 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.583569082 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.447361586 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.187799119 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282654903 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.199300364 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.189398609 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.203562392 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.215875365 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.188996953 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.188271976 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.764668246 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.205071316 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.22303366 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.364380908 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.204592977 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221185174 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.585258896 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.189372297 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.2211656 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.520508132 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.238801989 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.188632646 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.574489439 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.720160681 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307027255 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.191202282 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22153906 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.190060942 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.470075633 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.189067852 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.189748157 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.192312871 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.871483646 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.195103297 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.764946762 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194945775 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.134458924 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.189321445 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.189970214 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.204246817 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.842552414 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.206849877 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.189292838 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.192928387 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.189351383 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.188952644 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.221890836 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.332773967 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.304563735 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.188962778 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.189225314 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.192723255 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.220808509 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.188862907 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.190666313 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.189162647 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.664438166 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.252265687 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.310398817 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.757285333 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.194129357 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287276585 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308871154 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.189525897 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.188989341 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.188721489 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.190240417 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.298644895 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.189097839 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.59810956 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.188485819 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.189650598 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.36287585 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.205336332 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.472512299 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.285698807 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.188850768 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.587752285 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.193931248 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.187708319 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.922357308 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283866334 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.186720038 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.187730687 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.188532925 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.594713776 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.187847818 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.747535016 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.427711178 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.194397871 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.66901392 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.193963301 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.604063753 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.724551337 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.819516098 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.189690246 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299805201 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.361889617 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.207126739 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.187814369 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.53215281 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.195102218 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.243186747 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.189013301 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.585781506 seconds)
  done (took 363.872804324 seconds)
done (took 703.259402122 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.806255758 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.802854979 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.911407519 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.795322942 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.75820288 seconds)
  done (took 10.192744313 seconds)
done (took 11.311760975 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.374471817 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.374395376 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.247220625 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.376927623 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.219938175 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.392587422 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.355314664 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.209816165 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.292102103 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.268320156 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.289347405 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.242217072 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22449076 seconds)
  done (took 17.985739098 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.501602898 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.504456095 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25320481 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.498208455 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230496692 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.496982767 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.3867599 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.397798685 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.404974217 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.205988815 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204072681 seconds)
  done (took 16.205105938 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536709987 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.565454655 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258118989 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.499189496 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232006103 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.54876747 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.393067614 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.405079871 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418908045 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.205888204 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.203673893 seconds)
  done (took 16.3875259 seconds)
done (took 51.697829006 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.20111986 seconds)
  done (took 2.32178798 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.239348023 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.399512834 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.223017492 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.207383761 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.202338345 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.211346163 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.20896879 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.203538753 seconds)
  done (took 11.017938292 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.200603052 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.197629815 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.199867291 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.196272633 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.200006501 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.19951896 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.199951882 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.200782163 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.197974592 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.198193532 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.198218377 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.196969113 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.197706866 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.201451492 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.19803527 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.200948494 seconds)
  done (took 20.306181412 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.200587074 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.197070199 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.197969898 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.198432295 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.197672874 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.197918064 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.19927145 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.197528209 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.197923384 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.198540516 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.198662308 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.198203031 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.199252163 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.199884706 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.198214372 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.199688772 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.197607357 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.198850462 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.203447283 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.197986959 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.199855713 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.199110245 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.199701702 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.199127088 seconds)
  done (took 29.897151586 seconds)
done (took 64.664478705 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.815383646 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.712355969 seconds)
  done (took 6.650837291 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.259361093 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.260963884 seconds)
  done (took 3.645566284 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.202113119 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.201599784 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.202711871 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.201159021 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.201063084 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.201359574 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.201896375 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.20228638 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.201393572 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.201742831 seconds)
  done (took 13.140967117 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.202531687 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.202863863 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.199565059 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.202551153 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.202216862 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.200006794 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.202732723 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.20280644 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.202127556 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.200457527 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.201700546 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.2003569 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.202656786 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.199707555 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.202286452 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.200279623 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.200248304 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.19997149 seconds)
  done (took 22.750027437 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.215360896 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.223088283 seconds)
  done (took 3.563855916 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.32892225 seconds)
    (2/7) benchmarking "second"...
    done (took 1.241322443 seconds)
    (3/7) benchmarking "month"...
    done (took 1.308661844 seconds)
    (4/7) benchmarking "year"...
    done (took 1.296204633 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.241841072 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.220230787 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.240726448 seconds)
  done (took 10.001248056 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.20320137 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.386658686 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.491109362 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.805331322 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.203607858 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.206880308 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.083572269 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.207532421 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.208731683 seconds)
  done (took 13.921215791 seconds)
done (took 74.798237962 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.212085002 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.198451573 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.430463451 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.212645523 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.216113986 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.493682698 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.229209085 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.316208153 seconds)
done (took 37.43418995 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.210130237 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.188933764 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.978991074 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.214348218 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.242626081 seconds)
  done (took 18.749236686 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.196168705 seconds)
    (2/2) benchmarking "read"...
    done (took 1.528980557 seconds)
  done (took 4.848921983 seconds)
done (took 30.933292258 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202427471 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.201332714 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.198474198 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.199252431 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.201363665 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.198963553 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.200405674 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.202095075 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.202046743 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.198962966 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.203456764 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.20206686 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201792045 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.201874054 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200407918 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199390244 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202236589 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.202803809 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.199535455 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200445319 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200815845 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203202346 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.20021298 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.200697886 seconds)
  done (took 29.948613731 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.203169081 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.203172648 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.202569308 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.202419185 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.201029061 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.20374023 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.203512258 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.201409063 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.203371244 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.204075773 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201788954 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.200297935 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.203480379 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.2008747 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202670576 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.200493295 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.203476503 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200938871 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204422653 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.201117009 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.204270379 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201375197 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.201335671 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203492911 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.200841302 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200826448 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.205788576 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.200348025 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.203278411 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.200884895 seconds)
  done (took 37.195386352 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.207962578 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.210668152 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.203279301 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.202693921 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.204773319 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.203085471 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.203082345 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.202669758 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.20335696 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.203689473 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.202708223 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.202767946 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.206771715 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.202964736 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.202955733 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.203237225 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.203383061 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.203610785 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.204180176 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.20287556 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.205762859 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.203973113 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.203586672 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.202659802 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.20434082 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.203410653 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.203067361 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.204066153 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.20388529 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.203441812 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.202994368 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.202962096 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.203509587 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.203669822 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.203475145 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.203443742 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.20885301 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.211562844 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.203802854 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.203737967 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.204727712 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.203632488 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.205244583 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.203838975 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.204494318 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.204889098 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.204159304 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.204689226 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.204152053 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.204427189 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.204987724 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.204600562 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.204777374 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.204293045 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.205263672 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.204085677 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.204522859 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.205791046 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.205982768 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.205216935 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.204277678 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.204692129 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.205042244 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.205614652 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.206490284 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.206470024 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.20604793 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.205719272 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.205498975 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.205782012 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.205849439 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.205928008 seconds)
  done (took 87.855587174 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.20583163 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.204223209 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.202795556 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.204183563 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203741541 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.205402152 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.207156892 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206576124 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204184146 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.206612994 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206219184 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.204538757 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20317202 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.206674665 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206958229 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.203710422 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.20783772 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202918439 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.207881055 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.20770079 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.207159744 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.20463719 seconds)
  done (took 27.648102424 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20855992 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.209329397 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.205694495 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.209475465 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.20584492 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.208526366 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.207643065 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.210397987 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20786571 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205120488 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204781153 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209027032 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.207510482 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205954889 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206473253 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.20870478 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208703157 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.208143075 seconds)
  done (took 22.867043515 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.20663434 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.206380058 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.210270366 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.20715276 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.206619652 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.209407393 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206976555 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.21095269 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.208770348 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.207279157 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.210044349 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209102514 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.209594055 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207296164 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209205628 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.20809651 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.213207275 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208305765 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209366362 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.20734902 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.207574175 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.211222887 seconds)
  done (took 27.721647443 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210672169 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.210203961 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.208166847 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.210452815 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.208598824 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.21108944 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.211247108 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.208447021 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.211573028 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.210768563 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207521434 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.211378286 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.212646155 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.208742555 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.207929752 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20805663 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.210722653 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.208571449 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211170179 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.208175268 seconds)
  done (took 25.328422752 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.213998597 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.213843405 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.213707097 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214614967 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.214645349 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.214703915 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215352194 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.213434576 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.213411082 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.214676826 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.214350656 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.213889816 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.213252414 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.214142608 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.214699224 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.214525138 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.214696266 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214465213 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.213764392 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.213679086 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.214475385 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214307282 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.214494013 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.214671419 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.214911996 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214952237 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215547389 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.214503194 seconds)
  done (took 35.134792819 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214301975 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.212360853 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.211084309 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.2103853 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.211514997 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.211035981 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.659611547 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.210057146 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21356702 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.211777511 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.212840861 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.212897992 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.213868694 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.214826775 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.213459374 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.213998729 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213428387 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.210803082 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210770598 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210757191 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.214634325 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213959255 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.213737867 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.211745842 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210465425 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.213987177 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211806977 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.212085641 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214560936 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.211411848 seconds)
  done (took 37.957771305 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.232270644 seconds)
    (2/2) benchmarking "in"...
    done (took 1.233496436 seconds)
  done (took 3.603884905 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.211873283 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215408164 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.214343611 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.21251724 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.212354656 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.214558091 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.215463866 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211700641 seconds)
  done (took 10.844123768 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.214057839 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.215060972 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.215828828 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.215976413 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.217328217 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.215813642 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.223030598 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.233062971 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.215427161 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.21635173 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.224095496 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.223363958 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.217699146 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.216613247 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.215723966 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.217897048 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.216581695 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.218162042 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.218220215 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.217137002 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.219261345 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.218784407 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.219626455 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.215163635 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.21829611 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.226872014 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.221059116 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.217521491 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.217021264 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.220697579 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.21732174 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.215251934 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.219043612 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.218842117 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.218432814 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.219454084 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227088243 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238437029 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.224481199 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.219251783 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.219469799 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.214473743 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.218469007 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.21934668 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.218483134 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.219416986 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.218996645 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.215607574 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.216544034 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.221516859 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.223335885 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217929206 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.217004045 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22114417 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.219197244 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.226532553 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.238814917 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.222879401 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.228299746 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.229495071 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.232551386 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.240945246 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.220560999 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.221131923 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229485368 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.242213661 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229551447 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.233739368 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.216762031 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.21984195 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.226568901 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232237956 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.243177577 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.222047415 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.222854941 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.22087023 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220230654 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.220935419 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22827797 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.238769233 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.221916938 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.222144253 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230687184 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242910275 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.220109887 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.222129445 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.221688288 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.221380455 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.221410004 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.23076356 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.240453004 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.221228163 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.219454025 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.220931249 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.221407082 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.223408172 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.219448686 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222021946 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.218616656 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.222283266 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22316512 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.223887906 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.229558329 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.222925755 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.223347905 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.228694982 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.222169814 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222101963 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.228358164 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.222572409 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.223341121 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.223372036 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.227567795 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.219875944 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.225635101 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.22965344 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.223623522 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.223094011 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.223454818 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.223432849 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232671489 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.248067747 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.222913883 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.223693826 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.229111142 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.236437291 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224821919 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.225830295 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.223844932 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.220623351 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.219157032 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.224892556 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.223849812 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.223622728 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224270799 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22435545 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.219804479 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.223831635 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.225678576 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.223694252 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.224118392 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.223095931 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.224733338 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.225370515 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.225819271 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.225641995 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.230695444 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.224661487 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.225966977 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.225994646 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.221921463 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.224947495 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.225710405 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.226041696 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.223872731 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.226432884 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.223998226 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.225874156 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.225991818 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.225285356 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.225390116 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.225899627 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229254961 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.22620401 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.228724695 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.225719659 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.222769466 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.225381205 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.226192336 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.224740405 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.226115639 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.223994601 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.228883739 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.234199019 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.226380805 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.226932136 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.228155835 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227138625 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.228119058 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227264771 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.229462074 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.234396156 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.227915337 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.232878836 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.227621872 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227962833 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.227022899 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.226368136 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.225985646 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228726841 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.230190504 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.235219123 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240553011 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250098735 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.228096922 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.231185832 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.227556 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.232703971 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.229975277 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.229899732 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.22759111 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228720129 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227767696 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228934144 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.228467265 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.228363725 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.226986547 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.228594876 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.227872225 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.229117107 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228221416 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.227868295 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.228803813 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.22515351 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.228699493 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.22967996 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.227796533 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.225812625 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.226919551 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.227784061 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.228584913 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.229081446 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.23454158 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.225844367 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.230365858 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229706303 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.229725899 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.226741668 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.229719649 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230944754 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.228998177 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237566439 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.245891409 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.229405445 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23724611 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.246915844 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.229103071 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.231521078 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.230471341 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.22756563 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.2333686 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.238267784 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.229868591 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.23220748 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.231413909 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.230380033 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231337888 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.236629875 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.227863763 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.230552701 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.231201728 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.231559288 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.228398217 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.23123447 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.23068608 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.230907064 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232809776 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231321069 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.231415468 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23149941 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.232398276 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.232292488 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.232546015 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.234584424 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.239623322 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.236792575 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.231785743 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.233289834 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.232369583 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.235867927 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.231933679 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.232875979 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.231495856 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244756555 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.256412795 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238306792 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.232544805 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.233012493 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237504079 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.234130604 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.235862962 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233302933 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23340385 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.231902907 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.231584906 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.229923968 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.233301099 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.233385562 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234719047 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.235582129 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.237198054 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.233764204 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.232590314 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.236180879 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.235108826 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.234315414 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.233219454 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.232529904 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.235212633 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234355194 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.23330717 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.23407393 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240114513 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251952071 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.234210071 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.234095802 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.234462193 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.23330631 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.234540169 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.235320661 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.238691484 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.243286627 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.237691552 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.242760163 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.235815499 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243541397 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.236873339 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.237685213 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.244136089 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.233250114 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.233369369 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.234496777 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.235321495 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24287452 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.254894032 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.236376124 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.240933966 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236775349 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.237996563 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.235329724 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.237513496 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235770567 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.236191109 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244019782 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.257433775 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.239318095 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236598182 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.23391575 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.237409174 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.237126206 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.234915224 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237944243 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.237369483 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.237190414 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.235653811 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.235952703 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.236396938 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.236983267 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.237839844 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.234627056 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.236671846 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243048581 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.256015109 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.242191949 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.237400863 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.242999687 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238891413 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243666144 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.256593678 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.238192523 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.239621806 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.238457139 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.23749527 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.236411658 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.238776763 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.238868048 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.23937291 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.241268984 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.239490381 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.239406368 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.238206794 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.239789817 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.238377575 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247932962 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263084152 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.240888736 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243959275 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.236581583 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.24089223 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.244359982 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.240243864 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.237919155 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.244309752 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250203392 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24723335 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.238779128 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.239421436 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239005336 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240330069 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.239715158 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.239087031 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.239497701 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.239909826 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.240105196 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.240759578 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242300747 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.241543351 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.239851762 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241542846 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.240516899 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.250408294 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.242064644 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.240564337 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241485715 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.242012721 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.240595604 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.241119561 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.24178134 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240614927 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240997973 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.242580842 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246933153 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.246452374 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.242224867 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.241017083 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.242346666 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.241500485 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.240917429 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242263311 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.242177597 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.242112992 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.241442813 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.242865423 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.242186203 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.240392689 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.241334885 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.241147152 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242534311 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.244898418 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.248621194 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242007216 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.239085591 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.242991257 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242806462 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.241184622 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.242649058 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.24847488 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.246366249 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.253811998 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.251410603 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.247674441 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.243046193 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.246657114 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.250242922 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.241320905 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.242709662 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.244792503 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.243232917 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.243092964 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.246660443 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245422482 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.249620247 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.242968805 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.242522494 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252220922 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.265125358 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244880744 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.244791605 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.247166853 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.243741181 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.241406618 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.243772551 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.243668802 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251332828 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.262594437 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245103935 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245652789 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.244188597 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.246722432 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249364759 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244882205 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.245528848 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.242487605 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.244884177 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245770822 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245491833 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.242044923 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.243554458 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.24437573 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.248320654 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.25186692 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.243020327 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.246977073 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.244837893 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.245421396 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246743047 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246407249 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.241979338 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.242041097 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.244668839 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247635244 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.246868195 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.247761417 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.245595253 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.247079496 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.247476329 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247123992 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249939734 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.255660603 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.253629276 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.243562418 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.245234331 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.245882829 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.248974937 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248164006 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.248907586 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24732188 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.24729957 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.247261627 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247996988 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.247939394 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.251675808 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263686534 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.268987603 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246723851 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.247609683 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249209391 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.247882245 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.244632918 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.248372417 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.248666358 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.250546694 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.256578361 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.249814331 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254111914 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266472435 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.249171237 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.252274962 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.25109503 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.25502159 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.250176707 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249835049 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.250192124 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.253843723 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.263261687 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249624743 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.258377653 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.279367089 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.265892277 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.249105089 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.249906466 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247851506 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.25001722 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.250453639 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.251278442 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.250785224 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249694654 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.251325083 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.251111427 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254970703 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.250810797 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.251876506 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.2504245 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.249975836 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.250674463 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.248005182 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.252589117 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.250096041 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.252430335 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.251668854 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.252993905 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.250453318 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262711163 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.276141663 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.251921441 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.253159169 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.248645871 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.254204851 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.255665449 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262189435 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.258521437 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.252998106 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.252774425 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.252933288 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25290606 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.250942087 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.251041237 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.250875064 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251258231 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.248474654 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.263771094 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.276162537 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.255807154 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.251607104 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253006198 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.252651761 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253106154 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253433817 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253120582 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.25299465 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.253930941 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257255601 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.253033247 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.252740622 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.25576155 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.259837294 seconds)
  done (took 738.119523555 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.251010089 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250174831 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.24987886 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.249993049 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250340573 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250699978 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250979521 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249831605 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.250404122 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25036948 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.250315539 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250769913 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.250737678 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.250631362 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251057863 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.251992997 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250945077 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250557946 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.250515649 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250872518 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.251563528 seconds)
  done (took 27.434992326 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.254545342 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.251324644 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.252380269 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254731508 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251693818 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.255328632 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.25287948 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254872591 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.254384977 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252407055 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.256199881 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254233046 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.252846844 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.252449028 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252931914 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255280844 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.256129662 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253116113 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.255089934 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.254339842 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255464673 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.253912702 seconds)
  done (took 28.759327294 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.256737377 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.258030289 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.255924681 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.253061463 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.255712345 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.253170973 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.257094598 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.255580083 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.255948588 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.255769991 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.253698062 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.258047916 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.263308051 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.261553725 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.258571024 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.256146104 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.400956549 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.257578563 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.258616195 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.257827669 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.253714791 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.261632411 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.253843571 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.253811785 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.254768349 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.258464367 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.257646912 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.256345337 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.258154099 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.258933572 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.26348528 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.256669693 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.257202063 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.258471026 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.256803438 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.258738518 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.262913571 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.258967231 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.255051743 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.257927404 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.267388461 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.278238143 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.259762367 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.26458993 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.258535356 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.258971088 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.261244411 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.266895509 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.256327481 seconds)
  done (took 62.983899636 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.258613821 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.258537722 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.256444925 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.258561542 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.25881571 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.259110135 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.258570201 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.260129821 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.256861842 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.256900432 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.260266954 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.257142407 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.256253966 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.259056233 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.25925747 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.25692127 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.257406519 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.257030201 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.256712239 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.256502267 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.256767279 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.261090437 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.259755507 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.257732566 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.260523274 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.257191853 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.257087971 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.260291491 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.257883232 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.258055935 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.259800189 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.260106863 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.261009585 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.257734982 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.258083428 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.260905033 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.260307819 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.259128841 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.261345381 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.258846989 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.26097769 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.261027329 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.260705764 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.261810298 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.259009941 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.258749009 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.258299682 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.258655164 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.259226879 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.260483921 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.2618923 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.260540199 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.26160201 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.259541584 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.262360572 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.262089999 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.259760325 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.2592502 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.262423606 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.260179137 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.259343226 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.262302466 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.259659759 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.261519477 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.262541946 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.259759637 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.259414321 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.26344741 seconds)
  done (took 86.818908212 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.264586521 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.26458688 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264483982 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264934545 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.264633637 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.264191855 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.264728146 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.264119433 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.264551915 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265168583 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265016049 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.264236589 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.264577754 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.263880818 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.265174591 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.264659448 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.265570182 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26558931 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.265236933 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266072968 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.266664525 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.265910061 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.265906875 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.266095812 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267179051 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265950103 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265937257 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.265764108 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266279977 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.26642362 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.266240276 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.266253906 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.265105164 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.266222573 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.266253105 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.267284993 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.267031975 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26606388 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.26663006 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.268066812 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266375187 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.266474539 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266642995 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.267065023 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.267124769 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.267585875 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.267687963 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.266806883 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.266136297 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.267333109 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.267539924 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26834793 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267336267 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.268012106 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.268018898 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.2671156 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267638535 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267664086 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268509161 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.267451635 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268603767 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.26829099 seconds)
  done (took 79.689663612 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266585312 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.267288883 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.265065159 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.264797279 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.266702679 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.266789381 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.26786113 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.266790924 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.267961131 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.267359486 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26744889 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265147892 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267576073 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26932542 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2656899 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266718335 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265918249 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.266767483 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268127202 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265717963 seconds)
  done (took 26.519572981 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.265557036 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.26830906 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.265335977 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266056105 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.267891918 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.265561708 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.268353499 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268182845 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266128157 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269545539 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.268762731 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.269270096 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26623371 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266917871 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.268736935 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.266107562 seconds)
  done (took 21.462156857 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.266753366 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.268430061 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.270112436 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.270446876 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.266865159 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.266620068 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.269062803 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.26725438 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.266723785 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.269524507 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.268849354 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.270709023 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.269786792 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.271379444 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.267365387 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.270107345 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.267436528 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.266996329 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.271343732 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.271870788 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.269369758 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.267921116 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.270794367 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.269283702 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.267613746 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.269152268 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.267864901 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.268392442 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.26852095 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.270314826 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.267172998 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.26820472 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.2682283 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.269437444 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.271750996 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.269603014 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.27100392 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.27098342 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.270477821 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.272042249 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.272239713 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.268848971 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.271395961 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.273201023 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.26987874 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.271944789 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.268703519 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.269240176 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.26940911 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.268738906 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.272001436 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.27359276 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.271685474 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.272400806 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.272443329 seconds)
  done (took 71.019063231 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272472872 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272386166 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.269539587 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.272570915 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.272806241 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.270092122 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.27211139 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.271094366 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.269966267 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.272809837 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.271482729 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.273365298 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270011 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.273001482 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.271571988 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27308462 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.271442246 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.271610442 seconds)
  done (took 24.080761797 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.271198659 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271252851 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.274921234 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.271028142 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.270887367 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.274612227 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270524558 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.2745459 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274289516 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.272518924 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271670041 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.274218711 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274123938 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.274486143 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272540215 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27190231 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.275643802 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274492072 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.271935291 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271903506 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.274615907 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276301227 seconds)
  done (took 29.199923441 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.275469386 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.274626794 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.27438261 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.292579281 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.295677888 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.298401826 seconds)
  done (took 8.901885403 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283215739 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2758404 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273637761 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276856027 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27542094 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273132118 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272194304 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274365816 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275480798 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273361848 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273520791 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276033746 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275537806 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2734805 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275923699 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275268175 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274252906 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273371561 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274423201 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276361823 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273430586 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276834473 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274082276 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274499096 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27483228 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275137191 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277379913 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274196961 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27400281 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277485014 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277100994 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274268509 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277815744 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274586854 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278159368 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27677503 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274539524 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277605136 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277571951 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274537572 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277566471 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277401947 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277423337 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275371555 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277724008 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275207916 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274773602 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275039654 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275855924 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279370669 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278574644 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275941937 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277206949 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278787679 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278555599 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27845255 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276912928 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276985598 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278939541 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277364593 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277138354 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279437854 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277379111 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277797955 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280345612 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278076631 seconds)
  done (took 85.446972173 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278279637 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277038035 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277356072 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278120816 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277372107 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276302701 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277493956 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277567685 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277088865 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276933485 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280761635 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277260351 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279320135 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278243686 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277991165 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278007118 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279108669 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279421688 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278423642 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281818401 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277895912 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27724296 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27809014 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278495331 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278708429 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281283127 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278724114 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277439466 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278199194 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27816645 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278538132 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278365853 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279343177 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279055473 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279797431 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278863172 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278567677 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279437267 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279505955 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281874548 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279607689 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282620475 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279223471 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279959044 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279984468 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279069764 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279691313 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280283969 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280725208 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27977329 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279205321 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280398228 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280861264 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27926849 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280453004 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279634808 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280939444 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281526822 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280228401 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282048149 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281390987 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280362093 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284644772 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280533428 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281367955 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28127754 seconds)
  done (took 85.634601209 seconds)
done (took 1723.301089739 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.445462047 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.398977106 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.282120477 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.335231946 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.282926762 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.305398733 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.28250481 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.282952859 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.282021923 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.282839646 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.282788775 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.469058086 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.333868656 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.283195287 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.282894562 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.377926967 seconds)
  done (took 42.411007533 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.309928965 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.290186066 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.401339188 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.307858254 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.310367462 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.471362551 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.345868089 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.288926617 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.45543029 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.327581378 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.823534641 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.310346456 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.28716014 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.382133509 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.306071742 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.476058474 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.527323567 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.829206431 seconds)
  done (took 29.65059889 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.730272879 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.288773262 seconds)
  done (took 9.219562441 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.306130329 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.288216609 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.289668694 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.287858844 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.278575293 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.279705756 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.287654309 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.281624458 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.905349084 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.417861923 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.289339139 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.298369468 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.306602578 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.28810891 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.285619961 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.325107704 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.440211767 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.286200135 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.285057248 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.293228153 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.28827288 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.383116745 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.328645005 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.2885003 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.409706422 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.871089775 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.298304006 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.294518114 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.421979929 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.285066133 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.287660682 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.288606765 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.287841619 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.159143639 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.783687539 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.292581603 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.312312545 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.31041722 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.283695871 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.43485916 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.288789039 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.292883766 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.279485513 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.78586009 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.424196322 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.405008487 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.492216506 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.288380315 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.28875465 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.348916144 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.293737711 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.288866893 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.331906634 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.08360455 seconds)
  done (took 109.135872884 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.32849953 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.669906258 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.4485513 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.303274045 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.99845324 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.870556368 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.296625009 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.558145514 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.309009784 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.282429286 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.570307857 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.780019103 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.312574846 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.3099942 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.498565212 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.312279465 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.281740776 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.061558173 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.304525734 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.287292547 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.774822056 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.286143667 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.281201414 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.456309268 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.319720347 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.737590477 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.630233169 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.647455328 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.306519513 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.281898653 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.739517987 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.311741438 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.362184314 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.28328632 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.539472125 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.62871053 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.607275996 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.283743439 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.308372933 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.284516846 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.311396726 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.734521598 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.619996243 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.28292642 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.289977803 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.731777198 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.283569284 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.288867326 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.284720651 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.483097404 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.911050691 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.2847522 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.641891751 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.2919489 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.547407386 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.347393878 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.347034483 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756763506 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.284370951 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.305255547 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.32235813 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.284919255 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.288288336 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.289956094 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.294589079 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.621993287 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.455307929 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.291364136 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.622200068 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.737436494 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.308148264 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.805309096 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.135934325 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.300437447 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.34198933 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.285224804 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.907050621 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.770735413 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.325576993 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.284887956 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.606767639 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.285817346 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.573519379 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.307574955 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.293694946 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.79494999 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.291808765 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.335204023 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.28556336 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.287423947 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.977198924 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.287468404 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.576605228 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.319542418 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.286736542 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.285870863 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.318181394 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287685425 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.294834002 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.286386744 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.800560723 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.310356823 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.408800453 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307750124 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.287228449 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.296121249 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.287995657 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.287041201 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.503567804 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.868875498 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.307124693 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.288374994 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.288470829 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.295396709 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.469924838 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.291495416 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.58276204 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.289853254 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288571076 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.292643004 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.878883141 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.353942565 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299986931 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.292705803 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.190160669 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.490034456 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.311289052 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.311345118 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.289219506 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.305441204 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.530038975 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31428001 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.360651198 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.29105717 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.981096962 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330476883 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.324268948 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.575936908 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.296820496 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.212184711 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.313226504 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.291560977 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.573917085 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.55674879 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.504675983 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.291009713 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.306364947 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.965323849 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.310154669 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.434893289 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.315272004 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.329565304 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.485586387 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.434088247 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.290016403 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.877500285 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.292281148 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.501570798 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.296526059 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.586258884 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.766646711 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.307301885 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.298507743 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.985020252 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.016796134 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.970886016 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.294044882 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.566316646 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.265905908 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.766716583 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.291918823 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.29101894 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.804759677 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.30071815 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.297861405 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.291806501 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.291156859 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.440061699 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.463547007 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.553158983 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.292173817 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.730898457 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.32090343 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291602207 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.307208005 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.292891095 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.642181639 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.3641222 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.29642332 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.297965185 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.293774009 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.297034053 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.750620327 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.110339102 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.292719103 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.443354005 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.910186812 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.309610911 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.292875294 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.030738992 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.379837157 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.793194653 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.342211768 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.59124483 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.298783607 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.330970856 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.930164605 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.321057685 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.754183742 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.295852932 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.294551072 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.875254678 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.310641379 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.361838827 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.295214213 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.295868981 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.817912711 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.309789812 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.297089466 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.519614901 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.319770397 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.557602757 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.295017492 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.341786271 seconds)
  done (took 1099.160924748 seconds)
done (took 1290.778043976 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.295811235 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.295360606 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.289383962 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.303513441 seconds)
  done (took 26.399626315 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.307425677 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.303228754 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.303569133 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.300825218 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.307852929 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.301957311 seconds)
  done (took 9.041875994 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.351864692 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.297969826 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.303382275 seconds)
  done (took 19.170057437 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.501150812 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.544058035 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.621148914 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.420548146 seconds)
  done (took 10.304156726 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.303814662 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.304221128 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.30436847 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.307755343 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.308872034 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.308826511 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.309050254 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.30863445 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.31019368 seconds)
  done (took 12.981422296 seconds)
done (took 79.112514157 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.125805567 seconds)
    (2/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.685052305 seconds)
    (3/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.38389196 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.201146431 seconds)
    (5/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.509347045 seconds)
    (6/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.857480382 seconds)
    (7/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.721304258 seconds)
    (8/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.331803229 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.191194673 seconds)
    (10/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.896821695 seconds)
    (11/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.084854624 seconds)
    (12/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.79476809 seconds)
    (13/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.912476732 seconds)
    (14/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.414000773 seconds)
    (15/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.680674743 seconds)
    (16/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.547959863 seconds)
    (17/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.775399428 seconds)
    (18/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.361961803 seconds)
    (19/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.668618834 seconds)
    (20/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.33871923 seconds)
    (21/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.321483795 seconds)
    (22/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.32327485 seconds)
    (23/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.082367431 seconds)
    (24/286) benchmarking ("sort", Float64, false)...
    done (took 5.543377358 seconds)
    (25/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.285205962 seconds)
    (26/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.151550252 seconds)
    (27/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.304010881 seconds)
    (28/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.907658181 seconds)
    (29/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.291780584 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.215340412 seconds)
    (31/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.444489874 seconds)
    (32/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.297285036 seconds)
    (33/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.362514809 seconds)
    (34/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.284918539 seconds)
    (35/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.43659874 seconds)
    (36/286) benchmarking ("sort", BigInt, true)...
    done (took 6.322504273 seconds)
    (37/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.380434272 seconds)
    (38/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.357552299 seconds)
    (39/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.399614293 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.647286803 seconds)
    (41/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.019885976 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.664309409 seconds)
    (43/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.310414531 seconds)
    (44/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.432673967 seconds)
    (45/286) benchmarking ("sort", Int64, true)...
    done (took 6.300444174 seconds)
    (46/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.966539211 seconds)
    (47/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.401770649 seconds)
    (48/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.74819529 seconds)
    (49/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.408151696 seconds)
    (50/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.59800893 seconds)
    (51/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.326783199 seconds)
    (52/286) benchmarking ("sort", BigInt, false)...
    done (took 6.300910684 seconds)
    (53/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.301441505 seconds)
    (54/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.563045126 seconds)
    (55/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.287163914 seconds)
    (56/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.089173845 seconds)
    (57/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.301718814 seconds)
    (58/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.286614807 seconds)
    (59/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.54504282 seconds)
    (60/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.326798158 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.299936064 seconds)
    (62/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.305310994 seconds)
    (63/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.410833835 seconds)
    (64/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.506398106 seconds)
    (65/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.572291164 seconds)
    (66/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.385309467 seconds)
    (67/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.858617493 seconds)
    (68/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.336758212 seconds)
    (69/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.367325226 seconds)
    (70/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.48721434 seconds)
    (71/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.288953449 seconds)
    (72/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.298064762 seconds)
    (73/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.365959683 seconds)
    (74/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.330231343 seconds)
    (75/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.921528651 seconds)
    (76/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.398958191 seconds)
    (77/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.504582929 seconds)
    (78/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.311823183 seconds)
    (79/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.407469297 seconds)
    (80/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.514563692 seconds)
    (81/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.289145944 seconds)
    (82/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.270346932 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.929709059 seconds)
    (84/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.334754838 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.935370262 seconds)
    (86/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.424419168 seconds)
    (87/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.412638901 seconds)
    (88/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.731098046 seconds)
    (89/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.302637229 seconds)
    (90/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.333144421 seconds)
    (91/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.915953963 seconds)
    (92/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.308404456 seconds)
    (93/286) benchmarking ("sort", Int64, false)...
    done (took 5.501688267 seconds)
    (94/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.306640596 seconds)
    (95/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.293703713 seconds)
    (96/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.300804269 seconds)
    (97/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.675234221 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.290477025 seconds)
    (99/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.317260048 seconds)
    (100/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.33881629 seconds)
    (101/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.670713364 seconds)
    (102/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.323220548 seconds)
    (103/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.051205408 seconds)
    (104/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.316782754 seconds)
    (105/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.33921591 seconds)
    (106/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.688432649 seconds)
    (107/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.322837538 seconds)
    (108/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.290477862 seconds)
    (109/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.299493643 seconds)
    (110/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.746963518 seconds)
    (111/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.311726844 seconds)
    (112/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.150167184 seconds)
    (113/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.311869614 seconds)
    (114/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.329513306 seconds)
    (115/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.329597687 seconds)
    (116/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.54863321 seconds)
    (117/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.306333784 seconds)
    (118/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.368496517 seconds)
    (119/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.600767901 seconds)
    (120/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.270643084 seconds)
    (121/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.331211353 seconds)
    (122/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.518725482 seconds)
    (123/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.305207365 seconds)
    (124/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.20314677 seconds)
    (125/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.672614044 seconds)
    (126/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.42749629 seconds)
    (127/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.331048026 seconds)
    (128/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.144090486 seconds)
    (129/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.291942903 seconds)
    (130/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.508335812 seconds)
    (131/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.78471225 seconds)
    (132/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.290693055 seconds)
    (133/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.75241013 seconds)
    (134/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.366494692 seconds)
    (135/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.170454857 seconds)
    (136/286) benchmarking ("sort", Bool, false)...
    done (took 1.835274052 seconds)
    (137/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.32857231 seconds)
    (138/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.292116418 seconds)
    (139/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.292455516 seconds)
    (140/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.60406599 seconds)
    (141/286) benchmarking ("sort", Int8, true)...
    done (took 6.306489162 seconds)
    (142/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.312442633 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.189366903 seconds)
    (144/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.297746131 seconds)
    (145/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.784804259 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.067113883 seconds)
    (147/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.562687832 seconds)
    (148/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.845937862 seconds)
    (149/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.422349023 seconds)
    (150/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.436559278 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.712934775 seconds)
    (152/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.334071271 seconds)
    (153/286) benchmarking ("sort", Float64, true)...
    done (took 6.318156133 seconds)
    (154/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.292616653 seconds)
    (155/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.112846586 seconds)
    (156/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.332813572 seconds)
    (157/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.293031341 seconds)
    (158/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.493689682 seconds)
    (159/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.525261423 seconds)
    (160/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.319402793 seconds)
    (161/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.335687594 seconds)
    (162/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.390747011 seconds)
    (163/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.249909186 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.211357104 seconds)
    (165/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.329857881 seconds)
    (166/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.317253261 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.953385241 seconds)
    (168/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.369151783 seconds)
    (169/286) benchmarking ("sort", Float32, false)...
    done (took 5.310025885 seconds)
    (170/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.299068208 seconds)
    (171/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.039800074 seconds)
    (172/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.346196404 seconds)
    (173/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.76913163 seconds)
    (174/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.390091737 seconds)
    (175/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.410125531 seconds)
    (176/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.294699396 seconds)
    (177/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.529803288 seconds)
    (178/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.307271666 seconds)
    (179/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.333446581 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.33795591 seconds)
    (181/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.434796333 seconds)
    (182/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.818504408 seconds)
    (183/286) benchmarking ("sort", Int8, false)...
    done (took 4.393726215 seconds)
    (184/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.060522352 seconds)
    (185/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.22524433 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.350454498 seconds)
    (187/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.573292553 seconds)
    (188/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.324070251 seconds)
    (189/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.342194536 seconds)
    (190/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.36167162 seconds)
    (191/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.29539419 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.313768402 seconds)
    (193/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.555957098 seconds)
    (194/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.296569792 seconds)
    (195/286) benchmarking ("sort", Bool, true)...
    done (took 5.346443388 seconds)
    (196/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.691733404 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.367444094 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.325761117 seconds)
    (199/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.334171356 seconds)
    (200/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.310382825 seconds)
    (201/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.361443602 seconds)
    (202/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.31960517 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.303237585 seconds)
    (204/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.310458558 seconds)
    (205/286) benchmarking ("sort", Float32, true)...
    done (took 6.309339408 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.509407489 seconds)
    (207/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.319833579 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.884877943 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.715857906 seconds)
    (210/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.6976047 seconds)
    (211/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.092523422 seconds)
    (212/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.49373551 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.331887477 seconds)
    (214/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.896029376 seconds)
    (215/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.648947607 seconds)
    (216/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.303773425 seconds)
    (217/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.569423921 seconds)
    (218/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.304176641 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.351146102 seconds)
    (220/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.127491463 seconds)
    (221/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.68469136 seconds)
    (222/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.393086511 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.894412931 seconds)
    (224/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.149968741 seconds)
    (225/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.401042165 seconds)
    (226/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.437691408 seconds)
    (227/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.944336575 seconds)
    (228/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.506396476 seconds)
    (229/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.312264306 seconds)
    (230/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.30309593 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.957515552 seconds)
    (232/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.781319888 seconds)
    (233/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.05305579 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.34132221 seconds)
    (235/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.344736878 seconds)
    (236/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.317094573 seconds)
    (237/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.404491016 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.52080993 seconds)
    (239/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.353489949 seconds)
    (240/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.66504375 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.339568854 seconds)
    (242/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.083638311 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.691657139 seconds)
    (244/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.420332836 seconds)
    (245/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.312539339 seconds)
    (246/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.327216165 seconds)
    (247/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.338389047 seconds)
    (248/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.280669776 seconds)
    (249/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.399606379 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.723528314 seconds)
    (251/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.119791636 seconds)
    (252/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.427525819 seconds)
    (253/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.300611436 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.191557126 seconds)
    (255/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.299779166 seconds)
    (256/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.708028943 seconds)
    (257/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.341160697 seconds)
    (258/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.781130123 seconds)
    (259/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.3146483 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.404160636 seconds)
    (261/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.301873832 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.395818497 seconds)
    (263/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.414618288 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.42400626 seconds)
    (265/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.82621889 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.138500683 seconds)
    (267/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.331448945 seconds)
    (268/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.700429175 seconds)
    (269/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.164838293 seconds)
    (270/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.211489487 seconds)
    (271/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.301107996 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.35643193 seconds)
    (273/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.301521346 seconds)
    (274/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.414763821 seconds)
    (275/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.063367824 seconds)
    (276/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.316802214 seconds)
    (277/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.134104837 seconds)
    (278/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.302349176 seconds)
    (279/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.369726324 seconds)
    (280/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.333505294 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.337567392 seconds)
    (282/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.666157969 seconds)
    (283/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.502728905 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.727320854 seconds)
    (285/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.363497718 seconds)
    (286/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.319892453 seconds)
  done (took 931.726977858 seconds)
done (took 932.945587129 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.346705997 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343555908 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.326565546 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.347593696 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.437461168 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.502078557 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.335634634 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.32768812 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.374450133 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.375534055 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.32511824 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.501655079 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.329343467 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.326542579 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.326661664 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.34358686 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.354190334 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.327868401 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.343958848 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.336088488 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.343241026 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.326208202 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.376999172 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.501191315 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.331259406 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.329685383 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.330595168 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.347303308 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.440754967 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.331223593 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.330138612 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.339018975 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.355191406 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.326897347 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.321982284 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.346601323 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.338192918 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.337107536 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.331766135 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.360677297 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.757377869 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.328514683 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.329858011 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.329571567 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.32861034 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.33344413 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.329623263 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.33454095 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343957665 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.344107956 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.751124221 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.343940422 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.332389849 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.329822803 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.340211413 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.329170982 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.332928269 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347761584 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.350445403 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.34765816 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.346536019 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.334627601 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.332255264 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.346695715 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.337640161 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.786464554 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.325342292 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.333649704 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.76275164 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.335457787 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.787475963 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.338378617 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.331049248 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.344149644 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.362542476 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.362648221 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.325832182 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.330474841 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.338564087 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.330595026 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.342166352 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345691869 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.335905381 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.331360352 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346813206 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.507342619 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.342556814 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.333357849 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.341119051 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.351672373 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.33944171 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.34315002 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.335607768 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.327709632 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.341878207 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.335946413 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.335717233 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.335982021 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.338070521 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.342633974 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.764009284 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352429151 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.328393588 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.330014623 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.331897358 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.346142846 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.764385178 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.333536377 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.354837462 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.381288713 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.335164289 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.354477628 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.337001843 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.353245342 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.34295454 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.336641526 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.329513134 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.357371406 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.754433071 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.34800724 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.334630049 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.333175063 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351809916 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.337101866 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.330809061 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.368517216 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.336172971 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349201063 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.454973768 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.344890694 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.365776211 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.332829711 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.33768512 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.363913741 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352906706 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.366398066 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.338160334 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353300683 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.351050191 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.331111076 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.346191926 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.346943582 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.336094134 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.339752328 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.329482982 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.363977309 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349337239 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.349566922 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.356987191 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.457134606 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.333067433 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.358965542 seconds)
done (took 225.571801504 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.394446853 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.325707563 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.423370459 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.332792616 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.432167527 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.431612501 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.329737625 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.330145286 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.330564033 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.705620734 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.330562986 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.331284284 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.327826855 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.329204734 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.414785515 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.333113748 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.330824365 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.670250239 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.334512782 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.40483058 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.328092087 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.331470331 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.332985378 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.713644499 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.331010277 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.325997863 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.404779001 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.334048991 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.678025022 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.329546742 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.331881679 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.678785834 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.422062038 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.350623701 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.34465465 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.340651454 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.433417494 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.351298355 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.414529236 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.414870178 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.426347742 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.374620278 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.334141444 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.333289769 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.336106669 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.336195799 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.332271989 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.361332134 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.33285348 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.332779079 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.672499927 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.345888127 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.333605778 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.334017639 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.333392763 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.366196231 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.33382246 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.337024422 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.425771347 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.338154353 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.398359041 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.715615303 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.710311412 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.335905206 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.331666268 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.334024149 seconds)
  done (took 148.426268706 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.404569314 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.408260697 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.448247508 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.337275373 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.386635505 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.452272823 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.338396034 seconds)
  done (took 11.022796749 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.342451978 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.338161432 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.385482314 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.386314761 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.338463884 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.516399747 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.336829565 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.347587985 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.333876121 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.389249775 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.34159275 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.339163261 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.345416111 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.337302533 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.386978297 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.349002592 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.452438658 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.34011388 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.339167951 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.489214002 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.336251243 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.345134028 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.391259428 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.349617181 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.343957846 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.344298165 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.158357893 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.341523672 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336707915 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.33926333 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.336683652 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.415340531 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.339823028 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.336829025 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336607291 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.452664548 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.340023872 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.337412243 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.340071514 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.338239756 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.339976185 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.339404642 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.339527947 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.337204877 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.340008421 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.362368196 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.339910094 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.340177634 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.340419725 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.34120344 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.390369336 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.340869559 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.337300693 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.338224986 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.394474113 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.347996776 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.342071789 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.338025437 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.341198835 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.337830342 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.491846038 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.389027007 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.34074777 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.388373877 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.340889255 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.34160422 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.340989331 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.341328767 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.394382589 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.34082354 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.388869369 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.338417043 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.520797758 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.364051219 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.343229887 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.344039021 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.345000312 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.3423523 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.338059199 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.347681273 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.339505604 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.343081085 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.347600725 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339842646 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339608234 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.509410951 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.447080381 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.339475086 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.355627312 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.348897054 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.33941544 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.396090262 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.343853019 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.340667254 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395817122 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.45803291 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.394733023 seconds)
  done (took 154.235572902 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.347887186 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.350671607 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.346030823 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.366423359 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.344476865 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.343071517 seconds)
  done (took 9.351730245 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.34695494 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.344343777 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.344465759 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.344685098 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.343951597 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.346839511 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.345201865 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.345928164 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.349324736 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.3437368 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.347863633 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.348354674 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.349517797 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.34581101 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.346442176 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.344847203 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.345753943 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.342759346 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.344719766 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.345470131 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.43999344 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.345870001 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.346322051 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.347136617 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.352957938 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.345360342 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.352462567 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.345045911 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.344947544 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.352718765 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.366448925 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.349643543 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.346790333 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.351764885 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.351505905 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.347051013 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349141526 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.349158192 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.344324527 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.350182876 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.349461759 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.347494035 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.347191209 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.349014679 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.348177312 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.351714878 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.352612958 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.354353445 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.347445686 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.349933226 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.351082359 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.346807529 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.351262704 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.351272222 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.349304428 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368231485 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.354574777 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.349053003 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.348728596 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.350061199 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.34849378 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.351605135 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.350124645 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.352431594 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.355282849 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.351465992 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.349797309 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.352417061 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349000218 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.348491842 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.351564795 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.346216364 seconds)
  done (took 99.476632826 seconds)
done (took 423.757158651 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.852045798 seconds)
  done (took 8.110667991 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.430594901 seconds)
  done (took 7.691064123 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.912640823 seconds)
  done (took 22.17836007 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.415119114 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.451182715 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.382708225 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.342767856 seconds)
  done (took 26.850252552 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.974235365 seconds)
  done (took 8.233001021 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.342757812 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.360089665 seconds)
  done (took 13.964722344 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.347698727 seconds)
  done (took 7.606456698 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.362522962 seconds)
  done (took 7.628903356 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.345598184 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.35825955 seconds)
  done (took 13.976617414 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.329186111 seconds)
  done (took 7.58834093 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.509320671 seconds)
  done (took 12.771217005 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.350699895 seconds)
  done (took 7.613456602 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.426904653 seconds)
  done (took 7.686304475 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.421374043 seconds)
  done (took 9.68093354 seconds)
done (took 162.840338454 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.344111629 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.342935568 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.343029854 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.344661024 seconds)
  done (took 26.635338513 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.384813019 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.383817884 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.38499822 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.393940521 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.387239988 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.384368226 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.376580441 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.376875825 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.395288103 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.388373097 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.385981634 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.387888401 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.384498235 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.377226952 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.387247485 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.386519425 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.395658052 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.385963123 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.377277984 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.390316049 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.351666907 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.396159232 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.388928908 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.352580822 seconds)
  done (took 34.466107622 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.874859571 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.422178631 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.504994458 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.403680392 seconds)
  done (took 7.467510179 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.403652321 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.404979786 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.418242037 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.455350393 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.482199166 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.414786819 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.379708359 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.373424408 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.359943261 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.406135223 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.481032758 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.421484731 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.489490842 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.351805433 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.538828111 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.353117489 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.352959264 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.405520802 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.456113681 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.470935537 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.35403461 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.404789144 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.408415668 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.422301207 seconds)
  done (took 35.27255612 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.352701728 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.371286767 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.352666647 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.351862962 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.360338173 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.353521629 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.352979838 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.353886311 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.35302907 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.359130433 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.352139387 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.365571602 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.353043402 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.352877156 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.360559758 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.354174557 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.3600332 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.354189947 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.353407021 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.358973359 seconds)
  done (took 28.390509576 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.347308652 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.20196041 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.699656741 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.604108537 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.346452454 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.347059014 seconds)
  done (took 27.811810625 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.425148937 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.563860646 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.355732479 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.713851601 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.790650204 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.356494215 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.356210116 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.597506737 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.92380412 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.9171718 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.419430961 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.42386786 seconds)
  done (took 20.110075706 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.363026863 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.354386082 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.366076917 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.371817504 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.410710956 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.360777057 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.363605581 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.349409394 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.41834209 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.416031688 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.359563456 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.413288558 seconds)
  done (took 37.814008662 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437881168 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393062812 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.409307721 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432635196 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.070911977 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.562753841 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.396159601 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.110094372 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.376588186 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624683806 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351043603 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447469597 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.607366295 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35738407 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354025857 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.346529876 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583354014 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840505448 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361507301 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.479454368 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384207196 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353583934 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.552642133 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.598348862 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572143215 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.329343503 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.612598358 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.131161606 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639813044 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.36636992 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364269383 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352964834 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626663028 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.347234367 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45262971 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574304471 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362828907 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.899748297 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.364461629 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.476020872 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371374232 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363488288 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364210291 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35378087 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288240325 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354283654 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.551042726 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.365319106 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.064596019 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.355021124 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615119853 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450483643 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.357477592 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.344402349 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409471824 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.385578189 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.35830743 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450899479 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924410421 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.730966842 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374499227 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.293617592 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353552122 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.486442466 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992363583 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.367369618 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.357412516 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359059748 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290477868 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.483756632 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379189308 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502353143 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.380976873 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006548674 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065414932 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.368214333 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.293026286 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914204096 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369738225 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.29533739 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583486209 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.132735824 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292463237 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.303219488 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.290372914 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067190832 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372808435 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.802558742 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384528672 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.11485261 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.605054132 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384562845 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381358952 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.580474129 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.241429327 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367167128 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.358388847 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493242882 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379907671 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.114820175 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313527813 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.362778857 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614920413 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.569189502 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360164913 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.362536797 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299193962 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366064172 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.380388431 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.358586008 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.58962051 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.951660605 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381882451 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.748796649 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381414774 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.13637115 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110849005 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36445094 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.371037587 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359839246 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635083768 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.1441807 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.24952838 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427642046 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369010905 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358738008 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.661523438 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.214980769 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.253349891 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.57419546 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385046037 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.393767945 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.361283137 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305859875 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.357362881 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367074382 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.162290111 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.584688739 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372090909 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643000043 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294982656 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508545667 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.370368831 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.584402986 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.558270948 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.365321326 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623434444 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363686954 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369338371 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.3776013 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379300232 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461960761 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383132142 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.374118531 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.623660885 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.364285436 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.364446945 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.664757855 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.146246837 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364293403 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.36712611 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369234015 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951806975 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34735556 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365773339 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.252503275 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.376406416 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430454826 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367353776 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588692543 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.651427852 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36950174 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.385044294 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.359388763 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585668541 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373454615 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.511759035 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450855048 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.870517645 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.978993177 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384120609 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.297445762 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.074599252 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.057484963 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363841712 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.561760336 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364062334 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.586991429 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385280958 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368264183 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.961768743 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372904106 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.536451008 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.377410477 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376049966 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.652405414 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365098077 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.64935144 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.77427667 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385260079 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.384348974 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508131681 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.37844908 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.299841262 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.881018169 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370122318 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366093175 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.139774215 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400339042 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.525774654 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.8024692 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653747528 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3650977 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645786216 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.612592419 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.402372813 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.365904973 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365431771 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396125979 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.384549797 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374035368 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.377186252 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.531405265 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.810107603 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930385894 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110536559 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907854391 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.717275406 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.387647107 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.254410782 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.128593517 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325482881 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.022767553 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604505124 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131443554 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335540556 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299338031 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.582147074 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143861794 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632817117 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595879045 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.701447882 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.373537173 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642861472 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580564902 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402109066 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.375944053 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.301739624 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.671500446 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.425646614 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374318824 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472381699 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.615360689 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375790906 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.151740626 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.372978477 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.111968003 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.114067831 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.001431087 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.755412177 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368964682 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394075602 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.739230931 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400290935 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.894241744 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991598119 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385801407 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.885802741 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332037538 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594959244 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.388496825 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.372905647 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.948129522 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.379922661 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.625018228 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635193276 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305365473 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37265171 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911272191 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.231082327 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.375618633 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370341274 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123357778 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380237986 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664861855 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.371857022 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.660063136 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380100802 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.305268309 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304401386 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.063680874 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375783526 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347311531 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866420978 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.397070007 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377955858 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385171288 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221783621 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.626519365 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.385825151 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.966736701 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602839097 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371455258 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411424845 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.374226249 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375516464 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.364232761 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.2533622 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.607759161 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387756434 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.598646468 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.396744867 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.286151416 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.469733207 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59110919 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.253617651 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382849844 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617201073 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.091874261 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.380785592 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117362732 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405402926 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388170052 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390691039 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377557965 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394007529 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443602706 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59977894 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.39215665 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.38342263 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.121887936 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381052748 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398344651 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.387132148 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466568697 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.806864577 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.65634572 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.146776595 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976270939 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138699603 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.978371242 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650090217 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.378031609 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377936515 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308585855 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524330139 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.89989484 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647137504 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504668471 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.385338541 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397177475 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382527505 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388455807 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592004457 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649409924 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.24541667 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379333436 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.039614012 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.533959153 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386921116 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.586799048 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876322285 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951299239 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493211141 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.385907166 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150089757 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673865121 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.467406078 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376070869 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.96698932 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.389925145 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.123814103 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.389606349 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376639041 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530428845 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64107755 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.398115137 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.392928302 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.531813276 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.150119701 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.573289808 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638931353 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.822472671 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606044127 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991332052 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.105023025 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645714944 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447892062 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605313802 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.490757729 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525051297 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.388364527 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.262472163 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377844691 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221322848 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.087281388 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.387330564 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993091288 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647779398 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.381739368 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.390223204 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406883431 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.387679333 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600914319 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10469611 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609157643 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389280179 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.3839797 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.948758569 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98253573 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652850829 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314519125 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.381781239 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61594586 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.621301839 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40443248 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.83175447 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.09051005 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947156965 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.35669542 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400963555 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379334492 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.107460643 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991285862 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.690348928 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885098104 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.042301676 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388126258 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660332144 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.384218622 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383517354 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661714376 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.384050536 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.388553236 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617660464 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.988086187 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177916316 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.395884113 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.579194055 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.324965612 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.607425035 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.459184245 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319732437 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386900123 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.828915569 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406843041 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511575044 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39259523 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.378672071 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386118149 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.120800422 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666497757 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.386079894 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.409048388 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.383616353 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390178912 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483873563 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.512776587 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398484926 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.057187078 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.732608088 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637170559 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.394422208 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.375154594 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.385915971 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383012282 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.100574921 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.351338668 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383362972 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95353982 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.398288315 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.400906447 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385829856 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.600190426 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59495273 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.383704134 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620464334 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402893633 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405572835 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.289891041 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.150556429 seconds)
  done (took 1695.765580382 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.391007298 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.414743659 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.428025406 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.458988688 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.422358277 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.398199468 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.420522056 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.411795437 seconds)
  done (took 52.642907405 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.38809919 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.543843572 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.416188103 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.385873248 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.393222638 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.394092085 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.862627083 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.389657277 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.394017204 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.394629089 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.392161627 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.393944727 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.027758347 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.400576151 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.388262292 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.393003692 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.39264679 seconds)
  done (took 66.254985797 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.546671028 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.469434288 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.430832298 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.428984182 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.436880844 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.393306421 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.487408054 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.415264533 seconds)
  done (took 53.909245885 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.395170022 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.396084228 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.39641423 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.396531041 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.396468052 seconds)
  done (took 8.280514052 seconds)
done (took 2096.083513842 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.389465928 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.392981306 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.389959265 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.392930873 seconds)
  done (took 6.863267938 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.373081208 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.090961585 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.374184595 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.389853302 seconds)
  done (took 18.528394998 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.386756407 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.398757776 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.096209315 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.03310021 seconds)
  done (took 5.430466079 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.13778741 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.151473285 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.134468061 seconds)
  done (took 7.725596302 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.388532058 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.392547691 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.393491978 seconds)
  done (took 20.4751545 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.682607089 seconds)
  done (took 2.984189534 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.534126504 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.584411496 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.702958974 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.724787978 seconds)
  done (took 7.847491666 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.775801093 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.76176819 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.582864379 seconds)
  done (took 6.421576629 seconds)
done (took 90.361850509 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.286726307 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.761157286 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.594066491 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.258803308 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.620642382 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.594814465 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.811517711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.225519404 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.768386447 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.758790374 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.308421656 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.621705362 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.54661751 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.762102181 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.54540906 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.637271887 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.620944288 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.33680711 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.97855183 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.146587745 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.814358531 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.898845866 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.13502794 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.918439837 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.622640611 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.537244487 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.49602042 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.638072065 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.153745874 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.510657456 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.539260331 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.318833452 seconds)
  done (took 196.070193479 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.400499116 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.388312236 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.391860833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.418571209 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.389150161 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.388947825 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.407264771 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.391243965 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.389373026 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.406463218 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.402590926 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.390258772 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.405675925 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.389242542 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.392325055 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.39069595 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.390966528 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.392656818 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.389827055 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.389086214 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.390541295 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.397254289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.390040137 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.406950793 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.390729269 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.407377491 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.390467044 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.390385118 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.40644763 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.392701166 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.391965761 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.396061419 seconds)
  done (took 205.960400166 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.391332521 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.391386567 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.393785976 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.397759441 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.408760164 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.398401477 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.395706611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.418631886 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.391715147 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.406479131 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.398724514 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.391870943 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.392273227 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.391892987 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.393652055 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.392379534 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.391968295 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.399259196 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.40905885 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.391594419 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.393019773 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.39240681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.401012054 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.405240667 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.399600439 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.392368004 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.396437352 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.392603567 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.39235046 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.403804058 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.397233458 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.400703732 seconds)
  done (took 206.020045347 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.588081488 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.400169683 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.4030234 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.34773569 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.402387551 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.400284227 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.394664911 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.59755603 seconds)
  done (took 14.840564191 seconds)
done (took 624.192930721 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.744060719 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.449299065 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.603002022 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.421030287 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.225502223 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.441844264 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.421449103 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.594885951 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.343116237 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.604137424 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.693427339 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.419729488 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.831664556 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.420285545 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.67421441 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.520062624 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.320911799 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.428840915 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.73944983 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.985822988 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.687424509 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.902198533 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.598491485 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.33605587 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.844997669 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.89788793 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.115457857 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.311082344 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.438129253 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.746083994 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.099929385 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.393930985 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.464355266 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.465962503 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.523701385 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.519202264 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.358027717 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.481567998 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.608021361 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.668502407 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.012442612 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.155632394 seconds)
  done (took 94.820916514 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.392381635 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.392947615 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.391229625 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.392040115 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.393352658 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.392384273 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.392759965 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.392161182 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.392704824 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.391555133 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.391841172 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.393102837 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.393378709 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.394004526 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.393429405 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.393143819 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.393605507 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.395661269 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.393682951 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.392244517 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.393781057 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.392384997 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.393553641 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.392992872 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.393583262 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.393934087 seconds)
  done (took 37.528806355 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.405193175 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.651750782 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.822838803 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.412633741 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.405468615 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.410581426 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.486756861 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.406902899 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.409228654 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.409754763 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.57723995 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.408878297 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.441085817 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.846926673 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.408662048 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.407200083 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.406969903 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.406879809 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.661953466 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.416562427 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.506541447 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.407658543 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.487197305 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.416159047 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.428928462 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.406973314 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.411925486 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.968740408 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.409883918 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.576279194 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.226570084 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.490051225 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.915753067 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.833378658 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.222660444 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.41557499 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.408171141 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.586104848 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.410329073 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.408612482 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.487606383 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.408332378 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.832994516 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.076089738 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.427314297 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.410354856 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.988872355 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.586224223 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.661673531 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.425576705 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.858271193 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.413324393 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.411223304 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.410046736 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.661701808 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.418211428 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.408793053 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.977119046 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.431395038 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.489323302 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.411047451 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.409886389 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.671471964 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.410879103 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.658691007 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.411141183 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.41929876 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.431507896 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.833736635 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.41350457 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.097274762 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.428428364 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.410894303 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.579243768 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.658902188 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.022706365 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.414261178 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.675459984 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.932726018 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.487475456 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.414036018 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.960113413 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.491828761 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.415159375 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.413606368 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.414163253 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.411679809 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.462816663 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.487781995 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.035345656 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.094990695 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.003555808 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.510754317 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.419883242 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.41180596 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.979900231 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.431021724 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.411057915 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.833592593 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.098747542 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.430525574 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.419877171 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.09585293 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.431599925 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.493728355 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.418610923 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.844693501 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.414700071 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.462638122 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.414338813 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.419546141 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.435778639 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.492830715 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.416816233 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.414202064 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.068216799 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.607736162 seconds)
  done (took 185.602409004 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.407607567 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.40773982 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.407611975 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.408239861 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.40712916 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.415844447 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.407381566 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.407778666 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.4132342 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.407385891 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.40769983 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.408711865 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.410213725 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.422382254 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.438588435 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.414159439 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.017264442 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.408673587 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.423473597 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.408170573 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.211313769 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.417975194 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.409210197 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.425598792 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.409064659 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.41073015 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.414448839 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.412015462 seconds)
  done (took 154.280395782 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.416268667 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.992131862 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.417330435 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.550333638 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.436696717 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.413888643 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.547564836 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.473899172 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.419128653 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.413993421 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.413811069 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.725785389 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.416770825 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.940559635 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.612629855 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.55620333 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.940552687 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.434512954 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.414534909 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.413663536 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.55285252 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.427524812 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.725589951 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.993101948 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.418354517 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.995018907 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.407302728 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.417735183 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.415397023 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.996153591 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.415534681 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.726751289 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.49469231 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.478034595 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.004075851 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.94330294 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.959326484 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.566847499 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.416506411 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.414738977 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.415889325 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.407114437 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.997564002 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.419933036 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.418426361 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.99275329 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.435035832 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.419743585 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.423163166 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.416581871 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.478698379 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.482102764 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.731345847 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.001584642 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.495221375 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.429896929 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.550594976 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.827092975 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.42148037 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.943961062 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.407749601 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.00326104 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.438838965 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.407855114 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.417983629 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.424047345 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.570932186 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.551374616 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.946335198 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.436833253 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.945863526 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.589265096 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.417479346 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.418473462 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.420470088 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.002653713 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.94678018 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.588086627 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.55592479 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.620523529 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.417791223 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.419165203 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.410290956 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.497976183 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.418945634 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.002581024 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.963957487 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.439035011 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.421980169 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.421602345 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.421678968 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.601541266 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.011894287 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.499989629 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.940231694 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.751252201 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.734865619 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.422949339 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.480041673 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.437599482 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.735454292 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.422637909 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.47886518 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.896980492 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.735737569 seconds)
  done (took 168.848134921 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.665914894 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.623150491 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.513385974 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.571825012 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.020822179 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.983912354 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.708572002 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.562989609 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.535190327 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.681379343 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.595570466 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.512080179 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.640896491 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.498107655 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.156406145 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.489799892 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.516428617 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.566935881 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.562705029 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.449938961 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.102746063 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.711974508 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.615256941 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.324711679 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.512096898 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.182499208 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.984166086 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.940233055 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.601056385 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.74446913 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.963245063 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.542650913 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.389229323 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.116820503 seconds)
  done (took 67.915641845 seconds)
done (took 710.303736812 seconds)
SAVING RESULT...
DONE!
