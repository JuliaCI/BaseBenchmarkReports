cset: moving following pidspec: 11403
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.397031522 seconds)
loading group "string"... done (took 0.591927021 seconds)
loading group "linalg"... done (took 7.289648754 seconds)
loading group "parallel"... done (took 0.163529547 seconds)
loading group "find"... done (took 1.164817081 seconds)
loading group "tuple"... done (took 1.794383109 seconds)
loading group "dates"... done (took 1.254385295 seconds)
loading group "micro"... done (took 0.222183768 seconds)
loading group "io"... done (took 1.018816412 seconds)
loading group "scalar"... done (took 38.806914652 seconds)
loading group "sparse"... done (took 11.978237345 seconds)
loading group "broadcast"... done (took 0.943128062 seconds)
loading group "union"... done (took 12.383066069 seconds)
loading group "simd"... done (took 4.486957233 seconds)
loading group "random"... done (took 9.084964826 seconds)
loading group "problem"... done (took 1.836482639 seconds)
loading group "array"... done (took 20.798929161 seconds)
loading group "misc"... done (took 1.682653093 seconds)
loading group "sort"... done (took 3.343442022 seconds)
loading group "collection"... done (took 17.408638293 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.520281533 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124835268 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118887718 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.1197881 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147793521 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112827341 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125177236 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086074454 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.796661659 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149260586 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116669733 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.429312206 seconds)
done (took 5.163320103 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174952946 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082568642 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083901068 seconds)
  done (took 1.306199137 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065145311 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122831013 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066349358 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067491677 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067365792 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067012145 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066645542 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066369385 seconds)
  done (took 1.664963907 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072725681 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069055339 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065800476 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068188313 seconds)
  done (took 1.414301383 seconds)
done (took 5.776463156 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.785605712 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.206909323 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187077748 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.412875153 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131374871 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159317584 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.649421835 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.32160995 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187358186 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08023657 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109065015 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.327822132 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111140044 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635327617 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077790425 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090792246 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137311217 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.40617767 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066997486 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081739566 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088492524 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127893714 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088643669 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074023181 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14431298 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067900276 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.135999151 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080279076 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066210272 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.212581702 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17429 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651355998 seconds)
  done (took 10.255799535 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096383457 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096404846 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068746873 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12287388 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099880851 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072013316 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073120153 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068869958 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088099678 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127608876 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089525111 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101759144 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067214255 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069784951 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086962465 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20634365 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083370766 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085124446 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073055625 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077779884 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107897112 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079239135 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077142643 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076631807 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129778319 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180189894 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098942555 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097348679 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068763461 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081496167 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117229279 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128065002 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067605391 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067919476 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125203289 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095952616 seconds)
  done (took 4.629734782 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.00347664 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.087316663 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.147157 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092851779 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13824344 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066545432 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112582932 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067489918 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083335638 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.213863482 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.392955685 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.59490595 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111207883 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103871441 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067398475 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067842175 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.090785439 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066458389 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.495265068 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095674355 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106419403 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082004025 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07029571 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068282783 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.379195513 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067583635 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065210602 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068152481 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057509527 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124911722 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06807881 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.9469442 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126607723 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066524957 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101098601 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169207197 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091997978 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.278372628 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068651907 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065217892 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153154121 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069601053 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065778358 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083724325 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104356815 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113711881 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06575122 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066773986 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164712831 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064535129 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080326402 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.637392579 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155681096 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078469041 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066392033 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.259100765 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087358422 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069646162 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064919141 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.184117404 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133413506 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070079844 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068391952 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070595022 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07170668 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.394584921 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066175711 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.858857695 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070463583 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078782765 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072066616 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069317211 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073041022 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072160515 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087863188 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066239653 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06414539 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074901304 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065560214 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066027553 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066776499 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083490688 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.380171137 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066861011 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068608505 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064777254 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089594358 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096797131 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069004377 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067424499 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102618752 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069774371 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065965623 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107543138 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067612496 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083931307 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069476282 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113595742 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068614722 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065274312 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.193475968 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067908397 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.0996944 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070728085 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098418203 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084277358 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070242262 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.424960527 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065346403 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064995554 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068221414 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065789432 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068270228 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067183155 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079105151 seconds)
  done (took 21.177681415 seconds)
done (took 38.204949069 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.234668531 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078145229 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073650942 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076995454 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073748179 seconds)
  done (took 1.772878198 seconds)
done (took 2.988819296 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123067491 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101379308 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064683392 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097372732 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063995991 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101603019 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101782229 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081754538 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100437356 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064553068 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098297986 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064308752 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064608308 seconds)
  done (took 2.363393349 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083199669 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08435032 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070608433 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083514735 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063517316 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082434035 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08181882 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088898331 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082659796 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074228025 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06450195 seconds)
  done (took 2.068321565 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083565711 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08478362 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071379738 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083411758 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065898444 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083524241 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084748232 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089178331 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083781702 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07624759 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064712656 seconds)
  done (took 2.075385919 seconds)
done (took 7.710230154 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077335706 seconds)
  done (took 1.273776413 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.592871236 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.112105372 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081800869 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111119166 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.18974781 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118217443 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.270644857 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087161014 seconds)
  done (took 8.940972239 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090118099 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086091724 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074468113 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073216995 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073680544 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071366368 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072445487 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071037043 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071903182 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071159432 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068063805 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068830617 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068818356 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068955507 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068034051 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069658744 seconds)
  done (took 2.434692539 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09183904 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093977628 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074158257 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074896837 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072084943 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071422539 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.0747384 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073393811 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070756149 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071852791 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075028658 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073103703 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071468132 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064610608 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073529801 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075001158 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070519294 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073144346 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074063831 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074455845 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074587045 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064397578 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071433836 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073658093 seconds)
  done (took 3.080027537 seconds)
done (took 16.934616636 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113870027 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071377597 seconds)
  done (took 1.386563508 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080766409 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083267808 seconds)
  done (took 1.373144396 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082312629 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065221422 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090273522 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077480297 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065992113 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065668828 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087481439 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065745848 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066368393 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065640235 seconds)
  done (took 1.941031038 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067803937 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077193606 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07037902 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081449845 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073399543 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063747981 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071328419 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067623544 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076874199 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062445008 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071360069 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081953101 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071160148 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083819222 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071307205 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067966724 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070055399 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068504844 seconds)
  done (took 2.509774419 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06597223 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066392183 seconds)
  done (took 1.346593946 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066987011 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063601816 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067428294 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065916057 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063463907 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062333941 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062921061 seconds)
  done (took 1.664152949 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.39162422 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.115672143 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.32012558 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072793911 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084570376 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25813773 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065550929 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070805458 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07078223 seconds)
  done (took 2.705957933 seconds)
done (took 14.142916808 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080010015 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086755198 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095253395 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.375051024 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091221641 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066098226 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11365144 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192315734 seconds)
done (took 2.323214838 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211690405 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.635534742 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402633786 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20412628 seconds)
  done (took 2.460164574 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34261666 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088743142 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060506027 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069243292 seconds)
  done (took 1.784904722 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066260767 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06944977 seconds)
  done (took 1.356972766 seconds)
done (took 7.037231273 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066360386 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065895938 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063951408 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066663607 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063552264 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063313464 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066067739 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084605711 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066647501 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.067921687 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.070838816 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067344411 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064465029 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065989293 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068324336 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065799892 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068144007 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065550073 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067825509 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065760453 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065721097 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068170746 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065831496 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065726422 seconds)
  done (took 2.86586368 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084461642 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066907665 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071206753 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071039957 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069544887 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07099564 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07141952 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065694688 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071282183 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068424082 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068860205 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069058052 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068870267 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069874756 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068830377 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071444044 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072832361 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066442563 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070236731 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071615281 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072549722 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066026481 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069157882 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072055911 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071900829 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07339899 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069834542 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066903272 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070975168 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069280028 seconds)
  done (took 3.341857643 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069679813 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063336295 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064324833 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070390556 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06352085 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065334684 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063294463 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064080919 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064298475 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064143031 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06602772 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063917034 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063901843 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064199732 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064233818 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067740035 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079177329 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063749173 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063437222 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063984435 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066766092 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063937777 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063600911 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063615699 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063453024 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063031315 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064116006 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063788046 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064862388 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063400357 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06730792 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068053919 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063357481 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070668861 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067684494 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063652428 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067645238 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06331861 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06418274 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063178073 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063096149 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063744823 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063511667 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070740374 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063744608 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06582632 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064190521 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065028374 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.174989739 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065961339 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062764075 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06368488 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065655374 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065291767 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067325483 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063247396 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063927396 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063095013 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064277511 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063165478 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062682602 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062733567 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065921375 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063949672 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078165377 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070500159 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06335344 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064777278 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064012829 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.0661401 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064533778 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077163023 seconds)
  done (took 6.04793617 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090579389 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088292471 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065229594 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065239775 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061677109 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064125181 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069707596 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064135027 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065396502 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081734682 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063859817 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065312518 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065860604 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067488405 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064332085 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065323281 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072274974 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061792545 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06383911 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067584423 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064060825 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06960592 seconds)
  done (took 2.747734165 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154845389 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07057166 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105885163 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075233176 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070211998 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075464513 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069856496 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069637234 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070487299 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068013988 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068993703 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071744721 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071326279 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068535695 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069304602 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069297417 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072028575 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069134696 seconds)
  done (took 2.624012103 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076824014 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065825507 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086804846 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066126322 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065886425 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068731887 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070520719 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074902073 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069201967 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067589952 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076499214 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070521348 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070106394 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06748082 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070260558 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067803281 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06967466 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067842251 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075702889 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072318367 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072173314 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07557452 seconds)
  done (took 2.805652137 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079942247 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069128943 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08099103 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068311663 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061562426 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064195519 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070005026 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066085457 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070326191 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067790572 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065421948 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063772899 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068409326 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065380229 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068557937 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06704934 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06946687 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067392435 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068820175 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063075029 seconds)
  done (took 2.604464564 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087231781 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068378759 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067878948 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075462666 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067609659 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06754582 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07476741 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067537565 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067539898 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088582283 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067457261 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067308075 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074908615 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072659701 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067453529 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075119989 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074934424 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074573788 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067333232 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067429935 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087903314 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067736292 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074370769 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067200767 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067653715 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067696612 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067842302 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072022917 seconds)
  done (took 3.256626999 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066184537 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065872989 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063475391 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063438986 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063001943 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064081918 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063645386 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063125678 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066592108 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064008085 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066133569 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06556071 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065722741 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066015391 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06599322 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06635427 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065778375 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064416285 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063449742 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064281719 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066093882 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066647627 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06664117 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06391157 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063891389 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065596243 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063632596 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06384844 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067077404 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065575215 seconds)
  done (took 3.191417328 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07638704 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073498137 seconds)
  done (took 1.392863073 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062672823 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080057371 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06312191 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070657648 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069404362 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066577835 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073387803 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069091267 seconds)
  done (took 1.79326898 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081899627 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077359778 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068225346 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080023886 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078004692 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08580492 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13858794 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069411562 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075303241 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066285747 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082590726 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067748041 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07512109 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06856943 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074549819 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074625524 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066343035 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074423735 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070430607 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066887968 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069761563 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077231098 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071039134 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063356194 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06974784 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091235045 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079772857 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067327341 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070062072 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074147557 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073098407 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062036192 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067661071 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066622703 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064582261 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078380163 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083762175 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070806769 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077027142 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069098596 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07791919 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062731607 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072741978 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07415586 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078284479 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066486634 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066592092 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060882031 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063989953 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068669754 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061518898 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06842278 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060621643 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073883242 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07053769 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077191504 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06471375 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068784947 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069951457 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06946468 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072852924 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068847682 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069331079 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06678175 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07624284 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071073615 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075426595 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061964057 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062406951 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065684193 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078206661 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091524344 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074957436 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068968302 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069466945 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065429972 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070431512 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06693315 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071721957 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072721045 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066587921 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071525964 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074013164 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066595661 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068820356 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074521353 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064017705 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068950057 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064779984 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084948306 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067093186 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066031961 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065697895 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079075627 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071838952 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068062494 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066602425 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075744571 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061922115 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068230233 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06924212 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069151616 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078644007 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072822026 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072647792 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07676024 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075463392 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067841234 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069915346 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064277164 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067934857 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066353718 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074214108 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061388031 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068938835 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06725731 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067780914 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075634589 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064304793 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065919644 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073341961 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070700787 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.188928892 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063599578 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070221419 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067059837 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069733184 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075457491 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065700917 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062189511 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062119617 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070471554 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066137779 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070731655 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071316795 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06937974 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06093441 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064454493 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071469634 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076166927 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066948034 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06751308 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073388393 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067455432 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066678157 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07535117 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072267035 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068188232 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07446001 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070148904 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064478555 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071677119 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071445881 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066919745 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072298114 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071695733 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071086629 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068424653 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066656895 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075863833 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069524197 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068372259 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069080195 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067719567 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079022848 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070535132 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063390361 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065462637 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077245425 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06664705 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067763299 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067705641 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070465115 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069676391 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067008364 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068717503 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070605316 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078779503 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072454457 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069125669 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073366766 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078056584 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066378426 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068473792 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066550029 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067443592 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066824803 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075302762 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07194337 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070982981 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069116407 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063211474 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071595292 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073766718 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06551088 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063584226 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064928869 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071256247 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074101734 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072629853 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068564612 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066304479 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069026355 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071018218 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070534385 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066686161 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066719292 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074114508 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065513246 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07466343 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068249221 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07876732 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071546694 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06277717 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070679446 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066445529 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074509629 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063406869 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065681706 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067278205 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06890874 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067464775 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071358778 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062525304 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076040272 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075762625 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069110479 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068115962 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067779541 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075244177 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069647663 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071106985 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069037056 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071122574 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075947579 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064747565 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068895729 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075719554 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064523769 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05905792 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070215151 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063639225 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063476739 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064350794 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063251692 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069024766 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074647692 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073732843 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.190229317 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069577971 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065386321 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066347248 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062131634 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070929928 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070140048 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067669659 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073356165 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067057842 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06696065 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070528134 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066124834 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067682714 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068007696 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069699073 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067547334 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06856824 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065833382 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.0694502 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066003347 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064232448 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068790821 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066575854 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067549454 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073097206 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066041952 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067107819 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068944274 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066276733 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067780687 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067408668 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066129199 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069990545 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066698428 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066721857 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06851035 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061161752 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074434279 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066221822 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07401444 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066969083 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062507284 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072784757 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068774508 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072255661 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067595061 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067034151 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067260446 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06570986 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069695816 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073656267 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065169924 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076562644 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074469224 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066668432 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069051885 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066940499 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068394583 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065250639 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067898528 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066864779 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066853117 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065802818 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071384441 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06881938 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067890329 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07020134 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068200902 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068450095 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069635174 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062884579 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06697922 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068585924 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067895495 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078044556 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068735506 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.0683857 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06748243 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069164484 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067268886 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064628424 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076003034 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077222805 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068590155 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07352827 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065825629 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067730351 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078096268 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060331785 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066070238 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065525006 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066065769 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076319091 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069170716 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077952443 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068763593 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067703091 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065096012 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06892248 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066825309 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062438095 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065640233 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071639177 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067160983 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067502256 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068177862 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070993339 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068770552 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078059723 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067846195 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068727763 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068370914 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064966845 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066992805 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066570228 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070244122 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068001784 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064946436 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064884047 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066923623 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068504994 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068383959 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06928384 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067777862 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071446448 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064620999 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068138305 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067542833 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059794884 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.200120862 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067085112 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066455503 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065842856 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069976957 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069690709 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0673037 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075277131 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066165784 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067070622 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066144166 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064904521 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065486385 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066087189 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066847444 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066374085 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067824181 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074564108 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064206999 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070188183 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068148166 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06735414 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073218903 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067799837 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070086872 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073093304 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06846446 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070284358 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076677644 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072552842 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072552722 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070237068 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070399451 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072014924 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065971093 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072734868 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067634688 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067965983 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068589424 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064964864 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066934357 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065985998 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065747424 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073212471 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067525344 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065781941 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066419948 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064759728 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06802911 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06915487 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074153032 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069010586 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069745058 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062085257 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063590596 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06742097 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064766423 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068769017 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068812889 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073414711 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068884389 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067483367 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065928859 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075442889 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071713381 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070479821 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064433276 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069938527 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067297824 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06853262 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068058482 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067007659 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067267567 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069742909 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06801515 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066577649 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072964736 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070214952 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066886468 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067856055 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066935952 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067735156 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063240163 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068349239 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070261651 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073543479 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070621398 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068605171 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078983387 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065990576 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068447255 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071198906 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067556014 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072704301 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06296106 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070369472 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069207819 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068693998 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062921201 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067663833 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066118342 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070435147 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067496709 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063340809 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079031349 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077724791 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071542829 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067707458 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067088284 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063388624 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063194066 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068342012 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069105215 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069954343 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07874176 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066997446 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067186643 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062755806 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067826576 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070330743 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070936377 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064719879 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062714057 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066455518 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069765259 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072962112 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066414925 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067317449 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070619139 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069676336 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.198095858 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071375112 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063890993 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070382341 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079698739 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066952633 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067176925 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073368101 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074337532 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067046048 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061826115 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066635065 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070234669 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067538619 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066806448 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068677949 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081885612 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069706417 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066517173 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065494193 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069408192 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066898423 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074615527 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067347521 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067655597 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073531737 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070740377 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076210117 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072330803 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076004493 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071610014 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072557291 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068223387 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069424451 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066764695 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067814139 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070125299 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069038234 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074162648 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077106234 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068303087 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080665611 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078131953 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070829833 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065296885 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068675411 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068443101 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061939591 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068214045 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064418679 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065411583 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064459782 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065136572 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067592281 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071173032 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06740457 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069847555 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06792031 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060794421 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069468318 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069029785 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067683164 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062969266 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066787717 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067230689 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070895506 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070081051 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064092511 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067644824 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067836229 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067275082 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060894768 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073093895 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065881726 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067617533 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065886821 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06629309 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066954945 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069462331 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070507994 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067086752 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068574285 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069527804 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067980642 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063280084 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063027465 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.0722324 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063996167 seconds)
  done (took 43.097156093 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100186889 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062330522 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061305991 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061767808 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072432453 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062867405 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061702405 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062197232 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062423623 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064923057 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061409714 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061202626 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069834996 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077022629 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072609695 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065811557 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061225105 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062391047 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061055571 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062309312 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069647923 seconds)
  done (took 2.729671144 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073083969 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076675913 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074406504 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082137628 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070331437 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069646694 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074549845 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069767204 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077696066 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07203434 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077449516 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070325361 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07198657 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072557694 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071698357 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070509803 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078162954 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069970596 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070085342 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07474986 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070036826 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074928711 seconds)
  done (took 2.928440211 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066989788 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065426736 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067778453 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06042486 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.0655164 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060541618 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068495736 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063676873 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069389101 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065351611 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065408013 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065063174 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067629908 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060556471 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066914312 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063023833 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106824174 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068674011 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06596195 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066623658 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060968618 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067630174 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061176122 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061087145 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064750998 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06942718 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066553413 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064584609 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065476893 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064719378 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06611527 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063360226 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067478921 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065965632 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064504545 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065114581 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06480124 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065589713 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06084872 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063958301 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065887358 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.0614894 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067537328 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068554162 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065624313 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065476973 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068976573 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067423984 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061559196 seconds)
  done (took 4.554778515 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078197007 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108883865 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067042234 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090365918 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078694928 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07217313 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069360985 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090919844 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064690966 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065800123 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083972416 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080541715 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067049058 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071680026 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073874429 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066608477 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06792585 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066057318 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070454599 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066640354 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070696096 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074046951 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081562016 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079685638 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071140571 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066360724 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.0661266 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07096875 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079601652 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070836922 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071319655 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071893671 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081863189 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072521787 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066333053 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068716877 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08281891 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066747921 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069167388 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065388437 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068938988 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071339841 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072711798 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081672321 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067404493 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072874795 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066916151 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064207628 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079264965 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069544133 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074833334 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080767704 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07137135 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067188365 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07206466 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082206049 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067374916 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065186596 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070026251 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078745346 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065567828 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070896601 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079607501 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067428725 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072370853 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078096794 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069783462 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068617862 seconds)
  done (took 6.422533019 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075237948 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093565522 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083760952 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082671075 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075460764 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074997449 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075250968 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075382157 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074866761 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079678788 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075365479 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115469987 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071681838 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077128967 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075214127 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07520684 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075399506 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075386693 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074843416 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074759076 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076855163 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084290625 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076580724 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083260831 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07942446 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071506002 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076778342 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077145979 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085000707 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076197809 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089348216 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077288153 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076964206 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084872166 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081113695 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076547033 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067501303 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076711531 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077065496 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07629284 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070625589 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08240901 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074547763 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070280081 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074776801 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075217365 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083245625 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079942933 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078743769 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081571089 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07691182 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084273257 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077127401 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077263466 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084758587 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08758121 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084974615 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084164457 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076575485 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083161854 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083750405 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087620358 seconds)
  done (took 6.250722299 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08289559 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073624553 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081590925 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061038437 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064065907 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071150826 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06407111 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064123874 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07339509 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073357523 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076381414 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072685108 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074817043 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076291684 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071362474 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074058484 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071402617 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07093165 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073354944 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071976713 seconds)
  done (took 2.783156821 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073789083 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08240174 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066412084 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07135579 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068488057 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070904356 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068250254 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068664809 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066468438 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068710809 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075578225 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075493719 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066772564 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071573581 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075220497 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070796209 seconds)
  done (took 2.472219865 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084022972 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072871873 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07924175 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066523108 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066695895 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061843064 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065363437 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061215238 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061564913 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07757109 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06663239 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077258193 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065713925 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065114083 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064222661 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072655902 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063776537 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064843525 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067432957 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079859211 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070911566 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065706078 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070855398 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068063136 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069999841 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072134015 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066552931 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067290681 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064474854 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067473286 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07040203 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070959825 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064493849 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065514962 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065546416 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065082714 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066910323 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068177806 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072117849 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067038299 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065351291 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069181278 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066788314 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067959509 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063216059 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067165962 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063347458 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06918617 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065231669 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069430996 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067311395 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069106723 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067657096 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073160546 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070054561 seconds)
  done (took 5.091126398 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078633828 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070235747 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060926204 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063636372 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068478374 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066864033 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068938379 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066278277 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067110747 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063833229 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067564123 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068230881 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066253308 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068854909 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06719081 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069011319 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061855428 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068345268 seconds)
  done (took 2.556963177 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070852582 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06561559 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072289082 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065711431 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065356443 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068042683 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061929402 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064038015 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064068834 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065132006 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065542927 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068070773 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064476557 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067681901 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065156334 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065382659 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067694999 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063761776 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065281671 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061547389 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068087084 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064204611 seconds)
  done (took 2.792511634 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093576597 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083021331 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.13877001 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079577394 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084420399 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071241581 seconds)
  done (took 1.894046646 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090588018 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099606259 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066532362 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069633367 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07518494 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069538041 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069638469 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069620775 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078551866 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075773821 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069908741 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078212997 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078209139 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077668909 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075405348 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075310863 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069750663 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069851005 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066058072 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082867676 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069856337 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077857882 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069693485 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069470161 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069830036 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077207045 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077850318 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076017124 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069240049 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077912325 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075309516 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069912305 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078514025 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075735532 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068970004 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077740459 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070029819 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082994621 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07601373 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077233685 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068900327 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075569313 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078281921 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075281984 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078150475 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07055668 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074890995 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069816133 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070313765 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084940656 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075257667 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077922048 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077325535 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078387817 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077648002 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08480266 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075406804 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077199687 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075369122 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075598575 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076882971 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075118721 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076772038 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075835098 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075099744 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076811098 seconds)
  done (took 6.319805431 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10316084 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067292459 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070609662 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076169326 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077399162 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07034502 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070694886 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070327155 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069755462 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066879298 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107683471 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070438308 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077376883 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07748575 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070468563 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070045516 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070334157 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076983302 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066680559 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085370329 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069801522 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077028723 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077205136 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076745847 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075823514 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075421872 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070042738 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070109064 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069975906 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070154441 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074237708 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069838275 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07759941 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06723721 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077397423 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069727455 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069681791 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074025163 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069781008 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075212422 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077293518 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082767738 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069435504 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069380678 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075526464 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069673958 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070011846 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066388291 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069720608 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06631074 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075093328 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074926962 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075253762 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076734651 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070103403 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069512547 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069409206 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070218003 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070360899 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075123027 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077361655 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069973822 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085274992 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069781192 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070042942 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077333496 seconds)
  done (took 6.22798849 seconds)
done (took 130.010817638 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187407661 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164610299 seconds)
  done (took 1.692484826 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068497004 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098803797 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077143637 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128213519 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066594861 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10067926 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099032172 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077784088 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066044652 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066131673 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066141095 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068200738 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131657576 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.0664827 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065961232 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068968581 seconds)
  done (took 2.669749586 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098867413 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162261271 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102660964 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065274725 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099937118 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072687602 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065171122 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075047722 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071058158 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065433516 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07311277 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071080921 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064970872 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071015715 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071032058 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072810034 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065178333 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072560024 seconds)
  done (took 2.796046545 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098757181 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091458786 seconds)
  done (took 1.548681942 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155907128 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106365423 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.14669448 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351524654 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16282736 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148168215 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.144290155 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143795948 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117976663 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138420661 seconds)
  done (took 2.969957107 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099133936 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153386514 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.268923794 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116562509 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073026103 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093176828 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118731861 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078249924 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079999667 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079587308 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080170563 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076145401 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099204641 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073418131 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074208525 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076086672 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102729889 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072337726 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075172077 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075555323 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10017745 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06572398 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07315469 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072219401 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076546242 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077147522 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065800782 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065522563 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076020031 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073794425 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075734504 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091934611 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076915734 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104859245 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071175282 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106081768 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076936273 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072790769 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074916636 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074559547 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077686225 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077289046 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072975792 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077214634 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066419732 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078193779 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067859678 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067264369 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078874766 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06743844 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079148772 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078036827 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107128311 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067769685 seconds)
  done (took 5.980647259 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102553721 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105691497 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071330864 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112925882 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103619733 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072256574 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102120492 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09557843 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103631338 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06976107 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068484596 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070194753 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082982894 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085473674 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114246057 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106422496 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07408312 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071415907 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107864334 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108882276 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069740076 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099441058 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093857125 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106916653 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069921308 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073179604 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070652991 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072135134 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079203056 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081005066 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071060052 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080066576 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085078051 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077722668 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067221552 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067974006 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068165359 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079590645 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.0791829 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078629229 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077187504 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067608514 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068031717 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069359697 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0699233 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067492284 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078709124 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079939958 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078493234 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06992944 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070248898 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068042245 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069705283 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07985033 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078222694 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080710437 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079517263 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068150731 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068947901 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072809465 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080462094 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07911565 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079369191 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069653874 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078536515 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068364668 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082172467 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08513905 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070828134 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071985611 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070567237 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071674627 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072123938 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080605064 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080333489 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072389571 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071780641 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07078654 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.0823567 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080095849 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070125724 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079081238 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069133751 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070175778 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071495207 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071822752 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080221882 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082040983 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072394684 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070484685 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071591875 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070755261 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068867405 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079314709 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081346072 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079501336 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077104159 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068741461 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077988393 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077414403 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069383314 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077560483 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067219564 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068647918 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068152611 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076544123 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074981201 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076930878 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.198201695 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068723136 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078188652 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080955499 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069490792 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079389059 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08067797 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07854087 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.0690796 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081975011 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068882373 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080112968 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070739107 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080327069 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069822314 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079465225 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068583291 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069092779 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070264684 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078745623 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073489497 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069314663 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070110493 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070282649 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079531777 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081852967 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071584181 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078462819 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078631959 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070941859 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078974192 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070529232 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081807641 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073392865 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072139325 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069414063 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084955312 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071343659 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070645859 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071329303 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083382897 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070279237 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083355196 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081100829 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071139608 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086247839 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.0827433 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078913864 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080558808 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070185431 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068639615 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068683452 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071735748 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080979301 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082147811 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072443505 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070908903 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080458357 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082997139 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070131 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081384679 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080320291 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079705523 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069246421 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070045 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079841782 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080240126 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078240269 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077676819 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079540729 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071444706 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08001025 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080961903 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070389954 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086833553 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071045109 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084947177 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080839098 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078097217 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079694237 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081128884 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081986443 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081441544 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082228991 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068116789 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069600361 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.090280484 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070860548 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072234321 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080479259 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072341836 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071342279 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.087459813 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068958116 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079678447 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068259587 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078530788 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067049962 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06924654 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081650796 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067542154 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068836853 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077855685 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068340948 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075521494 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078583004 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076191642 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066760636 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06856895 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209687404 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080259328 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068691362 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069406219 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073167299 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081320878 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077426298 seconds)
  done (took 18.867369754 seconds)
done (took 37.889813854 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216778821 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158154017 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183742037 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119469636 seconds)
  done (took 2.13950046 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118336041 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103131712 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093397912 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065680282 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099284088 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065543197 seconds)
  done (took 1.941319719 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314321756 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212384722 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18925714 seconds)
  done (took 2.109284247 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207052989 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193257719 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.428040533 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264253526 seconds)
  done (took 2.598632152 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.151056172 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093253226 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069303751 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087186307 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138514755 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162513907 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101030429 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.1257179 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079124791 seconds)
  done (took 2.453793967 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.15008388 seconds)
done (took 12.794148285 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.277450391 seconds)
    (2/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107042545 seconds)
    (3/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.198797414 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.110123108 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.216847826 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.170343623 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.091761411 seconds)
    (8/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.199828534 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.130609304 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.199462365 seconds)
    (11/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.0724682 seconds)
    (12/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06824581 seconds)
    (13/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.223636999 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.108728349 seconds)
    (15/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.182341344 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08631684 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095648287 seconds)
    (18/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07163318 seconds)
    (19/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.105124082 seconds)
    (20/309) benchmarking ("sort", Int8, false)...
    done (took 0.144265608 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.197800459 seconds)
    (22/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.083065192 seconds)
    (23/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079711417 seconds)
    (24/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079529907 seconds)
    (25/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074257766 seconds)
    (26/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08027569 seconds)
    (27/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.153852675 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144045251 seconds)
    (29/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.181661542 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085104213 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079660203 seconds)
    (32/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.200964331 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.104222574 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.153624476 seconds)
    (35/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.195788712 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091667785 seconds)
    (37/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.078882437 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.141199836 seconds)
    (39/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.199267331 seconds)
    (40/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.167367024 seconds)
    (41/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.154326309 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.142577559 seconds)
    (43/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06823651 seconds)
    (44/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.203464231 seconds)
    (45/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.202971409 seconds)
    (46/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.17592965 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.220044947 seconds)
    (48/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.064557258 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175978022 seconds)
    (50/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073912502 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12942291 seconds)
    (52/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.15721252 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.092837906 seconds)
    (54/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088425946 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.109033662 seconds)
    (56/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079930107 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092128484 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074334926 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.196831667 seconds)
    (60/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071747682 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075955989 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083455977 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074996463 seconds)
    (64/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.192140641 seconds)
    (65/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053424294 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095118742 seconds)
    (67/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076088678 seconds)
    (68/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079557241 seconds)
    (69/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.155911468 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06921408 seconds)
    (71/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.164313835 seconds)
    (72/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.113469179 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.097285343 seconds)
    (74/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.159887626 seconds)
    (75/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072501105 seconds)
    (76/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.160855382 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.181543461 seconds)
    (78/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072411666 seconds)
    (79/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07444033 seconds)
    (80/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051555671 seconds)
    (81/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067778437 seconds)
    (82/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.297196264 seconds)
    (83/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.22842853 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095222418 seconds)
    (85/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.112213286 seconds)
    (86/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.110288857 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090758597 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.196794032 seconds)
    (89/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.05207656 seconds)
    (90/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.19499126 seconds)
    (91/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072665743 seconds)
    (92/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.100884948 seconds)
    (93/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082632985 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.066683819 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.0910078 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091280401 seconds)
    (97/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.073980678 seconds)
    (98/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053934697 seconds)
    (99/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051011374 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077472681 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066600157 seconds)
    (102/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111701498 seconds)
    (103/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110940743 seconds)
    (104/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106963643 seconds)
    (105/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187523887 seconds)
    (106/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.106388687 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089851973 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072224404 seconds)
    (109/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074080895 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090011227 seconds)
    (111/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052243616 seconds)
    (112/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076072632 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065385109 seconds)
    (114/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074052609 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089921098 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.154068661 seconds)
    (117/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074621913 seconds)
    (118/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075100116 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089137505 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065837674 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123680088 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.085577399 seconds)
    (123/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119880549 seconds)
    (124/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.154675406 seconds)
    (125/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100070673 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14341651 seconds)
    (127/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.162388983 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181654981 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051982427 seconds)
    (130/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050811159 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06682399 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067670083 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.136193259 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050153903 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073224927 seconds)
    (136/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177539949 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120605256 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.085317528 seconds)
    (139/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052061265 seconds)
    (140/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088823934 seconds)
    (141/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095329967 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071412401 seconds)
    (143/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.141366968 seconds)
    (144/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06488623 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071837785 seconds)
    (146/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051293455 seconds)
    (147/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05267962 seconds)
    (148/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063453319 seconds)
    (149/309) benchmarking ("sort", Float32, false)...
    done (took 0.131743889 seconds)
    (150/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062806809 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102032439 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072097853 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096071008 seconds)
    (154/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.154491259 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052541007 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051706784 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06525213 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.291503701 seconds)
    (159/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072947324 seconds)
    (160/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050754306 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140694588 seconds)
    (162/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069888523 seconds)
    (163/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051686789 seconds)
    (164/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051595339 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073651484 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184480947 seconds)
    (167/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07578415 seconds)
    (168/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052206391 seconds)
    (169/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051816912 seconds)
    (170/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.1949506 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.07746136 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05215118 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065855495 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.162526229 seconds)
    (175/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109385952 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051133021 seconds)
    (177/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052537233 seconds)
    (178/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050501044 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064969363 seconds)
    (180/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178261468 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092959599 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136764409 seconds)
    (183/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072882157 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099172845 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064818358 seconds)
    (186/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050611202 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09200528 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072511763 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065076639 seconds)
    (190/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088086408 seconds)
    (191/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077414865 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065231603 seconds)
    (193/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05199696 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066709119 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.227795088 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.099369366 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089309863 seconds)
    (198/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052520574 seconds)
    (199/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066736626 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.077497796 seconds)
    (201/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064399883 seconds)
    (202/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051188967 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066295275 seconds)
    (204/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051434332 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073057982 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065793825 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092236582 seconds)
    (208/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067383913 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143584203 seconds)
    (210/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072647995 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091018237 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064044404 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052260428 seconds)
    (214/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07654352 seconds)
    (215/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.0701624 seconds)
    (216/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.102486611 seconds)
    (217/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07429324 seconds)
    (218/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066596428 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075133711 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073357569 seconds)
    (221/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072696885 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067381771 seconds)
    (223/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051864004 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071714274 seconds)
    (225/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066482372 seconds)
    (226/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051935685 seconds)
    (227/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070036883 seconds)
    (228/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075892511 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113666198 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071954632 seconds)
    (231/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076237067 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089545832 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148040631 seconds)
    (234/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051745753 seconds)
    (235/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065527757 seconds)
    (236/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051060183 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064595361 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090633189 seconds)
    (239/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073208514 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051289133 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052481573 seconds)
    (242/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050621119 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140196136 seconds)
    (244/309) benchmarking ("sort", Float64, false)...
    done (took 0.131019534 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053290326 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067002074 seconds)
    (247/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062893768 seconds)
    (248/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074013743 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065818188 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071845877 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079071254 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067155357 seconds)
    (253/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087365395 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052724429 seconds)
    (255/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051679024 seconds)
    (256/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071402378 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065417535 seconds)
    (258/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052317326 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066539074 seconds)
    (260/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078402877 seconds)
    (261/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062306813 seconds)
    (262/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082161272 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072347847 seconds)
    (264/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079051833 seconds)
    (265/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063053609 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065077442 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073925367 seconds)
    (268/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069702379 seconds)
    (269/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051056154 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051169791 seconds)
    (271/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050757568 seconds)
    (272/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088430226 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051401238 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124148583 seconds)
    (275/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067371791 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06693478 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064994319 seconds)
    (278/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050430911 seconds)
    (279/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053244284 seconds)
    (280/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051838112 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050694975 seconds)
    (282/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072334842 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065542876 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066318442 seconds)
    (285/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050741953 seconds)
    (286/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060747549 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073520689 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06411959 seconds)
    (289/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073509399 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063872934 seconds)
    (291/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069336614 seconds)
    (292/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088317935 seconds)
    (293/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.06812488 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065612364 seconds)
    (295/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088310731 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072743755 seconds)
    (297/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063223085 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06480496 seconds)
    (299/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076095837 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071338726 seconds)
    (301/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066297348 seconds)
    (302/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066773226 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05133102 seconds)
    (304/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074021842 seconds)
    (305/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071988144 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071051755 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065220457 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065506957 seconds)
    (309/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05216618 seconds)
  done (took 31.205680218 seconds)
done (took 32.607052358 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088133633 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092656736 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075212144 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095670145 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082589835 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078225507 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075565567 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081548257 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083087569 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084983867 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081729671 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057539998 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077468222 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077227147 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077862409 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095435156 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081430307 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07586947 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076185986 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067086274 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075366306 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068102785 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06941257 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055968771 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08069341 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074882383 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074984484 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076524528 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068262082 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068261451 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071532101 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076259294 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067953707 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081054292 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07484852 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075349266 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077386344 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079416279 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06957645 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068149576 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076631384 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068025867 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075860575 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076477046 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074889678 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074543122 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075744643 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080795403 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095100959 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071551725 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077242757 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078883401 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078669959 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075308317 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071951802 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076289053 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073827217 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095548222 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076559965 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071236489 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077283339 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077199344 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07426984 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076002401 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07542097 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078138918 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077894222 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074205642 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07756136 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074609195 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067266917 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075239975 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071050795 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067592161 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078656746 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079769381 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066353814 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073871633 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075703671 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074191295 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067054865 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070132079 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069324079 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07444774 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069611212 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056180233 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071496479 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074211422 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066670396 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075806835 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075145393 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075146866 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06946292 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077900086 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066771926 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072822253 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067784531 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067546628 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068508624 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071196634 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067298564 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070078912 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077184368 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06756891 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071860571 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079168163 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065407479 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072372699 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06464442 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064632732 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079718182 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074679637 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065420298 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067743174 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064552164 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073307253 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06473624 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065203655 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065269072 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065063403 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071711834 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065740799 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066978693 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072950897 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077997759 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064752942 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068302251 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066674682 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064761509 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070530342 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064513331 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064240887 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066282475 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060881863 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066210221 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064713237 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071996714 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06777608 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.206888095 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068018192 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074869491 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070988688 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072422752 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071401488 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064741725 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059376762 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06829492 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067854313 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067381359 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065562499 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068155622 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06503007 seconds)
done (took 12.721350419 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066491849 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139791336 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097939723 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095327312 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08624292 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066572631 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076064407 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101140028 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068192477 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101733157 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087646472 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086399747 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114579878 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064580844 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065699532 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070221408 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066896081 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081592245 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10164038 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086962725 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11549474 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06539987 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092393215 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090006967 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088690781 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103741663 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069229316 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070339053 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071786321 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094492258 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08985255 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072399301 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06914729 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102454715 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.096254453 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085003323 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067187788 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085217785 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067833044 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066440165 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069730857 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101416887 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081387352 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081543744 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072732844 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07193332 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069932531 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086847551 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092009261 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079230129 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086323933 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101799072 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068533294 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065712955 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065678872 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08825175 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066362097 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071657243 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068498363 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070970131 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068295594 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071575028 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085126899 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082204367 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070154975 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079703775 seconds)
  done (took 6.86449431 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083596895 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090956357 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083509884 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084738895 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065695966 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066149086 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066188046 seconds)
  done (took 2.031738593 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067271333 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087769233 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08931175 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089784661 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081304594 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087580702 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075364017 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066991341 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087524096 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067182059 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087327362 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100810538 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069390405 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073940178 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090840869 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066211558 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090632852 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066273566 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06992152 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090750589 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068306107 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095942611 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069854394 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06689434 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080864443 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066947752 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113343706 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070869875 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068116155 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069354674 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063934139 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106641207 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079707118 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073918983 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066031027 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080784862 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.0807444 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064796996 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084026705 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076471002 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080731773 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066615871 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067342096 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064084283 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070532027 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077044275 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067327798 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066875609 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069125933 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086740414 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067194598 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080498696 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069230514 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07220627 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068322858 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072985555 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076826877 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067164177 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086673739 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067844849 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083183282 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082850156 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080496764 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082276388 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068220299 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080036026 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08028488 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068772507 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068391424 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06953496 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083735525 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064889664 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067477232 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076909371 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06825103 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089477508 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089669419 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068187094 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080093092 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066999276 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066767118 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066797434 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089974488 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071346716 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066757696 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070529964 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069694248 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064705812 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066094396 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070575127 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064493754 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068662869 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070500522 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069320344 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069300757 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083700236 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069195862 seconds)
  done (took 8.798143646 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069520745 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067500142 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069789029 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067968771 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068069301 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067843283 seconds)
  done (took 1.922099823 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093180902 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069160624 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080733324 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072653674 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104733312 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086738449 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086965089 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077784381 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083729978 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078228884 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086520948 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088146133 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093143545 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07204013 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086220769 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071700769 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087517592 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074837186 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077971036 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072486771 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086296777 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072021413 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072583452 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081756736 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075918289 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071899741 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067473085 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07839615 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077990257 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078397263 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071719428 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076333192 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07039584 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07790654 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086547035 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070396701 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071257399 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076839735 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07191017 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075848932 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087722442 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072042549 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074074597 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077171001 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077898109 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070244591 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076718721 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074513853 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085830066 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076557176 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077154802 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070975939 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075314063 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07628085 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070072448 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077790216 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07723751 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08616833 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07172259 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070244998 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068451901 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075529967 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077698043 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075687689 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078343122 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076500464 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070130282 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072136305 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072981013 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07142146 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077107508 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068506354 seconds)
  done (took 7.05696939 seconds)
done (took 28.150541238 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.535046838 seconds)
  done (took 2.01473125 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.614761932 seconds)
  done (took 2.117798311 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.552316811 seconds)
  done (took 8.052091818 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.399939035 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.522230653 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.719199376 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130830264 seconds)
  done (took 3.312500801 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.707367045 seconds)
  done (took 2.218405441 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.213189071 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201975637 seconds)
  done (took 1.939548269 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.373435803 seconds)
  done (took 1.875213798 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.127734993 seconds)
  done (took 2.63371644 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257099179 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174906204 seconds)
  done (took 1.941276744 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.476918886 seconds)
  done (took 1.985217926 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.831465174 seconds)
  done (took 6.342923643 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213381243 seconds)
  done (took 1.766696983 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233401548 seconds)
  done (took 1.741466345 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.710171224 seconds)
  done (took 3.220305918 seconds)
done (took 42.669492683 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080955804 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081199449 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081050731 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078516433 seconds)
  done (took 1.818351258 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077540986 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072847198 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076179413 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073404591 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077670193 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072607674 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074462244 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076278907 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072912921 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073885059 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073115245 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072858925 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075652976 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074600665 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072018923 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075398538 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076785516 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073027499 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075895112 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072792431 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070450039 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075230334 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075337667 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072335719 seconds)
  done (took 3.29592365 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077770495 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073207533 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075207378 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07219116 seconds)
  done (took 1.818814406 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078600025 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094793104 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090024085 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078795301 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092599414 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087025545 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070101071 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069172835 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071760112 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077924126 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068402789 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096406535 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088597819 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078024293 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08027254 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066352158 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068476943 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087790902 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078479653 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078676409 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070580369 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078086156 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068155651 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088455412 seconds)
  done (took 3.424536525 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086089996 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105736852 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081897866 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090046388 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091844468 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065233104 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.08881756 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092819496 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12755684 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065522557 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071505734 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065667514 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073293919 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065621986 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081073485 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108540814 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111741958 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068775502 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097421022 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065852049 seconds)
  done (took 3.231751315 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073697947 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07050657 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066904263 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069100103 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077916748 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073333606 seconds)
  done (took 1.960116935 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069696551 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068284243 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067496891 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067223736 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072559249 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067940603 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065890312 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067942736 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068138119 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067213681 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066753854 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.0659687 seconds)
  done (took 2.339117891 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202339616 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068750037 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070243997 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066355166 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070481056 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066909981 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081633063 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068255551 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092037604 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067073906 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066767282 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06921893 seconds)
  done (took 2.514906868 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207289816 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076405982 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238596266 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151248368 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111485594 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115668988 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112596806 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114642088 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142083721 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101003772 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168075395 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167516651 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107898258 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137143878 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089266136 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100771941 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154096435 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163003071 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105692612 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167830107 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145677774 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127432738 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151826381 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102209372 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106518145 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122560733 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071202305 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080081804 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169806052 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132928447 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143831358 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110860909 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092375996 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177104287 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174835738 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141349003 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146968054 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084335491 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105530463 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134522604 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201026728 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088538095 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160594284 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108884469 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220017965 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13560283 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120581235 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121484674 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105836706 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090362611 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146783627 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184478103 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137519423 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087882844 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125123716 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113630547 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115020626 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114541765 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183487441 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161677503 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128699889 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071361092 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108129961 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15474935 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133450984 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108076481 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125732013 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092124633 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136054912 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156288003 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121191925 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14609403 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116905859 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089178628 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119891085 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14074148 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127923489 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161811439 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124886219 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07350419 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123776153 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102255805 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081243483 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146051541 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0755806 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17692914 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09938871 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109655541 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125350917 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110320037 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112715733 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159171975 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145540443 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102750351 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065318028 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246390169 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12337299 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14740016 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087413585 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109402471 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119537395 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078399252 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13875256 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076742214 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125060316 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077829407 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128511936 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13016699 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077346253 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123189852 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104121579 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101675153 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132734386 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161139974 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088624463 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082752823 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169971895 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122570821 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104162448 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144545423 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157699082 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102685092 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101649158 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150256908 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179208562 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089736516 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163966694 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107042902 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084192216 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088037761 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123879373 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112923263 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124651749 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082265138 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117837228 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169356741 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075191089 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095987164 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13540568 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079407153 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081218033 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105892566 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105174161 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095686036 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100063773 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102992671 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13622825 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123883151 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105500349 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124731464 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098296719 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312979869 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089165729 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102687719 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105285099 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070507499 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13489189 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157846001 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080585678 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165118294 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125319409 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117494553 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120463688 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083340754 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141047438 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0794247 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07133367 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145044885 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111463683 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111311009 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151760089 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11666848 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125853489 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119551149 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13422646 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132276665 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131681545 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105414327 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088548506 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112570406 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126597193 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073444822 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09045083 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079844396 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105212619 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096438194 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083159704 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141264388 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124405094 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109798056 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11241112 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096853272 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148354957 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076377118 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128457664 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119971533 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096056186 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154168888 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15273508 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131387091 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100109733 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137151752 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07056346 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074206601 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088182314 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124563897 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084152561 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082934865 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258804031 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150829515 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131544079 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137186687 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124477911 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121246793 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158108739 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071129445 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118499303 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147363982 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122945528 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105326521 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090705505 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100199621 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143995765 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107547975 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183067277 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117458348 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124312774 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154516603 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101347711 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079927586 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103387588 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136500535 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104691606 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145231657 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100565881 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088659486 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110142844 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075029936 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098559926 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126736642 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118940359 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135737019 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116318598 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132802421 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077856914 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116039648 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122098998 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122275609 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064272453 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121067668 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162467673 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095178354 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118692721 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153331446 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079303577 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134542861 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175920318 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144108088 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084562827 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252642072 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120336017 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12949264 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12171503 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141981355 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107699418 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137729905 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109955458 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088124656 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088553974 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098474572 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104916109 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096083766 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107664062 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113326643 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095816241 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131252715 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104311464 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110098555 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119285271 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097968498 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091554213 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098030642 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178743897 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119652138 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172028461 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100283261 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145166462 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164899577 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075304249 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079820477 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078096073 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140037009 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084745526 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13024087 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10725057 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117973679 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124041604 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143166243 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095969083 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069070932 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109509777 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133480281 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124701066 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098718115 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103712904 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164935633 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10173523 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079755768 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114307991 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116687068 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103062484 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171566053 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06162285 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105867189 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076380255 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080290598 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127344974 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293329963 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081644805 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103718437 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121621756 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112993965 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128960601 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101667314 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112606913 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12643713 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150693772 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128590832 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090006973 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112262024 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128809682 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15712704 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105728691 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096298773 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172621851 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154224634 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160771701 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08811213 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115218093 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114690936 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109242504 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13785854 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083504592 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164311549 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082631507 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136942359 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104016217 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089226804 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129092398 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108647066 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0886626 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148792293 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117833503 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083015918 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078141949 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118496524 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120226728 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106829754 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075655432 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139424789 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074235725 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132623025 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160019353 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081020486 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107411222 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096511631 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079373581 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105870849 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103570648 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088517572 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.241387157 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178025678 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088651055 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15215978 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134472169 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114605876 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137988925 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102251823 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639332465 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078672488 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153701151 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116590336 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175509906 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100314222 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118323814 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109987239 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124779079 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145567924 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104778818 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179580421 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132238223 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116042634 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079966278 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102396985 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104569361 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087917381 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108103179 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114318269 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116333061 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093133741 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115809551 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124940665 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082265386 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095851788 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157120865 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117115268 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14359563 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140832202 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085980087 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11858062 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138883594 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08089649 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12096634 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152185514 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105711121 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099197112 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080827871 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100066955 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158498517 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073071403 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158214525 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117574384 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252694218 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115818368 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113084937 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132458618 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107103756 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123616545 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092982293 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109258822 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115119932 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08257051 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078504298 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106011332 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111982293 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098655962 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098006387 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099857734 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153167245 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072672258 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099262085 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115304234 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144051036 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174006271 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089591099 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083091321 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118403311 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114722987 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113519093 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121266944 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080097898 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084231564 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080727809 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078706088 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109704369 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113110242 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114753811 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111994884 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163547652 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083376345 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.230739325 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095568219 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106150447 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070608354 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07833691 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096285101 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098324925 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107511881 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110701886 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16004573 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096843879 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09050133 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091770036 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074179461 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083540089 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129265355 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110279945 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118064833 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098110867 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062619992 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107110332 seconds)
  done (took 59.165660652 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109705139 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083148347 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095011148 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145222116 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123334495 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203470265 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154222305 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190008396 seconds)
  done (took 2.750971748 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068152694 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095584172 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10479088 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083521807 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067706994 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069634234 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.23226728 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081895823 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066784338 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098786141 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079310966 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069583982 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.432336377 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068953531 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069552361 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061888445 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06753148 seconds)
  done (took 3.438399929 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.389275173 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612796695 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.351901863 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072804679 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.437634581 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085207477 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.120473264 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129030353 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074217483 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53596222 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.408144384 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124546811 seconds)
  done (took 17.974866956 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075533643 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069860088 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084489092 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084214584 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072748014 seconds)
  done (took 2.013241168 seconds)
done (took 107.309118118 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081554401 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.614879975 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053376774 seconds)
  done (took 2.317332146 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08365449 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085655156 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085372184 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083551638 seconds)
  done (took 1.967434848 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074311149 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076628616 seconds)
  done (took 1.774254215 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233249857 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163272527 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095840762 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083304391 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080021313 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079649423 seconds)
  done (took 1.872984653 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072420819 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076572648 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07372521 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07595527 seconds)
  done (took 1.925130978 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077455081 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052776252 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054458514 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058876793 seconds)
  done (took 1.867800917 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087411446 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078966792 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078672676 seconds)
  done (took 1.871337648 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103036838 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086086126 seconds)
  done (took 1.81552751 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082099842 seconds)
  done (took 1.709466407 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099757786 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102103548 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133014549 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110840525 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140163549 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109787616 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085182707 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085768494 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076876431 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086672771 seconds)
  done (took 2.658336442 seconds)
done (took 21.977560034 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08023105 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.361312812 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360148061 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090499419 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668649324 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356688244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.969467034 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092751813 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115324546 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068184728 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085003787 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648399964 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960586638 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318181592 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.946008528 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.315080064 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651125967 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068544523 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06789149 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067852194 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952713604 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067520741 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068145041 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06867528 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650191362 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372564102 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068064335 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.316002733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068448488 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069856561 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355187858 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068358638 seconds)
  done (took 16.028205691 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071671613 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120448146 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073201064 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085942111 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070753686 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069540505 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072105489 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069019162 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120850667 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068351712 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085768615 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067714325 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071858109 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.08434808 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087410291 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068012994 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068603023 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068696331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068761118 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069040471 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087498871 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068174926 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06827247 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068851306 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068347687 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080406461 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068705993 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06834414 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068983538 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07077156 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070888375 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069282277 seconds)
  done (took 4.059726312 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115261839 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12437016 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074407839 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104413715 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111994762 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071130861 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142904822 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093811781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126799182 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068277722 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085483789 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068179674 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102507619 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069028555 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088457673 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068824582 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069677737 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068888325 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068293655 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068935491 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087811149 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068057633 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068332382 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069025421 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068266878 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08231489 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068914757 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068860137 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068281371 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07043423 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071795829 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068942939 seconds)
  done (took 4.29201177 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072800631 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075055112 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083298331 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084161441 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069507066 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072420773 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073284079 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070063781 seconds)
  done (took 2.242577327 seconds)
done (took 28.256259385 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079213464 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069111222 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.0724661 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083441048 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073673166 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079278396 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06732366 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076059838 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072495636 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073367861 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074893041 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067956707 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071583897 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06737701 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074617616 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067740754 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079903064 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071814154 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079705276 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079494524 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070371538 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073616257 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075105873 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078733977 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079263058 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079233382 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077297171 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072937731 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068843532 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070446354 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076900273 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083680984 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068478434 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079617277 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068158121 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067723943 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07120606 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067337272 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07938564 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076780525 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069661156 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076254573 seconds)
  done (took 4.732506106 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08806458 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093513241 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085780798 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061719343 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066556032 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065462361 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089180713 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060489379 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059700381 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088297265 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055473192 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059465881 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065480049 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053666227 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.0602271 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056393855 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062085836 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056019786 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060637355 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06005661 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089453457 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053757471 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077873653 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063951179 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055776389 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061570255 seconds)
  done (took 3.40139459 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074082782 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087273237 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090136326 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131288697 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106554385 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079359921 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079571814 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095129509 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089276926 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067359851 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071165804 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092366362 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09006193 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073739549 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068309684 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086599471 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083696397 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068912283 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073786009 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094742341 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086678871 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086753588 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096554905 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083968014 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067301065 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070077249 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071915481 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081982277 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072840814 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077387198 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072050043 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071676022 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070163362 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079738882 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072418413 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069984899 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092980535 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078447445 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079385644 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068761608 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076428406 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069451352 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094030973 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127916402 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067591646 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074403484 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071933894 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077645192 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068557802 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088753505 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079566204 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067892485 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071263394 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067297252 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068601471 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08189178 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070173064 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.0705119 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077276602 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074591894 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093483267 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073064838 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084337344 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067826376 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076046026 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067529108 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069106342 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067358216 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09673749 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06998926 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112008306 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069545395 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069374647 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077572209 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07634133 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075097682 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068892898 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084205636 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079074865 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071727843 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077606934 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07127319 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071746634 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093038497 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070615767 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069935197 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068859824 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074046568 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072424271 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069718801 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081472399 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067856913 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070751826 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085862039 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067778471 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069581117 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07416042 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072528045 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067814506 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079504129 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072904712 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069305005 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078114723 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067723012 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071015891 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081019344 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074470167 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067092715 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072312004 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073829893 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068742925 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070217835 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071178179 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070099726 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077339835 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.085696387 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072614833 seconds)
  done (took 10.723704013 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165723573 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160290596 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07095724 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149212863 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076903485 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079383427 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152206357 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095287504 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068022337 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069016407 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068789139 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111343023 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106297737 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117046343 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079337092 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067850885 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085335048 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114604121 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152992997 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147103748 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08507303 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077473795 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070237846 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069099319 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070781242 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078745703 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085642365 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076717267 seconds)
  done (took 4.435090105 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081232542 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106264983 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073926068 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091479591 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09120916 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068122943 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07030853 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069696835 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081709826 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078276371 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06810363 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073759041 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075161682 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071257851 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068849501 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074713483 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075221158 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069717344 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071234316 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073384892 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078802623 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092754394 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07175351 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067206802 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072993439 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068293218 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06362245 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083963288 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068482733 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095266104 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065780605 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072958931 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082928242 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068609379 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067987368 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068002033 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068244981 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067673038 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069855785 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066606767 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.0667979 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05746439 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067367184 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079409246 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075538754 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056227763 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073288998 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073530171 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07356244 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065527776 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070903032 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071462972 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071843732 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078868557 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07230558 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073092516 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069110986 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074451418 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077679576 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067480158 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065421192 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066359416 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072948127 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065756476 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077177349 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073506531 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066187413 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067851438 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069836156 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075019142 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06768744 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072482697 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065575299 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069746921 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073011803 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06998411 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069625797 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066259364 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067643591 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068453232 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055414816 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068114538 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053523443 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071576142 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066202253 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066716581 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067902515 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072940149 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079944212 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069207699 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073633639 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069118099 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067461259 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070879887 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06092097 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070757942 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083677602 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082682784 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06792987 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06602014 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081640129 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072706278 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067533119 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055758509 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07317615 seconds)
  done (took 9.209535417 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090528526 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070081663 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084650245 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091830361 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087602192 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075895205 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07758073 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069698812 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083302145 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073879743 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076755796 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06773051 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078703116 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077602514 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070244773 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078162892 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072121479 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085683866 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08320157 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068230068 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076989276 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081487887 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090908953 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082741668 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081166012 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082651869 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090461434 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077906912 seconds)
  done (took 3.911710228 seconds)
done (took 38.051240139 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.717194804 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.894785235 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.719221996 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.090665485 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.945328184 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.734157359 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.91549034 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.713857775 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.839937508 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.756653341 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.918605972 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.885460403 seconds)
done (took 64.785949204 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.795813826 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.854146198 seconds)
    (2/2) benchmarking "String"...
    done (took 1.940812291 seconds)
  done (took 5.448364801 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.946603143 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.282677963 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.967358223 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.712100584 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.718011464 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.05618536 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.5115138 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.224565636 seconds)
  done (took 30.125769669 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.78254797 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.946422828 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.37339991 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.39829399 seconds)
  done (took 15.203706621 seconds)
done (took 62.260657124 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.733412076 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.776382876 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.731504594 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.697920516 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.772949838 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.730665712 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.063597474 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.792209653 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.716514577 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.696857756 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.713610744 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.148723747 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.724515595 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.013519907 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.714373592 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.724097111 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.74480569 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.225842182 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.873152601 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.72298388 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.718036123 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.769432614 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.713955283 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.718607409 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.716825518 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.712357113 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.138985025 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.711980495 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.32531162 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.716119685 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.739688578 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.247814123 seconds)
  done (took 202.197776554 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.7114285 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.659201296 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.710919436 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.714412641 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.113119965 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.896053714 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.832018742 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.133974971 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.715789096 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.737053742 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.922807257 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.712118087 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.941931126 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.661152797 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.741764616 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.808128065 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.886027382 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.937140463 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.743571618 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.882735441 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.72267468 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.824896823 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.752688532 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.893670463 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.718198028 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.723938724 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.897911134 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.726063084 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.905088387 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.865579642 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.735941898 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.729184463 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.938069298 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.592240622 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.729485594 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.733099224 seconds)
  done (took 167.600967937 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.11459601 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.71558788 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.717439166 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.714568162 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.718452309 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.729489848 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.717909536 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.838702316 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.845159296 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.333007172 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.206097591 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.772070711 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.567016252 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.722144756 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.785835256 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.731707986 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.720440001 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.719155061 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.732886669 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.743580499 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.721237032 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.716808447 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.842938426 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.730953934 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.148865469 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.723889263 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.719096104 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.723534293 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.092095321 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.717180631 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.722476996 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.976833088 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.717080846 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.716323492 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.606189551 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.020594674 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810967453 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.719543958 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.721964299 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.718810188 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.939417025 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.72049494 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.720611351 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.720832728 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.894402816 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.721773525 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.843284598 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.717317386 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.242371409 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.723014176 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.718963159 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.348660056 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.42837143 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.721211013 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.71520842 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.721416806 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.719203763 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.716739826 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.726544583 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.341574425 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.792464418 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.723977443 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.723278434 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.724294403 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.7192271 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.794475871 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.718871808 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.375292812 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.776834294 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.844720826 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.839033529 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.724822773 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.78574933 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.813701732 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.719003601 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.721169317 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.718549531 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.722414608 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.719641189 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.802347337 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.722154695 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.849116703 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.729620488 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.722127106 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.7722855 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.790219045 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.72057427 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.614455139 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.724516464 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.719523103 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.06562471 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.790349587 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.719413413 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.721979831 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.720890255 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.855761887 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.843635861 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.51439967 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.724432513 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.720701195 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.487013851 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.724026146 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.917041673 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.724074374 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.906716859 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.729001986 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.803435462 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.726578383 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.723696182 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.722274061 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.754257043 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.72551767 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.779405402 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.725864238 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.095149988 seconds)
  done (took 397.315667019 seconds)
done (took 770.940097583 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.403509815 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.359038888 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.461695525 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.380363119 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.353318918 seconds)
  done (took 13.619873904 seconds)
done (took 15.279499529 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.80878654 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.815974369 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.748035618 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.813543961 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.743481596 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.814704345 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.79553176 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.751219073 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.782902197 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.748973702 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.78283329 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.748692549 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.738353693 seconds)
  done (took 24.753053966 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.959414043 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.964820487 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.797916998 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.957291021 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.77350464 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.957858931 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.887496771 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.875963518 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.87668858 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.740176242 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.740314994 seconds)
  done (took 22.198885402 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.958541493 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.969336945 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.80590331 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.98333459 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.777168978 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.958251836 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.890767169 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.877743795 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.880688092 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.742259193 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.738995899 seconds)
  done (took 22.248118004 seconds)
done (took 70.859305269 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.734577398 seconds)
  done (took 3.398796221 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.757808821 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.916848387 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.739075538 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.737786525 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.734389846 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.734609537 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.737505331 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.732880105 seconds)
  done (took 15.756101435 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.731599944 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.73339024 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.734480838 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.734321648 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.734692534 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.730521431 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.73467605 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.73352444 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.734206188 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.733754035 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.731802313 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.7312379 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.731364051 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.731585727 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.732473099 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.731971448 seconds)
  done (took 29.39088967 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.734702004 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.73303909 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.731387035 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.733623947 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.733173472 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.732945815 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.734461632 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.732302491 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.73241744 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.731487339 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.733674114 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.732335804 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.733144745 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.731631545 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.733877763 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.734124107 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.73259477 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.732763101 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.736628971 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.732948269 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.734055012 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.733254276 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.731223654 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.73303613 seconds)
  done (took 43.261974054 seconds)
done (took 93.469858983 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.6364043 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.250763792 seconds)
  done (took 8.556224883 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.738890179 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.735603155 seconds)
  done (took 5.178807883 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.737170113 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.736308455 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.735263732 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.736552376 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.737656122 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.735647891 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.734924009 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.733570411 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.734378311 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.737457584 seconds)
  done (took 19.025253846 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.734690422 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.735183572 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.73435261 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.734901201 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.743120306 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.733385122 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.732738452 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.735815745 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.735116348 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.735722667 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.735054134 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.733107744 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.738041885 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.732597479 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.735992512 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.739247895 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.734425036 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.734422898 seconds)
  done (took 32.901985381 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.735825574 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.736723472 seconds)
  done (took 5.137712279 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.736012632 seconds)
    (2/7) benchmarking "second"...
    done (took 1.73533144 seconds)
    (3/7) benchmarking "month"...
    done (took 1.735756042 seconds)
    (4/7) benchmarking "year"...
    done (took 1.734600489 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.733942794 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.735843124 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.733690028 seconds)
  done (took 13.815523059 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.738855468 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.9029008 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.975119142 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.413652919 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.739651912 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.740015651 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.731914785 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.745350715 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.742981295 seconds)
  done (took 19.397852869 seconds)
done (took 105.677245333 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.543712678 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.736041207 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.097267801 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.840218191 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.750053325 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.074343067 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.747761136 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.033148356 seconds)
done (took 42.491951841 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.783789422 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.282256226 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.319829897 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.161423599 seconds)
  done (took 12.430889534 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.715245654 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.277089021 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.7777698 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.391704647 seconds)
  done (took 20.044404488 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.102217986 seconds)
    (2/2) benchmarking "read"...
    done (took 2.088099981 seconds)
  done (took 5.862053684 seconds)
done (took 46.787245377 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.737044943 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.738035814 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.737956979 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.737213555 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.733558666 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.734189339 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.73708856 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.737280406 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.739851408 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.737053413 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.73916308 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738406475 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.734913057 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734636221 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739794594 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.734274903 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.737899624 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735273932 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.736816599 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736079698 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.736617456 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.737992773 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.734677007 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.73590727 seconds)
  done (took 43.348155059 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.739442331 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.738079323 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.737652721 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.738272256 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.736433944 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.738687712 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.740881743 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.736307374 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.738367585 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.737676865 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.73703113 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.737483311 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.74241652 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.734846509 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740588706 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.73890575 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.738283698 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737112205 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739822803 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.735907403 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.737773984 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735004097 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.736579444 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.740241173 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.736225368 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.737195945 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.740671913 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.738399861 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.740924564 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.738659907 seconds)
  done (took 53.814290589 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.745084585 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.747317119 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.739150984 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.739861041 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.740771677 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.739694138 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.739760869 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.740637303 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.740218389 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.739265223 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.741909764 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.74050848 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.738460675 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.740112604 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.740286039 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.741454639 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.744587825 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.739936107 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.741546652 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.741518963 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.740599429 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.740976028 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.740828373 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.741775249 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.740314171 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.740895652 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.741031801 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.742057975 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.741295338 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.741271044 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.742080093 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.739246722 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.742883803 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.742170289 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.740489901 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.742389986 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.747045733 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.750771142 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.744004249 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.741696148 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.740761842 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.742362218 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.740257395 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.742431613 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.744853228 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.74369247 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.741871991 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.742396475 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.743129713 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.741979949 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.745038478 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.742429634 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.74295435 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.741143202 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.742210734 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.744266922 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.743583635 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.740400321 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.742365176 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.743391746 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.743570568 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.746081072 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.742148292 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.74446191 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.743640367 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.743951314 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.743438083 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.747464587 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.743830002 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.743872836 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.744556027 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.743681111 seconds)
  done (took 127.120731026 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.747168372 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.74159512 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.741017565 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.739977798 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.740963094 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.743671618 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.741231374 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744354277 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739379023 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.743970541 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742687305 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.742073554 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741783178 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.742669569 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.745248796 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.742824822 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.743569602 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.742662574 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.744772882 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.745013821 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.745330107 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.740333083 seconds)
  done (took 40.01406306 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748874467 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.745465302 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.741596962 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.746368674 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.74083645 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.744960467 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.744803797 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.745264499 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744209295 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.742087696 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741550833 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747311781 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.742408889 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740403474 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743165863 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.741599294 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.746066871 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.745249884 seconds)
  done (took 33.065204971 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.744261426 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.744622102 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.746970051 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.743906434 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.745863014 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.74483033 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.741458683 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.744588141 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.7447076 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.742655474 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.747505833 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746964951 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.745709486 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745823597 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746315477 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.745621825 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.746189092 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742445506 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749078699 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.743164818 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.74588598 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.74837128 seconds)
  done (took 40.070963651 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.747070317 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.745348495 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.744254349 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.745122449 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.745955257 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.746642148 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.746769928 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.743716925 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.747185212 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.745949831 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.744733413 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.746046187 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.742017868 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.746724659 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.745541065 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745201607 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.748131435 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.744183972 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.747023402 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.746260679 seconds)
  done (took 36.58910644 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.750367385 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.751003781 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.749883938 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.750188955 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.749401989 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.751040313 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.751621631 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.750383814 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.750045021 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.752341968 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.749935485 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.75112407 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.750796089 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.749270283 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.750430405 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.750870352 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.751021567 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.752286777 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.751350524 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.751599695 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.751808586 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.750264835 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.751404204 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.756134004 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.751551646 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.751380267 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.748943353 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.748112237 seconds)
  done (took 50.70258427 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.752708254 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.74882351 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.746324508 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.746153826 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.747214925 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.749356074 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.745449495 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.748503961 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.749667313 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.745064607 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.749303099 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.750694606 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.748727984 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.75015637 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.749657576 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.749521727 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749672452 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.747832141 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.748233995 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7455933 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.75051055 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750330497 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.751051658 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.747415521 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748939934 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.749902896 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.746962502 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.748325845 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.751594923 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.75027769 seconds)
  done (took 54.142477544 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.770575035 seconds)
    (2/2) benchmarking "in"...
    done (took 1.768985241 seconds)
  done (took 5.219168275 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.750022444 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.74950165 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.752049356 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.748607402 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.747209784 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.751304289 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.751454946 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.746622986 seconds)
  done (took 15.676977314 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.753193239 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.751147367 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.754121709 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.75435705 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.754358966 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.752839435 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.759413463 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.751433367 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.753549138 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.752074973 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.758374769 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.759278675 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.756408629 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.752779284 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.75612871 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.754099979 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.753695706 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.754343364 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.754337845 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.756396839 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.754636445 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.755571105 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.755243611 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.749480396 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.753796149 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.76453954 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.757228989 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.751860852 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.752068511 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.754653475 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.752908335 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.751878932 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.753234538 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.755694245 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.754438111 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.753609016 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.762057406 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.751923249 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.758455901 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.752663874 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.755018513 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.751458304 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.756706558 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.753022373 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.753260907 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.75283259 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.757223915 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.74927227 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.758553213 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.756690561 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.761157619 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.751452846 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.749326871 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.75789928 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.754709682 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.762349285 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.752846507 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.758167827 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.76336343 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.762813998 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.765165785 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.762931361 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.754175236 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.75391247 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.765515859 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.780861283 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.759507487 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.751133395 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.754463553 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.757507251 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.760459947 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.767858398 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.767354174 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.756068043 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.758412391 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.757091616 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756654954 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.756025343 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.76243242 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.756157967 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.756457836 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.75819765 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.768268204 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778669724 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.755819357 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.758174584 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.757280615 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.758054764 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.759660384 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.770596917 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.756499882 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.758698313 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.756817452 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.757548228 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.75838682 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.759087261 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.757202923 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.76034153 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.752758103 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.759017957 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.759486714 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.761744054 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.767596494 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.760268248 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.760484965 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.767755567 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.756268313 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.756062099 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.764431122 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.757238276 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.756837754 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.760977932 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.76591611 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.754186177 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.761999982 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.765846315 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.757650484 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.759214399 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.760106038 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.75992992 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.766244385 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.785150461 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.760052551 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.759977682 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.760575717 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.769669712 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.760444295 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.763682749 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.761599675 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.758308426 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.756282169 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.758388298 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.759696884 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.759302494 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.7581223 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.761780513 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.755882081 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.758047118 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.760829852 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.761415174 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.759613163 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.760554784 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.76034553 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.75889034 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.761355953 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.762903964 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.764129678 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.758068088 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.760184706 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.760860506 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.756313531 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.759432312 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.760155276 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.759753747 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.762813726 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.760614537 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.758807744 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.760370313 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.759269642 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.760750679 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.759510202 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.759240059 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.763779567 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.761823347 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.764683425 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.757823342 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.755855873 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.760824095 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.759471156 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.759015301 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.760942885 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.757755256 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.762600255 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.771139307 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.759279772 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.761444481 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.76503391 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.760451434 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.764135157 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.762546793 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.764955077 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.769062337 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.758966431 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.767376679 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.763897869 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.765430168 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.763515035 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.758565995 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.759654576 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.763333563 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.766703666 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.770823059 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.775179426 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.768817894 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.763535734 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.766015213 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.762789391 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.767596268 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.766044959 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.764481231 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.764651257 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.766820443 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.760653782 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.763854737 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.762169134 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.763402181 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.764367582 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.765904406 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.764368487 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.763957571 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.76415403 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.763131033 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.762486698 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.76121244 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.763101319 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.764370157 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.763832278 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.759377924 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.765429438 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.761664797 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.764085605 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.764195456 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.772003873 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.758170045 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.76333478 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.764741642 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.764472372 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.763671631 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.765598787 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.764953124 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.765375707 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.770097453 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.762226126 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.7662861 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.769881632 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.763694197 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.763496496 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.768500755 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.762261586 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.762501952 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.766608757 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.772819967 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.764353295 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.763781693 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.766860118 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.76360181 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.763699728 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.76881865 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.761540661 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.762768438 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.76501453 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.766359007 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.764224882 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.764987237 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.766946494 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.764359722 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.768492551 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.764586009 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.765938255 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.76630058 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.767418152 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.768056821 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.76799049 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.768492828 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.775390547 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.772412805 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.76632907 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.767822534 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.767111837 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.772019821 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.767014189 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.765424906 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.766462475 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.781314365 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.7743545 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.775533127 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.76652001 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.765624193 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.773781739 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.766517567 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.773513253 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.770801179 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.766611697 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.765248751 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.768578573 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.763890814 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.768418051 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.767169176 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.766692222 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.766053459 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.770407545 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.765692927 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.767285778 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.766298186 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.76929227 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.769359377 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.766390564 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.766833777 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.772262979 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.770607558 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.768699474 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.770317769 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.774884423 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.767166497 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.770752837 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.765899366 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.767068964 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.767318475 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.769495616 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.769699255 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.771895825 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.77838216 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.773574079 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.777536206 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.769217077 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.779206091 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.769450744 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.775969211 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.777812827 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.767802093 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.769009041 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.772023628 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.771062513 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.777342297 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.768167756 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.770980191 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.777084534 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.7723001 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.772538508 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.771601184 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.773562939 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.773084119 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.772341157 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.778819507 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.771434618 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.775906808 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.77521196 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.770301673 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.771586593 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.770897495 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.769396864 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.775118869 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.772172348 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.773277346 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.770380578 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.771651824 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.771319509 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.770252145 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.773893825 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.7662234 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.769910791 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.776873942 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.768982628 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.776456972 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.774242795 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.780514592 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.773448485 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.77889433 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.77065918 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.774273573 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.774857296 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.772981228 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.773488107 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.773011199 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.773344197 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.772761033 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.770986683 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.775215782 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.773399827 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.774379942 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.772459064 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.776322145 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.774177388 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.779709482 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.796560542 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.77273911 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.777488706 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.769742224 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.777008318 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.778445815 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.77362452 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.773440571 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.777147912 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.785095389 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.784306161 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.773250834 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.774453438 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.773234163 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.778236137 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.774031131 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.773435661 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.77615765 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.77410154 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.7744122 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.772400141 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.776746534 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.772663774 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.772820763 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.775048973 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.773126099 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.78326495 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.770187578 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.776834797 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.774760793 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.773235746 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.772258156 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.77150879 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.774183708 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.775522738 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.775187317 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.7774424 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.780446073 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.78134613 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.773363325 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.77251161 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.775441253 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.771894073 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.77552472 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.777270929 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.775954457 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.775291403 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.774770503 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.775993135 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.775693296 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.774399081 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.774773276 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.774309663 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.775854193 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.776426179 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.781379604 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.773147502 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.772152157 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.775363089 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.778335834 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.772363217 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.776719256 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.782511775 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.782911 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.786909997 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.783946657 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.780665832 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.774749846 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.777882008 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.78499195 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.778616778 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.776350443 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.77705247 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.778173003 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.775658589 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.777898389 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.777115818 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.78251205 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.775590859 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.776445653 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.784348184 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.779502459 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.773404115 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.778092945 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.781638395 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.77820508 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.775361226 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.7779083 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.776851128 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.780627111 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.774464724 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.777206899 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.780222406 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.777335887 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.780105291 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.782525329 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.779242613 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.777728312 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.776952433 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.778165674 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.779081906 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.777692814 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.777181916 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.778946527 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.781825615 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.78147014 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.785210608 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.775388456 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.77847837 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.777400255 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.779778947 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.78051503 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.778023338 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.771739595 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.777058287 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.781614734 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.778720799 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.778189362 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.78185894 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.779252998 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.780564062 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.780180344 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.783073832 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.782983921 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.790575014 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.789128894 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.778384658 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.776296308 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.779860754 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.783551604 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.780693948 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.780673313 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.782255099 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.781236179 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.780082001 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.781010977 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.78013926 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.783588323 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79673172 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.777583518 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.77942466 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.780733375 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.784130865 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.783200768 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.776868819 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.781206493 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.781556097 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.782725816 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.789781467 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.781508419 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.786363378 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.777763797 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.781355736 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.786118478 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.784441052 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.788094446 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.782450533 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.781377493 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.782807119 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.785293932 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.796898768 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.779868509 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.790754528 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.811913105 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.778185856 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.780477449 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.783843089 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.781701398 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.781999849 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.783961461 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.783222988 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.784607064 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.781537519 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.783461073 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.782200757 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.785601413 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.783230312 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.78499197 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.781543952 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.781463683 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.78436892 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.779189928 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.782868846 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.780460665 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.781505124 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.783875562 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.782906065 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.783438252 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.791696908 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.791384469 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.783110533 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.78165532 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.780080129 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.783131401 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.787156801 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.793675769 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.790580846 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.784252352 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.784543723 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.785127868 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.784147725 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.780726579 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.782921247 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.779297587 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.782433344 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.783137278 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.792907665 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.795027703 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.787773134 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.78577193 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.788423547 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.781646991 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.783961679 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.784662487 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.785803166 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.785337966 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.784513095 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.788919731 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.785536401 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.783055379 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.787211959 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.794384706 seconds)
  done (took 1056.683519904 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.784915885 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782106403 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.782678923 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.783501425 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784106369 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782761831 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.784234222 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.782623117 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.782827261 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.783572896 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.78484311 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.784647691 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.783678958 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.783734649 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782080821 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.782866648 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783295792 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.785328295 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.783175838 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.785162489 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.782443037 seconds)
  done (took 39.166015118 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.785697763 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.781246219 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.783826839 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.786076912 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.7827477 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.787125462 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.781035187 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788202033 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.786378588 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780775924 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.787897013 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78476138 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.784466713 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.784172665 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783262675 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.785628668 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.788440277 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782985137 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.784611915 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.784825174 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783859973 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.783823615 seconds)
  done (took 40.977268522 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.785077229 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.78809909 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.786216647 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.782738422 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.787978599 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.784810919 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.787029392 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.786566809 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.787064551 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.788502013 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.785907783 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.786074739 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.793241382 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.793242811 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.788158673 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.788190917 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.930388328 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.786670247 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.789404248 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.788639134 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.787127791 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.794802775 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.783630427 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.78481584 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.787703571 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.788540291 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.790160004 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.786068207 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.787583516 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.788454246 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.7923081 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.789899476 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.787442243 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.789327379 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.788133008 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.788344699 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.792619145 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.789485529 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.787097492 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.789215272 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.797482319 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.811307838 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.789604733 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.795533081 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.786059901 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.788123308 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.79406838 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.796735967 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.786087714 seconds)
  done (took 89.526260893 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.789053488 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.787737431 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.78610018 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.789669264 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.788953612 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.789464594 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.788682592 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.787721312 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.785326025 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.786173921 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.790373357 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.786228253 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.786100356 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.78884948 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.790399426 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.785870331 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.785441513 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.785680671 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.785406244 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.787542725 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.786836046 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.791793909 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.789427295 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.785997651 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.788610051 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.786891256 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.786941353 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.789738297 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.786405379 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.784333206 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.786816328 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.789748175 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.791976223 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.786966818 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.785081963 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.791673963 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.787930002 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.787128376 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.792224116 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.786140795 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.790313489 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.78887674 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.79113385 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.792194636 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.788722157 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.790840647 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.789143477 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.787336783 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.787125662 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.792490781 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.79027874 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.786962367 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.791583325 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.789031201 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.790633253 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.791800469 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.788361095 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.788108628 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.79185082 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.7895662 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.789450564 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.789211376 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.788359894 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.792653162 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.79320917 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.78884832 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.791525194 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.790581827 seconds)
  done (took 123.351735701 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.793112169 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.795995072 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794636304 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.7938931 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.794443802 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.794949004 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.794219483 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.79585444 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.796784542 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.79477772 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.794815829 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.794527286 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.794832322 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.794082653 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.794582823 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.793255583 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.796068468 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.796329618 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.795898899 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.795568057 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.796695115 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.795215559 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.794969688 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.796065447 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.795140668 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.794677395 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.795362274 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.796228637 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.794184681 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.795267308 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.799585331 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.794545374 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.794273599 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.794943564 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.796078605 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.794109877 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.796213461 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794072535 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.795525174 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.795937799 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.797458318 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.795590581 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.793809945 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.795760126 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.795455037 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.795072093 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.797275755 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.798212225 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.796249257 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.79558951 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.797082031 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.797621948 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795319563 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.798072867 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.796305136 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.796934552 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795468129 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.795891484 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.796036337 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.797774558 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.795927655 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.797950591 seconds)
  done (took 113.049736571 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795368524 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.797431444 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.793463274 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.79473359 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.793758456 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.791422256 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.795887701 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.79398301 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.796619458 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.796427764 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795466827 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.791815545 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794649594 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793574104 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.793356385 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79344958 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795406878 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.792645674 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79511925 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.791503102 seconds)
  done (took 37.6092498 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.793143113 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.79782881 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.794174816 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.793791499 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.79771807 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.795112169 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.795289585 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79504503 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79419194 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797695154 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.797394594 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.794477343 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795026929 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.795957101 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.7974763 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.794563732 seconds)
  done (took 30.452325293 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.795141206 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.796589593 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.797498741 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.797172069 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.795669722 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.794645792 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.796379718 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.795706522 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.792352883 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.7971722 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.79704928 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.797357294 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.798393232 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.800002512 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.795211986 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.799007199 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.795457752 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.795556918 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.797722781 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.800649599 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.795503628 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.793853233 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.797772145 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.796947457 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.798417168 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.795692606 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.795857517 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.796656499 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.797235209 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.798899144 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.795479282 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.795025008 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.796196133 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.796792437 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.798870163 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.79927306 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.801308431 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.800676459 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.800095155 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.799003604 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.797141562 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.798138336 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.798563656 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.800808089 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.794292286 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.79938307 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.795676292 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.796440261 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.796739104 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.795970454 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.798703999 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.79965357 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.799466334 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.801438516 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.799622808 seconds)
  done (took 100.581967027 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800682049 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.801222169 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.798078729 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.797023765 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.800563583 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.795848438 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.799694565 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.795969052 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.796280127 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.798270051 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.799172023 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.799482466 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.796096006 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.801972909 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.7956446 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799108687 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.797559296 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.798101405 seconds)
  done (took 34.09836969 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.797892746 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.79868135 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.799443706 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.799049584 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.799091659 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.800690485 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801239502 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.800820317 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801384609 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.800494765 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798475828 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.802912749 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800216706 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.799368598 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.800429139 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799869587 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.801102789 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800081889 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.801105433 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.798996152 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.803833073 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805137058 seconds)
  done (took 41.338964128 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.802799484 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.798020894 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.815556982 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.824195706 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.821864561 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.835048366 seconds)
  done (took 12.628440354 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797211554 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800911617 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.799028208 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801924781 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799651543 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798601934 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796537337 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798270179 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803984639 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799816425 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799618869 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801219308 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802605653 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798764306 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802113239 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8014014 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799065175 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800225573 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800088158 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802015522 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798286641 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801859436 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799392394 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798174553 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800199986 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799741396 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803912186 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799238523 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800022873 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802085881 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804151807 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798893443 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801173943 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799000515 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804885151 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799757499 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799465407 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799154553 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803921939 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799008726 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.802848178 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802025012 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803743559 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802826002 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8044518 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801522867 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801810695 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800211035 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801513673 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802355884 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802369815 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802575283 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804026622 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804023949 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804258903 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805195144 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803324018 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800767363 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805671645 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801183746 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800865114 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804402365 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800338877 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802964621 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804017748 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802677718 seconds)
  done (took 120.618532758 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798707909 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.802135343 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803797111 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80041593 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801031909 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802103039 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803439361 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800664805 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800951276 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799788629 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807385232 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802233299 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801373848 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80207206 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802390804 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803349025 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80391146 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801714227 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8015584 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80609925 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804963157 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802263004 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801660099 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801836903 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802657512 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806044849 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801663055 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803523295 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8028573 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803535142 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80420854 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80246683 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803311188 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.803561703 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80456511 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802185526 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803999681 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803640422 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802537515 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80906141 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803203455 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809496808 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803871006 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804664689 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806155136 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804677746 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805117308 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801673087 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802162685 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80233402 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804490081 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803016374 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803751111 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802370775 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8026415 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804832108 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804333169 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803926729 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801602249 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805353605 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803298029 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80283119 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808473946 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802481368 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802608953 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802450944 seconds)
  done (took 120.750185155 seconds)
done (took 2462.26386104 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.821430344 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.796906889 seconds)
  done (took 15.351829323 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.965067426 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.918200679 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.802478359 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.846625676 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.802893529 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.818434618 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.817039402 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.801698616 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.802380735 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.802722742 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.802922552 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.989967628 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.800820403 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.802093066 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.805716672 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.895208459 seconds)
  done (took 51.212040492 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.806670356 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.807179346 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.818817319 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.808870665 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.805855328 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.818905504 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.839373798 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.809357007 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.853922304 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.81715554 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.879210079 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.815318608 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.804508312 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.858584408 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.819024513 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.822211238 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.900182401 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.885011082 seconds)
  done (took 34.701307398 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.882297659 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.804305622 seconds)
  done (took 10.427798254 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.826316446 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.803978853 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.825832611 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.810672852 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.799941629 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.85898922 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.806126002 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.843551338 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.811481156 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.858278047 seconds)
  done (took 69.980611494 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.811507617 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.807804098 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.807515661 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.807979626 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.797333801 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.802679738 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.806384205 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.801075938 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.483961699 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.841317627 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.814268334 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.814712752 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.809109313 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.808767809 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.808731858 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.828809395 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.930760265 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.80503611 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.803629207 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.814909937 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.809498504 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.862912088 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.821335676 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.810860931 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.835350961 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.492544006 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.813420835 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.81258144 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.929309795 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.806004127 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.807111026 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.809506506 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.80895847 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.191254641 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.106339991 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.806772142 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.816470438 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.814050794 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.80409671 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.936636906 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.807970038 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.810725465 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.743632071 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.105827106 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.917816031 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.854867915 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.193917099 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.812216835 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.810068965 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.841419621 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.814080082 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.812115122 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.822211525 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.318375739 seconds)
  done (took 129.304040997 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.805476718 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.086265105 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.959452528 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.808322762 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093485287 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.01433359 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.807678171 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.853177769 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.804337706 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.036667294 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.027598503 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.915449491 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.808885914 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.80349052 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.805301682 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.802708643 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.96815099 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.881332064 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.806030415 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.804010624 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838779365 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053430496 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.933778063 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.808737885 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.825241123 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.02200271 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.933024312 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.913474408 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.265234649 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.804764026 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.870159466 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.807467357 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.808247879 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.802980255 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.962379392 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.903457904 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.897421093 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.809495224 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.805631285 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.805928534 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.480610782 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004527375 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.904519251 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.949911982 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.060555547 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.012456825 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.594256606 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.806173785 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.544946163 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.969848804 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.041301667 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.043475385 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.933044867 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.810304869 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.077936565 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.805718578 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.805246638 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.041550213 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.049911397 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.912013331 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.809108465 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.803250018 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.803694003 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.056884117 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.811716494 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.902272495 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.810219783 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.804126045 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.903621113 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.910932551 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.058629525 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021390741 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.843791055 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.106578217 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.273783829 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.058205101 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.878188357 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042511591 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.809182279 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.807138304 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.895448666 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.652395233 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.007342769 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.061948618 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.063879202 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.847955727 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.587302837 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.805106654 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.038726283 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.032788711 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.063542976 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.050635753 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.962782252 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.118698889 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.804141554 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.805570776 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.045705844 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.950180117 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.81041752 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.173217481 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.046836907 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.382422324 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.839767321 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.122681536 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945361985 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.808851765 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.453952386 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.808828114 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.036536137 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.855044965 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.815494586 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.809407223 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.031339306 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.791015209 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.811026512 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.529399904 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.871260134 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.812783677 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.044623201 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.812628835 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076206616 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.813821649 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.049188492 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.132398857 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.845943124 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.9874104 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.057469639 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.811938578 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.069296391 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.058785723 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.933638961 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.08378865 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.734525604 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.810582207 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102757291 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.811408824 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.807933888 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.985050516 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.815007462 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.045192206 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.812660985 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.09896742 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835387898 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.971772214 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.815547436 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.066972116 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.844342728 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.865922133 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.813006206 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.943077436 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.816514248 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.690771718 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.966228658 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.816719423 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.809743254 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.349464018 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.814981897 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.968027427 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.04725089 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83737946 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.88856001 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.484704541 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.811498033 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.901378814 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.83892719 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.153038405 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.814419823 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.029195736 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.814599326 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.346038195 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.81029388 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.055922017 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.048614734 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.812784561 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.812057598 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.71486197 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.809935344 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.811121559 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.975183308 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.658792698 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.813037602 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.018177107 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.816813208 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.944531833 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.817551868 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.89792952 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.169346851 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.813036393 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.80966629 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.813286742 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.811745203 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.812512992 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.021797933 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.843820549 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.345249105 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.955452384 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.086714417 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.138256477 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.066807267 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.860507918 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.816882339 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.063530283 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.817005095 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.878897164 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.814064793 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.837302309 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051710657 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.817144196 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.028955047 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.095993972 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.832955712 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.865599254 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.815146345 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.815637891 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.730241759 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.967340843 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907867859 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.815737105 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.813346805 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.934128692 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.944488829 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.031536842 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.816182609 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.046116091 seconds)
  done (took 890.504968152 seconds)
done (took 1203.215936408 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.813323444 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.816692413 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.800802807 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.816921839 seconds)
  done (took 28.993008444 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.823411223 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.816941682 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.820404639 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.819597197 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.823198836 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.819553381 seconds)
  done (took 12.669526902 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.871034902 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.816039417 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.817520161 seconds)
  done (took 21.251766995 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.88942201 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.229629183 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.936634295 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.262985884 seconds)
  done (took 10.065391249 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.82409098 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.823500309 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.824924411 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.824913193 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.824389913 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.824501909 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.825835481 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.825736748 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.826477263 seconds)
  done (took 18.172980142 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.200102677 seconds)
done (took 97.097121839 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.807915132 seconds)
    (2/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.222781032 seconds)
    (3/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.847546227 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.189565572 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.179774609 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.922477641 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.866129881 seconds)
    (8/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.436954915 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.461141594 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.922851991 seconds)
    (11/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.884641551 seconds)
    (12/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.215287347 seconds)
    (13/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.117190306 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.467048178 seconds)
    (15/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.823003443 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.952775802 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.504042535 seconds)
    (18/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.89484793 seconds)
    (19/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.329702654 seconds)
    (20/309) benchmarking ("sort", Int8, false)...
    done (took 4.817442551 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.171171371 seconds)
    (22/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.820485602 seconds)
    (23/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.903184048 seconds)
    (24/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.857590755 seconds)
    (25/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.842626953 seconds)
    (26/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.482529579 seconds)
    (27/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.121589875 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.818482868 seconds)
    (29/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.804867161 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.209478874 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.819227226 seconds)
    (32/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.474131237 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.881753178 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.923769616 seconds)
    (35/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.008579207 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.736347039 seconds)
    (37/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.943606872 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.817090861 seconds)
    (39/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.152410537 seconds)
    (40/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.922806351 seconds)
    (41/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.89659194 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.92938165 seconds)
    (43/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.929172208 seconds)
    (44/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.12077368 seconds)
    (45/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.378243156 seconds)
    (46/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.086581144 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.808022452 seconds)
    (48/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.915939678 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.81932052 seconds)
    (50/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.934308118 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.935922174 seconds)
    (52/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.952347971 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.122067348 seconds)
    (54/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.655113349 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.830282509 seconds)
    (56/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.911534952 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.115123337 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.043271036 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.110996427 seconds)
    (60/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.886025117 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.930348633 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.009018376 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.069215931 seconds)
    (64/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.179162484 seconds)
    (65/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.983377822 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.452684774 seconds)
    (67/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.846358405 seconds)
    (68/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.836095606 seconds)
    (69/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.088448251 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.878257731 seconds)
    (71/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.802623261 seconds)
    (72/309) benchmarking ("map", identity, Int64, true)...
    done (took 3.72452797 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.819129557 seconds)
    (74/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.926899343 seconds)
    (75/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.90368151 seconds)
    (76/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.30831444 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.183268585 seconds)
    (78/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.848178725 seconds)
    (79/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.454438394 seconds)
    (80/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.47525225 seconds)
    (81/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.887729905 seconds)
    (82/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.046412129 seconds)
    (83/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.052944138 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.922796883 seconds)
    (85/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.308102814 seconds)
    (86/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.990640207 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.032636767 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.240220622 seconds)
    (89/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.151809149 seconds)
    (90/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.806172913 seconds)
    (91/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.71544923 seconds)
    (92/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.952515976 seconds)
    (93/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.734571107 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.531497087 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.032087798 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.919017928 seconds)
    (97/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.018529769 seconds)
    (98/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.805407343 seconds)
    (99/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 3.478292779 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.820881876 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.582062205 seconds)
    (102/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.034543843 seconds)
    (103/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.330859415 seconds)
    (104/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.992000181 seconds)
    (105/309) benchmarking ("sort", BigInt, false)...
    done (took 6.827208518 seconds)
    (106/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.037236289 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.931769578 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.902369779 seconds)
    (109/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.906081959 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.778154468 seconds)
    (111/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.971366796 seconds)
    (112/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.925586873 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.039381736 seconds)
    (114/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.516366811 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.83285952 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.812610357 seconds)
    (117/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.912145511 seconds)
    (118/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.501157181 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.862129153 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.829272668 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.672873367 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.126549523 seconds)
    (123/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.824841659 seconds)
    (124/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.043707784 seconds)
    (125/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.997017302 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.82472879 seconds)
    (127/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.391026937 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.824512619 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.298790783 seconds)
    (130/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.023869596 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.903646882 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.961825224 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 2.269781661 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.02150836 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.85026597 seconds)
    (136/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.824536626 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.808466026 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.155662143 seconds)
    (139/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.306478722 seconds)
    (140/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.015243165 seconds)
    (141/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.8241248 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.042827124 seconds)
    (143/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.811455579 seconds)
    (144/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 5.184416639 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.100453191 seconds)
    (146/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.083392578 seconds)
    (147/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.809974638 seconds)
    (148/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.814053331 seconds)
    (149/309) benchmarking ("sort", Float32, false)...
    done (took 5.600353162 seconds)
    (150/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.130836899 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.897277824 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.928164747 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.80984073 seconds)
    (154/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.171680591 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.809934288 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.085952414 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.064774405 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.854069126 seconds)
    (159/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.85245078 seconds)
    (160/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.916341648 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.826198673 seconds)
    (162/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.293612723 seconds)
    (163/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.9677486 seconds)
    (164/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.959992872 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.84658056 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.823549422 seconds)
    (167/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.955656447 seconds)
    (168/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.376123929 seconds)
    (169/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.968210918 seconds)
    (170/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.814615578 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.231675372 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.822214831 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.519070578 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.012256441 seconds)
    (175/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.026984881 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.148342831 seconds)
    (177/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.788491567 seconds)
    (178/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.013940452 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.130146756 seconds)
    (180/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.83198385 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.926827091 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.825684272 seconds)
    (183/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.853108437 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.901457868 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.213632043 seconds)
    (186/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.895641315 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.830930042 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 3.305015147 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.06460733 seconds)
    (190/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.848120219 seconds)
    (191/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.950212738 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.074218098 seconds)
    (193/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.806905069 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.825484182 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.970307733 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.083306783 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.854232445 seconds)
    (198/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.306841271 seconds)
    (199/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.966692588 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.166134787 seconds)
    (201/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.962148071 seconds)
    (202/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.752614633 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.170138647 seconds)
    (204/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.95902154 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.855770742 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.158164755 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.233189074 seconds)
    (208/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.958963809 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.848499465 seconds)
    (210/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.854497099 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.621277727 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.897085436 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.187684821 seconds)
    (214/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.916072087 seconds)
    (215/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.309179938 seconds)
    (216/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.978899728 seconds)
    (217/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.853648274 seconds)
    (218/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.82995479 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.663291641 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.043520157 seconds)
    (221/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.855938743 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.991798032 seconds)
    (223/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.012985956 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.917803862 seconds)
    (225/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.983870852 seconds)
    (226/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.900630915 seconds)
    (227/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.951190284 seconds)
    (228/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.727773248 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.036674267 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.850298576 seconds)
    (231/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.831454047 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.840744699 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.841029736 seconds)
    (234/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.990325247 seconds)
    (235/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.962961907 seconds)
    (236/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.0244237 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.87458006 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.696666096 seconds)
    (239/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.865487869 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.219856733 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.775015782 seconds)
    (242/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.265084955 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.831685543 seconds)
    (244/309) benchmarking ("sort", Float64, false)...
    done (took 5.58481804 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.816831447 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.906626552 seconds)
    (247/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.204583321 seconds)
    (248/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.848248541 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.085622609 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.97756518 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.584836658 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.837671695 seconds)
    (253/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.904978433 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.218693146 seconds)
    (255/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.182276125 seconds)
    (256/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.856203286 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.92122687 seconds)
    (258/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.206420125 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.83446367 seconds)
    (260/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.430366537 seconds)
    (261/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.052627992 seconds)
    (262/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.68535044 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.867312111 seconds)
    (264/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.404221901 seconds)
    (265/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.387708299 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.211314246 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.193033193 seconds)
    (268/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.816710833 seconds)
    (269/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 3.577649735 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.179114994 seconds)
    (271/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.140601364 seconds)
    (272/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.8670544 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.211283267 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.860138663 seconds)
    (275/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.45550326 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.957754095 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 3.424395269 seconds)
    (278/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.444436053 seconds)
    (279/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.996117874 seconds)
    (280/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.406185689 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.999218779 seconds)
    (282/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.971931993 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.163613975 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.835815635 seconds)
    (285/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.747454274 seconds)
    (286/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.012585212 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.924605896 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.917735699 seconds)
    (289/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.844696261 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.975068969 seconds)
    (291/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.852105729 seconds)
    (292/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.835674973 seconds)
    (293/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.978071859 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.123473251 seconds)
    (295/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.140126074 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.704402567 seconds)
    (297/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.239104203 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.284876955 seconds)
    (299/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.846283285 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.869188981 seconds)
    (301/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.065262561 seconds)
    (302/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.014449999 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.004905641 seconds)
    (304/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.84619365 seconds)
    (305/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.943646625 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.857075122 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.99408645 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.114655939 seconds)
    (309/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.313021682 seconds)
  done (took 1008.649018622 seconds)
done (took 1010.469626707 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.87089257 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.860004834 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.848413268 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.8661598 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.959639433 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.87840573 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.855438335 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.845122676 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.891696036 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.897870775 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.844244241 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.877486131 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.84637104 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.84849404 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.846075991 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.860747284 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.157445334 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.874861746 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.862765594 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.858748673 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.863395018 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.845219374 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.894875454 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.883455651 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.85019531 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.847717475 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.853584539 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.8673244 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.957053303 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.850938358 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.848249147 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.860559874 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.156602779 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.871485925 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.8441401 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.865830098 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.859528409 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.854946077 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.851683993 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.878807222 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.297427738 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.854285043 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.850562916 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.848261976 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.848295296 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.851863656 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.847567289 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.853932386 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.858731857 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.861248942 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.298663902 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.869544068 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.849426432 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.847704598 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.859356493 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.84799872 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.8541699 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.862802727 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.867899589 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.864996347 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.147118262 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.878305342 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.853552189 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.86565756 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.857088182 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.335407728 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.84856952 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.851813983 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.301797622 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.857318322 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.333205595 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.862765237 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.848565026 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.86264426 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.881754813 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.160146807 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.869441029 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.847204031 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.855466141 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.847095015 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.857094635 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.860835363 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.85308409 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.84887327 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.864984074 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.879256574 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.857629299 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.84877001 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.856226643 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.86751107 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.855958238 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.859072771 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.850467317 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.843220111 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.858304799 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.850631985 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.851399096 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.852525085 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.855046705 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.859084699 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.298925638 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.870212274 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.845209188 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.84861994 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.847569404 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.863241827 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.297815258 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.854790522 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.871695913 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.895395183 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.851795154 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.151422215 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.879184361 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.864411653 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.859657323 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.853628618 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.844884267 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.150428848 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.327826528 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.870619276 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.852926862 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.849138054 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.868537769 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.851167767 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.846643565 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.162525156 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.876835899 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.86559138 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.972071315 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.858621764 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.883025256 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.849066919 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.853551256 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.881824051 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.86637995 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.884813443 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.854350329 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.868077774 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.868941677 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.848137546 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.860399338 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.859498609 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.851967363 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.856017687 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.845788817 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.883241353 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862316724 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.864717661 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.874015738 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.971166402 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.847316701 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.151025154 seconds)
done (took 290.86356747 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.920366764 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.843535039 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.9485637 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.847116172 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.933194271 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.93824323 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.847417297 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.847962889 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.845929523 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.220761984 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.846870066 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.84772208 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.851258979 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.847761509 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.931660818 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.848543441 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.847823536 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.183999387 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.850847088 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.92251684 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.842312279 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.846353101 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.849873688 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.225778399 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.842205001 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.845310803 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.921171412 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.850849166 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.187484278 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.851925358 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.848836737 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.19002128 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.944013907 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.869783476 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.859909336 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.858353573 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.935475959 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.85750062 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.932360428 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.933135803 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.953740128 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.8920883 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.849840294 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.847255016 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.858949827 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.853850359 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.849492747 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.880147551 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.845943526 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.852142424 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.18433785 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.86438109 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.861361048 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.851061265 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.851288861 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.876025957 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.85057767 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.855893715 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.94512123 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.856420406 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.915931454 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.226564568 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.223505967 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.852640975 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.846296022 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.849086309 seconds)
  done (took 183.03221767 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.917266193 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.927166438 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.9205113 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.853472044 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.902984386 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.921817172 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.856479033 seconds)
  done (took 15.077012657 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.858781041 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.855052897 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.902827971 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.902276574 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.854851652 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.00187967 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.854992126 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.864485524 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.850779445 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.907390197 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.855542684 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.853208431 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.860759905 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.844268055 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.902769216 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.864719078 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.969926981 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.858428711 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.856336147 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.003299686 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.860810546 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.848549952 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.905237303 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.868937374 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.857809419 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.859991088 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.440486579 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.852926191 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.852368946 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.856331358 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.852556568 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.895442684 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.855499412 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.856434743 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.849712287 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.969729778 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.85570511 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.854302352 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.856212573 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.849907377 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.862055086 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.857628914 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.857148788 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.853070907 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.857071097 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.877058873 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.857520662 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.855487484 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.853862954 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.857049466 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.90381089 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.856450949 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.855556994 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.853379625 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.912248437 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.863219387 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.85940102 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.855057077 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.856331389 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.85330083 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.009230665 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.905482927 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.858525969 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.905859066 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.857109185 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.858399039 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.85843858 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.859146484 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.954029085 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.856120278 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.903089212 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.856206518 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.017024678 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.880213359 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.859117705 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.860060965 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.860279768 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.858270192 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.858846769 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.863801954 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.854429799 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.857624382 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.862524507 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.854163384 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.853279967 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.97058047 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.964219123 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.855762093 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.868820305 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.864046467 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.854483748 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.910833159 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.857425577 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.855313971 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.911547622 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.974873206 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.915100168 seconds)
  done (took 204.483616303 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.861562143 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.866246095 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.858629919 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.875694176 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.858691575 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.857487492 seconds)
  done (took 12.958680134 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.858103907 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.861655323 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.856969271 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.857707511 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.858986408 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.862156619 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.860199618 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.859883202 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.864226132 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.861249321 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.85937529 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.862116934 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.859095382 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.861415399 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.861451402 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.861536711 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.858338047 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.857665678 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.861315551 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.8614187 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.0100547 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.860416102 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.859537625 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.865173064 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.865093736 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.862861583 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.866729757 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.860675961 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.858473126 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.868876057 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.868569376 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.859763964 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.862042682 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.866860023 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.86550458 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.863912833 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.868967045 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.860130293 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.859437461 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.862225227 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.862694902 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.859904022 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.863247652 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.863118204 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.863129762 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.865706158 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.86683263 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.86751249 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.861157831 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.859728071 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.863908934 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.857113579 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.861581359 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.861301702 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.861472291 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.867199244 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.864692204 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.860348465 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.858949365 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.862663448 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.861526757 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.862049622 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.862913138 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.865558328 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.869086777 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.862561202 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.861655557 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.865735588 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.863703157 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.863468587 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.86344009 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.859547219 seconds)
  done (took 137.015709808 seconds)
done (took 554.356904601 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.955246179 seconds)
  done (took 8.73946892 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.992784497 seconds)
  done (took 8.867225766 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.36694341 seconds)
  done (took 10.151358056 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.877470043 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.894692649 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.857230876 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.85600793 seconds)
  done (took 29.282342584 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.015519289 seconds)
  done (took 8.799823399 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.870703395 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.853438573 seconds)
  done (took 15.543789418 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.909489952 seconds)
  done (took 8.697806931 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.002694326 seconds)
  done (took 8.790900401 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.867235348 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.883933579 seconds)
  done (took 15.550982361 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.841622477 seconds)
  done (took 8.627209148 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.568277567 seconds)
  done (took 11.36281478 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.861480404 seconds)
  done (took 8.66121682 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.897353784 seconds)
  done (took 8.682914071 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.858622152 seconds)
  done (took 8.642737143 seconds)
done (took 162.184954182 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.863379585 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.851869444 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.855107291 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.853605509 seconds)
  done (took 29.208517151 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.896048796 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.89653808 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.897004433 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.906985197 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.899169073 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.895300313 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.886907677 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.887562994 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.908482331 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.897080247 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.898649395 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.898617546 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.894871015 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.888395322 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.898509621 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.898067129 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.90684397 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.897225494 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.887881542 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.900297913 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.863042955 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.906970249 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.898781488 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.862274855 seconds)
  done (took 47.258636422 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.060626356 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.933560443 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.01641928 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.912996709 seconds)
  done (took 9.709633539 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.914968439 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.916210854 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.926527301 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.966689597 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.99047222 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.925679885 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.88876439 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.884419447 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.870864252 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.917190868 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.991597272 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.908015193 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.015082877 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.863720607 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.051216632 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.862760863 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.862969412 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.918124499 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.967529966 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.981873519 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.865540499 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.91650401 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.921290587 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.911920837 seconds)
  done (took 48.027428754 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.86232068 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.871343769 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.869466459 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.862623772 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.86497343 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.865318803 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.870640458 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.864173651 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.884490454 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.865798291 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.863365471 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.864769427 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.863025387 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.862182789 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.863258822 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.877127904 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.877095994 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.863737847 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.868305829 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.870575666 seconds)
  done (took 39.141688515 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.858426886 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.712133217 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.2111652 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.112996575 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.858658387 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.859119394 seconds)
  done (took 31.401584023 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.879103696 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.872509372 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.865654246 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.92265203 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.000400331 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.874233698 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.865231825 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.877603129 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.912382009 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.925245368 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.885734554 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.895176848 seconds)
  done (took 24.564632735 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.875299284 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.860562676 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.859912121 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.874798666 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.876301092 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.874601081 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.873822051 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.858589832 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.878043102 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.883775836 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.872720453 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.880271363 seconds)
  done (took 44.261823774 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948604806 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.749249261 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.950293525 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.593671863 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.331659126 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.071556355 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.377029712 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.200726108 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.865367318 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133708975 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.99423377 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9674908 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.115879373 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859476625 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.878914531 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.363471483 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15816596 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094468792 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892242221 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.62979879 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912476863 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386043342 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.711040558 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.922482664 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.071633093 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.992094913 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.122099993 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.823865886 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997268376 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898828165 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873059975 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.860763776 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136643456 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24232284 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958392293 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873492035 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.517480559 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.581829023 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.856123681 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.629981985 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.69650187 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.984607027 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872546577 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86278945 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.7981321 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383987272 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245978318 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.865717565 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.573440715 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.862176756 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875034613 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9503975 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.86529631 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.678104369 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814735517 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.141630306 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.860561372 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869835381 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.434453633 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.983656321 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422175969 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.841914672 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.054937068 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.644396746 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264841377 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.014686755 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.865230067 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866741164 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798557807 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.085574026 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917372548 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.01299464 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.883408395 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.514551402 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171499364 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.048308612 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.808356525 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155153774 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.677919022 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.842980348 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093482284 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.811604084 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799182175 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.726284125 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.797194121 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137320514 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903604385 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.510083709 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904542705 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195623689 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.870996539 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878984065 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870669192 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.086705995 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.428062128 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862790242 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.744482268 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.012543462 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890346359 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.209837966 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803770027 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.87063477 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124644246 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.079022796 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.12149166 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.405800164 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024653334 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867438473 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.945745246 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.805176694 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.922444585 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.147351237 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930676247 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.993290574 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927600964 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.83051408 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175489783 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895930925 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.033266146 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.055734196 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.996583169 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.212445278 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.1689701 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935729011 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871919819 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.869140037 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.718873131 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.425708713 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.133637515 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.869749708 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383953986 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.924794715 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.870360533 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808300236 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.496780685 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.002664577 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.841042111 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.09794908 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.832741515 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187507767 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806364175 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.017213773 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.984320709 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.090187821 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.523547149 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.943845343 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130848685 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366659236 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.155265203 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923818813 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889866483 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961821782 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895434249 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.307935932 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.167425686 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.876594557 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.875326199 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.740309233 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.878378576 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873077118 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.877110909 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.670134074 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156939417 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.899920927 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.874383393 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.762901882 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.886684264 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937230943 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878261026 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.883006407 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.417973025 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.619722662 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.881109864 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.497312296 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093976818 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882235424 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.63132783 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986361812 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.956677488 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146779585 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939144278 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.806765992 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.582628907 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.567382256 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873936531 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.809269937 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.875222022 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883102902 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88430275 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.257097691 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.156919114 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922612443 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.766851561 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.915790798 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885235007 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.879524042 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872530793 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.415781835 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.997498925 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.446007475 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.919678531 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011549083 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.886206918 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.809503311 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.876565398 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.87961389 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.873495711 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.832245146 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92614485 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.648908258 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257101774 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130977442 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.523367106 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889387473 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.78600485 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.934617973 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.947748877 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.789784105 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83032616 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.908179013 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885571572 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.88542604 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.66600603 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.582730828 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.44017519 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188814968 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195357465 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32579878 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.385165137 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.177219264 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.213250599 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108869428 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.403871617 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938869841 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.220375878 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821549186 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958432504 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.524766666 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221299374 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886558185 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102010631 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267124105 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.858387297 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899490041 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087431713 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911298093 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.800957993 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.835573841 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.081324288 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017083599 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.686778997 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078695752 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215415053 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.650210927 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.989418484 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.876931377 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.586706511 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966108491 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.590548033 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.239900204 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411481719 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.921275029 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350228269 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.879753735 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.322287211 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238665682 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.212028862 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.001646175 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811697161 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.888482253 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.889770649 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.877244301 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.873464422 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.751148228 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.128582128 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888104973 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113387675 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.156655376 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185521771 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.78892506 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.882594918 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879686399 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181417987 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.697663981 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048638075 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.361596504 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.406624536 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879165216 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.806642638 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806329804 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.566325097 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.877968703 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.852735124 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095654695 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.05672488 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853875759 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380751518 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112502572 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.121920287 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.883144643 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.148491703 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.145763349 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.602923049 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895164488 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.968361834 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.63898698 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.979526376 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.14148945 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109679218 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.673555758 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.102611703 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.936109859 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.694351135 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.871936312 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088513908 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.144615262 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.88105127 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105069925 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.594659198 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.893380669 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189530918 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934038828 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.915245219 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.02285344 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.068992123 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884903274 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961401452 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885897134 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.886525249 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.885604525 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920650555 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.914999697 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.996693068 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.889153496 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962886825 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.003921371 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.41625564 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.881306803 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158982765 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236970339 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.210986909 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937648569 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.875112985 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874865207 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809181962 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01070309 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.321712813 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150127795 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.007268601 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.173883178 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902329243 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.919151147 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.263321237 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11874291 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150278241 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.770626946 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877438807 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.901948115 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.143713005 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886557407 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.087284378 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113285303 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201099138 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35041655 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.137083094 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.245028143 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151905155 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.2441078 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.878128293 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.467248889 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.909954871 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.590585745 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.923041048 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.097788094 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141346471 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887884462 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269291297 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.898423388 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.077412825 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.393429974 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.661959719 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166896822 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.865955602 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.939383588 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160628884 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.272190299 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19273535 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948389663 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888769903 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.592580801 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01525593 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.750112814 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.147270546 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879090291 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090081656 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.588701798 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.889381195 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162863638 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189859504 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.875224248 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.754046399 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886506798 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.889615856 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.102913399 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156137056 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133012345 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888418961 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.886972662 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.693209936 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16304421 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94121018 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813077322 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.883063167 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981659133 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.126811179 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900759063 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.397818467 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.591574144 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18468269 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.801474143 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902643188 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40997143 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.259633167 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215016039 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.428951136 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112124437 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.441067411 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.869517018 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182601 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.887471528 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40913562 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185490578 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.884951517 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.515374565 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92105342 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.159069418 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199669221 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.936652227 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.663512576 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.852031055 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104607193 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.476215337 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822496695 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.881608425 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.942117964 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.880883354 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.010690641 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892020079 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.765429954 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831530332 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.630523557 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377766277 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.885971355 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.867709964 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.683507993 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.541712176 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916490614 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024596313 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886982958 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.594172117 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.176979276 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.137996648 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.514230472 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.890476032 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.886943529 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8839715 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810645409 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.077032089 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.262797842 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187911821 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.364692852 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.920487126 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88637882 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.098745876 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093982452 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.905719022 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020066489 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391620779 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922572002 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.614667709 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.564325615 seconds)
  done (took 1690.693697106 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.892909806 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.917275534 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.902858856 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.972269116 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.939919363 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.935579355 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.99023131 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.957651604 seconds)
  done (took 57.321955307 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.888068362 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.080170534 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.891345943 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.886750932 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.892273626 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.885467324 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.052723787 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.893978938 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.891142852 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.894971121 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.902681634 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.88339616 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.19871588 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.908047726 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.884925664 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.875814189 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.892278398 seconds)
  done (took 74.657355141 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.885194923 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.101399926 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.920273931 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.905077526 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.850693307 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.898023239 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.861587566 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.896320953 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.888136424 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.111726734 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.221445814 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.912506535 seconds)
  done (took 90.268016426 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.894850691 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.8917777 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.891342407 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.892107191 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.892396162 seconds)
  done (took 11.282075417 seconds)
done (took 2199.644932418 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.276051314 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.109145144 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.126784345 seconds)
  done (took 6.051677819 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.042445301 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.089350981 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.208821179 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.226452899 seconds)
  done (took 10.39209332 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.186104904 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.26864428 seconds)
  done (took 6.276661215 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.303612436 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.901237658 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.292963806 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.892857536 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.892766813 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.894378738 seconds)
  done (took 22.508617018 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.896230199 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.899719264 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.895386473 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.89901843 seconds)
  done (took 9.411786817 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.877680399 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.609985785 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.876269998 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.891029659 seconds)
  done (took 21.077738123 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.644202459 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.329320821 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.639230926 seconds)
  done (took 9.433193375 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.367551985 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.779437142 seconds)
  done (took 8.969944712 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.148694265 seconds)
  done (took 3.970945949 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.923958637 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.165411136 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.417434293 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.426527786 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.501592227 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.749254564 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.217328061 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.143557851 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.311704549 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.337405839 seconds)
  done (took 25.017556789 seconds)
done (took 138.698904972 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.273182552 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.903968463 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.099042758 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.243098955 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.131322287 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.095892598 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.106519835 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.226866427 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.739289833 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.738112252 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.240916074 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.182569473 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.038348312 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.133174597 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.045886399 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.134554062 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.123043011 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.287267584 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.939938779 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.135877237 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.09815017 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.871076576 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.083218562 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.883755229 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.178191478 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.050460148 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.462257642 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.135426515 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.093537312 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.468505427 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.051924251 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.29179927 seconds)
  done (took 172.310346946 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.650120323 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.894616032 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.894199137 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.895999778 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.301422351 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.894702112 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.896864391 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.895790049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.994079214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.981566838 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.907069641 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.303434622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.90392122 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.894154939 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.899094212 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.894610538 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.210008314 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.707183038 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.90440799 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.908118269 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.912656086 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.149219483 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.913417409 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.189023671 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.229654164 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.91343854 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.89452548 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.913990359 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.90408468 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.892230082 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.906561719 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.89599174 seconds)
  done (took 208.372621829 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.877275492 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.895038057 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.894557755 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.897211096 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.898559279 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.895344121 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.897047546 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.894877601 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.50240319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.495319365 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.899680868 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.901256695 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.904640587 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.895076715 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.898271048 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.897218741 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.902057245 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.906947927 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.900377774 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.900628073 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.904557522 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.672308851 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.903315682 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.683908883 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.902254973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.903869156 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.898371497 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.90626711 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.90973417 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.909473074 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.907959826 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.899026364 seconds)
  done (took 221.396820196 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.096227102 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.906060808 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.9078618 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.853533151 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.908146173 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.90640007 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.864222456 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.103572584 seconds)
  done (took 19.391536703 seconds)
done (took 623.306092208 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.386707981 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.222941477 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.081637001 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.928781557 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.179691643 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.959461292 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.926302749 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.990906199 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.659395166 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.000841137 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.619511769 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.945080277 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.716263154 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.950131637 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.050375948 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.982304388 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.470914501 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.559522572 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.102775487 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.008283238 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.100394672 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.869086884 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.005464785 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.690635016 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.730667288 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.908450718 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.12112573 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.475219263 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.937126907 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.092584968 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.741016919 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.339418336 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.936610798 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.925956619 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.984894043 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.964149988 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.302759295 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.935914761 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.046741694 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.663014755 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.008565022 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.546177158 seconds)
  done (took 104.898213224 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.896452606 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.89702473 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.897217156 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.896985422 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.898075408 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.896224922 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.896677551 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.896189336 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.896987759 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.89762845 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.89534679 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.898642028 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.896676421 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.897708349 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.896994087 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.896883277 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.898070192 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.89988592 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.897213614 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.895631531 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.897834467 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.898787198 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.911381491 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.899315649 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.896976386 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.898134755 seconds)
  done (took 51.18799865 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.910726891 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.092715676 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.163220545 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.927703108 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.911257299 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.915270617 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.927808105 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.914833233 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.913670447 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.915261622 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.021978133 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.917430007 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.93190037 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.164074856 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.924484279 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.91168997 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.911269751 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.911351742 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.103076912 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.927860285 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.931856449 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.915889713 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.929538959 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.923991867 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.91485877 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.913008161 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.916692175 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.377353117 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.920742374 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.023935335 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.955029463 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.932946977 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.340429317 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.179009887 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.96298187 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.917590945 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.914835838 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.025982967 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.916327772 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.913360018 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.931366214 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.916187395 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.167296446 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.407629521 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.924831207 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.913672393 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.389033354 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.033083788 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.952606981 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.922346305 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.172869715 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.928124244 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.914649131 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.91532357 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.949431625 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.922780538 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.913829447 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.239231301 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.923052603 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.93144957 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.917426019 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.915792935 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.106771469 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.922146106 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.094521948 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.923738753 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.921170364 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.915498583 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.17270652 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.928910765 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.421038569 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.924002489 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.913237147 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.025623727 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.096308801 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.413662257 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.924331205 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.104326989 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.349825925 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.937004509 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.919299732 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.367634743 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.941515779 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.922923663 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.915941059 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.915171898 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.91360986 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.966820598 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.930104489 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.343480568 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.417257712 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.250443019 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.93812326 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.930547132 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.9135146 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.234261619 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.923319991 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.914350096 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.164794053 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.423114742 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.927248784 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.921717999 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.405470023 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.928179514 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.933318735 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.924515306 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.174854584 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.928468402 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.967498868 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.915917907 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.92238112 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.918580808 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.934513555 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.921146181 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.915667996 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.405743807 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.040685909 seconds)
  done (took 237.611033381 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.91255758 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.908123798 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.90792121 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.922335599 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.908067154 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.914453917 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.909295129 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.909157846 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.914444115 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.91152925 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.908254437 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.911215893 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.914115016 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.916556243 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.386149245 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.923509911 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.529484069 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.916551862 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.912879969 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.914759774 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.594890954 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.920456934 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.91163383 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.911056836 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.913307064 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.913614918 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.922017681 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.957681434 seconds)
  done (took 169.240682596 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.920509046 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.10151616 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.937408287 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.957463488 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.93235862 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.917788591 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.9437795 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.937491507 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.927146685 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.916825794 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.918721711 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.981507325 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.935685869 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.063471284 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.951532424 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.958725726 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.028060025 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.928230523 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.920709964 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.918631454 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.949827306 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.913092537 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.981882449 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.051465076 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.939406835 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.037331632 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.926715135 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.922348442 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.920256052 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.040196675 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.935446191 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.984515701 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.946239642 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.93931627 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.045974712 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.039213025 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.031530751 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.948783671 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.925485099 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.91979207 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.919129465 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.907494964 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.040301815 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.945705066 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.922875692 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.030312887 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.943690583 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.922322663 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.930997768 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.918492006 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.934263503 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.941619095 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.992837951 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.055236399 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.95709058 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.949932104 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.949056408 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.212808221 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.931597555 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.030159341 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.91305875 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.040241052 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.94367198 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.908857956 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.923476475 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.927775472 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.949161235 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.956435175 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.027914864 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.929434921 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.02677394 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.956941562 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.932095144 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.921707621 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.924627336 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.041232596 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.047608009 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.956645931 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.962762373 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.9573731 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.920662989 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.923211206 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.909968201 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.940450087 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.929724573 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.042370593 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.047027154 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.930363909 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.926480058 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.924866137 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.924304034 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.948464048 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.054801518 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.96333391 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.024254346 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.993175375 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.000399416 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.937628681 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.936950811 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.927160673 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.98765871 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.940490088 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.934667329 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.260653691 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.997242661 seconds)
  done (took 208.351002243 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.408471169 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.980490902 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.984419429 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.239722358 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.3614524 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.804843337 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.97051978 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.974684318 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.996541518 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.162086637 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.046728889 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.993200886 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.964473318 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.949620274 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.975752311 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.996146073 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.99027097 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.312372828 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.104407439 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.114349698 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.95604223 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.289711437 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.29693565 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.375911874 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.017956986 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.305231852 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.658232391 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.119219997 seconds)
  done (took 63.204070592 seconds)
done (took 836.322436261 seconds)
SAVING RESULT...
DONE!
