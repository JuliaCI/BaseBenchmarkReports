cset: moving following pidspec: 21886
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.633823552 seconds)
loading group "shootout"... done (took 1.248528235 seconds)
loading group "string"... done (took 0.421890171 seconds)
loading group "linalg"... done (took 7.881880325 seconds)
loading group "parallel"... done (took 0.159241501 seconds)
loading group "find"... done (took 1.315929042 seconds)
loading group "tuple"... done (took 1.917663102 seconds)
loading group "union"... done (took 12.56779869 seconds)
loading group "dates"... done (took 1.348001 seconds)
loading group "micro"... done (took 0.200588238 seconds)
loading group "simd"... done (took 4.375595565 seconds)
loading group "io"... done (took 1.013487517 seconds)
loading group "random"... done (took 8.698016421 seconds)
loading group "problem"... done (took 1.440733896 seconds)
loading group "array"... done (took 19.363446114 seconds)
loading group "misc"... done (took 1.504798858 seconds)
loading group "scalar"... done (took 39.757714694 seconds)
loading group "sort"... done (took 3.150956408 seconds)
loading group "sparse"... done (took 11.826420608 seconds)
loading group "collection"... done (took 17.430561076 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513027487 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121686724 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.125906965 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116397601 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145526297 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116576884 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123605291 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083067242 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.820274426 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.140348328 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.112328886 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412818284 seconds)
done (took 5.201557321 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.165224602 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091748672 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084004593 seconds)
  done (took 1.316109055 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063470309 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131067063 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063730933 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064501417 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065032359 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063420573 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063303314 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063627582 seconds)
  done (took 1.657027841 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07038826 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065436123 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063585191 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065408452 seconds)
  done (took 1.405785768 seconds)
done (took 5.76332992 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.235126255 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.099001419 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.278771683 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.441816495 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.598933765 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.089710665 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.071905978 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.067527351 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.127663401 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326142025 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102091309 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.181025807 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088117033 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.171635871 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.983719488 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.118410337 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082921036 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.120906865 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091151219 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129033525 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.389817604 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075976248 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071878846 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.068098028 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.067953325 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.641948272 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658920049 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127271505 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08133914 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.161363481 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113850228 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.640454612 seconds)
  done (took 10.680381803 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.091722343 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.089669482 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066311717 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121555691 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091167729 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067148814 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072525065 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.064897041 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086116023 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12210055 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087238784 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.096335012 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064095017 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.066286037 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072604082 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.194121435 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.077757062 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.078501858 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.065455738 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077773341 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103450585 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07596838 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076445374 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076111965 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.126409947 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167251874 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.094179217 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099147535 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063479715 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077626919 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114853799 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123352859 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064065429 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063215975 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117928012 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092257138 seconds)
  done (took 4.476444619 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.95409087 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.090526492 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.099777829 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.616522927 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.089987076 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.148716185 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.242124197 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070485717 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.319794277 seconds)
    (9/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.063739276 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082711725 seconds)
    (11/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.142643683 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.108500032 seconds)
    (13/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.143730674 seconds)
    (14/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.114236168 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067024496 seconds)
    (16/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.199328425 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.111788532 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.495432411 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065354268 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.064948116 seconds)
    (21/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063024699 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.06629037 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065665996 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061416828 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067566574 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092735918 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085478855 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.158441752 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.916658363 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.237664665 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067722589 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.158847349 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083739489 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.35419841 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.067604558 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080525677 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.411080224 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.120389559 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063114309 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162690221 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.11378607 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.062839299 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.114973856 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.076263951 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.06663949 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.066644124 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066182738 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069960426 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.076295365 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098632315 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065327201 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06322875 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161224421 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062248389 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064298247 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064963306 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.148097595 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062225999 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.138053519 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062134327 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06676343 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.098467475 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066084697 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062324083 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087011663 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.097782159 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.355385529 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.034091327 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067477009 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.191321961 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07310764 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063817636 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06870338 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064180485 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.065275767 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065166989 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071070135 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067487633 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065885449 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106182761 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06455024 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067296317 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064777364 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069664061 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.095122672 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063082099 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.473518262 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.095223865 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064145463 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074715833 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.102677656 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064663957 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.069425637 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.065094613 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065014813 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064241905 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064641002 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067504655 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.062141717 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.092143497 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.176622627 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.110521198 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.033886644 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066922587 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064647543 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070162607 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067499644 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069623494 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064837407 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067136334 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066372776 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062814214 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.107377672 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064824781 seconds)
  done (took 21.544429749 seconds)
done (took 38.795965433 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.254318885 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07852289 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078600277 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078628974 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078597057 seconds)
  done (took 1.805707472 seconds)
done (took 3.030032376 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.106288979 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.061719313 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.097837815 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.096491016 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.06226965 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.061627457 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.094914521 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.061971574 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.095266416 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.096817267 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.098668366 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.097628144 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062047337 seconds)
  done (took 2.325873698 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067703871 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.07960611 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.080753696 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059905396 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070443058 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079425727 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.05984892 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.07958902 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084315099 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078953141 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.08035948 seconds)
  done (took 2.036842452 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067527232 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079290542 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.08356254 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059510336 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070616683 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079324089 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059674874 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078398863 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.08164995 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078956175 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078804767 seconds)
  done (took 2.025043961 seconds)
done (took 7.598043439 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.064901337 seconds)
  done (took 1.259381563 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.522283814 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.501771736 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066525991 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.086532703 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19067818 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.09493193 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.220372704 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.070639744 seconds)
  done (took 8.128310835 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093663378 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.06967733 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065394811 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06533213 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065897283 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067238722 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.066100628 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067120637 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0661439 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067054275 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.067410265 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065942283 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066687577 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.067785033 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066794776 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.066180202 seconds)
  done (took 2.394537009 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096445532 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09440025 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07053805 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.0714544 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069282433 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068739158 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070711353 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070492632 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.068070452 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069085921 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.070845866 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069907343 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.06903716 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060792181 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070273841 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07165954 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067233334 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070922696 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07154024 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072594683 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071137958 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060570666 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069421223 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07071323 seconds)
  done (took 3.037561694 seconds)
done (took 16.028958377 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112593185 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072900379 seconds)
  done (took 1.391161826 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.067554578 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068304119 seconds)
  done (took 1.353240787 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07399247 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059026706 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.080443621 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070243309 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059735633 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059151316 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.077929329 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059582843 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059220481 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059244576 seconds)
  done (took 1.874667422 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.061444246 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.06848103 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066387458 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068167103 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066134026 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060401829 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063984001 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060886393 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068670853 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.05967157 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064539907 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080456791 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064038712 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082088412 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063671751 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064625355 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066558619 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063838721 seconds)
  done (took 2.413137853 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.059665112 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060456605 seconds)
  done (took 1.343809975 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06388098 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060528902 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064016562 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063276773 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060393324 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059322714 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060279215 seconds)
  done (took 1.648388964 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.408216298 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117235839 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.333598051 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.065890912 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.07515679 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.245637236 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.061342261 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066774029 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.066297509 seconds)
  done (took 2.700813858 seconds)
done (took 13.956602043 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078708714 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.082465847 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.087151984 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.410494037 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089240795 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064444571 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110773137 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.173243238 seconds)
done (took 2.337095991 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.233911817 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.340975376 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.896148029 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.06759443 seconds)
  done (took 3.533533526 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326210161 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.076703641 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076271575 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064506543 seconds)
  done (took 1.781153253 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.063368392 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068689278 seconds)
  done (took 1.363005209 seconds)
done (took 8.148734866 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061824033 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061669314 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.088733002 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.061824808 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061316958 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062077076 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061705912 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.061091506 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061287481 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060786866 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.061133349 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.061031295 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061071101 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061729289 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061410788 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061545774 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.061272924 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06172566 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061262253 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061435535 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061669531 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060964787 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061204574 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061262234 seconds)
  done (took 2.764123422 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.078698098 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064124811 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065156038 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065168122 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065804647 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064730607 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.065431555 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063511326 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065534855 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063245427 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065098003 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065044468 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063277511 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065608635 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063294548 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065077163 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065038846 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063309154 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063575576 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065289074 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064815036 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063808957 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06546981 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064487502 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06503203 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065132475 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062940895 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063426419 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064877527 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065600341 seconds)
  done (took 3.195507104 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.062024788 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057921379 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058684773 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067665033 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058781204 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.059380935 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.059242955 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058131912 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058973132 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059732251 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058792051 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057864813 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059085686 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.058042116 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058159314 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058314837 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062108699 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075592102 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.05845915 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057968872 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061466409 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058103385 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057844779 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058188691 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058833565 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057830149 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057966708 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058644366 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.058036513 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.067869086 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057684044 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061656257 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062705424 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.058024552 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067188829 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062199389 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057983085 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061408325 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059049106 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057892992 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057621833 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.05761568 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057840555 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057748449 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066827356 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.058659225 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059225877 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058706712 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058186836 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.0574387 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.058343805 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060303077 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06307584 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059512348 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057997801 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059046737 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057778586 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058572319 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058045981 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057835283 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057788732 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.061151515 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059521296 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058846399 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.0752778 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059488784 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067167886 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060048325 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.058712277 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061218668 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058388657 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073384752 seconds)
  done (took 5.584893077 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083406364 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085230156 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063186205 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063268161 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059557604 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058687486 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066570321 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058445542 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062735442 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077664195 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058469774 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062782494 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063187472 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062380791 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058764952 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06284252 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067025927 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058741018 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058731162 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062351997 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058622777 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06578784 seconds)
  done (took 2.6771912 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.137897762 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064146698 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101360909 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074556008 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066830629 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074706485 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063827828 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064311612 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064559394 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067164397 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064464049 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064279763 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066749992 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064783234 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064534493 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064741902 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064182799 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064768943 seconds)
  done (took 2.549367074 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075968151 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063992753 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085993193 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064185346 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06425774 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06387636 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067885156 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068394167 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063394807 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063550464 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068614385 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063078532 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063374759 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063885822 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063661449 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063694502 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063295246 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063887433 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068306049 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067794401 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067951019 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068231952 seconds)
  done (took 2.718955854 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073355517 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062862329 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076065647 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064184977 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058629838 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058827973 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064022658 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062881766 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064494878 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.062301998 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062667604 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058495246 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064642862 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063359054 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064699799 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06304291 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06247302 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063179113 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062545041 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058615775 seconds)
  done (took 2.524045155 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084935686 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061677826 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061501476 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080329941 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061263257 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061805668 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079367203 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060983398 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061331298 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082706487 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061069949 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061129208 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079496832 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0797019 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061235778 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079597055 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08010968 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079627491 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061480713 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06098683 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082056755 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061015476 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079605101 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061239354 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061358078 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.060983664 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061128697 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079655977 seconds)
  done (took 3.201449665 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061784898 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061003108 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.061541342 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061372415 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061358795 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061372891 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061927252 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062116183 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061426697 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061962775 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.061263222 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060976724 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060956912 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.061021901 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061492515 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061266209 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06111993 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061300331 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061301803 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0615081 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06110882 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061288033 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060744772 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061448249 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061688576 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060980104 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061583389 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061627547 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060858308 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061426072 seconds)
  done (took 3.101553297 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071601167 seconds)
    (2/2) benchmarking "in"...
    done (took 0.070422238 seconds)
  done (took 1.399868752 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061201475 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074916209 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.058446623 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068345314 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067570455 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061634965 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068309797 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067140134 seconds)
  done (took 1.781732662 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.06549719 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.088101485 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060646161 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06103761 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063970493 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.117205304 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.07475581 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072456095 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072545307 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061770373 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060676867 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071659329 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059693888 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072371334 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061519279 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06787824 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066171137 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071237509 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071545685 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058775082 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07091262 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060892147 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.05898457 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060990671 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060007578 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065983437 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07446348 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070935124 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067697483 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058058831 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078463558 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058871053 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059870777 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067595918 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063673632 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058601871 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.0938886 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.05921976 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065024198 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.05842129 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070266052 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078421242 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071921943 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.07598614 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0606544 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061135735 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058624064 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061318625 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062089755 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067405357 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058705166 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06758382 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058663716 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060421071 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068545134 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059310938 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065000086 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067585265 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071216829 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068388966 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07101663 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073551286 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067478894 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067806547 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059947913 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076840394 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060539375 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070705163 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072388846 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060137465 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071605857 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058409326 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058230556 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058721196 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090806497 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060924794 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060066367 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059281151 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.059093776 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.06075953 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067955767 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065350328 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065838188 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063174562 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07407258 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067703288 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058829483 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.066776968 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.076420212 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061981354 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.05935034 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.074505435 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062171057 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058468473 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075710243 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067834464 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060645708 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059416739 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.0621143 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07219062 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060193934 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057588317 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066492487 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.06037928 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061629635 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.064180288 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066336686 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058793098 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068269205 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064232628 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060212279 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057587238 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062383269 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059542604 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05700198 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066744837 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058423598 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072251047 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064513894 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070934717 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071445619 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.067696778 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072346586 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057622726 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.05635863 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.074438441 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.066585179 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059007173 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.206552478 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060242165 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070142304 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059716562 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061690349 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.068783932 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059008216 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061222428 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059645141 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065333813 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061367032 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061602513 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064246336 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067252855 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07109569 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060876027 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067388721 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059537445 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073841214 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068432175 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063468436 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063682275 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.060007501 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070863818 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065370308 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069008344 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058839424 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060152674 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059320853 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068555804 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068120471 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061696931 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067827052 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063273154 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059904127 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059140661 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060809204 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062673816 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063321134 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059926825 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06671488 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067434757 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074717525 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067556113 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067597093 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058568224 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.0591349 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060770023 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058460325 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062809305 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067589469 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073494984 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070884266 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078669651 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058856593 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067698707 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060466164 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074828772 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071147521 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060091663 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064177509 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.05763846 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061083118 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067603447 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069801295 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.072177111 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072773766 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063573789 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063345752 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058970464 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073192737 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.059226834 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066536952 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.067866904 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065081501 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058905075 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.061051196 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067435719 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063232086 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059333091 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.073970587 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.066343507 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058537241 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071977133 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059255102 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.069127635 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058777775 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.0624772 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063912037 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061132034 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067937617 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073607526 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057846927 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059432658 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073588287 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061193701 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060994665 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06643636 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.07320393 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062808448 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065884463 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068610332 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067321449 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062450459 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067364835 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060075162 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.067277966 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062515416 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070041485 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058499428 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075681191 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057400925 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.072538478 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.05899742 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.069040473 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058823676 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06726436 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059976868 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.074806978 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.060499346 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059709216 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.069884366 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.05752385 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06674294 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057726169 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062569204 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064258272 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.066590186 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059956776 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066474514 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059869133 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065868156 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.196230008 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068575792 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.06938894 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064904735 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059798051 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067291142 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07096339 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067671672 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060840466 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061330266 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060149095 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068050076 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061426549 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060625381 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067245436 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063630897 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065561944 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061564205 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.06174864 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061720863 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067598617 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068809901 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076865126 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06761997 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066285444 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068451689 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059299219 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073863852 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.05963099 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066667223 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058462504 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066487557 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068220447 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059701158 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077930694 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.061075005 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066766269 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071552506 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067547887 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062727617 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076392426 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.06329448 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067404808 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067061562 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06327275 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066102004 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060725898 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066393366 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06831316 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069275168 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.060089226 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065766348 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067278015 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060727713 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.067672879 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060897957 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066612531 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060966155 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.05878946 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.063214712 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070259217 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.063201135 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06390684 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059335782 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057939663 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059469917 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.066765695 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063423266 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067225768 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073691557 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058213562 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.060146137 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058800619 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064579539 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076259854 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068365999 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066465777 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063783325 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.058586206 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061142173 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061251712 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059381875 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.062889753 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058470638 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.059223836 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069192463 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061092594 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063313769 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059569146 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060768152 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067860045 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064667716 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.05936919 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065087753 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058781612 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064521292 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058369454 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06112748 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062858331 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.058189772 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062128251 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.068720312 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.074590482 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065253419 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067556924 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059859399 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066228747 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0737645 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066917509 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059849679 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067328953 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057972053 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076079442 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067360205 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066634735 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067692781 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059731798 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074149722 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062459774 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067730105 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072868571 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059417079 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066262177 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057849147 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072833463 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.062498156 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.057690067 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065397235 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065049671 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063494511 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.068513218 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.058059664 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.064653906 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.201687813 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06289248 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.062034642 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061739321 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068052713 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074814183 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060814707 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064691148 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067221274 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067440045 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06361526 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071485804 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066870397 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060754387 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061747913 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062798451 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060785674 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070670759 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059295849 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063081696 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063857777 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059207163 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.065753685 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075019191 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068133746 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068811648 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058815752 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058765224 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.075817533 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063102349 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063088301 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066878987 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06797517 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071861336 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06844708 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075455681 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060009762 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064605176 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071246927 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060327509 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058822519 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062659722 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061588049 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067610606 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068663335 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065909076 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0618111 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065319829 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071634889 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060583261 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06310067 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.064392029 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059917767 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06908262 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066338969 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066989184 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.060657948 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058905528 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061880761 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067888571 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066434268 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067674365 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059942646 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.066960757 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.072352042 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06569028 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063413423 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058807832 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062825636 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067189183 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064846631 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058818127 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063350663 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062303421 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067014159 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067819371 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063756304 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058958099 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075057205 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066948382 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.067884942 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.06123604 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061312789 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059734075 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058882614 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069846701 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059153924 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061307375 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063678194 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061111883 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.075795617 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067012744 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074077959 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060016912 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063148135 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058634275 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068035442 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062948938 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058987941 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068542885 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058262547 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073281169 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.070585888 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068052999 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058978315 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063554536 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067136415 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073389516 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068230752 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067265062 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062843071 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067732602 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.06079731 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.068979426 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060199575 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057818221 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068146483 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066439918 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070150065 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058163326 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.067891093 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060693817 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066584474 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066045711 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.060159633 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060267181 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059752173 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066820392 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062428559 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066983144 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062012582 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073058406 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.058651314 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.204876212 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06860042 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.071138698 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072690698 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071876655 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.067487409 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060169843 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066858146 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067278399 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060876834 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063851897 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.06336321 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080045213 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061047507 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061300831 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073561808 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067245644 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059114509 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067393827 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063679904 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.069431037 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.060618525 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069561281 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063927858 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060389756 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064036917 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064033668 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058752495 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.05947666 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.05954116 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069020161 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063823171 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.059303631 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077947535 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061720323 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067523283 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070474628 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065732919 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.06153522 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058668675 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060575722 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071313732 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073857515 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062257188 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067196712 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060972681 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068311461 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.074267339 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066944739 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066572208 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06709392 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058844666 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059072507 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072988152 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073566595 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063309824 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067781381 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070095828 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.060864329 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079761642 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066820754 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060248888 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.069229704 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061831497 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.058324628 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058424645 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.060799145 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070336571 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058756921 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.061657318 seconds)
  done (took 40.655900221 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096855892 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060197661 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058734726 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059422786 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070980154 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060043087 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059040773 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060397903 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06002341 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062235289 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059157582 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058881634 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070900657 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072997304 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069522239 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063052077 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059209064 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060039835 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058853332 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060130577 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069295498 seconds)
  done (took 2.711505176 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068065202 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074964364 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071593961 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076479833 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067554445 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064001618 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070586845 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063940125 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07190536 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068985714 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071488448 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063509434 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068999987 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068945347 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068690126 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064195508 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071176023 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067154782 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.063504293 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070791011 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064020512 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070690705 seconds)
  done (took 2.851241622 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061176396 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059554265 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067308037 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058229332 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058529938 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062137728 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058425157 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.062251946 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.062620539 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062976123 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066927334 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059224178 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058365895 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.063579193 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057730796 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059581398 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.101187117 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059702549 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059316936 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058480543 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063891048 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06705478 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058401086 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058400875 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.062586096 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062095184 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.05873115 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061499559 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058987263 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.062598983 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059628911 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058001181 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066777259 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066215777 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062339588 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063128224 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060275887 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059367259 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058341523 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058354522 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.0665611 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060195692 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058752705 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059682985 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067360846 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059004935 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058526172 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06674827 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058471098 seconds)
  done (took 4.383036324 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.071228285 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109961819 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065092753 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090106273 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.072773077 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.065981182 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064342502 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090953222 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060124576 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060793965 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.07380552 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.073903662 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062029276 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063741109 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064469867 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062011872 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062733449 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060871395 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065334333 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061417598 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065362102 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.0656253 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072195012 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073021244 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062901379 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060990014 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061427904 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063255757 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.072402787 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066059067 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063449536 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06406592 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073070136 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.064604892 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061452416 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061793363 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07371993 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062316244 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062535453 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060381765 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061697023 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063596336 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066033609 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074063609 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062207875 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066057803 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062041265 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.05963178 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.0730587 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.061899586 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.066355704 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074192471 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063380213 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062573659 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064475925 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07335135 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062985519 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060553555 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062651567 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.072672743 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060317416 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063903307 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.073912847 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061296878 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066140177 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073763512 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066269149 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062917735 seconds)
  done (took 6.038023211 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068858987 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090703014 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07123189 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070918618 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070313858 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.06993969 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069830155 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07051302 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070423257 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070104039 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070000491 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108359112 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065723535 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074836998 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.06976622 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070055402 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070041647 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069811511 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069678539 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069761666 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069868375 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07023896 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069477459 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070133052 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073041367 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065201748 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06921652 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069464421 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070526906 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069910282 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072825834 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069625632 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069721714 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070605802 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.072509773 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069287341 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059905302 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069744271 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069903538 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06990661 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065207201 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07052713 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069687432 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065197676 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069671505 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069793545 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070630724 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.072805725 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078035075 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070511373 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.0698958 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070382379 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069553752 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069577944 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070125115 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.077791328 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070378395 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070526151 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070445599 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070457835 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070205301 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.077933436 seconds)
  done (took 5.789284449 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074935391 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067261241 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078791676 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06149769 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058661836 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069118364 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058842898 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059290139 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067043664 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066702827 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068662645 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068741445 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071225639 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070998317 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068711424 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070890581 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06810644 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06899769 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066303465 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068187016 seconds)
  done (took 2.724483028 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071241338 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076696824 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065171239 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069070075 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064284933 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068160576 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063307541 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064395162 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064722326 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064523202 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069875045 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070507437 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064967175 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068532654 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069779891 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068605879 seconds)
  done (took 2.443916966 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.065379666 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066859091 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.06675156 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060414092 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063920632 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059368234 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059874165 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058658766 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059668301 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073051541 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059679885 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07071835 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059700995 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058928855 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059309904 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065223713 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059139691 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059999248 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060049539 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.064780167 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066468367 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060835789 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063711127 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059888384 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064843259 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.066720978 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061963543 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063532106 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059720922 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060084614 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065366441 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066340901 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059767501 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060462854 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058617272 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.05964345 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060126578 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060295055 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065214217 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060338272 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058463455 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064976111 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.059868513 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060928585 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059014493 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060311085 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059026499 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065403201 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060601131 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065103707 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.05987512 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062221958 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060604606 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067149456 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062891589 seconds)
  done (took 4.78319428 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074188682 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064185057 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058754961 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058931738 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064182717 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064241817 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06409568 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064077484 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064895239 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058591512 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064301064 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063239683 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064125563 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063778644 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067294313 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063956907 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058525409 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064028029 seconds)
  done (took 2.520013889 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.06973225 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063446943 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.06785031 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063617096 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063568174 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063206999 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059107214 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059329825 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.05912798 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063628382 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063598557 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063003428 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059113534 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063377693 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06326823 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063150245 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063259498 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058981829 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063770974 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059160073 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062774183 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058916965 seconds)
  done (took 2.742056438 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086560743 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082376971 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.121602907 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076714179 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085013766 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.06978954 seconds)
  done (took 1.888816093 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088979606 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101360728 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063495309 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063944552 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074262777 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067098489 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067065974 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067334199 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073986888 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071562969 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067443037 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07379973 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073566206 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069446026 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073945005 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076597162 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06747536 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067591512 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063570827 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076482317 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067105784 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073546315 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067278001 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066927967 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067036432 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069228964 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07693133 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071469937 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068944045 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073341938 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076573512 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067241197 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073761911 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071545369 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063770872 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07362083 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067111766 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076488408 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073554206 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069256841 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063582777 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073814136 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073694479 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069272411 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076851511 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067911485 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069116806 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067250477 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067472941 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078885741 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07374194 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069591726 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073945845 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080339576 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078318042 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079142856 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072258424 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069641962 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073959832 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071701495 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069350056 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074242977 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069496234 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071667025 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076561874 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069476369 seconds)
  done (took 6.117841721 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096956976 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065036084 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067483542 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072770612 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069828878 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067257602 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067611155 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067416665 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067292212 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064105262 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101057319 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067702121 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069406657 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069480319 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06769552 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067879228 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068301973 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069356755 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064544508 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079710008 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067709576 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069281761 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06925079 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069523636 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072235396 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076527333 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067244717 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067552676 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067060563 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066943467 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069058774 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067303605 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069030458 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063882365 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069160465 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067263429 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067064728 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069602168 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067482114 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07363865 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068991271 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076501154 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067291344 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067168624 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071738981 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067315633 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067096884 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064155428 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067134456 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064135773 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071627059 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071980615 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072240882 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069399077 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067713109 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067703266 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067589154 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067604247 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067561047 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076627976 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069110756 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067410344 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079055712 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067573296 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067461819 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069228656 seconds)
  done (took 6.002190856 seconds)
done (took 124.386323753 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205049206 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184695118 seconds)
  done (took 1.747301876 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07185375 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095021876 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073086741 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131147717 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069999451 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103189133 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10212524 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.072958835 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069110793 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068478789 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068888869 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071690675 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133777459 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068852233 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068534523 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071794942 seconds)
  done (took 2.716952493 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103623743 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.178490876 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109313884 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067104586 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103415114 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074700718 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066735804 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077287049 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070847629 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070421414 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073837545 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072052525 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070027621 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072373111 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070753536 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073783284 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069358628 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073544522 seconds)
  done (took 2.880520559 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.092033698 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.0837725 seconds)
  done (took 1.561855336 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152287093 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.102824233 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.141608002 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.317715823 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.131740783 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.127464947 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129221945 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124614986 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.107898759 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.125336831 seconds)
  done (took 2.841659641 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100168172 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173291177 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.303083501 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116349494 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073001857 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099873938 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119383214 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078746262 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077758302 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077195403 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07932241 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074530173 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095435736 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073903698 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073611077 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074216767 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098715361 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072916077 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072129357 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073236785 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098036505 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067639454 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074102024 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073056213 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075124852 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075043269 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068534405 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06745242 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07368216 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071944429 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075567432 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096868208 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075425954 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.099295132 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071800107 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.100406578 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072584994 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071960576 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072375209 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071363632 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074248305 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074774207 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076046502 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074783423 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068592101 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072176978 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06830424 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067082561 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076410741 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068130698 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076493766 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075284687 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.099986376 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068628083 seconds)
  done (took 6.007560784 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104869323 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10275812 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068120575 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109813502 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10144583 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067652567 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101081471 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096346193 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105677081 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066986098 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066279144 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066904584 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074632246 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.077321742 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112349213 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104419261 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069031258 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06729129 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10450189 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104098794 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066163784 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096931804 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095910652 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103073103 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.065217448 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067013285 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065401702 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066277784 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.0727356 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074470715 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066303863 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074298866 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.079152898 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073359896 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065535372 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065853593 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065997667 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.073870057 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074909507 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074332811 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.072970486 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065269534 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065784535 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066870586 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0668448 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065221579 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073548422 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.073992163 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07333213 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066072448 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066548616 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.065599011 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066641482 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074199898 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.072807162 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.074462877 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074391089 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065838518 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065717408 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067698825 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075115448 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075131271 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074049867 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066772359 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075277604 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065647735 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075450363 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07873624 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066107004 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066067553 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065882131 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065589007 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066103954 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072782721 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.072592198 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066209737 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065931736 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0656037 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075456364 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07279133 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065841708 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072243618 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065127692 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066616528 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066139978 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066161255 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072210273 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074311333 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066580276 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065931006 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066033606 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066051315 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065502615 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072555096 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073928881 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074488092 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073097255 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066296045 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073719206 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072889739 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066132899 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073390986 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065757476 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066131079 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065259742 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072172281 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.071162056 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.073641896 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065149869 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065007477 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.071551972 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073914137 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.197901191 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074364124 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076502172 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074556971 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066456016 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079345319 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066694906 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075990318 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066833846 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075793652 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067096357 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073780008 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067011399 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065911246 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06681594 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.073899564 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067126415 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066151328 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067155219 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066434797 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074245991 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077033974 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067325996 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073520558 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.073956112 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067213797 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073951867 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066935411 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074858807 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066115638 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066807773 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065846419 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076499621 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066414105 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066382563 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066291344 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076279226 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066428399 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076325962 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072991227 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065468355 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076592458 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076160938 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.0739597 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075685036 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067026296 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066276484 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065755382 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066278215 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072649066 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074171076 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067045663 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06583561 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072695517 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075084749 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065503089 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073500832 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074171216 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073529903 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066500635 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065931343 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076360279 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075514647 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073520624 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073560803 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073928161 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066856583 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073122525 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073471954 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066025628 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078596465 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066525919 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077794269 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074090527 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072918963 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074140229 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075300044 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07550949 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075669126 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.07777401 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066004083 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066657718 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07375287 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066467266 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066245285 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073623162 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066627693 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066648429 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.07813104 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066975476 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076007536 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065982796 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074762565 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065621583 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06695553 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07795642 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066485327 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066889091 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073534854 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066023918 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073162037 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07583326 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073408995 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065824934 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066556371 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073818929 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073782223 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065576973 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064638812 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06560955 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071229551 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071120556 seconds)
  done (took 17.747401004 seconds)
done (took 36.899567133 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.201835719 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156324172 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.189830006 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110524474 seconds)
  done (took 2.148371829 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.095231452 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.095257646 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.076758367 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062702604 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.081374684 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062548643 seconds)
  done (took 1.901675149 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.269736923 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.188231541 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170660482 seconds)
  done (took 2.052546387 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215792159 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195473492 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.469084766 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.289102838 seconds)
  done (took 2.694072081 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.130040698 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.078737166 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061613466 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.071993427 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.108846664 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.13969308 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.086911049 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.110063751 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.072818411 seconds)
  done (took 2.342970187 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.129005076 seconds)
done (took 12.722419352 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11839248 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092257435 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096085815 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072483285 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065269899 seconds)
    (6/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.231150257 seconds)
    (7/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.190762573 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.117008932 seconds)
    (9/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.196213022 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091329899 seconds)
    (11/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.215123594 seconds)
    (12/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.072304569 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073526132 seconds)
    (14/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078352915 seconds)
    (15/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.207372817 seconds)
    (16/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.074420754 seconds)
    (17/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078282593 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.155406651 seconds)
    (19/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.182545979 seconds)
    (20/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073491341 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071295374 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.231817858 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.143514365 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070979099 seconds)
    (25/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.146383294 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.292261689 seconds)
    (27/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073076836 seconds)
    (28/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.097151484 seconds)
    (29/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.185256243 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085777862 seconds)
    (31/309) benchmarking ("sort", Int8, false)...
    done (took 0.170700724 seconds)
    (32/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.155871284 seconds)
    (33/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.229654564 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070274838 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.203439765 seconds)
    (36/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106639066 seconds)
    (37/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070374082 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.168940003 seconds)
    (39/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079709353 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07034945 seconds)
    (41/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.146597158 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09010258 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061498583 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062402292 seconds)
    (45/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.205113641 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.21967887 seconds)
    (47/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.073394404 seconds)
    (48/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.144099599 seconds)
    (49/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.19357875 seconds)
    (50/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.179939086 seconds)
    (51/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.151845173 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08649621 seconds)
    (53/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.226933829 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150413142 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 0.146089912 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088700431 seconds)
    (57/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.083135912 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124021001 seconds)
    (59/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.196280391 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 0.064268998 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074266853 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089833711 seconds)
    (63/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.15832419 seconds)
    (64/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089244209 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06282511 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071611199 seconds)
    (67/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.163420451 seconds)
    (68/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090139015 seconds)
    (69/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068901752 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061026232 seconds)
    (71/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.183485744 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.062349235 seconds)
    (73/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062569001 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119309155 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.073273237 seconds)
    (76/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.069098516 seconds)
    (77/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070065839 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062512303 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068605416 seconds)
    (80/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.224331674 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087025881 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.065701637 seconds)
    (83/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.064997882 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.186549334 seconds)
    (85/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068607314 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.168789589 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071646761 seconds)
    (88/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076489538 seconds)
    (89/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.18749207 seconds)
    (90/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.199700747 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.062282155 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.156956588 seconds)
    (93/309) benchmarking ("sort", Float32, false)...
    done (took 0.133879305 seconds)
    (94/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.062422074 seconds)
    (95/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.233587016 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090094757 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.064432834 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.203363722 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070244162 seconds)
    (100/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066511762 seconds)
    (101/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.141439372 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064173943 seconds)
    (103/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073113607 seconds)
    (104/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.160149343 seconds)
    (105/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.141668292 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063767413 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062810848 seconds)
    (108/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.142800882 seconds)
    (109/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.064269437 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075242869 seconds)
    (111/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071960762 seconds)
    (112/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.141121459 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088193607 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070588524 seconds)
    (115/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066181705 seconds)
    (116/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.067343441 seconds)
    (117/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.144900695 seconds)
    (118/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07308243 seconds)
    (119/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062889675 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.138226381 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.085009518 seconds)
    (122/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064024721 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.129625554 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08920141 seconds)
    (125/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.156528335 seconds)
    (126/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073406407 seconds)
    (127/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.070629932 seconds)
    (128/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.212740927 seconds)
    (129/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.063969131 seconds)
    (130/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.062980143 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074552363 seconds)
    (132/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092375856 seconds)
    (133/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071675432 seconds)
    (134/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.169778864 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074401372 seconds)
    (136/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.063577471 seconds)
    (137/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.062040463 seconds)
    (138/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.061681929 seconds)
    (139/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122858071 seconds)
    (140/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.074933465 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.089576673 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118575059 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069954865 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07061844 seconds)
    (145/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063562976 seconds)
    (146/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070521709 seconds)
    (147/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076968292 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111500772 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.0636884 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077833844 seconds)
    (151/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.137370772 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129417187 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061170331 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.061896263 seconds)
    (155/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070898446 seconds)
    (156/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071995984 seconds)
    (157/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070370017 seconds)
    (158/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.084323264 seconds)
    (159/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063513694 seconds)
    (160/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06327594 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120630358 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.206088537 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.065382827 seconds)
    (164/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.062180188 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13215426 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08345914 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086053618 seconds)
    (168/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065588794 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08415312 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165275791 seconds)
    (171/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.062208337 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145706971 seconds)
    (173/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.063369441 seconds)
    (174/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.203482311 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14713527 seconds)
    (176/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.063314269 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087574423 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.062666116 seconds)
    (179/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.072903607 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.062122491 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118707135 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.093836188 seconds)
    (183/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.141424377 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126524079 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.073182769 seconds)
    (186/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.061506813 seconds)
    (187/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.062596238 seconds)
    (188/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06264331 seconds)
    (189/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.321401618 seconds)
    (190/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.192638869 seconds)
    (191/309) benchmarking ("sort", BigInt, false)...
    done (took 0.24569327 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170283525 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.064104058 seconds)
    (194/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.064149758 seconds)
    (195/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068755928 seconds)
    (196/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063372431 seconds)
    (197/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.140482179 seconds)
    (198/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071917409 seconds)
    (199/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.140011513 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.063873126 seconds)
    (201/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074159694 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14329516 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.064778688 seconds)
    (204/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.166534362 seconds)
    (205/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063301061 seconds)
    (206/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066443413 seconds)
    (207/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064424508 seconds)
    (208/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.067548972 seconds)
    (209/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.074908222 seconds)
    (210/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.064006453 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070325162 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.063601007 seconds)
    (213/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.078757287 seconds)
    (214/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.064410635 seconds)
    (215/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.070291288 seconds)
    (216/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.063728459 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070207885 seconds)
    (218/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.063963483 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.062758871 seconds)
    (220/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.075674771 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.064690879 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075150456 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075727544 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.086980081 seconds)
    (225/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.070375814 seconds)
    (226/309) benchmarking ("sort", Float64, false)...
    done (took 0.131668363 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.062440918 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142347195 seconds)
    (229/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070682562 seconds)
    (230/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07167203 seconds)
    (231/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.064061178 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06491227 seconds)
    (233/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.062724846 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133363725 seconds)
    (235/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.062302608 seconds)
    (236/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170715656 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070650135 seconds)
    (238/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.063819791 seconds)
    (239/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.062637538 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.063384502 seconds)
    (241/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.062611251 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.065250848 seconds)
    (243/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065479909 seconds)
    (244/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.062419538 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118914662 seconds)
    (246/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070673426 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.087510717 seconds)
    (248/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.062689503 seconds)
    (249/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.069689526 seconds)
    (250/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.062887595 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175379908 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07011328 seconds)
    (253/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069831407 seconds)
    (254/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063976515 seconds)
    (255/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.064254587 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.062944596 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.064294196 seconds)
    (258/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.063787184 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074834874 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073849368 seconds)
    (261/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062197049 seconds)
    (262/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.063528678 seconds)
    (263/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.091116549 seconds)
    (264/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.062441899 seconds)
    (265/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063671205 seconds)
    (266/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.062471352 seconds)
    (267/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.063685231 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063705994 seconds)
    (269/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.062076758 seconds)
    (270/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.062778923 seconds)
    (271/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.06365525 seconds)
    (272/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.063502946 seconds)
    (273/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.062232886 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069969172 seconds)
    (275/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.064402572 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062950019 seconds)
    (277/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.064995963 seconds)
    (278/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065407163 seconds)
    (279/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085205446 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06305022 seconds)
    (281/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.063949138 seconds)
    (282/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06224404 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.064441461 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06314476 seconds)
    (285/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.063263824 seconds)
    (286/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06343271 seconds)
    (287/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.157908823 seconds)
    (288/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.063882992 seconds)
    (289/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.063102949 seconds)
    (290/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.062992804 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074953427 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107199148 seconds)
    (293/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.063336963 seconds)
    (294/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.062294486 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.14267264 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164440467 seconds)
    (297/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067993192 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062894531 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063567083 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.070230074 seconds)
    (301/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062951032 seconds)
    (302/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062739639 seconds)
    (303/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.062717562 seconds)
    (304/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087230293 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063614245 seconds)
    (306/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.062188399 seconds)
    (307/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.061753584 seconds)
    (308/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.064454581 seconds)
    (309/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.062120462 seconds)
  done (took 32.257223523 seconds)
done (took 33.701015725 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083951762 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088371398 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071263791 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.083830177 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079333133 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100106306 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072425342 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076939379 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079098537 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077203437 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07704095 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070018851 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072960076 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073093142 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070658145 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086461824 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078037233 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071386166 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071825627 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062272599 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071818197 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063390638 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06237998 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069833185 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074419602 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070146693 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07209281 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072487513 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064013724 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063382216 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068064473 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071999768 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066007161 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.075796815 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071262916 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.0718191 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073137364 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076007616 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062616059 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063967836 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073505042 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.0634945 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071255539 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069896388 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068867219 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070743871 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071813225 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075176378 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086323036 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067411096 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074260438 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074432386 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074876715 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068780617 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068673714 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071361876 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069573576 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086076469 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072650348 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067688843 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07341117 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072534287 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069861219 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071774262 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072067747 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074306094 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075320835 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.0705383 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074290858 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070352397 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062994076 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071683374 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067929375 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063017398 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074352777 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076589807 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062041771 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067320122 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071079269 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07174995 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062553729 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067276387 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062298397 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.068007886 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067881582 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069993898 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068342989 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070212431 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062714686 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071917172 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070252287 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071183982 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062374661 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075718379 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062645339 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069315948 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.063264736 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.063348724 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062149373 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068765619 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062710875 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067275548 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071518824 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061994128 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.06826579 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076519663 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063225452 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070854935 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062576246 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06257545 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074761394 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07472195 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063058972 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067674438 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062567136 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070787008 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062307441 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062754764 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062706182 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062965125 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067572497 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063115378 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067408166 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068456719 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075734155 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062579165 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067948458 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066969175 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063165199 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069812301 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063377891 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063140806 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.061890259 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076080713 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066761886 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063259461 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067825192 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066268705 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070087481 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060990424 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071164722 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067741433 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.066106923 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068695223 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.201296379 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074955972 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068107447 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068504072 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.063435366 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063718493 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.062091839 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063165855 seconds)
done (took 12.315178522 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064156455 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.090508616 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.0715959 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.079574275 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076313488 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064608615 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.067916176 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.080516418 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066257169 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.08278431 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085814762 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084232334 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.090808701 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062946206 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064066929 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065007491 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062381162 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.070151592 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078386803 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085910991 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093192002 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063107077 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.072052263 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.079100678 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.073859057 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.079662827 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064637425 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064042056 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.0659148 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.080769301 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087766419 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.063505483 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064648151 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.077371219 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.077266338 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.07028689 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064272219 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.067417813 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064197505 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063555457 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065500276 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.077676335 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.069604509 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.067708557 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064330468 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064684922 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064334095 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.067130634 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.076972559 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067045269 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.071196499 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.075458371 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066036868 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063452226 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061761927 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.067848912 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063865831 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064393551 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.064492038 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063529904 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064167563 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.066632483 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.06459303 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.064358371 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06716247 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.066298722 seconds)
  done (took 6.166384844 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081989547 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092733448 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.080403427 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081229809 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063364314 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.064702278 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064603846 seconds)
  done (took 2.067836848 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.064826142 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077145002 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080288853 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080534228 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073104813 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.082274504 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06422951 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.094373896 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063228633 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.076442737 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.109864299 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08131229 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067252758 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075604552 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064250847 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.071570053 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.064215427 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072239428 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072465168 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080394638 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068077693 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.091476391 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077732275 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.064354004 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.084446132 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.068230366 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.06329887 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064485557 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065349939 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065362862 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064797443 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103042315 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068345694 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075632982 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065266735 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.06388777 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070122668 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06790654 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067257331 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073345597 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069545187 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065623097 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062821104 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065597283 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066893489 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.06818777 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062716713 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065866224 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065155309 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075788892 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06344475 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068213432 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067144262 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069411269 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070350395 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068420187 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072940881 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065411087 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.076001025 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071895469 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096315312 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.072620007 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072257801 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.06963125 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072319941 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068265172 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.067800988 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069800845 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064687043 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.06588307 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065313051 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072111687 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063883175 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.066558319 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067618356 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065479172 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068333369 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.080622254 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.081009818 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076877978 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065969689 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065186575 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068472675 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.080706093 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068387989 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06596054 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067621212 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063192386 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068214927 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065185289 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070131061 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065562249 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.072196038 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.066284381 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06768687 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072318026 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063866796 seconds)
  done (took 8.420657764 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.066793674 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065575776 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066770197 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06528996 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065794213 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065489879 seconds)
  done (took 1.966385464 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088510456 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065002654 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079040511 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065319376 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.100285217 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.071682887 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.071440126 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073542496 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.077687053 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077316715 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.071770971 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.074420389 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.070900581 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066448476 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071360108 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.065802486 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.07114189 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.067561101 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077290328 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067087013 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.077222333 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066799997 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.06629207 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076230921 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067536429 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065406383 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065205989 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077068108 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078273753 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.073576704 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066047332 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067024992 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07274358 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07332179 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.07170432 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072421203 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06460065 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.069855558 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066635745 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.067454859 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074092385 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066590597 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067103084 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.069924959 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073287319 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072659718 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070388748 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068512397 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.071164342 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070078145 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.069823687 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065536053 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067560796 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070302869 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07299057 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073206859 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070159703 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071099996 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.066094743 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072232521 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.064421937 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067713703 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072690241 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.066712319 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.068071399 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.06989152 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072466079 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.066634436 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066670403 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.064512462 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07031854 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064565207 seconds)
  done (took 6.636169554 seconds)
done (took 26.782716391 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.559155718 seconds)
  done (took 2.080658981 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.562938823 seconds)
  done (took 2.122178586 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.119678524 seconds)
  done (took 8.674947923 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.295159162 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.324362339 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.718573556 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132236987 seconds)
  done (took 3.061774812 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.719370791 seconds)
  done (took 2.285342772 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233759272 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223600408 seconds)
  done (took 2.036904571 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.347165568 seconds)
  done (took 1.905801735 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.125691266 seconds)
  done (took 2.680782754 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.224339523 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157144657 seconds)
  done (took 1.946853661 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.480481035 seconds)
  done (took 2.04209127 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.039206616 seconds)
  done (took 5.602892634 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22962066 seconds)
  done (took 1.822813353 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233698208 seconds)
  done (took 1.798497889 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.742843851 seconds)
  done (took 3.302900675 seconds)
done (took 42.931842475 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080348604 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083153411 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083320088 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078873008 seconds)
  done (took 1.863453804 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.071753829 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.067714437 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.070525347 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.070892887 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069832295 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070418081 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070476309 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.06737705 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069523485 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.066898308 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.065775788 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.066859992 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070140218 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.066869807 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.06954936 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.07084 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.066979739 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.066537012 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070106303 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067258425 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.069554921 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067285936 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065528332 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067231656 seconds)
  done (took 3.207179981 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075760002 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069620839 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072593895 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.0690752 seconds)
  done (took 1.856692093 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072933638 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.082217784 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083314147 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.089772845 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07300252 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.073207915 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080625758 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081578113 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063053919 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.08423303 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065741636 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064225904 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.063991439 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084254551 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080121692 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060405508 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062301244 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.072926872 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.071838859 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.074546677 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065192037 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062806201 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.072127686 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.072310237 seconds)
  done (took 3.325485169 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077028473 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06297813 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076499084 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08956802 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092184061 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063177055 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076931507 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091962562 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124146911 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062929589 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069089752 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063077405 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104468558 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06287263 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077815173 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104740596 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107350328 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.066963255 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095804001 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062822564 seconds)
  done (took 3.20998615 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074588733 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067045762 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067999996 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.063225804 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075321247 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070781454 seconds)
  done (took 1.999606223 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066315551 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065843055 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.0651753 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064613355 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069382703 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.064820715 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063956588 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065322642 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065190988 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065047621 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064345896 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.063784147 seconds)
  done (took 2.357325671 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.166015811 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066227285 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068220314 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065799568 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069050725 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06390994 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.077843505 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066201009 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.081323871 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063886785 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06417238 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06638896 seconds)
  done (took 2.49427026 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094252 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.092815169 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.130490608 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110143412 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089932386 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.091446496 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.144326104 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.132504116 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108912358 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.066973001 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081064532 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101827949 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098457042 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.135537075 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108956666 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070215203 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.098713186 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079318904 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102562419 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110349217 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106912816 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110241734 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086577617 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099668377 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103138265 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111891124 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.068677425 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067998704 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134034497 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.095683155 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086986569 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090977602 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108012463 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.066469993 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.083158058 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.097174678 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082889836 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100870136 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085706292 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09434905 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074980922 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.122897415 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099389838 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106494676 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119825814 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091438724 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103616878 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.09830196 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081123974 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.113536473 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09400842 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089839747 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07446573 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.152299584 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089057209 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.102934485 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110417428 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.079082207 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085752137 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.090928483 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.119644808 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.243162955 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108394469 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102384224 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.086967467 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090249531 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.131407762 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083652622 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101659727 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12831025 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.088610876 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074225758 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.089983119 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068273881 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.096565786 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099324089 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094172541 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109004765 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075678981 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120678619 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106930028 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070931202 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.110818364 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09112292 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153872412 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097537663 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100431829 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091487356 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.143697287 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083843855 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077830084 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093199743 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132200082 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088694734 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094823564 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12434165 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088458842 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.08087713 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073382976 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.083003304 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092896215 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108739246 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09665002 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088075114 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081200988 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088634609 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073893629 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079471168 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.096179177 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087531324 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116556039 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102873274 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.1135494 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076159263 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1065704 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.091193628 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.133240187 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.11683159 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.08409201 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109627218 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134027027 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.106743643 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082582507 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098805136 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111085377 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102615167 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.086075407 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.284044005 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114898728 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087669824 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089152047 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092186958 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.104774271 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.151225979 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089389096 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.106531295 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.13628063 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.103990918 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092389676 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081910943 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091479391 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106846181 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139082608 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.091273756 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.067918131 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093744248 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127894679 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075580061 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09480486 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.087773682 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083067786 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07968034 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.0656712 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100462866 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133748596 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.112856467 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100492259 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.094392342 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067270013 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098417066 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09601154 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149057351 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115054811 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098187582 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.090798471 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099583308 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077966113 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.131052858 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.129606055 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092506819 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090188427 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12679651 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.089222877 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.101524403 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109134344 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106195892 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.096640558 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.139781544 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12260991 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.116850555 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104248677 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125694961 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079106391 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107061532 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.072660971 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102095612 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.074673401 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.255837968 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078351256 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.110577303 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078887105 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100191716 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.067657598 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074177823 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.104035345 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088419918 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08508952 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.132674599 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.122637631 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.0800848 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.092108328 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099704751 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09818827 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.106299561 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.086450929 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092306086 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.076788437 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079934569 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091330424 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096203625 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103045935 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076510217 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072895034 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142117186 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1033743 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091624209 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091582221 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.115053222 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082286765 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081183044 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104740556 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136366879 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.117025008 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079103286 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089434522 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.067340797 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.082115395 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.07398676 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10921988 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072545353 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112464183 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.065989724 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.129966169 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087810878 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100603816 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092162983 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12377438 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084106917 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124080798 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087726514 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108926775 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093897882 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088886238 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.105766515 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.090276449 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098601421 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103966572 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085624638 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088856191 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122571231 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107215554 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115449202 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107953844 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.135700736 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106552102 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072158631 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101259141 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089086186 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148640374 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097389775 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08202177 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085500001 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102174807 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080262923 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137063751 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083502152 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.078465773 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110562451 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.088404102 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085589822 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073059773 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.099128428 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.083070842 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106642112 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.092901595 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.089970558 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100439178 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101245131 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081484927 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082217549 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.117800604 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.121751712 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.096378693 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08309511 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082953107 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094623136 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088390117 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.103237272 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076551465 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.070796933 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.063884584 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.068169099 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.110642188 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098648445 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089943112 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089710882 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097263383 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.067589015 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084077609 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084884903 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.079422207 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085352963 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.108399306 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098559996 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.121834514 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.096306731 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08669799 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.130688276 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122164517 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084917357 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087756036 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09221843 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.072206524 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139707247 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109460573 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.073452443 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077539453 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.073183679 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080951045 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067120054 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100513246 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100241267 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072419171 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.093493915 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090243473 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.111247138 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.348726682 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078445051 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.083118708 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076219575 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076652352 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.102128475 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.078961373 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078231874 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129209035 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106250685 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108051609 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081324428 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076374763 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.136416324 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068691472 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.136342815 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084278492 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111279792 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.081067377 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079394363 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091208841 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1050276 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10864626 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116721668 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070515663 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104922851 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15371057 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076816285 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074648159 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073242712 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114221528 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087919633 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149731212 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0911591 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088780728 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076250932 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125071759 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.103644952 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082298297 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124508082 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079098367 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070414513 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08165387 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.108253626 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.070328606 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.073514394 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111954458 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.624101385 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090841239 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075981614 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.0835819 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125303508 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081377849 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110158765 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.117814052 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107123775 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.178442665 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071827123 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092336093 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.106206308 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098236638 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090954079 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07879281 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086402497 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087653458 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.078728211 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106623625 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.080394562 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.086671282 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.079166727 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.105150592 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.285668357 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087329539 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099778522 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087927259 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087989802 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09932175 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108166498 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.103055032 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.086552608 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088948419 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106922364 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082268203 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079356377 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100336313 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.075647111 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076621604 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113341537 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.085785646 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.092505305 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105386707 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.083756777 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111951386 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.120133779 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113945972 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097444858 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07748021 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084800614 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.086725441 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072398116 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07871268 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074929565 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.068811155 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108350838 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086459601 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080733561 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.100559214 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.106417745 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.10040229 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108381324 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.0903632 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095763266 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.100979853 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.127732726 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153856603 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098984299 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.118726874 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.133497912 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076220281 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.075336643 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.078595407 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134066716 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.078740683 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090846674 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.229157546 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.076197981 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.079514389 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092913584 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108297727 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080580484 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080121695 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098482259 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112144461 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083542103 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080720437 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093052051 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.103993504 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.131386886 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087170905 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074181108 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110013012 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.101767115 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.275633436 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.072135183 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081376869 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.129525569 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086849693 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101324624 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078390654 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120112042 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.133664752 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07390935 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090137323 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068913155 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087690173 seconds)
  done (took 50.010269872 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.153760927 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.148991885 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.079890113 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.095042134 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.191101789 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.207548571 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.117470984 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.092130658 seconds)
  done (took 2.81101336 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066127254 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.079786856 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099554389 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081039713 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064372446 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.065440646 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.196433524 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079762353 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.064021788 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104617843 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.073918524 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066071722 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.359506045 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063776215 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064659115 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.072815468 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064668872 seconds)
  done (took 3.377358135 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.353104756 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611341415 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.321472742 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072727386 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.950288543 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087003702 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.132263261 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.135420282 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.078750782 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546297359 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.368419642 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130133192 seconds)
  done (took 18.508849058 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072842673 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072155623 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.076357795 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.075794997 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071808724 seconds)
  done (took 2.085229674 seconds)
done (took 98.692205272 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079556934 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.166692494 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065308724 seconds)
  done (took 1.984840042 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.079942564 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.078996662 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.079227467 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.076907894 seconds)
  done (took 2.040554669 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071471888 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07328652 seconds)
  done (took 1.863875194 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240694438 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.160492831 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088953268 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.0796771 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076377064 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076829916 seconds)
  done (took 1.961659461 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.069597009 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.06979849 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070147493 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070383025 seconds)
  done (took 1.997802676 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065655905 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.064162941 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.066365976 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06915368 seconds)
  done (took 1.985241799 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.080021461 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08120903 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.075500305 seconds)
  done (took 1.95615053 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109979926 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09721327 seconds)
  done (took 1.92690664 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.077238449 seconds)
  done (took 1.798502595 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.086535937 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.092414488 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.148495283 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10957446 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.147100029 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.131969941 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075689085 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.077427995 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07198646 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070498482 seconds)
  done (took 2.73043344 seconds)
done (took 22.532945838 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076444642 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.359543624 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.35735064 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083969765 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667613718 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353686514 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.967414036 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087913392 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.096235321 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066252301 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082582436 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646470889 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.958675954 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321983721 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.941212064 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322383499 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649139833 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066542315 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065576614 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066383481 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.951477005 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065352187 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065866534 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06614668 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.645933115 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371197574 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066953523 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320730157 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065881402 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068656348 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354221261 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06737724 seconds)
  done (took 16.050063535 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.067714814 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118389084 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070938633 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081183491 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068095318 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067430546 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069059765 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066613133 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.106186885 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066455808 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082892346 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065576047 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.069830311 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067812689 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085918601 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066425412 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068194295 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067514321 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068845249 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06774031 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084667713 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066094677 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067121521 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067509246 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067315251 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079537558 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067948912 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066723706 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067382397 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069291662 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070226154 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068165715 seconds)
  done (took 4.07401296 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120625693 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12400346 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071061924 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105631744 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116660259 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068016079 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148593905 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088475798 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111167573 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066379069 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083217685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066319267 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101273684 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068062897 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086734996 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067041942 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068498861 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067625438 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067033335 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067527625 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084749572 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066196457 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067325661 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067381511 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067824723 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081373359 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067776488 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067139438 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066805389 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069301173 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070916291 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068010314 seconds)
  done (took 4.348454426 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066649028 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.069818835 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.077299734 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.078295917 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.064511406 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.066571387 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.067625375 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.064880426 seconds)
  done (took 2.296027709 seconds)
done (took 28.507826734 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075886375 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.066514541 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069112047 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085108831 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07158392 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.068411478 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062968325 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071709449 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069323934 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069138366 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071048245 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064882184 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.06787035 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062788916 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070755565 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064342629 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.071405001 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068435037 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069306032 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07041079 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066812285 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069789658 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072034316 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069437198 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069386578 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.069297669 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073945601 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.070680848 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065036592 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067394469 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067253155 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.078805041 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071130291 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071360536 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064493686 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064957476 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068322026 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067172179 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071086015 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073582047 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066909916 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073405004 seconds)
  done (took 4.631548727 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086130408 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091390489 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084161323 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080400264 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.102716929 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080364317 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088633033 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076433514 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074468133 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087105766 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07159005 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.076415672 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076666557 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070304399 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075886376 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.072325039 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.077431079 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07168229 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076150489 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.076291375 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089522698 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.06953168 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077423165 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077495353 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.071798626 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077891897 seconds)
  done (took 3.811637167 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.069916123 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084180423 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089500294 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153433476 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108177246 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079760339 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079258373 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.099376444 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09817363 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066227281 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069378624 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092624403 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092416145 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072794475 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105095572 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082837055 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.076641089 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067540208 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072773372 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098519679 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087669306 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083514949 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09638959 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084474305 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065359336 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074234787 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072077853 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079535794 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07260512 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07752297 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069749387 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.068885896 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066246735 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077510961 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069909911 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066818925 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086406456 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077698891 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078453001 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106962194 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074455277 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066739432 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094427865 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126702496 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065175366 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068372194 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.069025911 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077556376 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066586192 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093571405 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083161765 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064870223 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.083231427 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066736461 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066424236 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081537021 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066968322 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.067481632 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07765531 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071231761 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08510607 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069802218 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084580117 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065372185 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076087429 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066590999 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066979085 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.064246657 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099134165 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072070131 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115560267 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066183603 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06347072 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077236113 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07629462 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071569771 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066227966 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082981761 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076731287 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069328231 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076693201 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.068582933 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069016086 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098948993 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06487952 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.063367639 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.063673445 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.067905853 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068504623 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.066284314 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078750824 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064437882 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068455036 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.079541318 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065191448 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065950653 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.0680046 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.066543416 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.064604044 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07599309 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069459251 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067218489 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07686995 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066088178 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069050391 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079271935 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074123651 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064557422 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.066877765 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.06806432 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066409154 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069443838 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.068282749 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067524907 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.070977136 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072741843 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070859285 seconds)
  done (took 10.716373976 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163657899 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156211517 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066588792 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148754607 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073747191 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.070661988 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151291823 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.085407891 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06653502 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066956791 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065484541 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.093667062 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.089985045 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.100493994 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.070701096 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066714198 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088793564 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.098389779 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154645855 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147799064 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089089888 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07273455 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068054435 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06692413 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067323545 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.073982277 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.081704853 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073716498 seconds)
  done (took 4.408459384 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074588099 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.091011494 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.069812487 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.077281078 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086197677 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.065979942 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067890797 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066837503 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079530725 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074421547 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066016434 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071190672 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070847672 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068645283 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066800856 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.072876315 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073129576 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065064811 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069563281 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070092068 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075905708 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092382766 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070608785 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065660988 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068456545 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066027361 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074422243 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077431378 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065733415 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.079870765 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063115546 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.070675916 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079096076 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.066650101 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065552123 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066397489 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066139995 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066157975 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06604978 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064261547 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063843396 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07043939 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06455605 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073638326 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079666882 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072954879 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067511997 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068262285 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.067980718 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063246211 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068775046 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068815665 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069010235 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073679441 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069491991 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.068348361 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069053774 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095158271 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071705227 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.0656201 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06542148 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064747583 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.067214223 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075348324 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082244358 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.067288854 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064386554 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066080595 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070941754 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079517327 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.065015613 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070387251 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06332524 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065956195 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.067946895 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068193453 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067369254 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06457158 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065843823 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065752639 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065948466 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065516433 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065435861 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.068358734 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063640988 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064294372 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066671366 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.066866023 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073833369 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.064680548 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069560428 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066646285 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.064810323 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.068726735 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.070833232 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068420381 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079914496 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075760195 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.065980244 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.063915454 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.079369135 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068087006 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065013953 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071943654 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.069572079 seconds)
  done (took 9.133747678 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087193661 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067676954 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085004571 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090661979 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.075659159 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071404021 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076840162 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067469168 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081415672 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065052215 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075041858 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065050762 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076522843 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075244314 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067431229 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076020429 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068645285 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084861748 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080418433 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064748298 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074688664 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.07800222 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.078246032 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083209036 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081789212 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083135593 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.07720717 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069015365 seconds)
  done (took 3.92528171 seconds)
done (took 38.360620293 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.807702225 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.983092319 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.811395131 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.025577921 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.882652892 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.940564106 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.916361175 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.812217685 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.859873257 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.8425087 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.111973794 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.196230292 seconds)
done (took 66.991170645 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.824259195 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.974568126 seconds)
    (2/2) benchmarking "String"...
    done (took 2.036364712 seconds)
  done (took 5.758363054 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.974521078 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.459300385 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.088489527 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.817964802 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.823466947 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.281340572 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.594808401 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.260461265 seconds)
  done (took 31.075341271 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.908455049 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.043848621 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.486651976 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.520492321 seconds)
  done (took 15.74852538 seconds)
done (took 64.220792359 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.860444079 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.814272554 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.887899447 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.840168835 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.812783715 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.815602246 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.820447442 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.817363569 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.830901224 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.821643039 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.817376634 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.81451459 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.817976843 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.829906272 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.470023913 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.874118905 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.825805863 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.822151105 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.835676535 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.840815615 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.820774946 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.823072159 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.28268902 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.9997263 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.425490319 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.192312857 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.321665036 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.21387982 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.81688919 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.827928834 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.893021777 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.214834447 seconds)
  done (took 205.852640772 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.821244553 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.649295701 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.707043316 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.844510372 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.264945104 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.998895864 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.918370914 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.289901618 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.822428662 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.841957398 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.952794719 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.823490632 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.978505671 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.762476719 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.852398934 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.844397879 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.977281501 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.992567172 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.856783206 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.969128775 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.835493043 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.825795119 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.779778446 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.936058742 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.836101816 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.903182749 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.84507041 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.833561795 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.997940045 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.95320115 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.855795738 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.863871552 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.98844845 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.685443833 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.82394294 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.836363648 seconds)
  done (took 170.720344597 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.006340254 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.828786026 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.822703195 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.87249095 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.822625437 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.823018512 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.46523416 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.827374055 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.158609744 seconds)
    (9/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.944838864 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.823104941 seconds)
    (11/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.818931689 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.822143968 seconds)
    (13/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.823160314 seconds)
    (14/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.818879745 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.83447036 seconds)
    (16/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.892710992 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.819714859 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.837336971 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.824067108 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.847607333 seconds)
    (21/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.824264315 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.822350125 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.821265606 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.822957476 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.823497038 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.822985697 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.821512325 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.523713086 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.063848593 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.825683543 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.82385618 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.533271725 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.837618027 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.865552203 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.821239909 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.914558606 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.874904367 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.93683197 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.824974527 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.040446118 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.889442534 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.825480116 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.823782544 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.887235761 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.837638122 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.821048321 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.820837149 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.829962789 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.890259447 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.065834666 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.825544967 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.944800147 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.314942492 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.824900252 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.824520851 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.824898373 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.430348606 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.825432283 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.824576879 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.83011394 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.83062463 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.825183499 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.82302923 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.825203259 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.249538602 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.895594681 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.992821628 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.39727484 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.828303022 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.075947427 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.897029691 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.824557426 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.826019963 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.825282191 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.826701241 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.824963837 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.827992423 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.947845391 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.831751337 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.960525731 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.908013675 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.94916704 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.829782978 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.833448422 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.667296199 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.896668273 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.858347754 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.647680168 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.828022227 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.199813303 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.614880711 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.829300867 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.82660097 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.839454323 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.827410295 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.826219769 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.828766181 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.90482609 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.828536786 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.827908435 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.948846968 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.554626846 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.390826619 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 2.080448142 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.827697151 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.82955033 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.920646559 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.038522771 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.827462812 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.893414961 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.833636937 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.829399591 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.958125156 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.830282551 seconds)
  done (took 407.180731557 seconds)
done (took 787.567206109 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.40577016 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.388497226 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.492199561 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.397392595 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.372511911 seconds)
  done (took 13.813731179 seconds)
done (took 15.572514921 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.844327874 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.832979468 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.89163407 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.912692584 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.846506076 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.84862085 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.909000489 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.849913093 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.880761836 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.883389166 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.914277951 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.913220814 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.852062905 seconds)
  done (took 26.139203175 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.833395924 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.96793221 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.041553242 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.864051828 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.833071597 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.041784529 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.889681624 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.960016459 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.965980833 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.044107612 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.051153796 seconds)
  done (took 23.253740534 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.834750558 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.980802159 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.050589375 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.868772608 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.834329998 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.04567545 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.89677579 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.96840314 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.969308289 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.049393473 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.065582822 seconds)
  done (took 23.332461309 seconds)
done (took 74.482613612 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.826578962 seconds)
  done (took 3.586409972 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.843332859 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.965497369 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.82781293 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.828052359 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.828720968 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.826770508 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.828951928 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.827075977 seconds)
  done (took 16.536443272 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.8258547 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.826752285 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.828493038 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.827044669 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.826750692 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.826971164 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.826292432 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.826799669 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.826979189 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.828475069 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.827481613 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.828176148 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.827948407 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.829948676 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.827711551 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.827195696 seconds)
  done (took 31.000326024 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.828682138 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.827524327 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.82796588 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.827835392 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.827459161 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.827058073 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.82822751 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.828615284 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.827626532 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.827195692 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.82773179 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.827879225 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.829130783 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.828088934 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.828870889 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.829384919 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.828255695 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.827794691 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.83334835 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.828612565 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.829066733 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.829275413 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.82807709 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.830272773 seconds)
  done (took 45.646835285 seconds)
done (took 98.538218226 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.584677219 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.553913564 seconds)
  done (took 9.900666515 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.829575379 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.828572059 seconds)
  done (took 5.424263039 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.830534944 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.828850678 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.828599184 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.830468484 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.828008082 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.83030102 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.829692239 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.830281714 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.829936438 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.830209991 seconds)
  done (took 20.060355003 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.830532238 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.829862621 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.829674845 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.829891923 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.828969939 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.830182754 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.82935169 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.830825054 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.831786213 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.8309025 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.831329832 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.830145602 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.830154691 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.829874977 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.829980375 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.830643762 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.831221183 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.829558478 seconds)
  done (took 34.70993962 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.830624115 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.831124468 seconds)
  done (took 5.425302017 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.829692083 seconds)
    (2/7) benchmarking "second"...
    done (took 1.831747197 seconds)
    (3/7) benchmarking "month"...
    done (took 1.829772288 seconds)
    (4/7) benchmarking "year"...
    done (took 1.830846859 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.829996145 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.830691416 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.829957845 seconds)
  done (took 14.576983431 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.832767799 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.972827707 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.022173898 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.642485198 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.832604874 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.832399405 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.110172972 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.834114023 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.835260403 seconds)
  done (took 20.679664029 seconds)
done (took 112.540776386 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.633436144 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.832978078 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.037368326 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.890866922 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.857263632 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.127576935 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.846836134 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.477657176 seconds)
done (took 42.469765366 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.875850814 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.83154867 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.875290956 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.877011233 seconds)
  done (took 22.350692322 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.831671188 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.170248343 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.855861769 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.679731699 seconds)
  done (took 22.319459154 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.217563181 seconds)
    (2/2) benchmarking "read"...
    done (took 2.174659501 seconds)
  done (took 6.163176723 seconds)
done (took 59.477838418 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.832309045 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.833095223 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.833080328 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.83324825 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.832829956 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.833507813 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.834258505 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.834694713 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.83295939 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.834621415 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.834406235 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.834081357 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835381767 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.833797623 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834346338 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833823434 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.834220372 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.834175359 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.833943195 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83495622 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.834136052 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.834869715 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.834076919 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.833806991 seconds)
  done (took 45.783345733 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.834643901 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.835542288 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.83457317 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.835213616 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.835858491 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.833867245 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.834878561 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.834531534 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.833881463 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.835731087 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.834565059 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.83521532 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.834878081 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.835158478 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835262449 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.836564335 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.835392701 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834825294 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836182985 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.835468679 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.836546445 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835356744 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.834969464 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.836495442 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.836609533 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.8365013 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.835278074 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.836407078 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.835126653 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.836217483 seconds)
  done (took 56.832518777 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.835627084 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.835706615 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.836180813 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.836310357 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.83527875 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.837042996 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.835758288 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.836766892 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.836712073 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.836625584 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.838312571 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.837331873 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.837600897 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.838598399 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.839173965 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.837601858 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.838745529 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.836666266 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.837170535 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.837902954 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.837652595 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.837327889 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.837200617 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.838387943 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.838545869 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.837897979 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.838902497 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.838088279 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.838416812 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.838979179 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.838096948 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.838220683 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.838444874 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.837665897 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.837087325 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.838341373 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.838939769 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.838321903 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.838137283 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.838508434 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.83724521 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.838505098 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.83820088 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.839340505 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.838370551 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.838812063 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.838246409 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.838455684 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.839612867 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.840389821 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.840316164 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.839374213 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.838817468 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.837991118 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.840349768 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.839895594 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.839590293 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.840009759 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.839739822 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.83908701 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.839801439 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.839365519 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.841279955 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.839765216 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.841172699 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.841569733 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.841110926 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.84084294 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.840696516 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.840411209 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.841002867 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.840592329 seconds)
  done (took 134.148502411 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.840565507 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.841037328 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.839743403 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.840030257 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.840592751 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.840380673 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.841252221 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841451152 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83977257 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.839955678 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840893701 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.841501262 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840079475 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.84134027 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.84194128 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.840562823 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.841090515 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.8410556 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.841870863 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.842393603 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.84089961 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.841096617 seconds)
  done (took 42.274490077 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842674133 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.841424402 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.843316264 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.841389729 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.841125142 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.83999714 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.841683309 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.841368634 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842304407 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.841890011 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841811132 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842231119 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.843019595 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842083761 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.841870933 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.842890399 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842191485 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.843381225 seconds)
  done (took 34.931169727 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.84214685 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.842445672 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.843754042 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.842346218 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.843285271 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.842062175 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842412333 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.842471036 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.843174475 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.841969108 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.843078277 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843678369 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.84335972 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842889556 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843749856 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.842781792 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.842806308 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843351963 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.843268124 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.84235306 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.84304605 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.843521611 seconds)
  done (took 42.320117614 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843640707 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.842934877 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.843754125 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.843418063 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.843379452 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.844529734 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.843822269 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.843953313 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.844086207 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.84311644 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.843948165 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.843658948 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.843327806 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.844442309 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.843800191 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843298095 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.844651404 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.846161458 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.844753444 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.844846357 seconds)
  done (took 38.657130465 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.845242671 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845863409 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.846051899 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846396755 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845905384 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.847941961 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846899313 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.84901671 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.848447322 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.847140409 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.846334362 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.847902835 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.848855309 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.848002497 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.848007521 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.848005775 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.847779827 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.847664478 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.848014628 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.84782659 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.848467319 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.849001597 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.84813383 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.848436803 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.847929898 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.84795443 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.848066007 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.848062895 seconds)
  done (took 53.512300345 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.845726173 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.845655127 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.846352919 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.846854866 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.846778094 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.847146897 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.84598833 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.846101432 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.84636963 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.846416011 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.846088252 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.846284928 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.845615846 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.846329952 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.847127349 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.846985326 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846516363 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.845589612 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.847672457 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847034127 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.847161835 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846016281 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.847755483 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.847052718 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845348931 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.847090349 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.847911562 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.848044214 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.847054515 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.84736266 seconds)
  done (took 57.179737495 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.867869334 seconds)
    (2/2) benchmarking "in"...
    done (took 1.869473606 seconds)
  done (took 5.519097691 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.846990262 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.849084554 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.848855335 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.848830279 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.849192922 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.848024438 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.848998239 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.849133628 seconds)
  done (took 16.570593173 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.847983434 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.854134392 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.849127957 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.848244212 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.850029754 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.858006973 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.856376458 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.851809968 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.852778321 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.856422771 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.854614823 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.855038839 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.858115684 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.855176184 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.848467633 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.85688703 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.853253644 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.8546534 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.852508609 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.84963322 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.854516258 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.851609735 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.849281011 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.851155631 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.849533983 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.852923779 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.862758401 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.854087845 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.853884682 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.850625751 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.860019507 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.850517753 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.851938702 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.854099562 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.852611706 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.850117719 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.861870173 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.852552684 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.853389422 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.849950134 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.855377676 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.855559661 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.85667032 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.861996893 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.853939863 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.851195072 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.851327283 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.854104242 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.860437911 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.857368072 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.85918553 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.855597222 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.851292977 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.852102453 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.856295179 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.854567809 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.854675699 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.856091487 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.860598951 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.861924644 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.858130778 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.873973588 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.863067997 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.854512111 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.854667845 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.863759425 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.876935721 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.856354342 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.857594241 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.852755142 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.864368319 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.853286856 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.852082742 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.85220592 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.868194296 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.862686606 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.854969986 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.853535928 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.852218459 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.854452198 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.856692658 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.855200869 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.855224978 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.855482093 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.864814193 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.878569187 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.854828664 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.855811939 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.856786181 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.861459679 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.85827918 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.858323143 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.859827635 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.853003733 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.856831046 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.86329781 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.856028649 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.855771009 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.859990214 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.866091727 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.853990249 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.85411152 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.857864998 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.862533268 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.854848982 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.857536628 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.858361961 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.857136915 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.866101157 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.856402946 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.856596934 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.856181698 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.862522186 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.860834164 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.855545677 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.860242353 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.862942645 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.865812314 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.864526802 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.860237383 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.861416166 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.860779087 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.866563619 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.879239475 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.855271344 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.861556283 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.86232583 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.868613908 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.860516545 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.856331934 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.861751967 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.855428277 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.855465317 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.860530093 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.856411862 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.857588676 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.856089879 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.857951246 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.857279525 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.859432579 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.865738559 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.861210285 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.860924203 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.858726798 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.862883996 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.858701694 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.863086015 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.866637142 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.864488748 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.858256092 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.8557902 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.861371116 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.865223374 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.8598269 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.858289208 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.857964572 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.859133751 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.863773323 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.861758377 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.859587051 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.857631088 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.866236332 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.861757545 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.860131005 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.859769758 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.865583118 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.860344603 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.858792092 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.862714769 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.861691086 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.863923827 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.86054479 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.865002366 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.858121458 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.857850636 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.860534 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.857350391 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.864997575 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.864941026 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.87219035 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.865392859 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.868952221 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.859508518 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.869281465 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.858967866 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.862325744 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.862144413 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.860611436 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.860149717 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.85865851 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.859560666 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.863724048 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.882959495 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.870872452 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.864354511 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.868232216 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.871587829 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.862810236 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.867494099 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.860272741 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.862390355 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.86410443 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.861185628 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.862008025 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.860347242 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.866367334 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.867211015 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.861006222 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.866122235 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.862451282 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.86103973 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.863332595 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.861402046 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.864871467 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.860079935 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.867351434 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.868776774 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.861620301 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.872054104 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.865528302 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.861167928 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.863071092 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.865201481 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.863261173 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.860787085 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.864684562 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.866674217 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.867121656 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.86522258 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.871698023 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.868919922 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.868455774 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.86926618 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.861680514 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.866372204 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.860528751 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.86623942 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.869102619 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.866696844 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.861369664 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.86971081 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.862093879 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.866317673 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.86432534 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.865081094 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.864149295 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.86517232 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.865023314 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.862230541 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.872393467 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.862755701 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.865593496 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.860927873 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.872261462 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.871263563 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.867289984 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.865143617 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.869662403 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.87318775 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.872089646 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.86989139 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.872774207 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.869483013 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.872244775 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.866907135 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.865458043 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.878398139 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.874315214 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.86372996 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.863487333 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.865672319 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.867710059 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.863849853 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.865275962 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.87494723 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.871202559 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.87129235 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.867816199 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.865952314 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.866111611 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.872952583 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.868429864 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.870094533 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.866959938 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.866604815 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.866918828 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.864106385 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.868676679 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.866483415 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.867939485 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.866902917 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.863787001 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.867142902 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.863775308 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.876413685 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.865799076 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.868797536 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.875361072 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.86857382 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.872509575 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.868363205 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.864531036 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.868711756 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.867991199 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.872050053 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.874491883 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.867617846 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.87193219 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.876782669 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.872106995 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.877285776 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.869332916 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.877301445 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.86793243 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.866185549 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.868006092 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.872655101 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.875886899 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.867718336 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.87245282 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.877688638 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.874593306 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.874215926 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.872357758 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.866669536 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.869339628 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.869259279 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.874797149 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.874306684 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.872132173 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.869332085 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.868751379 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.867041139 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.874499005 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.873020756 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.870389289 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.871556575 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.873970937 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.86675479 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.869958215 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.868484363 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.869107705 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.868754498 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.868346423 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.867719455 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.877384729 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.869051592 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.875406109 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.873299677 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.868479772 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.878461438 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.870823569 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.86970412 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.876323602 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.868433931 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.877999052 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.867809995 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.870330743 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.875206023 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.867567018 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.875746485 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.883487953 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.878885169 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.879879299 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.873126765 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.869911043 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.872853162 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.880560865 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.891184655 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.872500178 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.873322629 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.872330414 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.879965126 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.874693137 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.877068071 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.87531999 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.87844169 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.873221123 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.875902762 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.874417503 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.883680725 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.870853788 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.869255603 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.869882244 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.876258988 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.879543757 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.868875394 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.878828883 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.874496056 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.878114813 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.883546486 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.86954624 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.879180054 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.871481074 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.868612944 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.873159724 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.869843796 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.873560066 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.874444772 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.872014462 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.871636811 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.875123991 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.878742985 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.876674332 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.876995244 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.881782514 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.873669096 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.873323806 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.880088685 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.871952389 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.875799461 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.872939358 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.876898855 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.881510708 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.871534437 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.879801664 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.876486995 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.8817485 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.875516269 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.873174935 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.871235179 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.878113793 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.878028617 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.873197547 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.874366482 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.883751664 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.87793872 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.885589592 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.883450794 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.875900481 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.880977038 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.881691532 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.881209599 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.875243885 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.878980091 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.874261944 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.876930356 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.876588583 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.876186862 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.874971425 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.879716163 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.87950647 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.872815925 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.879824462 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.874582233 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.873429884 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.877282206 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.877500665 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.880557148 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.874249166 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.8741484 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.880068469 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.87583018 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.877103019 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.879409702 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.876573806 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.874193944 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.878375625 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.877943438 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.877369916 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.874127481 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.873535473 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.878671607 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.875791678 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.874901694 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.881231103 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.881948391 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.873834597 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.87939154 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.888435369 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.874431491 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.878004325 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.884053963 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.880619692 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.877279287 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.877540009 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.876523739 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.874258863 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.88620847 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.876884048 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.877386605 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.882498763 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.875328921 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.884430952 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.878775096 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.882571118 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.877449588 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.883295013 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.877141206 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.881504505 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.891862088 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.881408058 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.881738013 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.88365544 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.884221636 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.881318411 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.877123959 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.87493836 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.882495643 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.883404639 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.882420572 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.880014254 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.879684169 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.877451003 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.879737579 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.878700898 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.881604955 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.876190062 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.876894752 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.882003322 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.887089456 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.88875935 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.876871845 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.881238318 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.87943432 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.882847188 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.893709887 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.879354327 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.87883871 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.879264904 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.88095648 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.884672998 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.886004897 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.892425588 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.88326768 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.880246332 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.885135785 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.897569519 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.882895358 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.889676119 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.910619034 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.886889993 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.880345653 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.881160893 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.886098942 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.879397123 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.887357512 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.879766932 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.888458343 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.881423698 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.87808081 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.889457475 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.877482221 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.878682988 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.879872254 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.885976516 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.887684165 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.881383535 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.888843216 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.880832461 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.879642995 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.885442232 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.888637443 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.879030085 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.878542329 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.878905642 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.883941814 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.879567204 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.88126065 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.889940087 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.882530862 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.883245745 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.894282645 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.896777341 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.88204196 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.879891059 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.881850194 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.887715528 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.88501737 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.878857767 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.885810924 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.88704072 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.88576243 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.886513596 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.883255675 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.88394056 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.883063785 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.881077217 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.882428255 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.895607327 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.892845817 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.887997713 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.887829991 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.889809407 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.882315032 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.89069399 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.88989681 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.883007222 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.885100873 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.884243971 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.882163548 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.881976429 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.882054368 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.88789156 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.888959007 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.8832198 seconds)
  done (took 1116.253790916 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.882650074 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.881484039 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.883063828 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.882823729 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.881745152 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.882334701 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.882184123 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.881486862 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.882309495 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.882013825 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.882341662 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.882925328 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.881976651 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.881887234 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.882273714 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.881291441 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.882265331 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.88214693 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.882484691 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.882234806 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.882195899 seconds)
  done (took 41.339781419 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.881875173 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.882180223 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.882117802 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.882077634 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.882689028 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.883034973 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.88311698 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.883582281 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.882966712 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.884798259 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.882071194 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.884179947 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.884660975 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.881983525 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.884122555 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.882034589 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.883164686 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.883160623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.884482156 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.884052441 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.883430961 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.884524095 seconds)
  done (took 43.246125984 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.885890453 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.885128524 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.8868713 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.884660436 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.88358381 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.887166351 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.884537913 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.891732343 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.891613474 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.89316608 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.894517323 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.891966582 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.885166823 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.893822896 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.884600996 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.885545703 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.049373346 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.887345335 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.887471895 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.884801023 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.888257925 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.895892529 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.885720457 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.885802156 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.893446432 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.887826128 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.885704839 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.885171291 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.885655937 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.894543278 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.892113712 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.886660685 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.889190974 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.890700679 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.893898091 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.894423031 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.891432351 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.887811339 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.886542528 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.886108766 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.897817098 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.908051639 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.886260321 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.888352659 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.897021118 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.887087022 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.887272959 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.891599101 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.894048625 seconds)
  done (took 94.561777037 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.887213401 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.887883028 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.888812517 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.888753676 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.887381471 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.887336735 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.886937922 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.887395254 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.890660492 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.889287039 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.887068266 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.889442666 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.887849069 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.88806775 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.887363643 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.887959126 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.888014431 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.887916918 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.887332836 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.887310978 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.887612732 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.887671364 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.889240035 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.887784222 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.88978508 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.888300046 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.88857159 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.88890825 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.888305742 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.889222521 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.887819233 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.89047654 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.888332059 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.889501934 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.888715979 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.889594717 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.887576068 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.889590272 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.889869425 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.888013879 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.889080271 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.890698672 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.887639138 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.888446763 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.889553407 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.888733697 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.888709233 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.889165641 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.889516747 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.889513675 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.889390605 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.890680238 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.890792954 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.89024307 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.889915057 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.890697798 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.890674384 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.890334142 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.891801064 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.890153839 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.891854064 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.890436019 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.889695444 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.891234342 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.891389004 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.891266511 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.890628516 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.889657993 seconds)
  done (took 130.279041365 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.893666559 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.89421732 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.894824478 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.891714599 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.892493736 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.89329197 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.892681828 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.893019641 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.893633606 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.892764089 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.893608245 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.89207826 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.893055418 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.890440557 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.894584619 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.894734714 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.893420937 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.893821275 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.893550958 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.893636721 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.893325379 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.894339046 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.892779707 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.893939575 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.894718348 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.894546283 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.894831338 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.895526215 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.895285818 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.894541507 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.894516794 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.895069272 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.893937082 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.894802506 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.894087686 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.89383739 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.894195345 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.893485252 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.894602835 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.893785772 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.894457562 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.895268429 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.895497381 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.894447363 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.894799051 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.894228034 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.894589541 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.895718964 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.89343173 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.895123556 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.895110171 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.896631322 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.896031936 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.894685994 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.894933491 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.89413301 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.895009711 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.89527655 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.896577055 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.895265503 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.896094074 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.893358342 seconds)
  done (took 119.268114434 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.893143124 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.89408063 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.894495157 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.893967172 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.89542281 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.893894741 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.893773399 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.894232999 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.895287981 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.894100939 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.893388032 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.894179258 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.895404607 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.894823768 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.894749779 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.895382896 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.89390551 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.895032609 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.894092642 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.894761969 seconds)
  done (took 39.713953621 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.894775526 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.895549598 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.895763913 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.895064897 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.896679726 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.894554053 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.895041412 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.895584582 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.89524112 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.896696996 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.89579299 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.896418515 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.894857809 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.895066076 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.894719951 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.895942155 seconds)
  done (took 32.154174521 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.895755823 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.895458842 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.898041331 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.89756651 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.89683554 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.896369222 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.896935196 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.897216288 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.896884252 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.896658023 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.896252442 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.896252585 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.898134385 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.90024806 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.896855825 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.89639923 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.896349101 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.896201043 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.896461527 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.89876916 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.8973688 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.896682367 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.896947661 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.896525654 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.897180637 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.897509724 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.896856889 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.896717077 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.898570193 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.898369526 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.898179718 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.897013447 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.897057339 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.89792058 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.898922778 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.898600087 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.897858169 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.897643601 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.897641549 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.89851895 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.898112613 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.898387083 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.898386597 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.899637314 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.899502867 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.898802861 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.898108771 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.898922952 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.898005702 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.898824005 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.897739847 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.900533184 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.898835262 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.898126326 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.899228769 seconds)
  done (took 106.203759002 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.899093685 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.898465055 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.899757077 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.899103228 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.899204116 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.899120203 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.898008618 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.898481019 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.899088081 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.898740203 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.901432569 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.899605044 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.899828217 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.899006799 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.89901748 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.89934112 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.899990293 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.899803213 seconds)
  done (took 36.018249634 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.90003761 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.899685103 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.900152774 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.900376941 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.898686749 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.900724105 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.900135597 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.900534582 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.900281475 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.901317716 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.900536376 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.900714457 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.900384789 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.900551694 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.89887495 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.899834375 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.901153541 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.900664745 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.901168406 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.900817927 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.901571471 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.900485322 seconds)
  done (took 43.641798599 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.908572307 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.908927683 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.922723322 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.929166465 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.928858298 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.943195466 seconds)
  done (took 13.375908418 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902064485 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903599595 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.902403078 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902383354 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90233042 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902345721 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902926899 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.901805425 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901423319 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902774174 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902042754 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901875375 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90229908 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901484961 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.90126286 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902825197 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902303447 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90193118 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902045837 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902619917 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902440029 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902748494 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903442508 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902842156 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902747997 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902919791 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901742093 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902340711 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903011009 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902755218 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.903585521 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90279101 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902330757 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904915389 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.90322425 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902009585 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90247098 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902518075 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.903721125 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90311743 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.903993395 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903277685 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.9032283 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903097195 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903510083 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904528304 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903466179 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904262185 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904906617 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90370926 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904371233 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904801347 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905825349 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904832532 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.90479596 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.904363936 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90536429 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904653781 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.904112496 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905099041 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904032378 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905027276 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904992711 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905240131 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905702834 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904696102 seconds)
  done (took 127.455485881 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905140019 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.905638266 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905631236 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906063675 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905515775 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906124303 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905231503 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905087953 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905907703 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907309062 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906147644 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905421178 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905489686 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906324803 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905032893 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906859691 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906035495 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90600711 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905726595 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907176204 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905521126 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906409619 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905510309 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906423249 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908152612 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904415994 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906216514 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905680313 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906312431 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907010383 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905426053 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90697186 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906867844 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.906343694 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907279402 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906917497 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907283535 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90733051 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907472698 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907565314 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907996336 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908305099 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90753508 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907579882 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908406802 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908412061 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908494229 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906847512 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908376612 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907649094 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.910186399 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907970441 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907561641 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907583624 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907482573 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908024993 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908043323 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908986076 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907638832 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907563849 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908165849 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909395376 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908870796 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908326763 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908559389 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908448622 seconds)
  done (took 127.701038042 seconds)
done (took 2600.716243866 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.009124246 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.963655534 seconds)
  done (took 15.811733396 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.073560507 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.028446375 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.911320999 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.935395895 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.911450131 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.936043292 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.921995936 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.913214637 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.912785711 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.912862849 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.913084879 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.096142724 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.973241595 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.912446468 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.912767023 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.005292947 seconds)
  done (took 53.1247621 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.917993639 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.916916139 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.926199205 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.917464053 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.916931274 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.929905726 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.946118869 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.921441622 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.952751622 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.930564357 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.986389749 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.929834514 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.917751015 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.973058671 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.931003714 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.933069772 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.010393829 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.995901374 seconds)
  done (took 36.794179365 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.99648291 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.925884762 seconds)
  done (took 10.771756202 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.918624312 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.951569618 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.924840297 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.940531487 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.917451888 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.92655211 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.918101738 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.952157692 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.934795496 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.955652184 seconds)
  done (took 71.202121477 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.921485964 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.918887577 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.919906989 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.91599555 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.913290252 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.920583017 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.915768456 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.919886186 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.61759314 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.955492258 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.925268056 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.924855087 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.917237304 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.917986603 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.914080447 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.943113258 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.028797256 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.913235191 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.912848299 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.92310195 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.916765689 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.970093896 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.932335587 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.917219379 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.950543082 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.612433064 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.929503575 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.922640035 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.023549838 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.913156155 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.917550122 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.128926648 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.922845481 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.389447153 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.229053411 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.922600445 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.928246931 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.924490395 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.914410588 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.039396203 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.920608704 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.92341239 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.826819412 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.204552888 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.024975051 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.964365284 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.257590586 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.921115906 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.919220081 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.952762411 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.922285907 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.918721923 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.934226734 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.426644482 seconds)
  done (took 135.609129778 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.921633993 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.286572621 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.088742312 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.923559211 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.210402906 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.129272034 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.924715352 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.969255316 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.926895013 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.15228513 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.17431321 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.026265689 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.924583685 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.924475258 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.923453471 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.921466229 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.064415717 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.992285365 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.924463863 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.921997764 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.949473001 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.162561474 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.045527565 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.924147282 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.94825816 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.129004084 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.044350772 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.025151595 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.705273279 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.921824922 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.985692265 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.925761995 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.922764506 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.921448657 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.075734004 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.017750256 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.004180539 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.9254986 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.923617921 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.92196266 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.578473715 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.121738334 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.019395464 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.048609096 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.174343958 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.127670893 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.699570798 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.92251187 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.653024193 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.085776006 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.150041462 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.157695992 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.044173209 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.927879492 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.449001176 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.923648775 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.923081752 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.169982039 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.144011812 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.022800003 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.926581803 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.926141328 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.924331518 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.16158808 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.926248351 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.019020445 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.927226028 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.924480761 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.019087369 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.022041583 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.156083453 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.138065011 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.954617445 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.250843618 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.425841288 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.170079818 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.989949027 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.177149627 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.929557761 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.924449831 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.004999818 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.759075026 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.178758491 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.167706446 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.169768568 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.95990986 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.643427198 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.925214967 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.149724675 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.145599251 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.176840878 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.174227564 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.163914021 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.245882996 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.926203782 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.924694196 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.221945465 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.044661066 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.929643831 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.26744756 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.156639598 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.467225707 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.952201279 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.230082406 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.055863875 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.929940414 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.55079543 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.92931367 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.148848088 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.964937949 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.930623755 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.929048007 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.144453112 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.900658799 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.928045569 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.565267148 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.987135825 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.930389726 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.15911369 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.930449058 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.188067263 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.931234617 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.156638972 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.385200352 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.956584707 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.156362787 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.17392408 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.931577576 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.170743607 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.165862737 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.042786235 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.148746871 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.629307372 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.929323496 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.212647607 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.930379437 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.928314672 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.096783412 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.92984956 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.071101309 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.930258187 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.211545613 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.949946931 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.160598677 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.933177848 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.183976549 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.961322242 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.979297004 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.933403013 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.055943659 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.932359842 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.754561231 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.084667177 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.932596626 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.928712848 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.727447629 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.929502426 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.078323348 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.153542921 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.951937623 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.001537884 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.593553278 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.929751327 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.009398 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.953347767 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.315040035 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.929836868 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.178751512 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.93293236 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.929575055 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.92983191 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.162212427 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.113265631 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.931686426 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.930589427 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.823703124 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.930046639 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.930977869 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.112065035 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.337905839 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.930261243 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.130504305 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.934155013 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.058949749 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.932807297 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.992152493 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.267676948 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.932612049 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.931605149 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.933095295 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.931861811 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.933908399 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.192093019 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.956949907 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.447957422 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.069288202 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.197643461 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.240716136 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.170758647 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.973369122 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.936471831 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.183743516 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.93672593 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.99482482 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.935740211 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.952082188 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.161694166 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.936582416 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.138465818 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.201631885 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.778841924 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.980310762 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.934575681 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.933636362 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.931814902 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.07590295 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.016625611 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.936858315 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.932784738 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.046800079 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.053856449 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.143137771 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.935613254 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.99662136 seconds)
  done (took 916.000654041 seconds)
done (took 1241.155599375 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.934130076 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.934392867 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.927358532 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.935041139 seconds)
  done (took 29.589456982 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.929472605 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.934470674 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.930420903 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.935354043 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.928706851 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.935162675 seconds)
  done (took 13.451479799 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.008615137 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.934040901 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.93433 seconds)
  done (took 21.734744336 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.005635026 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.343788701 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.070107725 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.365225162 seconds)
  done (took 10.642784889 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.931557397 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.929663054 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.930748898 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.930159883 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.930644969 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.930795612 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.929108225 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.929259424 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.931613909 seconds)
  done (took 19.233150959 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.946054707 seconds)
done (took 100.456895667 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.242516378 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.938592966 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.667752707 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.006075876 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.022084043 seconds)
    (6/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.926359881 seconds)
    (7/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.198256101 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.800088625 seconds)
    (9/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.244474191 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.828079103 seconds)
    (11/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.405180573 seconds)
    (12/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.020761659 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.946965101 seconds)
    (14/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.936996044 seconds)
    (15/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.116805736 seconds)
    (16/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.054610362 seconds)
    (17/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.930737485 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.053715449 seconds)
    (19/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.167386091 seconds)
    (20/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.568148263 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.161862811 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.148400652 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.067199365 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.950831539 seconds)
    (25/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.016834363 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.793763465 seconds)
    (27/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.576759352 seconds)
    (28/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.030000712 seconds)
    (29/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.313293113 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.25976599 seconds)
    (31/309) benchmarking ("sort", Int8, false)...
    done (took 4.899566672 seconds)
    (32/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.030575836 seconds)
    (33/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.168500207 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.02823497 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.940529696 seconds)
    (36/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.736854662 seconds)
    (37/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.02040813 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.261601526 seconds)
    (39/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.714264841 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.086449009 seconds)
    (41/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.049691673 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.020150871 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.02300484 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.094148112 seconds)
    (45/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.271573688 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.770300089 seconds)
    (47/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.135195675 seconds)
    (48/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.109273071 seconds)
    (49/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.232951043 seconds)
    (50/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.140349553 seconds)
    (51/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.07949508 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.800709641 seconds)
    (53/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.154791325 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.958191399 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 2.153540374 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.533079807 seconds)
    (57/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.358611174 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.063978419 seconds)
    (59/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.339644423 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 5.553251149 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.184827005 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.28860869 seconds)
    (63/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.011310083 seconds)
    (64/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.713605769 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.183291725 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.953621104 seconds)
    (67/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.026538441 seconds)
    (68/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.021269568 seconds)
    (69/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.099359493 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.016992054 seconds)
    (71/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.400110386 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.264981518 seconds)
    (73/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.203454257 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.82848547 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.043111624 seconds)
    (76/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.01322702 seconds)
    (77/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.954606371 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.900895156 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.169467917 seconds)
    (80/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.441370842 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.405822248 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.934559812 seconds)
    (83/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.043988512 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.318398179 seconds)
    (85/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.03123527 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.941406474 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.011967748 seconds)
    (88/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.631673335 seconds)
    (89/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.418240051 seconds)
    (90/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.697540448 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.030414327 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.941846545 seconds)
    (93/309) benchmarking ("sort", Float32, false)...
    done (took 5.610491924 seconds)
    (94/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.053308421 seconds)
    (95/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.239429817 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.544235973 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.254322439 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.208449216 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.061509091 seconds)
    (100/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.993920327 seconds)
    (101/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.009860809 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.250805687 seconds)
    (103/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.959285057 seconds)
    (104/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.097011991 seconds)
    (105/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.938920482 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.207153404 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.257898533 seconds)
    (108/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.421837689 seconds)
    (109/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.226332283 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.24013145 seconds)
    (111/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.956880464 seconds)
    (112/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.091626013 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.702992608 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.199405803 seconds)
    (115/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.996939873 seconds)
    (116/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.08659204 seconds)
    (117/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.185427694 seconds)
    (118/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.938929878 seconds)
    (119/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.119318355 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.068421855 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.927130555 seconds)
    (122/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.436170823 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.061368783 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.810822134 seconds)
    (125/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.052559398 seconds)
    (126/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.967560396 seconds)
    (127/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.956455332 seconds)
    (128/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.708104526 seconds)
    (129/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.380670378 seconds)
    (130/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.07112898 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.186102235 seconds)
    (132/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.959897448 seconds)
    (133/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.648323609 seconds)
    (134/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.245081765 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.187777217 seconds)
    (136/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.660519812 seconds)
    (137/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.305256895 seconds)
    (138/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.03759809 seconds)
    (139/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.944415054 seconds)
    (140/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.944658375 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.991943696 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.072924625 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.211657802 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.962284028 seconds)
    (145/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.082056567 seconds)
    (146/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.966436184 seconds)
    (147/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.412457946 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.080648162 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.16581787 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.493404248 seconds)
    (151/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.444423218 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.070562721 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.953057126 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.029416515 seconds)
    (155/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.958831796 seconds)
    (156/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.947538305 seconds)
    (157/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.958690466 seconds)
    (158/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.636824848 seconds)
    (159/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.110113766 seconds)
    (160/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.941703237 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.96874578 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.301973246 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.609189264 seconds)
    (164/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.227509642 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.94947203 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.852174615 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.358115159 seconds)
    (168/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.001541885 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.044270537 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.295063197 seconds)
    (171/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.425165466 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.945329937 seconds)
    (173/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.701406085 seconds)
    (174/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.027842487 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.950435896 seconds)
    (176/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.238433057 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.738248431 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.305839505 seconds)
    (179/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.024820899 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.267491952 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.822359134 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 3.033812153 seconds)
    (183/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.19851936 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.039679154 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.595209685 seconds)
    (186/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.092734738 seconds)
    (187/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.021046396 seconds)
    (188/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.362520711 seconds)
    (189/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.208419009 seconds)
    (190/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.879767806 seconds)
    (191/309) benchmarking ("sort", BigInt, false)...
    done (took 7.042803289 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.951650469 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.941493417 seconds)
    (194/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.07851718 seconds)
    (195/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.022028486 seconds)
    (196/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.035599014 seconds)
    (197/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.044056346 seconds)
    (198/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.965914206 seconds)
    (199/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.015216849 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.030781467 seconds)
    (201/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.950119493 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.026063065 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.949699722 seconds)
    (204/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.155516677 seconds)
    (205/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.129146465 seconds)
    (206/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.040537174 seconds)
    (207/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.939008035 seconds)
    (208/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 3.676934324 seconds)
    (209/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.421785316 seconds)
    (210/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.383619952 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.009006559 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.26404458 seconds)
    (213/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.873145575 seconds)
    (214/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.282342417 seconds)
    (215/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.956300683 seconds)
    (216/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.641161349 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.179583443 seconds)
    (218/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.147938055 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.240515807 seconds)
    (220/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.111983743 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.946867459 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 4.425654924 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.245766399 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.289279607 seconds)
    (225/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.344957359 seconds)
    (226/309) benchmarking ("sort", Float64, false)...
    done (took 5.65930148 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.084515526 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.948020021 seconds)
    (229/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.9519046 seconds)
    (230/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.043387566 seconds)
    (231/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.940352253 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.012860211 seconds)
    (233/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.98914976 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.952290101 seconds)
    (235/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.056473862 seconds)
    (236/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.952258075 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.966074394 seconds)
    (238/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.049459971 seconds)
    (239/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.134613338 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.303158946 seconds)
    (241/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.13243924 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.948551505 seconds)
    (243/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.030883644 seconds)
    (244/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.215278332 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.950044595 seconds)
    (246/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.045494156 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.60383962 seconds)
    (248/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.332275248 seconds)
    (249/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.95559846 seconds)
    (250/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.191910493 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.950663173 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.190967183 seconds)
    (253/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.966208929 seconds)
    (254/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.112610243 seconds)
    (255/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.266764902 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.1302813 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.289580597 seconds)
    (258/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.948447256 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 3.802674019 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.971558306 seconds)
    (261/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.099386207 seconds)
    (262/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.950937617 seconds)
    (263/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.047397454 seconds)
    (264/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.128181768 seconds)
    (265/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.119219834 seconds)
    (266/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.274956303 seconds)
    (267/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.271667607 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.350492362 seconds)
    (269/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.027323124 seconds)
    (270/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.07685115 seconds)
    (271/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.427185096 seconds)
    (272/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.767901214 seconds)
    (273/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.166785755 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.965992648 seconds)
    (275/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.94461141 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 4.152656182 seconds)
    (277/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.02836456 seconds)
    (278/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.945149693 seconds)
    (279/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 3.546368881 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.258894083 seconds)
    (281/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.047952754 seconds)
    (282/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.961287848 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.951550782 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.339733192 seconds)
    (285/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.955838749 seconds)
    (286/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.032603649 seconds)
    (287/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.455765131 seconds)
    (288/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.707909105 seconds)
    (289/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.345547318 seconds)
    (290/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.166027127 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.85866088 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.070147999 seconds)
    (293/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.583298346 seconds)
    (294/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.243507554 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.986273732 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.952673214 seconds)
    (297/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.964799642 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.344392001 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.197724692 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.979309956 seconds)
    (301/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.355698513 seconds)
    (302/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.944828095 seconds)
    (303/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.476005088 seconds)
    (304/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.959736862 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.164671628 seconds)
    (306/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.470385717 seconds)
    (307/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.049921398 seconds)
    (308/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.088813954 seconds)
    (309/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.787212111 seconds)
  done (took 1034.480062172 seconds)
done (took 1036.403419685 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.97351575 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.97519167 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.950260599 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.971972095 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.065057895 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.993324496 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.964027065 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.95441994 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.000608832 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.000946323 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.952289053 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.991166447 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.954021103 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.953218259 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.951481595 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.976194924 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.261246606 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.988249991 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.972147059 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.964090215 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.971038118 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.951982083 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.001847002 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.992296941 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.953729817 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.957374285 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.958721598 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.97347859 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.06782582 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.957084849 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.958391941 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.967930927 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.262389547 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.98379919 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.951290562 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.975467687 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.966749142 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.964603987 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.958101781 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.988127327 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.412284245 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.962124416 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.955872356 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.954873841 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.953351648 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.960499457 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.955989043 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.964357431 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.975987883 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.977256844 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.406832337 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.978625215 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.958535514 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.954546505 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.966480471 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.957092889 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.957534951 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.977384725 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.975794298 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.976785475 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.249865078 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.993638732 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.958463236 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.97384762 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.966364578 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.440203804 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.959026661 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.960142725 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.41029193 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.968901734 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.441669817 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.973150596 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.957008187 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.972367728 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.990154989 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.263116089 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.985588894 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.953465896 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.966220278 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.955015161 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.968041203 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.979171767 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.95934214 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.957318172 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.979175769 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.997998895 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.968677448 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.958252163 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.968169256 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.979157832 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.967513595 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.971297794 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.962042386 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.954240948 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.96709399 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.961588374 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.962449564 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.961311632 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.96309913 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.969478619 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.411887766 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.987403945 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.954923255 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.953004929 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.956373467 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.974304797 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.412191411 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.96788908 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.980283397 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.005923669 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.959478722 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.253677888 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.99540561 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.983809334 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.968797556 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.959246733 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.955104121 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.254577095 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.441728248 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.982431621 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.957609077 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.957970922 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.983270065 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.959554155 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.954527854 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.268249633 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.992504062 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.98178701 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.084344089 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.971673327 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.99270015 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.959689353 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.962044775 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.004949972 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.983439761 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.994580609 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.961871197 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.982809878 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.979886999 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.956481655 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.975012686 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.972945279 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.958822227 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.96846045 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.958017029 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.004280692 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.982621243 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.982538281 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.980983463 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.08443699 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.956978446 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.2563126 seconds)
done (took 307.669044064 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.045272635 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.963427931 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.079575435 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.957490146 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.051094989 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.036468716 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.9580391 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.957302531 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.956702811 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.464198523 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.957962722 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.962374159 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.961456902 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.956559047 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.032416315 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.958133065 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.956683533 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.24860957 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.962042741 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.043427247 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.963974333 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.959849168 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.957729139 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.468829291 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.964798679 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.964674225 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.048805449 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.95953155 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.256297302 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.966362813 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.964133437 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.255262352 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.048513877 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.971723052 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.967225646 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.964937265 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.053691226 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.96639832 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.038873894 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.032046646 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.085024776 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.995679875 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.965356914 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.965444269 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.960778001 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.962820905 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.958871046 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.991162979 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.965964014 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.963717147 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.250279159 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.966222993 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.965963508 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.959180321 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.959305084 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.977763468 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.959830042 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.962370781 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.046166584 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.962903549 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.045096127 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.469968111 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.466471173 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.959050201 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.966549598 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.960020657 seconds)
  done (took 190.864221528 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.032006798 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.038204713 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.032710039 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.971282277 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.015792712 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.035589866 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.972839046 seconds)
  done (took 15.987983631 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.973283994 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.960795328 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.018481023 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.017009115 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.963075566 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.14519795 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.978912606 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.965049872 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.99556257 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.961772355 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.634992208 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.017478733 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.968738468 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.966158223 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.980364215 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.023400901 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.969712462 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.964141417 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.077638843 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.116655676 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.96681855 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.969042761 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.995644032 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.980785886 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.963468745 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.964023077 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.964563943 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.976454202 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.961540372 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.962384538 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.962939665 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.021373586 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.964062932 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.970183598 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.962960218 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.963885242 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.96530826 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.963438946 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.962582815 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.970011198 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.963515064 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.962422992 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.962678473 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.963044844 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.962490115 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.993787569 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.962292508 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.962116819 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.96322245 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.963022424 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.998099963 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.963328788 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.962990675 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.967938985 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.014602586 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.972635025 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.966722674 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.963594655 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.963557501 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.962741949 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.964315329 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.119277689 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.019499191 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.963870019 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.020494902 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.122218679 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.964058589 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.964028726 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.963115096 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.059434481 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.964412503 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.020498776 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.966135194 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.084951069 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.964664791 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.151060617 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.996535885 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.975559113 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.975660095 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.971840256 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.978625091 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.965025562 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.975306096 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.979000027 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.969727346 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.96502888 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.964756838 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.973456043 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.979371359 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.965502443 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.025671363 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.964381706 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.968085524 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.105900557 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.965551875 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.081554943 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.999559956 seconds)
  done (took 215.457157948 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.98018236 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.980750752 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.974734412 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.987729033 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.974066647 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.974498962 seconds)
  done (took 13.766020112 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.977072662 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.971611747 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.966336519 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.966378536 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.968215774 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.968326389 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.966043902 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.97528789 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.972043348 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.966358448 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.968267283 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.967692703 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.970748601 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.968765595 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.967841596 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.966185578 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.966757415 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.96789425 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.966425417 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.968610779 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.110217164 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.97146789 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.969619289 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.973680602 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.975046137 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.969182933 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.98576016 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.96834328 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.967249678 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.982545749 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.975050291 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.971367455 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.974074789 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.98227404 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.972513348 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.97373607 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.971805595 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.969359287 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.967590784 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.971679377 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.969216005 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.970711125 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.967848887 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.970446595 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.978351855 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.978301524 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.974136759 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.987806632 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.968123221 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.970047705 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.969420105 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.969374042 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.971257467 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.970491746 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.976486724 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.982448517 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.97337091 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.969356831 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.971585082 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.975073061 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.974189018 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.971798438 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.979157209 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.974193972 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.97851752 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.970561166 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.977493237 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.976315689 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.973152704 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.971863024 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.972441864 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.97074316 seconds)
  done (took 145.031027493 seconds)
done (took 583.010687865 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.336308527 seconds)
  done (took 9.235219873 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.101703354 seconds)
  done (took 9.087318309 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.837562783 seconds)
  done (took 10.737730182 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.9912749 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.011606685 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.974993828 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.981186378 seconds)
  done (took 29.868727974 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.204449355 seconds)
  done (took 9.102790998 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.984186314 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.971238669 seconds)
  done (took 15.924163958 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.014367117 seconds)
  done (took 8.914470584 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.044585239 seconds)
  done (took 8.958710856 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.977233234 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.991393449 seconds)
  done (took 15.889027711 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.974555264 seconds)
  done (took 8.874078469 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.711271191 seconds)
  done (took 9.688556852 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.975019636 seconds)
  done (took 8.892360822 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.992193093 seconds)
  done (took 8.891891351 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.067982629 seconds)
  done (took 8.96719497 seconds)
done (took 164.931047072 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.985570195 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.976449221 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.978640474 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.978649961 seconds)
  done (took 29.81790375 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.007308313 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.007826909 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.016579484 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.006260925 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.997331105 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.996532131 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.006998473 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.007963414 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.997464093 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.004541391 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.00658726 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.003589426 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.005899121 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.015622928 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.017065101 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.003724167 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.006750774 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.006995954 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.99799721 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.017137838 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.003889894 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.007092126 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.971316939 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.972856217 seconds)
  done (took 49.986323408 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.171308968 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.045118063 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.13469683 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.026422937 seconds)
  done (took 10.278144075 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.972324242 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.03607012 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.023306942 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.027255425 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.024889221 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.075964756 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.025422826 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.110094789 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.10102707 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.098495504 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.980688834 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.994926739 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.997102447 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.02338785 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.076552737 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.973511523 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.973659034 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.091832077 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.035678964 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.160472184 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.973010912 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.028989252 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.025508757 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.026081586 seconds)
  done (took 50.7586659 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.974843638 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.981756946 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.981227499 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.974484432 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.975642533 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.974015414 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.982184138 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.976580559 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.996780271 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.977201682 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.977653645 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.975772277 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.982211707 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.974936397 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.974544668 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.988663607 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.990234487 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.975550296 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.979254924 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.983127039 seconds)
  done (took 41.498941569 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.980621653 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.827129617 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.325407547 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.233029957 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.980239668 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.981459728 seconds)
  done (took 32.231120116 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.998362676 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.991909527 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.986757013 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.043826604 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.130915373 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.993685386 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.98687833 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.996643756 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.034313792 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.053638034 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.007287893 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.016238311 seconds)
  done (took 26.144619423 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.984466701 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.982543831 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.984077349 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.994309967 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.996188177 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.994184176 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.991045723 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.984477264 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.998420677 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.004947009 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.994151316 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.998538786 seconds)
  done (took 45.815585941 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.190384442 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.200792405 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.201212281 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.54392256 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.966341056 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.877198234 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.634872404 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.650889649 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.268131456 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.949849022 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.941623489 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.881771463 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.217619653 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.985626144 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.243210985 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.898437622 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.977612145 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247065956 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.978094241 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.976849307 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.264592748 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.029263074 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.190253231 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.023971044 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.19061018 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.422106937 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.227232864 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.235154133 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.333774061 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.028004109 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.155534996 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.028251293 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.985659282 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.988993395 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.981822399 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.99229302 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248735131 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.97919194 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.982577607 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.977494128 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.905100439 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.262703977 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.086389321 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.40481576 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.110287318 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.219517194 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.983111488 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.132197393 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.040884006 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.180187031 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.076292353 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.192280849 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.903305773 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.286378449 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.096842506 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.981158535 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.983833986 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.677576009 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.218115153 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.05974764 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.250488673 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.086313985 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.982835406 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.066739377 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.978428418 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.092149818 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.176266869 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.984938211 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.987206298 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.986077969 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.077653415 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.193361728 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.982497456 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.980979918 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.997775619 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.983104538 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.331977245 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.53548214 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.970050246 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.539672758 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.433729368 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.949014495 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.429193059 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.027883027 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.262969936 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.190389688 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.069107206 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.224231876 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.846595927 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.986308699 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.789313538 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.061239516 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.044982139 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.980991653 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.137429032 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.236584213 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.091811886 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.981711651 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.907855675 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.993075047 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.184223158 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.428941623 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.040711982 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.982148364 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.981988899 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.984073526 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.982575981 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.99830925 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.99540571 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.899972107 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.262473702 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.089775241 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.240386953 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.970090316 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.679889508 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.258333484 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.103737403 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.575528928 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.108322103 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.982947682 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123898504 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.987903173 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.986369284 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.179836722 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.404740762 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.146902659 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.229534473 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.016095346 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.016229786 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.989962899 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.065053669 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.209514365 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.984396358 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.24808584 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.224091369 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.674924232 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.011866775 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.059207582 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.9930755 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.196155165 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.065989633 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.524358889 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.210940157 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.529674225 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.97359423 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.75914417 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.192450451 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.359742719 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.000557943 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.143785469 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.019410818 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.687357595 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.911446846 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.990406531 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.309846605 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.101634648 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.019188174 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.986454519 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.986390803 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.99411533 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.068132746 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.061182053 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.059395012 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.913045568 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.987196134 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98756767 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.985309436 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.531252952 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.700130138 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.274660773 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.98611643 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.059925455 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.988259129 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.594029183 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.990046334 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.021960342 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.994954224 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.729466379 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.022484971 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.190710943 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.38047823 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.100696174 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.986926313 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.989524761 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.688893424 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.996037881 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.686246409 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.276416402 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.980661573 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.423511185 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.041465374 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.075386429 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.001611513 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.988122888 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.988727017 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.989285827 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.19047768 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.502180923 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.260804101 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.33014621 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.069839694 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.274317922 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.173786331 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.433300238 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.669376859 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.490915248 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.214606925 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.989224922 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.989859125 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.56664057 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.995705666 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.205222138 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.191390738 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.28387274 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.282236277 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.399014855 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.996222613 seconds)
    (218/481) benchmarking "4d"...
    done (took 3.005990568 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.233115234 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.991548817 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.435603211 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.034050301 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.288480356 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.794636988 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.255547616 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.051218036 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.002682127 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.632877384 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113246956 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.943359726 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.121068251 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.917896279 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.653665096 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.286096661 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.271331195 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.967436504 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.328729097 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.281414714 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.207552181 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.614321291 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.992639736 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.044315778 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.073381793 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.000090315 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.514322199 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.036900308 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.050049169 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.997295848 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.99365934 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.002872472 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.684568613 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.07131726 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.125047639 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.713898385 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.469353743 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.906999233 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.265951672 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.04392951 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.45698589 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.030186507 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.206788421 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.999696393 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.54022253 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.045612743 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.270351492 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.948507466 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.206827604 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.20627146 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.017052292 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.001578164 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.919636272 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.873838152 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.997662009 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.158614323 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.883002125 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.997419196 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.292297143 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.583623872 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.034784545 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.997600482 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.262469759 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.367828521 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.173127208 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.003946054 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.209225233 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.143367564 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.91370265 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.484569749 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.581506041 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.696113178 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.007104487 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.198634128 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.271888376 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.254838919 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.03580408 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.073342396 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.269188284 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.969347218 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.996130235 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.515424348 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.093716983 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.237440269 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.312909668 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.525194725 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.357359561 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.239242037 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.985523309 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.210898157 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.34988515 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.237791437 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.928200813 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.087864039 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.210168965 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.2937174 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.873415543 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.706924892 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.23962248 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.002401282 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.92359476 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.206550378 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.508925992 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.370020648 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.531688975 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.172633194 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.027685094 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.485107084 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.015362994 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.93294946 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.999378525 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.945934123 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.211737721 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.16872335 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.03958884 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.555464137 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.212414187 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.397807995 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.218155623 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.040546279 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.92451514 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.71053045 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.94896798 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.033840791 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.039175512 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.071228112 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.001416125 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.201896397 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.436989245 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.05640248 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.543545935 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.207773886 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.297186511 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.272478443 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.292737991 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.952700819 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.271222734 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.955109676 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.465740921 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.088370028 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.077802109 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.000838904 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.002174294 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.271094819 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.273433766 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.552104039 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.040068852 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.279510141 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.093738125 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.00231592 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.00537737 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.450999054 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.237793887 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.213431267 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.078878422 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.202223052 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.072403174 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.514107113 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.006843697 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.003582761 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.136860758 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.001866897 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.690436624 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.314740668 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.739945441 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.203341584 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.521631591 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.875502759 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.174330649 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.051386046 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.000897917 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.011906565 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.013369311 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.241299306 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.268457315 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.758057175 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.00689933 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.00160192 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.86835789 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.711296447 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.239811943 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.006699942 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.063839595 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.005238621 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.119178224 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.003700349 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.267403245 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.050933529 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.001867405 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.011845617 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.217307906 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.51803946 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.018919891 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.70302949 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.20572352 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.012984909 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.491390004 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.44505076 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.231445894 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.050940663 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.169481517 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.257897456 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.53302803 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.174919232 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.004986535 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.230280449 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.005303766 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.274109149 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277565609 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.004494224 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.220293343 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.454825788 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.297702864 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.015175797 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.878768733 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.010987155 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.268940942 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.058814957 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.003931013 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.013044001 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.010935068 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.720607605 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.471342332 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.156952305 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.278066174 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.817990059 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.76089551 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.007309001 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.00777214 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.713628233 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.74271461 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.217833279 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.293153174 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.951871558 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.208256153 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.70909643 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.005404316 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.270057755 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.932628955 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.008536817 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.47419367 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.280778602 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.942279522 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.010917928 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.562551029 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.013104155 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.090034366 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.007374911 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.13417694 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.272673936 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.334865721 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.11483272 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.646733481 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.667163839 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.948942311 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.060717738 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.81404762 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.569383518 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.667246012 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.029988337 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.023473799 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.932402096 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.009614666 seconds)
  done (took 1696.003677906 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.055947579 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.423523224 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.030943342 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.107667397 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.194299248 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.110312682 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.069199522 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.108938443 seconds)
  done (took 59.035548824 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.018675365 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.032376447 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.023902277 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.020426264 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.023291275 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.019493362 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.227042394 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.031655261 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.025134114 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.024992194 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.020894351 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.020024226 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.296795944 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.039498033 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.026820115 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.008227588 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.020495627 seconds)
  done (took 76.874095775 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.012838294 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.375299411 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.070013247 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.013112578 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.01045126 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.025214937 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.065286404 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.023356771 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.017289094 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.257480816 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.315291988 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.050693184 seconds)
  done (took 92.17468979 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.023452583 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.017836409 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.017836761 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.018713355 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.017607328 seconds)
  done (took 12.038245847 seconds)
done (took 2224.624569046 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.398026539 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.067816391 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.111842023 seconds)
  done (took 6.117008193 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.169992068 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.212136414 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.324538124 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.085884445 seconds)
  done (took 10.737301507 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.275167473 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.413638176 seconds)
  done (took 6.626769181 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.418411939 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.037149758 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.382266342 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.014259422 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.015173303 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.014315371 seconds)
  done (took 22.986721899 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.012036129 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.01328074 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.011704647 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.012942641 seconds)
  done (took 9.987652841 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.010696831 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.732775322 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.011242429 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.024493901 seconds)
  done (took 21.718354017 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.158983443 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.124210925 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.151289519 seconds)
  done (took 8.372462051 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.171634562 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.857213168 seconds)
  done (took 6.96845979 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.161409611 seconds)
  done (took 4.10125015 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.040567913 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.284417573 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.512687067 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.551296148 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.626761562 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.796954889 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.35523003 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.275330038 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.432501792 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.464354621 seconds)
  done (took 26.279461638 seconds)
done (took 140.069826697 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.385636174 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.047812695 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.222234651 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.393473454 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.256717613 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.221783409 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.236093119 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.387690605 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.074810206 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.054835078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.392714732 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.256389524 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.180482291 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.046737577 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.187881371 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.045470642 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.252964231 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.410947767 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.074497865 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.294726989 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.245590683 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.039250067 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.23721033 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.057987358 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.255798367 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.17306153 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.584816769 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.046604051 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.223192298 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.600174073 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.174893304 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.438200695 seconds)
  done (took 173.441945615 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.02274555 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.023770455 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.023056277 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.023369636 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.306892996 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.022735886 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.022762812 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.023942023 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.236227222 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.222575683 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.024169794 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.289294877 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.024260788 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.024577695 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.027525527 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.024526245 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.389614064 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.024587537 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.024983906 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.024730364 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.025041727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.144096228 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.023959307 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.149155685 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.374391746 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.02545946 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.025661017 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.025116554 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.025841894 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.024571228 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.025959172 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.025168262 seconds)
  done (took 212.646684181 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.02566257 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.027566815 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.025404514 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.026444174 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.024816337 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.026439779 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.027176712 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.026296067 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.79133927 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.772455721 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.025115045 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.027034285 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.028763101 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.025908674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.027412381 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.025314866 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.025106115 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.028156345 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.026836096 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.026596439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.026884251 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.713129969 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.026095188 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.728367664 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.025418132 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.026967721 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.02739426 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.026661554 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.026104898 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.027448392 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.02702074 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.027857953 seconds)
  done (took 225.696535867 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.259787911 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.019745899 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.021599057 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.047614363 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.023630699 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.021742374 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.027045941 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.274603941 seconds)
  done (took 20.642806102 seconds)
done (took 634.383034189 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.390365484 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.74920318 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.167234634 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.046379887 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.270482621 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.093248217 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.039998748 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.103050634 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.873236845 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.115097592 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.432935493 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.054858063 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.795695992 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.072741578 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.16158391 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.099743532 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.389501374 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.701517099 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.188970217 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.701782031 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.203885797 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.967165171 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.121132281 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.919435682 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.45521258 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.999651534 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.059003339 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.390786297 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.04726677 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.206333198 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.657387931 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.322278678 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.064463506 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.048985503 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.096717088 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.073377384 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.247189396 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.059553123 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.17212643 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.761772153 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.693061358 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.754117423 seconds)
  done (took 106.71648416 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.033986522 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.028438953 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.029558731 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.029817278 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.039085642 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.029849831 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.029286363 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.029616072 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.029808946 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.030179373 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.029220151 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.039473007 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.031657486 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.039691996 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.030775533 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.031048031 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.030467413 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.040319806 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.02998774 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.030748026 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.030190669 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.02926368 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.026619363 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.031049798 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.03072717 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.029694365 seconds)
  done (took 54.782159557 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.02382457 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.22541473 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.278511997 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.052363159 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.032430809 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.034898958 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.060478467 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.030895433 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.033528353 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.033591064 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.14665506 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.029017441 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.045204248 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.277033914 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.048478726 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.024766294 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.024633629 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.033847648 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.237395485 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.048869858 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.063141392 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.033016133 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.063127382 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.048626975 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.03532209 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.03392695 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.036231668 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.512338891 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.046185201 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.150653896 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.093004787 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.068293149 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.378453731 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.29185692 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.089864922 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.033319899 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.026791034 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.156538031 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.039980691 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.035500559 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.063695786 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.043267506 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.282095052 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.572231375 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.049294506 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.026413215 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.512566662 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.167348734 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.076986552 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.047716947 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.290537613 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.052328364 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.026741144 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.03673376 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.070809427 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.047493045 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.035016964 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.328698125 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.05090756 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.06410477 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.035291318 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.035670249 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.243705897 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.045724207 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.229307885 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.045288432 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.041452305 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.036941967 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.285412161 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.052697631 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.581917004 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.050948557 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.027451778 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.153393131 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.234639124 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.539058304 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.049657478 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.246857666 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.396243868 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.074818053 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.047006024 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.498080644 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.077982296 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.047970512 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.028665964 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.028491223 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.027751933 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.073896335 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.063534017 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.495971343 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.580080214 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.350174599 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.078710728 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.052760898 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.038661753 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.330278824 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.040048263 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.028891888 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.276441413 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.597394656 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.05241821 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.043414719 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.561440815 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.053679197 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.066202835 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.049892709 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.298441538 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.055366597 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.075361353 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.029720315 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.043481414 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.040857356 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.066963027 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.048567149 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.029886869 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.552187297 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.173608068 seconds)
  done (took 252.171305205 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.038191495 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.037572303 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.037532396 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.03913976 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.037058468 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.037878553 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.037830934 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.038050968 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.040487477 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.038407463 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.037483114 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.037447344 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.038634093 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.041822315 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.074217573 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.039216321 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.525186327 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.036226548 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.038509805 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.041361166 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.601499923 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.042862778 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.038381245 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.041707469 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.038583287 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.039226317 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.044267766 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.069245185 seconds)
  done (took 172.167521601 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.033111812 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.094352419 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.046390399 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.087957616 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.045895069 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.034321208 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.136370149 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.057310615 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.046326589 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.033157262 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.033238927 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.07255657 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.04143558 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.128520269 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.070714162 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.138618986 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.141549878 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.039684768 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.033212426 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.034885706 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.088023272 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.048745406 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.070957691 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.104200414 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.04733078 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.09604137 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.047809026 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.036747829 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.042072969 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.157203539 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.053551478 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.067732419 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.077147353 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.063254171 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.159811772 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.15760228 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.138445648 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.135907384 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.048270964 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.034475335 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.033650031 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.036998197 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.098190335 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.049654323 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.044537826 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.150421767 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.054266138 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.034468998 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.034829354 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.035587609 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.055371717 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.061246475 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.079782171 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.167194972 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.082990942 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.061857907 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.139209014 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.154246994 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.038918652 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.139922371 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.043107478 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.14997558 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.055577677 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.037640525 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.03824699 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.040058771 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.08456759 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.146733679 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.145605491 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.050354891 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.139199147 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.089947328 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.050485258 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.036546429 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.036924553 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.099821819 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.154434398 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.091798238 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.107354624 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.081899921 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.047492746 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.045651107 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.038944335 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.071074645 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.047028363 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.153007334 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.159269513 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.042696973 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.03701887 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.036499733 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.038191431 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.071627093 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.108874903 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.087936859 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.144469413 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.083322311 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.085047698 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.045838978 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.051307311 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.042552309 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.080622657 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.045500058 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.050133544 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.314989194 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.076390935 seconds)
  done (took 220.228290221 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.427971698 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.083019763 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.120128994 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.319208998 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.428205551 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.91461962 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.086478176 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.089579484 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.115279936 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.218504684 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.154218958 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.134155242 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.085254621 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.067389546 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.082964787 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.118291368 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.130596287 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.396182609 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.30051516 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.574261029 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.082646144 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.352212685 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.436730341 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.457597477 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.147179592 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.470242161 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.70184148 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.184516508 seconds)
  done (took 67.647843934 seconds)
done (took 875.661122974 seconds)
SAVING RESULT...
DONE!
